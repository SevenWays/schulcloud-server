var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.126,1,3.289]],["body/classes/ApiValidationError.html",[0,0.15,1,5.044,2,1.213,3,0.138,4,0.115,5,0.079,6,6.775,7,5.278,8,2.007,9,6.268,10,0.305,11,1.001,12,3.413,13,3.384,14,4.984,15,4.37,16,3.072,17,0.42,18,1.343,19,6.897,20,6.897,21,1.366,22,5.906,23,6.14,24,0.967,25,5.906,26,0.885,27,0.006,28,0.52,29,0.561,30,7.482,31,1.889,32,3.985,33,5.278,34,5.269,35,5.278,36,1.018,37,5.278,38,5.278,39,5.278,40,5.278,41,1.303,42,5.278,43,3.516,44,0.275,45,4.557,46,1.03,47,5.278,48,0.13,49,4.865,50,2.129,51,4.865,52,3.621,53,4.117,54,2.636,55,4.31,56,4.31,57,2.821,58,5.278,59,0.004,60,0.004]],["title/classes/ApiValidationErrorResponse.html",[0,0.126,61,3.814]],["body/classes/ApiValidationErrorResponse.html",[0,0.156,1,6.28,2,1.259,3,0.143,4,0.12,5,0.082,8,2.055,10,0.317,11,1.025,13,3.465,15,4.474,16,2.848,17,0.368,21,1.417,24,0.78,26,0.918,27,0.006,28,0.539,29,0.582,30,7.613,43,5.072,44,0.309,48,0.135,52,3.707,53,5.207,54,2.736,56,4.473,59,0.004,60,0.004,61,5.988,62,7.613,63,5.477,64,1.929,65,5.164,66,4.34,67,4.962,68,4.864,69,7.761,70,6.128,71,6.572,72,6.128,73,4.728,74,5.477,75,6.128,76,1.578,77,6.128,78,6.128,79,6.128,80,7.761,81,7.761,82,6.128,83,1.145,84,1.481,85,7.761,86,6.128]],["title/interfaces/AppendedAttachment.html",[87,0.524,88,3.046]],["body/interfaces/AppendedAttachment.html",[3,0.153,4,0.128,5,0.088,8,2.496,10,0.339,11,1.07,27,0.006,28,0.577,36,1.233,48,0.145,59,0.005,60,0.005,87,1.032,88,5.414,89,1.906,90,4.195,91,5.654,92,6.272,93,4.366,94,4.366,95,4.991,96,4.366,97,4.366,98,4.366,99,5.414,100,4.195,101,4.366,102,4.991,103,5.389,104,5.389,105,4.991,106,4.399,107,4.195,108,4.366,109,4.366,110,4.366]],["title/modules/AuthModule.html",[111,1.309,112,3.608]],["body/modules/AuthModule.html",[0,0.167,3,0.153,4,0.128,5,0.088,27,0.006,44,0.354,46,1.147,48,0.145,59,0.005,60,0.005,111,2.147,112,7.279,113,2.55,114,3.47,115,5.876,116,5.876,117,5.876,118,6.677,119,7.01,120,6.677,121,4.067,122,3,123,2.813,124,6.575,125,3.47,126,3.544,127,8.11,128,5.073,129,6.575,130,5.876,131,5.876,132,6.575,133,4.57,134,5.416,135,6.575,136,5.876,137,6.575]],["title/modules/AuthorizationModule.html",[111,1.309,138,3.436]],["body/modules/AuthorizationModule.html",[0,0.169,3,0.155,4,0.13,5,0.089,27,0.006,44,0.335,46,1.161,48,0.147,59,0.005,60,0.005,111,2.163,113,2.581,114,3.496,121,4.097,122,3.037,123,2.848,125,3.496,126,3.57,138,6.981,139,5.949,140,5.949,141,5.949,142,5.949,143,6.697,144,6.215,145,6.41,146,6.656,147,3.997,148,6.656,149,6.656,150,3.516,151,5.949]],["title/injectables/AuthorizationService.html",[144,3.046,152,0.929]],["body/injectables/AuthorizationService.html",[0,0.113,3,0.104,4,0.087,5,0.06,10,0.23,17,0.34,18,1.109,21,1.028,24,0.79,26,1.179,27,0.006,28,0.692,29,0.747,36,1.046,41,1.425,44,0.286,46,0.775,48,0.098,59,0.004,60,0.004,76,1.457,83,0.923,84,0.848,144,3.857,145,5.723,150,2.348,151,3.972,152,1.177,153,1.547,154,3.972,155,2.504,156,6.476,157,5.594,158,7.245,159,4.444,160,4.444,161,4.444,162,3.016,163,4.787,164,4.662,165,5.793,166,4.185,167,4.444,168,3.727,169,2.577,170,6.259,171,4.672,172,2.143,173,3.943,174,2.312,175,4.351,176,6.259,177,4.444,178,4.683,179,3.972,180,4.444,181,3.944,182,4.568,183,5.594,184,4.002,185,5.156,186,1.291,187,2.738,188,1.756,189,4.441,190,4.351,191,2.447,192,4.444,193,4.444,194,3.661,195,4.444,196,4.444,197,4.444,198,6.259,199,4.444,200,4.444,201,2.123,202,4.444,203,6.259,204,4.444,205,4.444]],["title/classes/BaseEntity.html",[0,0.126,206,3.161]],["body/classes/BaseEntity.html",[0,0.218,2,1.283,3,0.145,4,0.122,5,0.084,10,0.323,11,1.135,13,2.788,17,0.339,24,0.789,27,0.006,36,1.045,44,0.285,48,0.173,59,0.004,60,0.004,84,1.64,172,2.247,206,5.494,207,5.146,208,3.94,209,2.085,210,3.705,211,2.346,212,4.208,213,6.246,214,4.208,215,6.246,216,3.153,217,2.048,218,1.998,219,2.85,220,4.819,221,4.819,222,3.046,223,5.146,224,5.146,225,5.583,226,3.993,227,3.393,228,5.583,229,3.493,230,4.819,231,3.849,232,2.517,233,3.393,234,2.292,235,5.583,236,5.146,237,5.583,238,3.993,239,3.993,240,4.819,241,5.146,242,2.619,243,2.795,244,5.583,245,2.673]],["title/classes/BaseEntityWithTimestamps.html",[0,0.126,222,1.917]],["body/classes/BaseEntityWithTimestamps.html",[0,0.214,2,1.224,3,0.139,4,0.116,5,0.08,10,0.308,11,1.11,13,2.66,17,0.329,24,0.89,27,0.006,36,1.023,44,0.277,48,0.168,59,0.004,60,0.004,84,1.748,172,2.209,206,4.875,207,4.91,208,3.872,209,2.05,210,3.642,211,2.501,212,4.136,214,4.136,216,3.252,217,1.988,218,1.907,219,2.719,220,4.598,221,4.598,222,3.26,223,4.91,224,4.91,225,5.327,226,3.81,227,3.237,228,5.327,229,3.332,230,4.598,231,3.672,232,2.401,233,3.237,234,2.187,235,5.327,236,4.91,237,5.327,238,3.81,239,3.81,240,4.598,241,4.91,242,3.525,243,2.979,244,5.327,245,3.598,246,5.96,247,2.181,248,2.323,249,5.96,250,5.96,251,2.988,252,2.111,253,5.96]],["title/injectables/BaseRepo.html",[152,0.929,254,3.436]],["body/injectables/BaseRepo.html",[0,0.119,3,0.109,4,0.091,5,0.063,10,0.242,12,1.629,17,0.401,18,1.15,21,1.083,24,0.944,26,1.391,27,0.006,28,0.817,29,0.882,41,1.595,44,0.271,46,0.817,48,0.103,59,0.004,60,0.004,76,1.202,83,1.29,152,1.22,153,1.629,155,2.665,172,2.179,174,2.526,181,4.034,186,1.36,191,2.494,206,2.993,217,1.221,219,2.136,254,4.511,255,4.184,256,7.191,257,4.149,258,5.801,259,5.801,260,5.008,261,3.742,262,5.801,263,5.801,264,5.801,265,2.787,266,4.25,267,4.681,268,3.175,269,4.681,270,5.008,271,7.39,272,4.681,273,5.801,274,4.681,275,5.801,276,4.681,277,5.008,278,4.681,279,5.801,280,4.681,281,4.37,282,5.801,283,4.681,284,5.801,285,4.681,286,5.801,287,4.681,288,3.856,289,4.681,290,4.681,291,6.208,292,6.49,293,6.49,294,6.49,295,7.45,296,7.45,297,4.681,298,6.49]],["title/injectables/BsonConverter.html",[152,0.929,299,3.289]],["body/injectables/BsonConverter.html",[0,0.147,3,0.134,4,0.113,5,0.077,10,0.298,17,0.322,18,1.323,24,0.75,26,1.119,27,0.006,28,0.657,29,0.71,41,1.505,44,0.271,46,1.007,48,0.127,59,0.004,60,0.004,64,2.35,76,1.383,83,1.102,152,1.404,153,2.008,189,3.567,299,4.968,300,5.157,301,6.152,302,6.152,303,7.467,304,5.769,305,7.467,306,6.789,307,6.086,308,6.375,309,9.582,310,6.583,311,7.825,312,7.213,313,5.705,314,8.755,315,7.467,316,5.769,317,7.467,318,5.761,319,5.939,320,5.769,321,5.761,322,5.769]],["title/classes/BusinessError.html",[0,0.126,9,3.161]],["body/classes/BusinessError.html",[0,0.199,2,1.061,3,0.12,4,0.101,5,0.069,8,1.838,9,4.437,10,0.267,11,0.917,12,3.442,13,4.23,14,5.479,15,4.833,16,3.305,17,0.423,18,1.229,19,6.906,20,6.906,21,1.605,24,0.94,26,0.774,27,0.006,28,0.455,29,0.491,31,2.22,34,6.396,36,1.096,41,1.193,43,4.668,44,0.285,45,6.468,46,0.901,48,0.114,50,1.862,53,2.805,55,5.722,59,0.004,60,0.004,64,1.625,68,4.553,83,1.024,84,0.985,323,4.616,324,4.52,325,4.618,326,4.133,327,4.825,328,4.133,329,4.437,330,4.437,331,3.395,332,6.906,333,5.164,334,6.118,335,6.941,336,2.888,337,5.164,338,5.164,339,5.164,340,5.164,341,5.164,342,5.164,343,5.164,344,5.164,345,5.164,346,2.888,347,5.164,348,4.616,349,6.941,350,5.164,351,4.001,352,6.941,353,6.941,354,5.164]],["title/modules/ConsoleWriterModule.html",[111,1.309,355,3.608]],["body/modules/ConsoleWriterModule.html",[0,0.179,3,0.164,4,0.138,5,0.095,27,0.006,44,0.307,46,1.229,48,0.155,59,0.005,60,0.005,111,2.239,113,2.732,114,3.619,121,4.241,122,3.215,123,3.015,125,3.619,147,4.138,355,7.206,356,6.297,357,6.297,358,6.297,359,6.258,360,5.804,361,4.897,362,7.045,363,3.827,364,5.804]],["title/injectables/ConsoleWriterService.html",[152,0.929,359,3.046]],["body/injectables/ConsoleWriterService.html",[0,0.167,3,0.205,4,0.129,5,0.088,10,0.341,11,1.072,17,0.351,18,1.438,24,0.816,26,0.987,27,0.006,28,0.58,29,0.626,36,1.071,41,1.132,44,0.32,46,1.15,48,0.145,59,0.005,60,0.005,152,1.527,153,2.293,247,1.884,248,2.007,281,4.41,359,5.004,360,7.252,361,6.119,363,4.41,365,5.888,366,2.863,367,9.189,368,8.12,369,6.588,370,4.383,371,8.12,372,8.803,373,6.588,374,3.006,375,8.803,376,6.588,377,3.303,378,3.389,379,6.588,380,6.588]],["title/modules/CoreModule.html",[111,1.309,381,3.608]],["body/modules/CoreModule.html",[0,0.157,3,0.144,4,0.12,5,0.083,27,0.006,44,0.336,46,1.075,48,0.136,54,3.477,59,0.004,60,0.004,64,1.94,111,2.376,113,2.39,114,3.333,121,3.906,122,2.812,123,2.637,126,3.403,331,3.81,381,7.287,382,5.509,383,5.509,384,6.898,385,6.898,386,6.043,387,6.898,388,6.163,389,5.183,390,7.789,391,5.183,392,6.01,393,5.685,394,7.789,395,4.638,396,6.01,397,5.183,398,7.789,399,4.49,400,5.685,401,6.962,402,7.789,403,6.01,404,6.163,405,6.163,406,6.163,407,6.163]],["title/classes/Course.html",[0,0.126,408,1.847]],["body/classes/Course.html",[0,0.106,2,0.853,3,0.097,4,0.081,5,0.056,8,1.58,10,0.435,11,0.788,17,0.39,18,1.057,21,1.38,24,0.95,26,0.622,27,0.006,28,0.74,29,0.395,31,1.909,32,3.199,36,1.128,41,0.714,44,0.294,48,0.092,50,1.497,59,0.003,60,0.003,64,2.543,76,0.769,83,0.613,84,1.692,87,0.44,162,1.286,169,2.115,172,1.487,208,2.607,209,1.614,210,1.707,211,2.532,212,1.939,214,1.939,216,3.254,217,1.083,218,1.329,222,3.36,232,2.404,242,2.501,243,1.94,245,2.553,247,2.653,248,2.702,251,2.083,252,3.069,268,2.032,395,2.473,408,2.229,409,3.205,410,5.16,411,3.375,412,4.543,413,5.569,414,5.304,415,6.819,416,2.553,417,5.887,418,5.966,419,1.742,420,5.332,421,5.332,422,4.154,423,5.332,424,4.154,425,4.154,426,4.138,427,2.784,428,4.154,429,4.327,430,6.981,431,4.603,432,4.154,433,5.332,434,4.154,435,5.332,436,4.154,437,2.137,438,2.137,439,2.137,440,2.137,441,4.154,442,1.895,443,2.473,444,1.611,445,2.764,446,1.778,447,2.56,448,2.137,449,3.552,450,5.332,451,3.713,452,3.205,453,3.713,454,2.888,455,3.713,456,3.713,457,3.422,458,3.032,459,3.032,460,2.888,461,3.713,462,3.713,463,3.032,464,3.422,465,1.984,466,1.984,467,2.56,468,4.853,469,3.336,470,2.323,471,5.332,472,3.713,473,3.205,474,2.56,475,3.205,476,3.205,477,3.713,478,3.713,479,3.713,480,3.713,481,5.332,482,3.713,483,3.713]],["title/classes/CourseGroup.html",[0,0.126,484,2.943]],["body/classes/CourseGroup.html",[0,0.137,2,1.107,3,0.125,4,0.105,5,0.072,8,1.89,10,0.278,11,0.943,17,0.394,18,1.264,21,1.246,24,0.949,26,0.807,27,0.006,28,0.474,29,0.512,32,3.574,36,0.655,41,0.926,44,0.322,48,0.157,50,1.942,59,0.004,60,0.004,83,0.795,84,1.627,87,0.571,169,1.979,172,1.779,208,3.119,209,1.651,210,3.503,211,2.489,212,2.514,214,2.514,216,1.977,217,1.862,218,1.723,219,2.458,222,3.606,242,2.993,243,2.322,245,3.055,247,2.29,248,2.44,251,2.701,252,2.836,408,3.529,412,5.076,416,3.055,419,2.258,426,3.979,429,3.672,431,5.508,437,2.771,438,2.771,439,2.771,440,2.771,442,2.458,443,3.207,444,2.089,446,2.305,448,2.771,465,2.573,468,4.962,475,4.156,476,4.156,484,4.251,485,4.438,486,7.62,487,6.578,488,7.139,489,4.116,490,4.962,491,5.387,492,5.387,493,3.105,494,3.932,495,3.744,496,3.744,497,4.815]],["title/injectables/CourseGroupRepo.html",[152,0.929,498,4.073]],["body/injectables/CourseGroupRepo.html",[0,0.167,3,0.153,4,0.128,5,0.088,10,0.34,12,2.288,17,0.35,18,1.436,21,1.521,24,0.815,26,1.215,27,0.006,28,0.714,29,0.771,41,1.13,44,0.32,46,1.147,48,0.145,59,0.005,60,0.005,76,1.218,83,0.97,152,1.525,153,2.288,155,2.401,162,2.843,174,2.18,186,1.91,188,2.598,191,1.94,217,1.714,219,3,265,3.915,266,4.851,268,3.967,408,2.457,484,3.915,494,5.919,498,6.681,499,5.876,500,8.11,501,6.575,502,8.11,503,6.575,504,5.637,505,4.051,506,5.185,507,6.575]],["title/classes/CourseNews.html",[0,0.126,508,2.943]],["body/classes/CourseNews.html",[0,0.172,2,0.669,3,0.076,4,0.143,5,0.044,8,1.932,10,0.168,11,0.657,16,2.824,17,0.408,18,0.882,24,0.939,26,0.488,27,0.006,28,0.596,29,0.804,32,3.917,36,1.119,41,0.56,44,0.3,48,0.161,50,1.173,59,0.003,60,0.003,83,0.48,84,1.392,87,0.345,162,2.097,163,3.917,164,3.858,166,2.535,169,2.22,172,1.818,190,2.263,208,2.175,209,1.398,210,1.338,211,2.512,212,1.519,214,1.519,216,3.345,217,0.849,218,1.041,222,2.984,229,3.38,234,2.219,242,2.087,243,2.373,245,2.13,247,1.729,248,1.842,251,1.632,252,1.153,324,2.87,351,1.877,408,2.259,411,3.287,416,1.393,419,2.535,426,3.591,427,2.324,437,1.675,438,1.675,439,1.675,440,1.675,442,1.485,444,2.344,446,1.393,447,2.006,448,1.675,467,3.725,474,2.006,489,2.87,493,1.877,508,2.964,509,2.263,510,3.642,511,3.941,512,3.764,513,3.963,514,3.678,515,4.942,516,4.707,517,4.855,518,2.759,519,3.842,520,3.255,521,2.682,522,3.183,523,4.173,524,3.461,525,2.682,526,2.682,527,3.634,528,4.329,529,3.634,530,3.461,531,2.496,532,3.313,533,3.461,534,2.682,535,2.682,536,2.682,537,3.485,538,3.865,539,2.682,540,2.682,541,3.031,542,2.682,543,3.313,544,2.682,545,3.634,546,2.682,547,3.634,548,4.855,549,2.682,550,2.378,551,2.376,552,3.725,553,2.376,554,1.938,555,2.263,556,1.312,557,1.555,558,2.166,559,2.006,560,2.376,561,2.376,562,2.376,563,2.376,564,2.376,565,1.72,566,2.166,567,2.376,568,2.376,569,2.376,570,2.376,571,2.376,572,2.376,573,2.376,574,2.376,575,3.634,576,2.888,577,2.958,578,2.821,579,2.821,580,2.888,581,3.485,582,3.485,583,2.376,584,3.634,585,2.376,586,2.376,587,4.413,588,2.006,589,2.006,590,2.376]],["title/injectables/CourseRepo.html",[152,0.929,591,3.289]],["body/injectables/CourseRepo.html",[0,0.175,3,0.119,4,0.1,5,0.068,8,1.35,10,0.264,12,1.775,17,0.36,18,1.219,21,1.179,24,0.838,26,1.25,27,0.006,28,0.734,29,0.793,41,1.339,44,0.303,46,0.89,48,0.112,59,0.004,60,0.004,76,1.785,83,1.23,84,0.973,152,1.294,153,1.775,155,2.58,162,2.985,173,4.174,174,2.412,186,1.481,188,2.015,191,2.299,217,1.33,219,2.327,265,3.036,266,4.406,268,3.367,408,1.906,412,4.098,413,5.023,414,4.784,466,4.286,505,3.142,506,5.737,591,4.579,592,4.201,593,6.151,594,6.151,595,6.151,596,5.099,597,5.67,598,5.099,599,5.67,600,5.099,601,5.67,602,5.099,603,3.333,604,3.545,605,6.01,606,4.558,607,6.151,608,7.454,609,7.454,610,3.722,611,4.558,612,6.962,613,4.201,614,3.805]],["title/classes/CourseScope.html",[0,0.126,605,3.814]],["body/classes/CourseScope.html",[0,0.175,2,1.044,3,0.118,4,0.099,5,0.068,8,1.818,10,0.263,11,0.907,12,1.769,17,0.36,18,1.216,24,0.837,26,1.029,27,0.006,28,0.604,29,0.653,32,3.26,41,1.18,44,0.303,46,0.887,48,0.112,59,0.004,60,0.004,76,1.784,83,1.229,84,0.97,152,1.291,155,2.123,162,2.838,173,4.073,174,2.091,186,1.477,188,2.009,191,2.295,217,1.326,219,2.32,247,1.454,248,1.549,266,3.628,268,2.487,281,2.761,366,2.709,408,1.9,412,4.089,413,5.012,414,4.774,466,4.282,505,3.132,506,5.732,591,3.382,592,4.188,597,4.188,599,4.188,601,4.188,603,3.922,604,3.534,605,6.712,606,6.138,607,6.138,608,7.444,609,7.444,610,3.71,611,4.543,612,6.951,613,4.188,614,3.969,615,5.012,616,5.012,617,6.867,618,5.012,619,3.534,620,3.922,621,4.972,622,3.922,623,5.083,624,3.71,625,4.774,626,3.922]],["title/classes/CreateNewsParams.html",[0,0.126,627,3.436]],["body/classes/CreateNewsParams.html",[0,0.18,2,1.092,3,0.124,4,0.104,5,0.071,10,0.275,11,0.934,16,3.241,17,0.381,24,0.887,27,0.006,29,0.673,36,1.145,44,0.289,48,0.117,59,0.004,60,0.004,64,2.963,76,0.985,163,3.891,164,3.989,165,4.902,171,3.844,172,2.399,187,3.276,209,1.637,211,2.411,243,2.302,510,3.626,511,3.87,512,4.32,514,4.321,541,2.666,627,4.919,628,7.482,629,4.102,630,3.159,631,5.46,632,3.957,633,7.077,634,4.752,635,5.316,636,5.83,637,4.361,638,5.83,639,5.46,640,5.46,641,4.524,642,4.919,643,5.316,644,5.316,645,4.524,646,4.524,647,5.226,648,5.316,649,5.316,650,5.806,651,5.83,652,4.214,653,5.316,654,5.316,655,4.666,656,4.709,657,2.426,658,6.325,659,5.83,660,7.276,661,3.065,662,3.88,663,3.165]],["title/controllers/DashboardController.html",[664,2.115,665,3.814]],["body/controllers/DashboardController.html",[0,0.15,3,0.138,4,0.116,5,0.079,10,0.306,12,2.059,17,0.255,18,1.344,24,0.762,26,0.887,27,0.006,28,0.521,29,0.562,36,1.019,41,1.304,44,0.34,46,1.032,48,0.13,59,0.004,60,0.004,76,1.637,83,1.12,155,2.553,174,2.376,188,2.338,189,2.826,191,2.24,211,2.072,630,4.08,664,2.532,665,5.856,666,2.826,667,5.288,668,3.646,669,4.685,670,8.839,671,7.489,672,5.916,673,5.916,674,4.989,675,6.451,676,7.589,677,5.916,678,6.783,679,4.874,680,5.539,681,3.783,682,4.318,683,5.05,684,4.318,685,5.824,686,5.288,687,4.113,688,4.565,689,5.916,690,4.318,691,5.916,692,5.916,693,4.565,694,7.589,695,5.288,696,4.519,697,3.043,698,5.916,699,5.916,700,5.916]],["title/classes/DashboardEntity.html",[0,0.126,701,2.764]],["body/classes/DashboardEntity.html",[0,0.184,2,0.762,3,0.086,4,0.072,5,0.05,10,0.338,11,0.725,16,2.833,17,0.396,18,0.973,21,0.858,24,0.897,26,1.084,27,0.006,28,0.636,29,0.687,31,2.963,36,1.115,41,1.327,44,0.2,46,0.647,48,0.193,59,0.003,60,0.003,76,1.591,83,1.295,84,1.38,87,0.582,162,2.717,201,3.124,209,2.12,234,1.361,248,1.673,346,2.074,351,3.166,366,2.629,419,2.742,445,2.467,466,1.771,557,3.124,565,1.959,671,4.909,701,3.071,702,2.371,703,4.774,704,4.935,705,5.277,706,5.026,707,5.9,708,5.492,709,5.492,710,4.623,711,5.026,712,3.709,713,3.709,714,3.894,715,3.709,716,3.709,717,3.709,718,3.709,719,4.981,720,3.709,721,4.008,722,6.162,723,3.709,724,4.811,725,4.008,726,3.709,727,4.008,728,3.709,729,2.371,730,2.578,731,3.654,732,3.511,733,3.654,734,5.366,735,3.654,736,4.935,737,4.811,738,5.277,739,2.208,740,2.901,741,2.467,742,2.707,743,2.371,744,2.074,745,2.707,746,2.467,747,2.707,748,5.168,749,4.008,750,2.707,751,2.285,752,4.811,753,4.305,754,2.707,755,2.707,756,3.657,757,3.771,758,2.707,759,3.818,760,5.634,761,3.818,762,4.008,763,2.707,764,3.511,765,4.935,766,2.208,767,2.707,768,2.707,769,2.707,770,2.707,771,2.707,772,2.707,773,2.707,774,2.623,775,2.707,776,2.707,777,2.707,778,5.277,779,2.707,780,2.707,781,2.707,782,2.578,783,2.707,784,2.707,785,2.707,786,2.467]],["title/classes/DashboardGridElementModel.html",[0,0.126,787,3.289]],["body/classes/DashboardGridElementModel.html",[0,0.195,2,1.022,3,0.116,4,0.097,5,0.067,8,2.186,10,0.257,11,0.894,16,1.825,17,0.393,21,1.15,24,0.945,26,0.745,27,0.006,28,0.438,29,0.473,31,2.641,32,3.461,36,1.128,44,0.279,48,0.169,50,2.773,57,2.376,59,0.004,60,0.004,84,1.468,172,2.057,173,2.174,208,2.957,209,2.06,210,2.781,211,2.532,212,2.322,214,2.322,216,3.403,217,1.765,218,1.591,219,2.27,222,3.646,232,2.004,242,2.837,243,2.201,245,2.896,247,1.935,248,2.062,251,2.494,252,1.762,410,2.962,429,2.559,437,2.559,438,2.559,439,2.559,440,2.559,442,2.27,444,2.624,466,2.376,510,1.825,556,3.326,557,3.674,669,4.616,710,5.278,744,2.781,748,4.917,787,4.503,788,3.838,789,6.336,790,6.336,791,4.974,792,7.113,793,5.575,794,6.801,795,4.974,796,5.575,797,4.974,798,4.974,799,4.974,800,3.631,801,4.098,802,3.31,803,6.336,804,6.336,805,3.065,806,3.838,807,3.631,808,2.781,809,4.098,810,3.838,811,3.065,812,4.098,813,3.631,814,4.098]],["title/classes/DashboardGridElementResponse.html",[0,0.126,815,3.608]],["body/classes/DashboardGridElementResponse.html",[0,0.185,2,1.137,3,0.129,4,0.108,5,0.074,10,0.286,11,0.96,16,3.435,17,0.397,24,0.923,27,0.006,31,2.756,36,1.169,44,0.201,48,0.16,59,0.004,60,0.004,64,2.989,172,1.379,178,3.295,209,2.165,211,2.507,410,4.327,528,3.538,645,5.187,646,5.187,655,5.075,657,2.525,663,4.831,669,4.063,687,3.846,704,6.287,735,5.399,736,5.187,756,4.063,757,4.189,764,6.287,765,5.509,813,4.039,815,5.922,816,4.559,817,7.252,818,7.252,819,6.703,820,5.534,821,5.534,822,6.495,823,5.534,824,5.534,825,5.534,826,5.534,827,4.27]],["title/classes/DashboardMapper.html",[0,0.126,688,3.814]],["body/classes/DashboardMapper.html",[0,0.163,2,1.321,3,0.15,4,0.126,5,0.086,10,0.332,17,0.278,18,1.417,24,0.646,26,0.964,27,0.006,28,0.566,29,0.611,41,1.105,44,0.291,48,0.142,59,0.005,60,0.005,76,1.688,83,1.18,84,1.526,186,1.868,518,3.973,630,3.571,669,3.596,687,6.333,688,6.173,701,5.095,724,4.279,759,4.471,761,4.471,815,5.839,828,5.748,829,5.323,830,8,831,6.432,832,4.279,833,4.279,834,6.432,835,6.432,836,6.432,837,8,838,2.935,839,6.432,840,6.432,841,6.432,842,6.432,843,6.432,844,6.432,845,6.432,846,6.432,847,6.432,848,5.748,849,6.432,850,6.432]],["title/classes/DashboardModelEntity.html",[0,0.126,811,3.046]],["body/classes/DashboardModelEntity.html",[0,0.2,2,1.068,3,0.121,4,0.102,5,0.07,8,2.225,10,0.269,11,0.92,16,1.907,17,0.363,21,1.202,24,0.906,26,0.779,27,0.006,28,0.457,29,0.494,31,2.23,32,3.523,36,1.14,44,0.286,48,0.173,50,2.835,57,2.482,59,0.004,60,0.004,84,1.604,172,2.094,173,2.271,208,3.046,209,2.087,210,2.864,211,2.393,212,2.425,214,2.425,216,3.311,217,1.818,218,1.663,219,2.371,222,3.68,232,2.094,242,2.922,243,2.267,245,2.983,247,2.249,248,2.396,251,2.606,252,1.841,410,3.094,429,3.586,437,2.674,438,2.674,439,2.674,440,2.674,442,2.371,444,3.05,466,2.482,510,1.907,556,2.809,557,2.482,669,4.398,710,5.373,744,2.906,748,5.028,787,3.458,788,4.01,789,4.282,790,4.282,792,6.479,793,4.282,794,5.743,796,4.282,800,3.793,801,4.282,802,3.458,803,6.479,804,6.479,805,3.203,806,4.01,807,3.793,808,2.906,809,4.282,810,4.01,811,4.295,812,5.743,813,5.74,814,4.282,851,5.197,852,5.197]],["title/classes/DashboardModelMapper.html",[0,0.126,853,3.608]],["body/classes/DashboardModelMapper.html",[0,0.123,2,0.996,3,0.113,4,0.095,5,0.065,10,0.251,17,0.328,18,1.178,24,0.762,26,1.137,27,0.006,28,0.668,29,0.721,41,1.305,44,0.276,48,0.107,59,0.004,60,0.004,76,1.753,83,1.205,84,1.727,155,2.553,172,1.657,174,2.376,186,1.409,191,2.672,217,1.264,218,1.551,266,4.782,268,4.428,444,1.88,518,4.267,557,2.316,652,3.959,669,4.244,701,4.566,704,4.251,706,3.37,719,5.273,724,3.226,739,2.887,753,3.959,756,2.711,757,2.795,774,3.176,787,3.226,802,4.424,811,5.578,848,5.943,853,4.853,854,4.333,855,7.59,856,6.65,857,6.65,858,4.848,859,4.848,860,6.65,861,4.848,862,6.728,863,6.65,864,4.848,865,4.333,866,3.994,867,4.848,868,4.853,869,4.848,870,3.539,871,3.994,872,4.848,873,4.848,874,4.848,875,4.848,876,4.848,877,4.848,878,4.848,879,4.848,880,4.314,881,4.848,882,4.848,883,4.848,884,4.848,885,4.848,886,4.848,887,4.848,888,6.65,889,4.848,890,4.848,891,4.848,892,4.848,893,4.848,894,4.848,895,4.848,896,4.848,897,4.848,898,4.848,899,4.848,900,4.848,901,4.848,902,4.848,903,6.65,904,4.848,905,4.848,906,4.848,907,4.848]],["title/injectables/DashboardRepo.html",[152,0.929,908,3.436]],["body/injectables/DashboardRepo.html",[0,0.176,3,0.12,4,0.1,5,0.069,10,0.265,12,1.786,17,0.361,18,1.224,21,1.187,24,0.877,26,1.253,27,0.006,28,0.736,29,0.795,41,1.437,44,0.317,46,0.895,48,0.152,57,2.451,59,0.004,60,0.004,76,1.73,83,1.234,87,0.544,152,1.299,153,1.786,155,2.654,162,2.702,172,2.084,174,2.594,186,1.491,191,2.653,209,1.598,210,2.109,217,1.338,219,2.341,232,2.068,254,3.567,257,4.419,260,5.333,265,3.055,266,4.417,268,3.381,270,5.333,277,6.03,288,4.228,324,2.958,669,3.864,701,5.223,719,4.259,739,3.055,740,2.711,753,3.055,811,3.162,853,3.745,862,5.694,866,4.228,908,4.804,909,4.228,910,6.177,911,7.19,912,5.132,913,6.985,914,5.132,915,5.132,916,5.132,917,5.132,918,4.587,919,5.044,920,4.228,921,6.177,922,6.177,923,4.587,924,4.587,925,6.985,926,4.587,927,6.177,928,6.177,929,4.587,930,4.587,931,4.587,932,4.587,933,3.567,934,2.395]],["title/classes/DashboardResponse.html",[0,0.126,687,3.436]],["body/classes/DashboardResponse.html",[0,0.197,2,1.252,3,0.142,4,0.119,5,0.082,10,0.315,11,1.021,16,3.118,17,0.334,24,0.777,27,0.006,31,2.474,36,1.146,44,0.221,48,0.17,59,0.004,60,0.004,64,3.049,172,1.927,178,4.605,209,2.214,211,2.111,410,3.628,528,4.944,645,5.432,646,5.432,655,5.167,657,2.781,663,5.058,669,4.997,687,5.376,704,6.025,735,4.055,736,3.896,756,3.407,757,3.513,764,6.025,765,4.944,813,6.201,815,6.201,816,5.02,817,5.447,818,5.447,819,5.644,822,5.447,827,5.967,935,6.094,936,6.094]],["title/injectables/DashboardUc.html",[152,0.929,685,3.436]],["body/injectables/DashboardUc.html",[0,0.158,3,0.144,4,0.121,5,0.083,10,0.32,12,2.157,17,0.337,18,1.385,21,1.434,24,0.86,26,1.171,27,0.006,28,0.688,29,0.743,41,1.344,44,0.311,46,1.082,48,0.137,59,0.004,60,0.004,76,1.448,83,1.153,152,1.47,153,2.157,155,2.584,162,2.784,174,2.417,186,1.801,191,2.527,366,2.016,669,5.028,678,6.987,685,5.434,696,3.691,697,3.189,701,3.466,722,6.394,908,5.434,911,7.407,919,6.562,937,5.54,938,8.563,939,6.198,940,6.198,941,6.198,942,6.198,943,6.198,944,3.82,945,5.54,946,6.198,947,6.198,948,6.198,949,6.198,950,6.198]],["title/classes/DatabaseManagementConsole.html",[0,0.126,951,3.608]],["body/classes/DatabaseManagementConsole.html",[0,0.123,2,0.993,3,0.113,4,0.094,5,0.065,10,0.25,17,0.327,18,1.175,21,1.118,24,0.761,26,1.136,27,0.006,28,0.667,29,0.775,36,0.588,41,1.141,44,0.275,48,0.195,59,0.004,60,0.004,64,2.899,76,1.675,83,0.979,87,0.513,122,3.028,155,2.411,174,2.193,188,1.91,191,1.959,211,1.812,252,3.028,359,5.026,361,3.36,363,4.43,364,3.982,366,1.572,374,2.206,444,2.939,556,1.948,838,3.028,880,2.554,951,4.843,952,6.72,953,3.982,954,5.931,955,6.636,956,4.32,957,5.573,958,4.834,959,5.467,960,5.931,961,4.63,962,5.931,963,4.428,964,6.497,965,5.953,966,4.834,967,5.931,968,5.67,969,4.834,970,6.139,971,3.982,972,3.73,973,3.73,974,4.845,975,1.986,976,3.604,977,6.773,978,4.843,979,4.368,980,3.8,981,4.561,982,3.711,983,5.931,984,5.931,985,4.32,986,5.12,987,5.931,988,5.931,989,3.982,990,2.979,991,2.554,992,5.12,993,4.32,994,4.32]],["title/controllers/DatabaseManagementController.html",[664,2.115,995,3.814]],["body/controllers/DatabaseManagementController.html",[0,0.145,3,0.133,4,0.112,5,0.077,10,0.296,17,0.321,18,1.315,24,0.877,26,1.113,27,0.006,28,0.653,29,0.706,36,1.127,41,1.5,44,0.27,46,0.998,48,0.126,59,0.004,60,0.004,76,1.616,83,1.287,155,2.697,174,2.571,188,2.26,189,2.731,191,2.575,211,2.382,664,2.447,666,2.731,668,3.524,774,4.568,954,7.799,957,5.08,972,4.412,973,4.412,995,5.729,996,8.083,997,5.111,998,5.719,999,7.424,1000,6.636,1001,8.726,1002,5.719,1003,7.424,1004,5.719,1005,6.733,1006,7.424,1007,5.719,1008,5.111,1009,7.424,1010,5.719,1011,7.424,1012,5.719,1013,4.174,1014,5.719,1015,5.719,1016,5.719,1017,5.719,1018,5.719,1019,5.719,1020,5.719]],["title/modules/DatabaseManagementModule.html",[111,1.309,1021,3.608]],["body/modules/DatabaseManagementModule.html",[0,0.179,3,0.164,4,0.138,5,0.095,27,0.006,44,0.308,46,1.232,48,0.156,59,0.005,60,0.005,111,2.242,113,2.738,114,3.624,121,4.247,122,3.222,123,3.021,126,3.701,147,4.143,963,3.54,1021,7.209,1022,6.31,1023,6.31,1024,6.31,1025,6.495,1026,5.817,1027,7.06,1028,7.06]],["title/injectables/DatabaseManagementService.html",[152,0.929,1025,3.161]],["body/injectables/DatabaseManagementService.html",[0,0.108,3,0.099,4,0.083,5,0.057,10,0.22,17,0.385,18,1.075,21,0.985,24,0.925,26,1.337,27,0.006,28,0.799,29,0.848,36,1.206,41,1.534,44,0.257,46,0.743,48,0.094,59,0.003,60,0.003,76,1.727,83,1.317,152,1.141,153,1.482,155,2.698,174,2.572,188,1.683,191,2.576,217,1.11,219,1.943,265,2.535,266,4.076,268,2.97,306,4.221,319,4.525,321,5.461,366,2.51,444,3.461,556,2.851,774,2.9,934,3.303,964,4.221,1000,5.427,1005,6.735,1008,5.427,1025,3.882,1026,7.68,1029,3.805,1030,6.072,1031,5.002,1032,6.072,1033,6.072,1034,6.072,1035,7.716,1036,6.072,1037,4.432,1038,5.216,1039,4.258,1040,6.072,1041,4.258,1042,6.072,1043,4.258,1044,6.072,1045,4.258,1046,6.072,1047,4.258,1048,6.072,1049,4.258,1050,4.258,1051,6.072,1052,4.258,1053,4.258,1054,4.258,1055,4.258,1056,2.722,1057,4.258,1058,4.258,1059,7.077,1060,4.258,1061,6.072,1062,4.258,1063,4.258,1064,4.258,1065,4.258,1066,6.072,1067,4.258,1068,4.258,1069,4.258,1070,4.258,1071,6.072,1072,4.258,1073,4.258,1074,4.258,1075,4.258,1076,4.258,1077,4.258]],["title/injectables/DatabaseManagementUc.html",[152,0.929,957,3.046]],["body/injectables/DatabaseManagementUc.html",[0,0.061,3,0.056,4,0.145,5,0.106,10,0.123,11,0.514,17,0.32,18,0.69,21,0.9,24,0.826,26,1.064,27,0.006,28,0.724,29,0.795,31,1.246,36,1.132,41,1.46,44,0.258,46,0.416,48,0.138,54,1.065,59,0.003,60,0.002,64,1.225,76,1.731,83,1.162,84,0.941,87,0.253,126,1.701,147,1.905,152,0.732,153,0.83,155,2.35,174,1.99,178,3.389,189,2.996,191,2.571,201,1.139,233,1.296,243,1.604,247,0.682,248,0.727,252,0.845,257,1.525,299,4.722,301,1.965,302,1.965,306,4.934,308,3.787,310,1.587,312,3.207,313,1.42,318,5.476,319,2.489,321,3.806,325,2.59,336,3.507,366,2.977,370,4.477,393,4.154,444,3.475,449,2.318,556,0.961,557,1.86,641,1.525,647,3.507,838,3.494,868,2.841,880,4.045,934,1.113,957,2.399,963,4.196,964,6.118,965,4.911,968,4.934,974,2.489,975,2.765,976,2.679,981,3.507,990,4.719,991,4.259,992,5.191,1005,5.711,1025,4.538,1031,3.207,1037,2.841,1078,6.642,1079,1.965,1080,4.408,1081,3.893,1082,5.087,1083,3.893,1084,3.893,1085,3.893,1086,4.408,1087,3.893,1088,5.087,1089,2.385,1090,4.477,1091,3.893,1092,3.48,1093,2.385,1094,3.957,1095,5.087,1096,4.689,1097,5.155,1098,5.167,1099,2.385,1100,3.48,1101,3.48,1102,2.385,1103,4.407,1104,2.841,1105,3.48,1106,2.385,1107,5.087,1108,3.004,1109,4.677,1110,6.344,1111,3.48,1112,2.385,1113,5.605,1114,2.385,1115,5.605,1116,2.385,1117,3.48,1118,3.207,1119,2.841,1120,4.689,1121,3.48,1122,2.385,1123,3.48,1124,3.48,1125,3.507,1126,3.004,1127,2.385,1128,2.385,1129,3.207,1130,1.841,1131,1.841,1132,1.965,1133,1.47,1134,1.965,1135,1.965,1136,4.839,1137,5.167,1138,3.207,1139,2.132,1140,2.132,1141,3.48,1142,3.48,1143,3.48,1144,2.132,1145,2.132,1146,1.375,1147,2.132,1148,2.132,1149,5.087,1150,2.132,1151,2.132,1152,2.132,1153,1.841,1154,2.132,1155,2.132,1156,2.132,1157,1.965,1158,2.132,1159,5.087,1160,4.063,1161,2.244,1162,2.132,1163,2.132,1164,1.42,1165,1.525,1166,2.132,1167,3.48,1168,3.48,1169,2.132,1170,2.132,1171,2.132,1172,1.334,1173,3.48,1174,1.965,1175,2.132,1176,2.132,1177,3.004,1178,3.48,1179,2.132,1180,3.48,1181,3.48,1182,2.132,1183,2.132,1184,2.115,1185,2.132,1186,2.132,1187,1.841,1188,2.132,1189,1.658,1190,1.841,1191,1.587,1192,1.42,1193,2.132,1194,1.965,1195,1.587,1196,2.132,1197,2.132,1198,2.132,1199,2.132,1200,2.132,1201,2.59,1202,2.132,1203,2.132,1204,2.132,1205,2.132,1206,2.132,1207,3.48,1208,2.132,1209,2.132,1210,2.132,1211,1.965,1212,1.334,1213,1.587,1214,2.132,1215,2.132,1216,2.132,1217,2.132,1218,2.841,1219,2.132,1220,3.004,1221,2.132,1222,2.132,1223,2.132,1224,2.132]],["title/classes/DefaultGridReference.html",[0,0.126,739,2.943]],["body/classes/DefaultGridReference.html",[0,0.19,2,0.82,3,0.093,4,0.078,5,0.054,10,0.3,11,0.765,16,3.281,17,0.379,18,1.027,21,0.923,24,0.799,26,0.598,27,0.006,28,0.351,29,0.379,31,2.806,36,1.16,41,0.686,44,0.211,46,0.696,48,0.197,59,0.003,60,0.003,76,1.624,83,1.319,84,1.429,87,0.614,162,2.849,201,3.26,209,2.151,234,1.465,248,1.766,346,2.231,351,3.341,366,1.885,419,1.673,445,2.655,466,1.906,557,3.26,565,2.108,701,2.231,702,2.552,703,2.913,704,4.363,705,4.23,706,2.774,707,4.981,710,4.788,711,4.029,714,3.451,719,4.615,721,2.913,722,5.521,724,4.541,725,2.913,727,2.913,729,2.552,730,2.774,731,3.856,732,3.705,733,3.856,734,5.768,735,3.856,736,5.716,737,5.292,738,6.248,739,3.451,740,3.605,741,2.655,742,2.913,743,2.552,744,2.231,745,2.913,746,2.655,747,2.913,748,5.305,749,4.23,750,2.913,751,2.459,752,4.983,753,4.459,754,2.913,755,2.913,756,3.816,757,3.934,758,2.913,759,4.029,760,5.805,761,4.029,762,4.23,763,2.913,764,3.705,765,5.085,766,2.376,767,2.913,768,2.913,769,2.913,770,2.913,771,2.913,772,2.913,773,2.913,774,2.768,775,2.913,776,2.913,777,2.913,778,5.466,779,2.913,780,2.913,781,2.913,782,2.774,783,2.913,784,2.913,785,2.913,786,2.655,1225,5.796,1226,3.991,1227,3.991,1228,3.991]],["title/classes/DefaultGridReferenceModel.html",[0,0.126,802,3.289]],["body/classes/DefaultGridReferenceModel.html",[0,0.199,2,1.061,3,0.12,4,0.101,5,0.069,8,2.219,10,0.267,11,0.917,16,2.877,17,0.378,21,1.194,24,0.924,26,0.774,27,0.006,28,0.455,29,0.491,31,2.22,32,3.514,36,1.165,44,0.285,48,0.173,50,2.826,57,2.467,59,0.004,60,0.004,84,1.496,172,2.089,173,2.256,208,3.033,209,2.083,210,2.852,211,2.459,212,2.41,214,2.41,216,3.433,217,1.81,218,1.652,219,2.356,222,3.675,232,2.081,242,2.91,243,2.257,245,2.97,247,1.985,248,2.115,251,2.589,252,1.829,410,4.668,429,2.657,437,2.657,438,2.657,439,2.657,440,2.657,442,2.356,444,2.692,466,2.467,510,1.895,556,2.797,557,2.467,669,3.881,710,5.359,744,2.888,748,5.012,787,3.436,788,3.985,789,4.254,790,4.254,792,6.459,793,4.254,794,5.718,796,4.254,800,3.769,801,4.254,802,4.618,803,6.459,804,6.459,805,3.182,806,3.985,807,3.769,808,2.888,809,4.254,810,3.985,811,3.182,812,4.254,813,3.769,814,4.254,1229,5.164,1230,5.164,1231,5.164]],["title/controllers/DelayController.html",[664,2.115,1232,3.814]],["body/controllers/DelayController.html",[0,0.163,3,0.149,4,0.125,5,0.086,10,0.331,18,1.413,24,0.644,27,0.006,41,1.101,44,0.316,46,1.118,48,0.141,52,3.06,59,0.005,60,0.005,76,1.478,83,1.177,84,1.222,125,2.741,155,2.373,174,2.337,191,1.891,211,1.749,247,2.282,400,5.825,664,3.415,666,3.812,1232,6.707,1233,6.575,1234,5.278,1235,7.496,1236,6.406,1237,5.547,1238,4.592,1239,5.31,1240,4.601,1241,6.158,1242,5.278,1243,5.726,1244,4.096,1245,5.278,1246,6.575,1247,5.726,1248,5.726,1249,6.406,1250,4.943,1251,3.134,1252,5.278,1253,5.547,1254,4.943,1255,3.384,1256,4.676,1257,4.676]],["title/injectables/DurationLoggingInterceptor.html",[152,0.929,1258,4.073]],["body/injectables/DurationLoggingInterceptor.html",[0,0.158,3,0.145,4,0.122,5,0.084,10,0.322,11,1.036,12,2.988,17,0.269,18,1.39,24,0.788,26,0.934,27,0.006,28,0.549,29,0.592,41,1.072,44,0.327,46,1.088,48,0.137,59,0.004,60,0.004,64,1.962,76,1.155,83,0.92,84,1.497,152,1.475,153,2.17,247,1.783,248,1.9,366,2.792,397,5.22,578,4.007,641,3.986,740,3.293,1241,6.054,1253,5.454,1258,6.463,1259,7.674,1260,5.572,1261,7.846,1262,6.054,1263,5.22,1264,5.194,1265,7.012,1266,7.012,1267,6.952,1268,8.053,1269,6.234,1270,3.386,1271,7.674,1272,7.846,1273,6.234,1274,5.136,1275,6.234,1276,5.572,1277,5.136,1278,6.234,1279,7.846,1280,6.234,1281,6.234,1282,6.234]],["title/modules/ErrorModule.html",[111,1.309,384,3.608]],["body/modules/ErrorModule.html",[0,0.179,3,0.164,4,0.137,5,0.094,27,0.006,44,0.329,46,1.227,48,0.155,59,0.005,60,0.005,64,2.212,111,2.237,113,2.726,125,3.008,184,5.401,247,2.416,374,3.854,384,6.165,399,4.87,403,7.249,981,4.723,1244,4.494,1255,3.714,1283,7.03,1284,7.55,1285,5.205,1286,6.165,1287,7.03,1288,7.03,1289,5.424]],["title/classes/ErrorResponse.html",[0,0.126,43,2.943]],["body/classes/ErrorResponse.html",[0,0.163,2,1.319,3,0.15,4,0.125,5,0.086,12,3.169,13,4.064,15,5.016,16,3.193,17,0.404,21,1.848,24,0.645,26,0.962,27,0.006,28,0.565,29,0.61,31,2.783,36,1.201,43,4.757,44,0.233,45,4.953,46,1.12,48,0.141,54,3.884,59,0.005,60,0.005,64,2.515,65,5.789,66,4.468,67,5.109,68,4.34,348,5.737,449,4.757,1094,4.462,1290,5.737,1291,6.419,1292,6.419,1293,6.419,1294,5.288,1295,6.419,1296,4.104,1297,5.737,1298,3.955,1299,3.14,1300,3.955,1301,4.462]],["title/injectables/FeathersAuthProvider.html",[145,3.289,152,0.929]],["body/injectables/FeathersAuthProvider.html",[0,0.111,3,0.102,4,0.085,5,0.059,10,0.226,17,0.369,18,1.096,21,1.011,24,0.859,26,1.282,27,0.006,28,0.753,29,0.813,36,1.002,41,1.416,44,0.299,46,0.763,48,0.096,59,0.004,60,0.004,76,1.716,83,1.262,84,0.834,87,0.464,145,4.117,152,1.163,153,1.522,155,2.639,162,3.086,163,4.185,164,4.411,165,4.812,166,3.455,169,2.491,173,3.843,174,2.491,175,4.301,186,1.27,187,2.694,188,1.728,191,2.432,201,2.088,206,3.956,208,1.91,210,2.951,217,1.14,219,1.995,366,2.336,377,3.601,411,1.664,427,3.846,614,1.995,729,3.956,980,2.192,1237,4.301,1238,2.31,1302,7.862,1303,3.602,1304,6.187,1305,6.419,1306,6.187,1307,6.187,1308,6.419,1309,4.372,1310,5.47,1311,4.372,1312,6.187,1313,4.372,1314,3.908,1315,4.372,1316,6.187,1317,4.372,1318,6.187,1319,4.372,1320,4.372,1321,4.372,1322,4.372,1323,3.908,1324,6.187,1325,3.908,1326,6.187,1327,6.187,1328,4.372,1329,4.372,1330,4.372,1331,6.187,1332,6.187,1333,6.187,1334,4.372,1335,3.191,1336,4.372,1337,4.372,1338,4.372,1339,5.097,1340,3.908,1341,4.372,1342,4.372,1343,2.694]],["title/interfaces/FeathersError.html",[87,0.524,1344,3.436]],["body/interfaces/FeathersError.html",[3,0.168,4,0.141,5,0.097,8,2.269,10,0.372,11,1.132,13,4.227,17,0.428,27,0.006,31,2.927,36,1.194,48,0.159,54,3.825,59,0.005,60,0.005,87,0.764,89,2.092,1344,5.957,1345,6.436,1346,6.436,1347,8.464]],["title/modules/FeathersModule.html",[111,1.309,143,3.436]],["body/modules/FeathersModule.html",[0,0.166,3,0.153,4,0.128,5,0.088,27,0.006,44,0.294,46,1.143,48,0.144,59,0.005,60,0.005,64,2.061,111,2.428,113,3.404,114,3.462,121,4.056,122,2.988,123,2.802,125,3.462,143,6.76,147,3.957,150,4.638,377,4.056,378,4.162,1103,4.817,1240,4.664,1310,6.434,1323,5.853,1348,5.853,1349,5.853,1350,5.853,1351,6.548,1352,5.383,1353,4.664,1354,4.394,1355,4.274,1356,5.623,1357,5.623,1358,5.623,1359,5.623,1360,6.665]],["title/interfaces/FeathersService.html",[87,0.524,1361,3.814]],["body/interfaces/FeathersService.html",[0,0.129,3,0.118,4,0.099,5,0.068,10,0.262,17,0.359,18,1.212,24,0.779,26,1.026,27,0.006,28,0.603,29,0.651,34,4.759,36,0.616,41,1.177,44,0.316,46,0.883,48,0.183,57,2.417,59,0.004,60,0.004,67,3.235,76,1.268,83,0.746,84,0.965,87,0.536,89,1.47,111,1.34,113,1.962,150,4.099,152,1.287,162,2.574,174,2.235,186,1.47,189,3.706,201,2.417,209,1.583,239,3.235,331,3.349,336,3.828,366,1.646,377,4.669,378,2.603,576,3.27,577,3.349,578,3.195,579,3.195,580,3.27,581,3.946,603,2.929,674,5.33,944,3.118,1103,3.013,1161,2.917,1240,5.007,1244,3.235,1310,3.235,1343,3.118,1352,3.366,1353,5.007,1354,2.748,1355,4.588,1356,3.517,1357,3.517,1358,3.517,1359,3.517,1360,4.168,1361,6.414,1362,5.986,1363,3.693,1364,4.392,1365,7.43,1366,5.531,1367,6.119,1368,7.541,1369,5.06,1370,6.119,1371,5.06,1372,4.522,1373,3.235,1374,4.168,1375,5.282,1376,5.64,1377,4.168,1378,3.366,1379,4.522,1380,4.522,1381,4.522,1382,6.119,1383,4.522,1384,3.693,1385,4.377,1386,4.168,1387,3.366,1388,4.522,1389,4.522,1390,4.522,1391,3.904,1392,3.366,1393,4.522]],["title/injectables/FeathersServiceProvider.html",[152,0.929,1310,3.161]],["body/injectables/FeathersServiceProvider.html",[0,0.129,3,0.118,4,0.099,5,0.068,10,0.262,17,0.359,18,1.214,21,1.172,24,0.78,26,1.027,27,0.006,28,0.603,29,0.651,34,4.764,36,0.945,41,0.871,44,0.316,46,0.884,48,0.183,57,2.42,59,0.004,60,0.004,64,1.595,67,3.24,76,1.269,83,0.748,84,0.967,87,0.537,111,1.342,113,2.657,150,4.394,152,1.288,153,1.764,162,2.122,174,1.842,186,1.472,189,3.709,201,2.42,209,1.172,239,3.24,331,3.352,366,1.648,377,4.67,378,3.525,576,3.273,577,3.352,578,3.198,579,3.198,580,3.273,581,3.951,603,2.932,674,4.623,944,3.123,1103,4.08,1125,3.123,1161,2.921,1240,4.795,1244,3.24,1310,4.381,1343,3.123,1352,4.56,1353,4.795,1354,3.722,1355,4.987,1356,4.764,1357,4.764,1358,4.764,1359,4.764,1360,5.646,1361,6.418,1362,5.991,1363,3.699,1364,2.677,1365,6.125,1366,4.56,1367,4.529,1368,6.397,1370,4.529,1372,4.529,1373,3.24,1374,4.175,1375,5.288,1376,5.646,1377,4.175,1378,4.56,1379,4.529,1380,4.529,1381,6.125,1382,6.125,1383,4.529,1384,3.699,1385,4.381,1386,4.175,1387,3.372,1388,4.529,1389,4.529,1390,4.529,1391,3.91,1392,3.372,1393,4.529,1394,6.853,1395,5.068,1396,5.068,1397,5.068]],["title/classes/File.html",[0,0.126,5,0.066]],["body/classes/File.html",[0,0.148,2,1.198,3,0.136,4,0.114,5,0.112,8,1.991,10,0.301,11,0.993,17,0.402,21,1.349,24,0.952,26,0.874,27,0.006,28,0.801,29,0.554,32,3.685,36,1.069,44,0.302,48,0.128,50,2.102,59,0.004,60,0.004,84,1.435,87,0.618,169,2.437,172,1.874,208,3.285,209,1.739,210,2.396,211,2.543,212,2.721,214,2.721,216,3.419,217,1.521,218,1.866,222,3.675,242,3.152,243,2.446,245,3.217,247,2.15,248,2.291,251,2.924,252,2.065,416,3.217,419,2.445,437,3,438,3,439,3,440,3,446,2.495,448,3,465,2.785,469,3.261,470,3.261,513,4.775,565,3.081,566,3.88,991,3.081,1398,4.804,1399,6.783,1400,7.519,1401,5.831,1402,5.212]],["title/injectables/FileSystemAdapter.html",[152,0.929,1090,3.289]],["body/injectables/FileSystemAdapter.html",[0,0.087,3,0.08,4,0.067,5,0.122,10,0.177,11,0.683,17,0.362,18,0.916,21,1.442,24,0.879,26,1.221,27,0.006,28,0.717,29,0.774,36,1.206,41,1.504,44,0.271,46,0.597,48,0.075,59,0.003,60,0.003,64,2.187,76,1.453,83,1.158,152,0.972,153,1.192,155,2.588,174,2.422,189,3.891,191,2.202,234,1.256,307,3.596,346,2.892,366,2.028,370,5.916,449,4.995,512,3.399,640,3.991,880,4.432,965,3.775,974,3.307,990,5.553,991,2.733,1037,3.775,1090,3.442,1109,2.38,1125,5.766,1137,5.725,1138,6.911,1153,6.054,1164,4.995,1192,2.038,1195,4.623,1403,6.86,1404,6.86,1405,2.82,1406,7.013,1407,5.173,1408,5.173,1409,5.173,1410,6.235,1411,6.235,1412,5.173,1413,6.235,1414,6.235,1415,5.173,1416,5.173,1417,3.423,1418,4.83,1419,4.262,1420,5.173,1421,3.423,1422,3.991,1423,6.949,1424,7.461,1425,5.173,1426,5.173,1427,4.262,1428,3.442,1429,6.949,1430,8.388,1431,5.173,1432,3.423,1433,6.235,1434,3.423,1435,5.173,1436,3.991,1437,6.235,1438,3.423,1439,3.188,1440,6.235,1441,4.811,1442,6.949,1443,4.624,1444,5.173,1445,3.423,1446,5.173,1447,5.173,1448,3.991,1449,3.442,1450,6.235,1451,3.423,1452,3.775,1453,3.307,1454,3.775,1455,5.173,1456,3.423,1457,3.423,1458,3.06,1459,4.624,1460,3.423,1461,3.423,1462,4.624,1463,3.423,1464,3.423,1465,3.423,1466,6.235,1467,3.423,1468,3.423,1469,3.423,1470,3.423,1471,3.423,1472,5.173,1473,3.423,1474,3.423,1475,2.499,1476,2.641,1477,3.423,1478,3.423,1479,2.82,1480,3.423]],["title/modules/FileSystemModule.html",[111,1.309,1481,3.608]],["body/modules/FileSystemModule.html",[0,0.179,3,0.164,4,0.138,5,0.114,27,0.006,44,0.307,46,1.229,48,0.155,59,0.005,60,0.005,111,2.239,113,2.732,114,3.619,121,4.241,122,3.215,123,3.015,125,3.619,147,4.138,1090,6.757,1403,5.436,1404,5.436,1481,7.206,1482,6.297,1483,6.297,1484,6.297,1485,7.045,1486,7.045]],["title/interfaces/GlobalConstants.html",[87,0.524,1487,3.814]],["body/interfaces/GlobalConstants.html",[3,0.161,4,0.135,5,0.093,10,0.356,11,1.103,17,0.388,27,0.006,29,0.887,36,1.215,44,0.251,48,0.152,59,0.005,60,0.005,76,1.547,87,0.731,89,2.003,963,3.458,1487,6.929,1488,5.681,1489,7.875,1490,7.875,1491,7.875,1492,6.879,1493,6.896,1494,6.879,1495,5.033]],["title/classes/GlobalErrorFilter.html",[0,0.126,1286,3.608]],["body/classes/GlobalErrorFilter.html",[0,0.132,1,4.636,2,0.707,3,0.08,4,0.067,5,0.046,9,4.454,10,0.178,11,0.686,12,2.177,13,3.11,15,2.994,16,2.296,17,0.339,18,1.108,24,0.628,26,0.778,27,0.006,28,0.551,29,0.494,41,1.198,43,5.3,44,0.305,46,0.6,48,0.076,52,1.644,53,2.821,54,4.49,59,0.003,60,0.003,61,2.655,65,2.29,66,5.044,68,1.869,73,2.655,74,3.076,76,1.804,83,1.371,84,1.5,87,0.365,150,3.305,189,2.481,216,1.263,234,1.263,247,0.984,248,1.049,252,1.219,271,5.738,281,3.398,319,4.781,326,3.092,332,5.74,366,2.035,374,2.37,378,1.77,518,2.854,576,2.481,577,2.541,578,2.424,579,2.424,580,1.644,740,2.744,870,2.512,980,1.726,1131,2.655,1177,2.655,1184,3.398,1264,4.844,1277,2.835,1285,4.608,1286,3.791,1344,4.843,1347,3.076,1354,1.869,1373,2.2,1418,2.392,1496,5.376,1497,2.512,1498,6.255,1499,5.77,1500,5.153,1501,5.231,1502,5.194,1503,3.441,1504,5.194,1505,6.255,1506,6.967,1507,3.441,1508,6.255,1509,3.441,1510,3.441,1511,3.076,1512,3.441,1513,3.441,1514,2.835,1515,3.076,1516,2.835,1517,6.298,1518,2.835,1519,2.512,1520,3.61,1521,2.835,1522,4.162,1523,2.29,1524,2.835,1525,3.076,1526,4.642,1527,3.076,1528,2.835,1529,3.076,1530,3.076,1531,3.076,1532,3.076,1533,3.076,1534,3.855,1535,4.279,1536,3.441,1537,3.441,1538,4.279,1539,3.441,1540,3.441,1541,3.441,1542,4.279,1543,3.441,1544,3.441,1545,5.194,1546,3.441,1547,3.441,1548,2.512,1549,4.642,1550,2.512,1551,3.076,1552,2.29,1553,2.2,1554,4.642,1555,2.835,1556,4.642,1557,3.076,1558,4.007,1559,3.076,1560,3.076,1561,2.655,1562,2.835,1563,3.076,1564,3.076,1565,2.655,1566,2.512,1567,2.655,1568,2.512,1569,3.076,1570,3.076,1571,3.076,1572,3.076,1573,6.684,1574,2.835,1575,6.684,1576,3.076,1577,2.835,1578,3.076,1579,3.441,1580,3.441,1581,3.441,1582,5.194,1583,3.441,1584,3.441]],["title/classes/GlobalValidationPipe.html",[0,0.126,1585,3.814]],["body/classes/GlobalValidationPipe.html",[0,0.215,1,4.024,2,1.243,3,0.141,4,0.118,5,0.081,8,2.038,11,0.799,17,0.366,21,1.958,23,5.35,24,0.608,27,0.006,44,0.28,46,1.055,48,0.133,50,2.18,53,4.84,59,0.004,60,0.004,64,1.904,68,3.285,73,4.667,83,0.892,84,1.154,211,2.101,234,2.825,247,2.201,261,3.487,325,5.121,399,4.437,556,3.411,614,2.76,630,3.779,655,3.195,661,4.437,674,3.601,838,2.76,976,4.181,979,3.487,980,3.033,982,3.382,1299,2.959,1385,3.867,1392,4.024,1585,5.939,1586,6.88,1587,5.406,1588,6.341,1589,6.341,1590,6.341,1591,6.341,1592,4.583,1593,8.466,1594,6.048,1595,5.35,1596,4.983,1597,6.048,1598,4.204,1599,6.048,1600,6.048,1601,6.048,1602,6.048,1603,4.667,1604,4.204,1605,4.414,1606,6.048,1607,4.414,1608,6.048,1609,4.983,1610,5.406,1611,4.414,1612,6.048,1613,6.048]],["title/classes/GridElement.html",[0,0.126,753,2.943]],["body/classes/GridElement.html",[0,0.191,2,0.823,3,0.093,4,0.078,5,0.054,10,0.3,11,0.767,16,2.923,17,0.37,18,1.029,21,0.926,24,0.8,26,0.6,27,0.006,28,0.353,29,0.381,31,2.809,36,1.089,41,0.999,44,0.211,46,0.699,48,0.197,59,0.003,60,0.003,76,1.626,83,1.32,84,1.431,87,0.616,162,2.882,201,3.266,209,2.153,234,1.47,248,1.771,346,2.24,351,3.35,366,1.89,419,1.679,445,2.665,466,1.913,557,4.094,565,2.116,701,2.24,702,2.561,703,2.924,704,4.372,705,4.241,706,2.784,707,6.064,710,4.796,711,4.04,714,3.46,719,4.623,721,2.924,722,5.528,724,4.55,725,2.924,727,2.924,729,2.561,730,2.784,731,3.867,732,3.715,733,3.867,734,5.775,735,3.867,736,5.093,737,5.703,738,6.256,739,2.385,740,3.613,741,2.665,742,2.924,743,2.561,744,2.24,745,2.924,746,2.665,747,2.924,748,5.312,749,4.241,750,2.924,751,2.468,752,5.3,753,4.743,754,2.924,755,2.924,756,3.824,757,3.943,758,2.924,759,4.04,760,5.814,761,4.04,762,4.241,763,2.924,764,3.715,765,5.093,766,2.385,767,2.924,768,2.924,769,2.924,770,2.924,771,2.924,772,2.924,773,2.924,774,2.776,775,2.924,776,2.924,777,2.924,778,5.475,779,2.924,780,2.924,781,2.924,782,2.784,783,2.924,784,2.924,785,2.924,786,2.665,1614,5.811,1615,4.006,1616,4.006,1617,4.006]],["title/interfaces/HtmlMailContent.html",[87,0.524,105,3.046]],["body/interfaces/HtmlMailContent.html",[3,0.149,4,0.125,5,0.086,8,2.477,10,0.33,11,1.053,17,0.344,27,0.006,28,0.563,29,0.757,36,1.242,48,0.141,59,0.005,60,0.005,87,1.026,88,4.912,89,1.857,90,4.088,91,5.352,92,5.303,93,4.254,94,4.254,95,4.912,96,4.254,97,4.254,98,4.254,99,5.603,100,4.088,101,4.254,102,4.912,103,6.225,104,6.225,105,5.352,106,4.329,107,4.088,108,4.254,109,4.254,110,4.254]],["title/interfaces/ICollectionFilePath.html",[87,0.524,1136,3.814]],["body/interfaces/ICollectionFilePath.html",[0,0.076,3,0.07,4,0.152,5,0.1,10,0.155,11,0.618,17,0.202,21,0.694,24,0.302,27,0.006,28,0.571,29,0.546,31,1.497,36,1.102,41,1.28,44,0.283,46,0.524,48,0.143,54,1.34,59,0.003,60,0.003,76,1.786,83,1.246,84,1.096,87,0.318,89,0.872,126,1.312,147,1.469,152,0.879,155,1.92,174,1.744,178,2.785,189,3.358,191,2.697,201,1.434,233,1.631,243,1.521,252,1.063,257,1.92,299,3.823,301,2.474,302,2.474,306,5.406,308,3.823,310,1.998,312,3.854,313,1.788,318,5.425,319,1.92,321,4.434,325,1.998,366,2.748,370,4.956,393,3.414,444,3.476,449,2.785,556,1.21,557,1.434,641,1.92,647,2.882,838,3.398,868,3.414,880,3.715,934,1.401,957,1.85,963,4.033,964,6.077,965,4.735,968,4.51,974,1.92,975,1.922,976,2.541,981,3.213,990,3.998,991,3.935,992,4.434,1005,6.64,1025,3.674,1031,3.854,1078,2.474,1079,2.474,1080,2.684,1082,2.684,1086,2.684,1088,2.684,1090,3.823,1092,2.684,1094,3.252,1095,5.136,1096,3.854,1097,4.762,1098,4.734,1100,2.684,1101,2.684,1103,4.187,1104,2.191,1105,2.684,1107,4.181,1108,2.317,1109,3.994,1110,6.657,1111,2.684,1113,5.136,1115,5.136,1117,2.684,1118,2.474,1119,2.191,1120,3.854,1121,2.684,1123,2.684,1124,2.684,1125,2.882,1126,2.317,1129,2.474,1130,2.317,1131,2.317,1132,2.474,1133,1.85,1134,2.474,1135,2.474,1136,5.747,1137,6.626,1138,3.854,1139,2.684,1140,2.684,1141,4.181,1142,4.181,1143,4.181,1144,2.684,1145,2.684,1146,1.731,1147,2.684,1148,2.684,1149,5.798,1150,2.684,1151,2.684,1152,2.684,1153,2.317,1154,2.684,1155,2.684,1156,2.684,1157,2.474,1158,2.684,1159,5.798,1160,4.734,1161,2.697,1162,2.684,1163,2.684,1164,1.788,1165,1.92,1166,2.684,1167,4.181,1168,4.181,1169,2.684,1170,2.684,1171,2.684,1172,1.679,1173,4.181,1174,2.474,1175,2.684,1176,2.684,1177,3.609,1178,4.181,1179,2.684,1180,4.181,1181,4.181,1182,2.684,1183,2.684,1184,2.541,1185,2.684,1186,2.684,1187,2.317,1188,2.684,1189,2.087,1190,2.317,1191,1.998,1192,1.788,1193,2.684,1194,2.474,1195,1.998,1196,2.684,1197,2.684,1198,2.684,1199,2.684,1200,2.684,1201,3.112,1202,2.684,1203,2.684,1204,2.684,1205,2.684,1206,2.684,1207,4.181,1208,2.684,1209,2.684,1210,2.684,1211,2.474,1212,1.679,1213,1.998,1214,2.684,1215,2.684,1216,2.684,1217,2.684,1218,3.414,1219,2.684,1220,3.609,1221,2.684,1222,2.684,1223,2.684,1224,2.684]],["title/interfaces/ICourseGroupProperties.html",[87,0.524,487,3.814]],["body/interfaces/ICourseGroupProperties.html",[0,0.16,3,0.147,4,0.123,5,0.085,8,1.67,10,0.326,11,1.044,17,0.391,27,0.006,29,0.751,44,0.339,48,0.174,50,2.273,59,0.004,60,0.004,83,0.93,84,1.203,87,0.669,89,1.832,169,2.508,172,1.969,210,3.247,217,2.061,218,2.018,219,2.878,222,3.065,252,2.234,408,3.703,412,5.548,416,2.699,426,3.688,429,3.244,431,4.866,442,2.878,443,3.755,444,2.446,446,2.699,448,3.244,465,3.012,468,4.384,475,4.866,476,4.866,484,3.755,485,5.196,486,5.637,487,6.66,489,3.636,490,4.384,493,3.636,494,4.603,495,4.384,496,4.384,497,5.637]],["title/interfaces/ICourseProperties.html",[87,0.524,417,3.814]],["body/interfaces/ICourseProperties.html",[0,0.124,3,0.113,4,0.095,5,0.065,8,1.289,10,0.458,11,0.881,17,0.404,21,1.126,27,0.006,28,0.779,29,0.916,31,1.558,36,1.181,44,0.311,48,0.107,50,1.756,59,0.004,60,0.004,64,2.786,76,0.902,83,0.719,84,1.451,87,0.516,89,1.415,162,1.508,169,2.626,172,1.662,209,1.126,216,3.003,217,1.27,218,1.558,222,2.587,232,2.687,247,2.176,252,2.694,268,2.382,395,2.9,408,1.82,409,3.758,410,5.494,411,3.605,412,5.103,413,6.255,414,5.958,415,4.353,416,2.084,417,5.87,420,4.353,421,4.353,423,4.353,426,3.819,427,2.273,429,3.913,431,3.758,433,4.353,435,4.353,442,2.222,443,2.9,444,1.889,445,3.24,446,2.084,447,3.001,448,2.505,449,3.971,450,5.962,451,4.353,452,3.758,453,4.353,454,3.385,455,4.353,456,4.353,457,4.012,458,3.554,459,3.554,460,3.385,461,4.353,462,4.353,463,3.554,464,4.012,465,2.326,466,2.326,467,3.001,468,5.288,469,3.73,470,2.723,471,5.962,472,4.353,473,3.758,474,3.001,475,3.758,476,3.758,477,4.353,478,4.353,479,4.353,480,4.353,481,5.962,482,4.353,483,4.353]],["title/interfaces/ICreateNews.html",[87,0.524,1618,3.436]],["body/interfaces/ICreateNews.html",[3,0.137,4,0.115,5,0.079,10,0.303,11,0.996,16,3.233,17,0.426,27,0.006,29,0.793,36,1.135,44,0.32,48,0.201,59,0.004,60,0.004,64,1.845,87,0.989,89,1.703,162,2.583,163,3.691,164,4.183,165,5.141,172,1.461,209,1.356,243,2.714,408,3.118,411,3.175,466,2.8,510,3.483,511,4.159,512,4.309,514,4.784,541,2.94,550,3.985,552,3.613,975,2.409,1618,5.245,1619,4.279,1620,6.744,1621,4.492,1622,5.24,1623,5.24,1624,5.24,1625,4.075,1626,4.075,1627,3.901,1628,4.279,1629,3.901,1630,5.24,1631,4.075,1632,3.901]],["title/interfaces/ICurrentUser.html",[87,0.524,697,2.543]],["body/interfaces/ICurrentUser.html",[3,0.139,4,0.117,5,0.08,10,0.309,11,1.008,17,0.411,27,0.006,28,0.525,36,1.25,44,0.217,48,0.195,59,0.004,60,0.004,87,0.892,89,1.735,166,3.2,169,2.459,173,3.875,182,5.571,209,2.168,242,2.503,243,2.483,245,2.555,427,4.447,697,3.927,1633,4.358,1634,5.67,1635,4.822,1636,5.306,1637,5.582,1638,4.236,1639,6.165,1640,5.306,1641,4.919,1642,5.079,1643,3.817,1644,3.817,1645,4.358]],["title/interfaces/IDashboardRepo.html",[87,0.524,919,3.608]],["body/interfaces/IDashboardRepo.html",[0,0.183,3,0.127,4,0.106,5,0.073,10,0.281,12,1.894,17,0.31,18,1.273,24,0.808,26,1.077,27,0.006,28,0.632,29,0.683,41,1.383,44,0.323,46,0.949,48,0.158,57,2.599,59,0.004,60,0.004,76,1.753,83,1.263,87,0.577,89,1.581,152,1.351,155,2.337,162,2.756,172,2.005,174,2.599,186,1.581,191,2.698,209,1.662,210,2.236,217,1.419,219,2.483,232,2.192,254,3.782,260,5.545,266,3.796,268,2.662,270,4.198,277,6.209,288,4.482,324,3.137,669,4.018,701,5.111,719,4.428,739,3.239,740,2.874,753,3.239,811,3.353,853,3.971,862,5.92,866,4.482,908,3.782,909,4.482,910,6.423,911,7.332,913,7.192,918,4.863,919,5.873,920,4.482,921,6.423,922,6.423,923,4.863,924,4.863,925,7.192,926,4.863,927,6.423,928,6.423,929,4.863,930,4.863,931,4.863,932,4.863,933,3.782,934,2.539,1646,5.441,1647,5.441,1648,5.441]],["title/interfaces/IErrorType.html",[87,0.524,334,3.608]],["body/interfaces/IErrorType.html",[3,0.168,4,0.141,5,0.097,10,0.373,11,1.133,12,3.188,16,3.478,17,0.428,27,0.006,36,1.224,48,0.159,55,6.917,59,0.005,60,0.005,87,0.765,89,2.097,334,6.263,1649,6.451,1650,6.451]],["title/interfaces/IFileProperties.html",[87,0.524,1399,3.814]],["body/interfaces/IFileProperties.html",[0,0.171,3,0.156,4,0.131,5,0.11,8,1.777,10,0.347,11,1.084,17,0.383,27,0.006,28,0.835,36,1.125,44,0.322,48,0.148,50,2.419,59,0.005,60,0.005,87,0.711,89,1.949,169,2.63,172,2.047,216,3.257,217,1.75,218,2.147,222,3.185,416,2.871,446,2.871,448,3.452,465,3.205,469,3.752,470,3.752,513,5.153,565,3.545,566,4.465,991,3.545,1398,5.528,1399,6.847,1402,5.998]],["title/interfaces/IFindOptions.html",[87,0.524,1651,3.289]],["body/interfaces/IFindOptions.html",[3,0.162,4,0.136,5,0.093,10,0.359,11,1.108,17,0.389,27,0.006,29,0.89,31,2.685,48,0.206,59,0.005,60,0.005,87,0.89,89,2.02,541,3.487,1218,6.125,1629,4.627,1651,5.584,1652,5.076,1653,5.076,1654,5.573,1655,5.234,1656,7.712,1657,6.832,1658,4.627,1659,4.627,1660,5.076,1661,6.914]],["title/interfaces/IGridElement.html",[87,0.524,752,3.289]],["body/interfaces/IGridElement.html",[0,0.195,3,0.098,4,0.082,5,0.056,10,0.31,11,0.793,16,2.976,17,0.364,27,0.006,31,2.843,36,1.101,44,0.218,46,0.731,48,0.199,59,0.003,60,0.003,76,1.646,83,1.335,84,1.462,87,0.637,89,1.218,162,2.752,201,3.351,209,2.093,234,1.538,248,1.83,346,2.344,351,3.462,366,1.953,419,1.757,445,2.789,466,2.002,557,3.351,565,2.214,701,2.344,702,2.68,703,3.059,704,4.486,705,4.382,706,2.914,707,6.158,710,4.486,711,4.174,714,3.575,719,4.721,721,3.059,722,5.614,724,4.668,725,3.059,727,3.059,729,2.68,730,2.914,731,3.995,732,3.839,733,3.995,734,5.637,735,3.995,736,5.184,737,5.098,738,6.342,739,2.496,740,3.172,741,2.789,742,3.059,743,2.68,744,2.344,745,3.059,746,2.789,747,3.059,748,5.394,749,4.382,750,3.059,751,2.583,752,5.395,753,4.562,754,3.059,755,3.059,756,3.923,757,4.045,758,3.059,759,4.174,760,5.918,761,4.174,762,4.382,763,3.059,764,3.839,765,5.184,766,2.496,767,3.059,768,3.059,769,3.059,770,3.059,771,3.059,772,3.059,773,3.059,774,2.868,775,3.059,776,3.059,777,3.059,778,5.592,779,3.059,780,3.059,781,3.059,782,2.914,783,3.059,784,3.059,785,3.059,786,2.789,1534,4.721]],["title/interfaces/IGridElementReference.html",[87,0.524,737,3.289]],["body/interfaces/IGridElementReference.html",[0,0.196,3,0.099,4,0.083,5,0.057,10,0.312,11,0.798,16,2.986,17,0.351,27,0.006,31,2.85,36,1.103,44,0.22,46,0.738,48,0.2,59,0.003,60,0.003,76,1.65,83,1.338,84,1.468,87,0.641,89,1.229,162,2.759,201,3.368,209,2.097,234,1.552,248,1.841,346,2.365,351,3.484,366,1.966,419,1.773,445,2.814,466,2.02,557,3.368,565,2.235,701,2.365,702,2.704,703,3.087,704,4.508,705,4.411,706,2.94,707,5.147,710,4.508,711,4.201,714,3.598,719,4.741,721,3.087,722,5.631,724,4.692,725,3.087,727,3.087,729,2.704,730,2.94,731,4.021,732,3.864,733,4.021,734,5.656,735,4.021,736,5.202,737,5.414,738,6.359,739,2.518,740,3.193,741,2.814,742,3.087,743,2.704,744,2.365,745,3.087,746,2.814,747,3.087,748,5.411,749,4.411,750,3.087,751,2.606,752,5.119,753,4.58,754,3.087,755,3.087,756,3.943,757,4.065,758,3.087,759,4.201,760,5.939,761,4.201,762,4.411,763,3.087,764,3.864,765,5.202,766,2.518,767,3.087,768,3.087,769,3.087,770,3.087,771,3.087,772,3.087,773,3.087,774,2.887,775,3.087,776,3.087,777,3.087,778,5.615,779,3.087,780,3.087,781,3.087,782,2.94,783,3.087,784,3.087,785,3.087,786,2.814,1534,3.724]],["title/interfaces/ILessonProperties.html",[87,0.524,1662,3.814]],["body/interfaces/ILessonProperties.html",[0,0.163,3,0.149,4,0.125,5,0.086,8,1.693,10,0.33,11,1.053,17,0.393,27,0.006,28,0.823,29,0.757,36,1.106,44,0.316,48,0.141,50,2.305,59,0.005,60,0.005,87,0.678,89,1.857,172,1.986,216,3.187,217,1.667,218,2.045,222,3.091,252,2.264,408,3.711,416,2.736,426,2.984,442,2.917,446,2.736,465,3.054,469,3.575,470,3.575,489,3.686,490,4.444,493,3.686,495,4.444,496,4.444,975,3.569,980,3.206,1662,6.701,1663,5.267,1664,5.981,1665,4.444,1666,3.575,1667,7.124,1668,5.715]],["title/interfaces/ILogger.html",[87,0.524,1501,3.289]],["body/interfaces/ILogger.html",[3,0.141,4,0.119,5,0.081,10,0.314,15,5.311,17,0.398,18,1.367,24,0.925,26,1.38,27,0.006,28,0.811,29,0.929,36,1.236,41,1.583,48,0.134,54,3.444,59,0.004,60,0.004,87,0.644,89,1.764,336,5.264,1270,5.476,1501,5.133,1669,5.426,1670,5.953,1671,5.133,1672,7.715,1673,7.715,1674,6.071,1675,6.071,1676,6.896,1677,6.987,1678,6.071,1679,6.896,1680,6.071,1681,6.071,1682,6.071,1683,6.896,1684,6.071,1685,5.426,1686,5.426]],["title/interfaces/INewsProperties.html",[87,0.524,548,3.289]],["body/interfaces/INewsProperties.html",[0,0.189,3,0.091,4,0.161,5,0.052,8,1.964,10,0.202,11,0.754,16,3.023,17,0.407,27,0.006,28,0.502,29,0.829,36,1.17,44,0.317,48,0.174,50,1.409,59,0.003,60,0.003,83,0.577,84,1.287,87,0.414,89,1.136,162,2.799,163,3.628,164,3.382,166,1.639,169,2.466,172,1.966,190,2.717,209,0.904,216,3.122,217,1.019,218,1.251,222,2.214,229,3.771,234,2.475,243,2.412,324,3.291,351,2.254,408,2.133,411,3.526,416,1.673,419,1.639,426,3.147,427,1.824,442,1.784,444,2.214,446,1.673,447,2.409,448,2.011,467,3.518,474,2.409,489,2.254,493,2.254,508,2.328,509,2.717,510,3.486,511,4.124,512,4.03,513,4.474,514,4.285,515,5.757,516,5.483,517,5.481,518,1.784,522,2.499,523,3.518,524,2.717,527,2.853,528,3.65,529,2.853,530,2.717,531,1.96,532,2.601,533,2.717,537,4.276,538,4.742,541,2.863,543,2.601,545,2.853,547,2.853,548,4.935,550,2.727,551,2.853,552,4.861,553,2.853,554,2.328,555,2.717,556,1.575,557,1.867,558,2.601,559,2.409,560,2.853,561,2.853,562,2.853,563,2.853,564,2.853,565,2.065,566,2.601,567,2.853,568,2.853,569,2.853,570,2.853,571,2.853,572,2.853,573,2.853,574,2.853,575,4.167,576,3.221,577,3.299,578,3.147,579,3.147,580,3.221,581,3.888,582,3.888,583,2.853,584,4.167,585,2.853,586,2.853,587,4.922,588,2.409,589,2.409,590,2.853]],["title/interfaces/INewsScope.html",[87,0.524,1631,3.436]],["body/interfaces/INewsScope.html",[3,0.139,4,0.117,5,0.08,10,0.309,11,1.009,16,2.195,17,0.421,27,0.006,29,0.891,36,0.93,44,0.322,48,0.202,59,0.004,60,0.004,64,1.883,87,0.994,89,1.738,162,2.608,163,3.739,164,4.223,165,5.469,172,1.491,209,1.383,243,1.946,408,3.147,411,3.206,466,2.857,510,3.442,511,4.184,512,2.926,514,3.249,541,2.999,550,4.023,552,3.686,975,3.461,1618,4.158,1619,4.366,1620,5.346,1621,4.55,1622,5.346,1623,5.346,1624,5.346,1625,4.158,1626,4.158,1627,3.98,1628,4.366,1629,3.98,1630,6.831,1631,5.313,1632,5.905]],["title/interfaces/IPagination.html",[87,0.524,1657,3.608]],["body/interfaces/IPagination.html",[3,0.162,4,0.136,5,0.093,10,0.359,11,1.108,17,0.389,27,0.006,29,0.89,31,3.114,48,0.206,59,0.005,60,0.005,87,0.89,89,2.02,541,3.487,1218,6.125,1629,4.627,1651,4.627,1652,5.076,1653,5.076,1654,4.141,1655,3.889,1656,6.914,1657,6.579,1658,6.228,1659,6.228,1660,5.076,1661,6.914]],["title/interfaces/IResolvedUser.html",[87,0.524,1639,3.436]],["body/interfaces/IResolvedUser.html",[3,0.137,4,0.115,5,0.079,10,0.304,11,0.999,17,0.423,27,0.006,28,0.518,36,1.247,44,0.214,48,0.194,59,0.004,60,0.004,87,0.886,89,1.709,166,3.825,169,1.631,173,2.571,182,4.295,209,2.197,242,3.698,243,3.037,245,3.774,427,4.358,697,3.027,1633,4.295,1634,3.762,1635,4.804,1636,4.09,1637,4.976,1638,3.992,1639,5.809,1640,4.09,1641,4.848,1642,5.869,1643,5.639,1644,5.639,1645,4.295]],["title/interfaces/IRole.html",[87,0.524,1642,3.289]],["body/interfaces/IRole.html",[3,0.148,4,0.124,5,0.085,10,0.329,11,1.05,17,0.392,27,0.006,28,0.799,36,1.244,44,0.231,48,0.2,59,0.004,60,0.004,87,0.919,89,1.85,166,3.333,169,1.766,173,2.783,182,4.648,209,2.236,242,2.67,243,2.586,245,2.725,427,4.046,697,3.276,1633,4.648,1634,4.072,1635,4.46,1636,4.427,1637,5.162,1638,4.141,1639,5.527,1640,4.427,1641,5.247,1642,5.768,1643,4.072,1644,4.072,1645,4.648]],["title/interfaces/IRoleProperties.html",[87,0.524,1687,3.814]],["body/interfaces/IRoleProperties.html",[0,0.152,3,0.139,4,0.117,5,0.08,8,1.581,10,0.435,11,1.008,17,0.383,27,0.006,28,0.825,29,0.843,36,1.174,44,0.277,48,0.168,50,2.152,59,0.004,60,0.004,84,1.606,87,0.633,89,1.735,166,3.842,172,1.902,216,3.088,217,1.557,218,1.91,222,2.96,232,2.406,416,2.555,426,2.786,429,4.329,443,4.545,444,2.315,446,2.555,465,2.852,469,3.339,470,3.339,531,2.994,541,3.828,661,3.442,978,4.358,1296,4.881,1436,4.607,1534,3.679,1605,4.358,1635,5.053,1638,4.378,1687,6.493,1688,4.919,1689,5.337,1690,4.607,1691,4.358,1692,5.89,1693,6.823,1694,5.337,1695,5.337,1696,4.607]],["title/interfaces/ISubmissionProperties.html",[87,0.524,1697,3.814]],["body/interfaces/ISubmissionProperties.html",[0,0.116,3,0.106,4,0.089,5,0.122,8,1.206,10,0.235,11,0.841,17,0.415,27,0.006,29,0.906,31,2.677,36,1.122,44,0.315,48,0.1,50,1.642,59,0.004,60,0.004,76,1.18,83,0.672,84,1.401,87,0.483,89,1.324,169,2.517,172,1.587,216,2.918,217,1.188,218,1.458,222,2.47,252,2.816,416,1.949,419,1.91,426,4.046,429,3.778,442,2.079,443,2.713,444,1.767,446,1.949,448,2.344,465,2.176,468,3.167,484,5.675,523,2.807,565,2.407,934,3.427,975,1.872,1343,5.156,1697,5.666,1698,3.753,1699,7.479,1700,6.894,1701,7.479,1702,7.954,1703,6.027,1704,7.954,1705,4.464,1706,7.48,1707,4.072,1708,4.072,1709,4.072,1710,3.031,1711,2.807,1712,4.072,1713,4.072,1714,3.753,1715,4.072,1716,4.072,1717,5.247,1718,5.693,1719,4.072,1720,2.913,1721,4.072,1722,6.564,1723,4.914,1724,6.564,1725,5.693,1726,4.072,1727,4.072,1728,4.072,1729,4.072,1730,4.072,1731,4.072,1732,4.072,1733,3.515,1734,4.072,1735,4.072,1736,4.072]],["title/interfaces/ITaskProperties.html",[87,0.524,1737,3.814]],["body/interfaces/ITaskProperties.html",[0,0.12,3,0.11,4,0.092,5,0.063,8,1.248,10,0.244,11,0.861,17,0.414,27,0.006,28,0.806,29,0.923,36,1.093,44,0.318,48,0.144,50,1.7,59,0.004,60,0.004,64,2.354,83,0.962,84,0.9,87,0.5,89,1.37,169,2.349,172,1.626,216,3.109,217,1.229,218,1.508,222,2.529,243,2.978,252,2.31,366,2.85,408,3.516,410,4.453,416,2.017,426,3.49,429,2.425,442,2.151,444,1.828,446,2.017,448,2.425,463,3.441,465,2.252,469,2.636,470,2.636,489,2.718,490,3.277,493,2.718,495,4.534,496,3.277,523,2.905,556,1.9,800,3.441,963,3.271,975,3.316,1343,2.905,1454,3.441,1666,5.262,1705,3.116,1710,5.637,1711,4.973,1720,5.417,1737,5.771,1738,3.638,1739,6.98,1740,6.184,1741,4.214,1742,4.214,1743,6.161,1744,3.884,1745,3.638,1746,4.214,1747,4.214,1748,2.561,1749,4.214,1750,3.014,1751,5.83,1752,4.214,1753,7.213,1754,4.214,1755,5.83,1756,4.214,1757,4.214,1758,4.214,1759,4.214,1760,4.214,1761,4.214,1762,5.83,1763,4.214,1764,4.214,1765,4.214,1766,4.214]],["title/interfaces/ITaskStatus.html",[87,0.524,1767,3.814]],["body/interfaces/ITaskStatus.html",[0,0.172,3,0.157,4,0.132,5,0.091,10,0.349,11,1.089,17,0.4,27,0.006,31,3.184,44,0.245,48,0.149,59,0.005,60,0.005,87,0.716,89,1.962,975,3.657,1705,4.539,1733,5.21,1750,5.925,1767,7.15,1768,5.563,1769,5.563,1770,6.764,1771,6.764,1772,6.764,1773,6.035,1774,4.694,1775,5.921,1776,6.035,1777,6.035]],["title/interfaces/IUserProperties.html",[87,0.524,1778,3.814]],["body/interfaces/IUserProperties.html",[0,0.146,3,0.134,4,0.112,5,0.077,8,1.522,10,0.468,11,0.984,17,0.408,27,0.006,28,0.727,29,0.831,36,1.203,44,0.318,48,0.164,50,2.072,59,0.004,60,0.004,84,1.097,87,0.61,89,1.67,169,1.594,172,1.857,216,3.209,217,1.499,218,1.839,222,2.889,252,2.036,411,3.715,416,2.46,426,3.477,427,2.683,429,2.957,442,2.623,443,3.423,444,2.229,446,2.46,447,3.543,465,2.746,467,3.543,473,4.436,474,3.543,1296,4.763,1635,4.774,1637,3.423,1638,4.176,1643,5.791,1644,5.791,1692,4.436,1696,4.436,1778,6.377,1779,4.736,1780,6.296,1781,5.138,1782,5.138,1783,5.138,1784,5.138,1785,5.138,1786,5.138,1787,5.138,1788,5.138,1789,5.138,1790,5.138]],["title/interfaces/InlineAttachment.html",[87,0.524,95,3.046]],["body/interfaces/InlineAttachment.html",[3,0.151,4,0.126,5,0.087,8,2.486,10,0.334,11,1.06,17,0.279,27,0.006,28,0.569,36,1.238,48,0.143,59,0.005,60,0.005,87,1.028,88,4.948,89,1.88,90,4.136,91,5.626,92,6.246,93,4.305,94,4.305,95,5.38,96,4.305,97,6.075,98,4.305,99,5.38,100,4.136,101,4.305,102,4.948,103,5.343,104,5.343,105,4.948,106,4.361,107,4.136,108,4.305,109,4.305,110,4.305]],["title/modules/InterceptorModule.html",[111,1.309,385,3.608]],["body/modules/InterceptorModule.html",[0,0.167,3,0.153,4,0.128,5,0.088,27,0.006,44,0.32,46,1.147,48,0.145,59,0.005,60,0.005,64,2.069,73,5.073,111,2.147,113,2.55,125,2.813,231,4.997,232,2.649,261,3.79,378,4.723,385,5.919,399,4.675,400,6.419,838,3.701,976,4.405,1165,5.185,1244,4.203,1253,5.637,1255,4.284,1289,6.257,1748,4.405,1791,6.575,1792,6.681,1793,6.257,1794,4.997,1795,9.182,1796,5.637,1797,6.681,1798,7.085,1799,4.375]],["title/injectables/JwtAuthGuard.html",[152,0.929,1800,3.814]],["body/injectables/JwtAuthGuard.html",[0,0.192,3,0.176,4,0.148,5,0.102,8,2.004,27,0.006,44,0.321,46,1.321,48,0.167,59,0.005,60,0.005,128,5.841,152,1.659,153,2.635,1800,6.81,1801,6.766,1802,6.766,1803,7.57,1804,7.57]],["title/interfaces/JwtConstants.html",[87,0.524,133,3.436]],["body/interfaces/JwtConstants.html",[3,0.152,4,0.127,5,0.087,10,0.336,11,1.064,17,0.395,27,0.006,36,1.204,44,0.236,48,0.178,59,0.005,60,0.005,76,1.493,87,0.69,89,1.891,133,6.36,150,3.439,173,2.844,232,2.622,556,2.622,880,3.439,1621,4.799,1634,5.153,1805,5.362,1806,8.405,1807,7.256,1808,7.204,1809,6.509,1810,6.509,1811,5.362,1812,6.64,1813,5.362,1814,4.75,1815,4.331,1816,6.509,1817,5.818,1818,5.818,1819,5.818,1820,6.509,1821,5.818,1822,4.75,1823,5.022,1824,6.509,1825,5.362,1826,6.509,1827,5.362,1828,5.818,1829,6.509,1830,6.509,1831,5.818,1832,5.818]],["title/interfaces/JwtPayload.html",[87,0.524,1833,3.814]],["body/interfaces/JwtPayload.html",[3,0.149,4,0.125,5,0.086,8,2.113,10,0.331,11,1.054,17,0.412,27,0.006,31,3.053,36,1.221,44,0.233,48,0.141,59,0.005,60,0.005,87,0.679,89,1.861,186,1.861,232,3.666,697,4.472,1817,8.132,1818,8.132,1819,8.132,1821,8.132,1822,6.641,1823,7.02,1827,6.575,1828,7.133,1833,6.158,1834,5.726,1835,5.726,1836,6.575]],["title/injectables/JwtStrategy.html",[119,3.608,152,0.929]],["body/injectables/JwtStrategy.html",[0,0.146,3,0.134,4,0.112,5,0.077,8,1.519,10,0.297,12,2.59,17,0.321,18,1.318,21,1.327,24,0.748,26,1.115,27,0.006,28,0.655,29,0.707,41,0.986,44,0.343,46,1.001,48,0.126,50,2.069,59,0.004,60,0.004,76,1.378,83,0.847,119,5.431,120,6.564,128,4.428,131,5.129,133,3.989,134,4.728,136,5.129,152,1.399,153,1.997,155,2.254,169,1.591,173,2.507,174,2.001,188,2.268,191,2.196,232,2.998,233,4.485,366,1.867,980,2.878,1172,3.209,1195,3.818,1592,3.417,1603,4.428,1634,3.669,1638,2.741,1793,5.742,1823,5.742,1833,6.742,1837,5.129,1838,5.739,1839,6.448,1840,5.739,1841,7.441,1842,5.739,1843,7.81,1844,5.739,1845,4.428,1846,5.129,1847,5.495,1848,5.739,1849,5.739,1850,5.739,1851,5.739,1852,5.739,1853,5.739,1854,5.739,1855,5.739,1856,5.739,1857,5.739,1858,5.129,1859,5.739,1860,4.585,1861,5.739,1862,5.739,1863,4.728,1864,5.739,1865,5.129,1866,3.032,1867,5.129,1868,5.739,1869,5.739]],["title/injectables/JwtValidationAdapter.html",[120,3.436,152,0.929]],["body/injectables/JwtValidationAdapter.html",[0,0.14,3,0.128,4,0.107,5,0.074,10,0.284,17,0.312,18,1.281,24,0.727,26,1.084,27,0.006,28,0.637,29,0.687,36,1.195,41,1.243,44,0.263,46,0.959,48,0.121,59,0.004,60,0.004,64,1.73,76,1.34,120,5.029,152,1.36,153,1.913,155,2.503,174,2.31,189,3.455,191,2.135,209,1.987,231,5.295,233,3.929,307,5.029,576,3.455,577,3.539,578,3.376,579,3.376,580,3.455,581,4.171,637,4.458,979,4.171,980,2.756,1212,4.045,1263,5.718,1603,5.582,1634,5.494,1636,5.029,1637,4.307,1823,7.403,1836,5.96,1847,6.31,1870,6.662,1871,4.528,1872,7.234,1873,7.234,1874,7.234,1875,5.496,1876,7.234,1877,5.496,1878,7.234,1879,5.96,1880,5.28,1881,7.234,1882,7.234,1883,6.466,1884,6.466,1885,5.496,1886,7.234,1887,5.496,1888,5.496,1889,7.234,1890,5.496,1891,5.496,1892,5.496,1893,5.496]],["title/modules/LearnroomModule.html",[111,1.309,1894,3.608]],["body/modules/LearnroomModule.html",[0,0.175,3,0.161,4,0.135,5,0.093,27,0.006,44,0.339,46,1.203,48,0.152,59,0.005,60,0.005,111,2.211,113,2.674,114,3.573,121,4.187,122,3.146,123,2.951,125,3.573,126,3.013,665,6.929,666,3.988,685,6.753,686,6.163,908,5.804,945,6.163,1255,3.643,1289,5.32,1894,7.091,1895,6.163,1896,6.163,1897,6.896,1898,6.896,1899,6.896]],["title/classes/Lesson.html",[0,0.126,1666,2.764]],["body/classes/Lesson.html",[0,0.141,2,1.141,3,0.129,4,0.108,5,0.075,8,1.928,10,0.287,11,0.962,17,0.397,21,1.284,24,0.955,26,0.832,27,0.006,28,0.788,29,0.528,32,3.617,36,1.05,44,0.295,48,0.122,50,2.002,59,0.004,60,0.004,84,1.39,87,0.589,172,1.815,208,3.182,209,1.684,210,2.282,211,2.558,212,2.591,214,2.591,216,3.374,217,1.448,218,1.776,222,3.633,242,3.053,243,2.369,245,3.116,247,2.324,248,2.476,251,2.784,252,2.579,408,3.552,416,3.116,419,2.328,426,3.399,437,2.856,438,2.856,439,2.856,440,2.856,442,2.534,446,2.376,465,2.652,469,3.105,470,3.105,489,4.199,490,5.063,493,3.201,495,3.86,496,3.86,975,2.282,980,3.652,1662,6.657,1663,4.574,1664,5.516,1665,3.86,1666,4.072,1667,6.509,1668,4.963,1900,7.283,1901,5.552,1902,5.552]],["title/injectables/LessonRepo.html",[152,0.929,1903,3.436]],["body/injectables/LessonRepo.html",[0,0.157,3,0.144,4,0.121,5,0.083,10,0.319,12,2.149,17,0.388,18,1.381,21,1.428,24,0.783,26,1.169,27,0.006,28,0.686,29,0.741,41,1.061,44,0.326,46,1.077,48,0.136,59,0.004,60,0.004,76,1.444,83,0.911,84,1.178,152,1.466,153,2.149,155,2.334,162,2.78,174,2.097,186,1.794,188,2.44,217,1.61,218,1.975,232,3.142,252,2.187,265,3.677,266,4.744,268,3.815,336,3.453,504,4.292,603,3.337,613,5.087,975,2.537,1119,6.239,1621,4.643,1655,4.361,1664,3.948,1665,5.421,1666,4.361,1903,5.421,1904,5.519,1905,7.799,1906,6.175,1907,7.799,1908,6.175,1909,4.361,1910,6.425,1911,6.017,1912,6.175,1913,6.175,1914,6.175,1915,6.175]],["title/classes/LessonScope.html",[0,0.126,1911,3.814]],["body/classes/LessonScope.html",[0,0.152,2,1.227,3,0.139,4,0.117,5,0.08,8,2.021,10,0.309,11,1.008,17,0.396,18,1.352,24,0.921,26,1.261,27,0.006,28,0.741,29,0.8,32,3.528,41,1.446,44,0.277,48,0.132,59,0.004,60,0.004,83,1.126,162,2.746,186,1.735,247,1.708,248,1.819,281,3.243,366,2.885,408,2.231,504,5.306,603,4.078,610,5.571,614,2.724,615,5.571,616,5.571,618,5.571,619,4.15,620,4.607,621,5.38,622,4.607,624,4.358,625,5.306,626,4.607,975,3.458,1664,3.817,1666,3.339,1911,7.233,1916,7.521,1917,4.607,1918,6.823,1919,7.634,1920,6.823,1921,5.337,1922,7.634,1923,5.971,1924,7.634,1925,5.337]],["title/injectables/Logger.html",[152,0.929,1264,2.85]],["body/injectables/Logger.html",[0,0.166,3,0.152,4,0.127,5,0.088,8,2.137,18,1.155,27,0.006,44,0.293,46,1.138,48,0.144,59,0.005,60,0.005,152,1.517,153,2.27,184,4.17,189,3.854,234,2.393,247,1.865,331,3.19,377,3.27,603,3.453,740,4.263,838,3.682,1212,3.647,1251,3.19,1264,5.425,1270,4.76,1300,4.019,1356,4.533,1385,4.17,1453,4.17,1475,4.76,1501,6.092,1592,3.883,1671,5.831,1926,5.829,1927,9.156,1928,6.522,1929,6.522,1930,4.533,1931,5.829,1932,5.032,1933,5.373,1934,4.339,1935,7.213,1936,4.76,1937,6.522,1938,6.522,1939,5.373,1940,4.76,1941,5.829,1942,4.17,1943,6.522,1944,6.522,1945,6.522]],["title/modules/LoggerModule.html",[111,1.309,386,3.161]],["body/modules/LoggerModule.html",[0,0.18,3,0.165,4,0.139,5,0.095,27,0.006,44,0.309,46,1.237,48,0.156,59,0.005,60,0.005,111,2.248,113,2.75,114,3.633,121,4.258,122,3.236,123,3.034,125,3.633,147,4.154,386,6.32,1264,5.859,1946,6.338,1947,6.338,1948,6.338,1949,7.091,1950,7.091]],["title/interfaces/Mail.html",[87,0.524,106,2.685]],["body/interfaces/Mail.html",[3,0.14,4,0.117,5,0.081,8,2.353,10,0.31,11,1.012,17,0.405,27,0.006,28,0.528,29,0.918,36,1.248,48,0.132,59,0.004,60,0.004,87,1.012,88,4.721,89,1.744,90,3.838,91,5.199,92,5.097,93,3.995,94,3.995,95,4.721,96,3.995,97,3.995,98,3.995,99,5.199,100,3.838,101,3.995,102,5.476,103,5.097,104,5.097,105,5.476,106,5.099,107,5.682,108,5.913,109,5.913,110,5.913]],["title/interfaces/MailAttachment.html",[87,0.524,91,3.046]],["body/interfaces/MailAttachment.html",[3,0.148,4,0.124,5,0.085,8,2.402,10,0.329,11,1.049,17,0.374,27,0.006,28,0.799,36,1.246,48,0.14,59,0.004,60,0.004,87,1.025,88,4.894,89,1.847,90,4.064,91,5.591,92,5.284,93,6.037,94,6.037,95,4.894,96,4.229,97,4.229,98,4.229,99,5.337,100,4.064,101,4.229,102,4.894,103,5.284,104,5.284,105,4.894,106,4.313,107,4.064,108,4.229,109,4.229,110,4.229]],["title/interfaces/MailContent.html",[87,0.524,99,3.046]],["body/interfaces/MailContent.html",[3,0.148,4,0.124,5,0.085,8,2.404,10,0.329,11,1.05,17,0.343,27,0.006,28,0.561,29,0.756,36,1.236,48,0.14,59,0.004,60,0.004,87,1.025,88,5.595,89,1.85,90,4.072,91,5.342,92,5.29,93,4.237,94,4.237,95,5.595,96,4.237,97,4.237,98,4.237,99,5.595,100,5.805,101,6.041,102,4.9,103,5.29,104,5.29,105,4.9,106,4.319,107,4.072,108,4.237,109,4.237,110,4.237]],["title/modules/MailModule.html",[111,1.309,1951,3.436]],["body/modules/MailModule.html",[0,0.158,3,0.145,4,0.122,5,0.083,17,0.37,18,1.102,24,0.625,26,0.932,27,0.006,28,0.69,29,0.591,36,1.044,41,1.07,44,0.312,46,1.086,48,0.137,59,0.004,60,0.004,76,1.451,83,1.156,87,0.66,111,2.271,113,2.413,125,2.662,126,2.719,147,3.044,518,3.576,961,3.743,1255,3.287,1256,4.541,1951,5.963,1952,4.541,1953,5.561,1954,6.456,1955,6.947,1956,6.222,1957,6.618,1958,7.067,1959,4.541,1960,4.14,1961,5.963,1962,5.561,1963,5.719,1964,5.719,1965,5.719,1966,6.046,1967,5.126,1968,4.801,1969,5.126,1970,5.126,1971,6.456,1972,4.801,1973,5.126,1974,5.561,1975,5.561,1976,5.561]],["title/interfaces/MailModuleOptions.html",[87,0.524,1955,3.814]],["body/interfaces/MailModuleOptions.html",[0,0.156,3,0.143,4,0.12,5,0.082,10,0.317,11,1.026,17,0.399,27,0.006,28,0.54,36,1.191,44,0.31,46,1.071,48,0.135,59,0.004,60,0.004,76,1.439,83,1.146,87,0.651,89,1.784,111,2.257,125,2.627,126,2.683,147,3.004,518,2.802,961,2.933,1255,3.244,1256,4.481,1951,5.401,1952,4.481,1954,5.058,1955,6.578,1957,5.996,1958,7.023,1959,4.481,1960,4.085,1961,5.926,1962,5.488,1963,6.746,1964,6.746,1965,6.746,1966,5.996,1967,5.058,1968,4.737,1969,5.058,1970,5.058,1971,6.402,1972,4.737,1973,5.058,1974,5.488,1975,5.488,1976,5.488]],["title/injectables/MailService.html",[152,0.929,1961,3.436]],["body/injectables/MailService.html",[0,0.163,3,0.149,4,0.125,5,0.086,10,0.33,12,2.774,17,0.344,18,1.412,21,1.843,24,0.801,26,1.194,27,0.006,28,0.702,29,0.757,36,0.97,41,1.099,44,0.316,46,1.116,48,0.141,59,0.005,60,0.005,87,0.678,106,4.938,152,1.498,153,2.225,155,2.371,174,2.143,191,1.887,366,2.592,556,2.576,838,3.637,944,3.94,961,4.148,1239,5.779,1959,4.666,1960,4.254,1961,5.541,1964,4.666,1965,4.666,1977,5.267,1978,6.567,1979,6.394,1980,8.526,1981,7.015,1982,6.394,1983,7.124,1984,6.394,1985,5.715,1986,5.715,1987,5.715,1988,5.715,1989,4.933]],["title/interfaces/MailServiceOptions.html",[87,0.524,1981,3.814]],["body/interfaces/MailServiceOptions.html",[0,0.17,3,0.156,4,0.131,5,0.09,10,0.345,11,1.082,12,2.851,17,0.354,21,1.546,27,0.006,36,1.173,44,0.322,46,1.166,48,0.147,59,0.005,60,0.005,87,0.709,89,1.941,106,4.449,152,1.54,155,1.824,174,1.797,191,1.972,366,2.664,556,2.693,838,3.049,944,4.118,961,3.192,1239,4.447,1959,4.877,1960,4.447,1961,4.645,1964,6.74,1965,6.74,1977,5.506,1980,7.918,1981,6.835,1983,5.973,1985,5.973,1986,5.973,1987,5.973,1988,5.973,1989,5.156]],["title/modules/ManagementModule.html",[111,1.309,1990,3.608]],["body/modules/ManagementModule.html",[0,0.136,3,0.124,4,0.104,5,0.072,17,0.231,27,0.006,36,0.65,44,0.355,46,0.932,48,0.118,59,0.004,60,0.004,83,0.788,84,1.019,111,2.111,113,2.072,114,3.038,121,3.56,122,2.438,123,2.286,125,3.412,126,3.102,169,1.481,181,2.679,186,1.552,217,1.851,218,1.709,232,2.153,299,6.051,313,3.181,359,5.604,363,2.902,576,2.552,577,2.613,578,2.493,579,2.493,580,2.552,666,3.391,729,3.416,951,5.182,957,5.604,972,4.122,973,4.122,995,6.153,1021,6.638,1025,5.815,1132,4.401,1133,3.292,1134,4.401,1135,4.401,1251,2.613,1354,2.902,1481,6.638,1489,5.849,1490,5.849,1491,5.849,1565,4.122,1566,3.899,1567,4.122,1990,7.276,1991,4.775,1992,4.775,1993,5.342,1994,5.342,1995,4.122,1996,4.122,1997,6.346,1998,6.346,1999,5.182,2000,4.775,2001,5.342,2002,5.342,2003,5.342,2004,5.342,2005,5.342,2006,4.401,2007,5.342,2008,3.899,2009,3.899,2010,3.899,2011,4.775,2012,6.346,2013,4.775,2014,4.122,2015,3.416,2016,5.342]],["title/modules/MongoMemoryDatabaseModule.html",[111,1.309,2017,3.814]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.125,3,0.114,4,0.096,5,0.066,12,1.708,17,0.289,18,0.869,21,1.135,24,0.673,26,0.735,27,0.006,28,0.432,29,0.466,41,1.152,44,0.33,46,0.856,48,0.181,59,0.004,60,0.004,76,1.643,83,1.211,111,2.173,113,1.903,125,2.1,126,2.144,147,2.4,155,2.346,174,2.053,181,2.46,186,1.426,191,2.536,217,1.748,218,1.57,220,3.786,232,1.977,313,5.117,336,2.744,366,2.484,399,2.829,518,3.059,554,2.922,740,2.592,934,2.29,944,4.131,961,3.92,1038,3.137,1056,3.137,1244,3.137,1251,3.28,1255,3.542,1263,4.461,1364,2.592,1552,3.265,1880,3.581,1942,3.137,1953,4.386,1954,5.523,1957,6.333,1995,6.333,1996,3.786,1999,4.893,2009,4.893,2017,5.893,2018,5.893,2019,6.312,2020,6.292,2021,4.042,2022,7.336,2023,4.907,2024,8.593,2025,4.907,2026,5.992,2027,5.992,2028,6.826,2029,7.929,2030,4.907,2031,5.523,2032,4.386,2033,5.992,2034,4.386,2035,4.386,2036,4.386,2037,4.042,2038,3.411,2039,3.581,2040,3.581,2041,4.042,2042,3.411,2043,4.386,2044,4.042,2045,3.786,2046,4.386,2047,4.386,2048,4.386,2049,4.386,2050,4.386,2051,4.386,2052,4.907,2053,3.411,2054,4.907,2055,4.386,2056,6.705,2057,5.523,2058,3.411,2059,3.581,2060,4.386,2061,4.907,2062,4.907]],["title/classes/MoveElementParams.html",[0,0.126,675,3.608]],["body/classes/MoveElementParams.html",[0,0.235,2,1.379,3,0.156,4,0.131,5,0.09,10,0.347,11,1.172,17,0.355,24,0.825,27,0.006,29,0.638,31,2.627,44,0.298,48,0.181,59,0.005,60,0.005,211,2.242,510,2.463,630,2.995,632,3.752,655,4.688,657,3.062,661,3.868,675,5.994,756,3.752,757,3.868,880,3.545,1592,3.995,1627,4.465,2063,5.528,2064,7.32,2065,8.213,2066,6.71,2067,6.71,2068,7.932,2069,7.932,2070,5.528,2071,5.528,2072,5.528,2073,4.465,2074,5.178,2075,6.766]],["title/classes/MoveElementPosition.html",[0,0.126,2064,3.814]],["body/classes/MoveElementPosition.html",[0,0.239,2,1.329,3,0.151,4,0.126,5,0.087,10,0.334,11,1.206,17,0.347,24,0.807,27,0.006,29,0.763,31,2.921,44,0.292,48,0.177,59,0.005,60,0.005,64,2.036,211,2.192,510,2.947,630,3.584,632,4.49,655,4.613,657,2.952,661,3.73,675,4.722,756,4.882,757,5.034,880,4.242,1592,4.781,1627,5.343,2063,5.33,2064,7.045,2068,7.804,2069,7.804,2070,5.33,2071,6.615,2072,6.615,2073,5.343,2074,6.196,2075,6.615,2076,8.03,2077,6.47,2078,6.47]],["title/classes/News.html",[0,0.126,510,1.814]],["body/classes/News.html",[0,0.173,2,0.676,3,0.077,4,0.143,5,0.044,8,1.941,10,0.17,11,0.663,16,2.836,17,0.411,18,0.889,21,0.761,24,0.946,26,0.752,27,0.006,28,0.68,29,0.823,32,2.855,36,1.122,41,0.566,44,0.301,48,0.162,50,1.187,59,0.003,60,0.003,83,0.486,84,1.399,87,0.349,162,2.109,163,3.932,164,3.875,166,2.552,169,2.228,172,1.827,190,2.288,208,2.194,209,1.575,210,1.353,211,2.494,212,1.536,214,1.536,216,3.353,217,0.858,218,1.053,222,3.117,229,3.404,234,2.234,242,2.105,243,2.385,245,2.148,247,1.741,248,1.855,251,1.65,252,1.166,324,2.895,351,1.898,408,1.876,411,3.297,416,2.148,419,2.855,426,3.607,427,2.343,437,1.693,438,1.693,439,1.693,440,1.693,442,1.502,444,2.641,446,1.408,447,2.028,448,1.693,467,3.751,474,2.028,489,1.898,493,1.898,508,1.96,509,2.288,510,3.512,511,3.953,512,3.781,513,3.983,514,3.699,515,4.971,516,4.734,517,4.879,518,2.778,519,3.874,522,3.21,523,4.197,524,3.49,527,3.665,528,4.354,529,3.665,530,3.49,531,2.518,532,3.341,533,3.49,537,3.509,538,3.892,541,3.052,543,3.341,545,3.665,547,3.665,548,5.348,550,2.398,551,2.402,552,4.197,553,2.402,554,1.96,555,2.288,556,1.326,557,2.398,558,3.341,559,3.094,560,2.402,561,2.402,562,2.402,563,2.402,564,2.402,565,1.739,566,2.19,567,2.402,568,2.402,569,2.402,570,2.402,571,2.402,572,2.402,573,2.402,574,2.402,575,3.665,576,2.907,577,2.978,578,2.841,579,2.841,580,2.907,581,3.509,582,3.509,583,2.402,584,3.665,585,2.402,586,2.402,587,4.443,588,2.028,589,2.028,590,2.402,2079,5.021,2080,3.292,2081,3.292,2082,3.292,2083,3.292,2084,3.292,2085,3.292,2086,3.292,2087,3.292,2088,3.292,2089,3.292,2090,3.292,2091,3.292]],["title/controllers/NewsController.html",[664,2.115,2092,3.814]],["body/controllers/NewsController.html",[0,0.097,3,0.089,4,0.075,5,0.051,10,0.198,11,0.743,12,1.335,17,0.338,18,0.997,24,0.786,26,1.173,27,0.006,28,0.689,29,0.744,36,1.077,41,1.345,44,0.315,46,0.669,48,0.085,59,0.003,60,0.003,66,3.148,76,1.667,83,1.155,84,0.732,155,2.585,169,2.405,171,3.058,172,1.403,174,2.419,186,1.114,188,1.516,189,2.689,191,2.31,209,1.302,211,2.137,411,2.797,506,3.599,510,3.537,531,2.823,550,2.689,558,3.746,603,3.349,614,3.044,627,5.109,630,3.775,657,1.75,664,1.641,666,1.832,668,2.363,674,4.872,679,3.16,680,4.868,681,2.452,682,2.799,683,5.208,684,2.799,690,2.799,693,6.04,695,5.962,696,5.739,697,4.904,1013,4.868,1097,3.599,1164,3.352,1184,3.992,1191,5.444,1352,2.552,1439,4.529,1588,3.16,1655,4.109,1858,5.032,2092,4.344,2093,3.428,2094,4.868,2095,6.67,2096,5.713,2097,3.835,2098,3.835,2099,3.835,2100,5.63,2101,3.835,2102,7.313,2103,3.16,2104,5.109,2105,4.89,2106,3.835,2107,4.638,2108,3.835,2109,5.63,2110,3.835,2111,5.032,2112,5.63,2113,3.835,2114,5.364,2115,5.63,2116,3.835,2117,2.959,2118,2.552,2119,4.265,2120,3.428,2121,2.666,2122,2.799,2123,3.428,2124,3.428,2125,3.835,2126,3.428,2127,3.428,2128,3.428,2129,3.428,2130,6.055,2131,3.16,2132,3.428,2133,3.428,2134,3.428,2135,3.428,2136,3.428,2137,3.16,2138,3.16,2139,3.835,2140,3.835,2141,3.835,2142,3.835,2143,5.63,2144,3.835]],["title/classes/NewsFilterQuery.html",[0,0.126,2104,3.436]],["body/classes/NewsFilterQuery.html",[0,0.191,2,1.198,3,0.136,4,0.114,5,0.078,10,0.301,11,0.993,17,0.359,24,0.836,27,0.006,29,0.885,36,1.069,44,0.319,48,0.128,59,0.004,60,0.004,64,2.864,76,1.08,163,4.451,164,4.173,165,5.128,171,4.084,187,3.593,209,1.739,211,2.272,510,3.419,511,4.011,541,2.924,642,5.227,645,4.807,646,4.807,647,5.417,650,6.074,651,6.194,652,4.477,656,5.849,657,2.661,659,7.242,660,6.194,661,3.362,662,4.256,663,3.472,975,3.09,1119,5.488,1632,5.537,2104,5.227,2145,7.242,2146,4.804,2147,5.831,2148,5.227,2149,6.72,2150,5.831,2151,5.831,2152,5.831,2153,5.831,2154,6.72,2155,5.831,2156,7.519,2157,5.831,2158,7.519,2159,6.194,2160,5.831,2161,5.831]],["title/classes/NewsMapper.html",[0,0.126,2122,3.608]],["body/classes/NewsMapper.html",[0,0.123,2,0.998,3,0.113,4,0.095,5,0.065,10,0.251,16,2.443,17,0.353,18,1.179,24,0.821,26,1.225,27,0.006,28,0.719,29,0.777,41,1.405,44,0.321,48,0.107,59,0.004,60,0.004,76,1.514,83,1.206,84,0.926,163,3.256,164,3.809,165,4.102,169,1.346,186,1.411,187,2.992,411,1.848,510,3.142,511,3.037,512,3.256,514,3.615,518,4.396,614,3.037,627,5.68,630,4.116,674,3.963,829,4.429,832,3.231,833,3.231,1618,5.28,1628,5.544,1631,5.68,1632,3.231,2104,5.68,2114,5.964,2121,5.68,2122,4.858,2162,4.34,2163,6.656,2164,6.656,2165,6.656,2166,6.656,2167,4.856,2168,6.656,2169,4.856,2170,6.656,2171,4.856,2172,6.656,2173,4.856,2174,3.746,2175,7.595,2176,3.746,2177,3.746,2178,4.34,2179,4.856,2180,4.856,2181,4.856,2182,4.856,2183,4.856,2184,4.34,2185,4.856,2186,4.856,2187,4.856,2188,4.856,2189,4.856,2190,4.34,2191,4.856,2192,4.34,2193,6.656,2194,4.856,2195,4.856,2196,4.856,2197,4.856,2198,4.856,2199,4.856,2200,4.856,2201,4.856,2202,4,2203,4.856,2204,4,2205,4.856,2206,4.34,2207,4.34,2208,6.656,2209,4.856,2210,4.856,2211,4.856,2212,6.656,2213,6.656,2214,6.656,2215,4.856,2216,4.856]],["title/modules/NewsModule.html",[111,1.309,2217,3.608]],["body/modules/NewsModule.html",[0,0.154,3,0.141,4,0.118,5,0.081,27,0.006,44,0.347,46,1.055,48,0.133,59,0.004,60,0.004,111,2.038,113,2.346,114,3.293,121,3.859,122,2.76,123,2.588,125,3.293,126,3.363,138,6.538,147,3.765,227,3.285,386,6.014,666,3.676,1038,3.867,1595,4.204,2092,6.876,2096,4.414,2119,6.367,2120,5.406,2217,7.302,2218,5.406,2219,6.048,2220,5.406,2221,5.406,2222,6.258,2223,6.048,2224,6.532,2225,6.048,2226,6.048,2227,5.406,2228,6.048,2229,6.048,2230,6.048,2231,6.048,2232,4.024,2233,3.727,2234,6.88,2235,6.048,2236,6.048,2237,6.048,2238,4.204]],["title/injectables/NewsRepo.html",[152,0.929,2222,3.289]],["body/injectables/NewsRepo.html",[0,0.091,3,0.083,4,0.07,5,0.048,8,1.411,10,0.184,11,0.704,17,0.392,18,0.944,24,0.923,26,1.345,27,0.006,28,0.79,29,0.853,32,3.639,41,1.562,44,0.3,46,0.622,48,0.078,59,0.003,60,0.003,76,1.608,83,0.942,84,0.68,152,1.002,153,1.24,155,2.617,162,2.195,172,1.767,174,2.412,178,3.802,181,3.555,186,1.035,189,3.05,191,2.506,209,1.233,217,1.39,218,1.14,247,1.019,248,1.085,254,6.318,256,5.708,257,3.408,258,4.764,259,4.764,260,4.112,261,3.073,262,4.764,263,4.764,264,4.764,270,2.748,271,6.96,273,3.184,275,3.184,277,2.748,279,3.184,281,2.895,282,3.184,284,3.184,286,3.184,306,3.705,336,2.98,346,3.964,366,2.077,411,3.032,505,2.195,506,3.408,508,3.802,510,3.372,511,3.961,513,2.895,517,3.546,554,2.121,555,4.928,558,4.717,588,3.935,589,3.935,603,2.281,614,2.432,621,4.532,632,2.98,827,5.47,961,4.146,975,2.624,981,1.992,1130,2.748,1335,4.661,1364,2.816,1517,4.928,1632,4.717,1651,5.494,1654,3.173,1655,2.98,2094,4.661,2148,2.476,2222,3.546,2239,3.184,2240,6.386,2241,5.33,2242,5.33,2243,3.562,2244,4.928,2245,3.562,2246,5.33,2247,3.562,2248,7.089,2249,7.089,2250,5.33,2251,3.562,2252,3.562,2253,3.562,2254,3.562,2255,3.562,2256,3.562,2257,3.562,2258,3.562,2259,3.562,2260,3.562,2261,3.562,2262,3.562,2263,4.764,2264,3.562,2265,4.112,2266,3.562,2267,3.562,2268,5.33,2269,3.562,2270,5.33,2271,3.562,2272,3.562,2273,5.33,2274,5.33,2275,3.562,2276,3.562,2277,2.935,2278,3.562,2279,2.6,2280,2.195,2281,6.386,2282,3.562,2283,3.562,2284,3.562]],["title/classes/NewsResponse.html",[0,0.126,2121,3.436]],["body/classes/NewsResponse.html",[0,0.097,2,0.785,3,0.089,4,0.169,5,0.051,10,0.198,11,0.742,16,2.868,17,0.418,24,0.951,27,0.006,28,0.646,29,0.777,36,1.159,44,0.284,48,0.084,59,0.003,60,0.003,64,3.059,76,1.233,163,3.256,164,3.338,165,4.102,166,3.277,169,2.342,171,3.05,172,2.441,178,3.343,187,2.355,209,2.045,211,2.584,242,2.791,243,2.658,245,2.848,408,2.098,411,3.298,510,3.594,511,4.102,512,3.824,513,3.616,514,3.616,516,4.627,517,4.429,537,2.203,538,2.443,541,3.338,550,2.682,557,3.504,636,4.626,637,3.46,638,4.626,639,4.333,645,4.691,646,4.691,647,4.521,650,4.858,651,4.626,652,3.343,655,4.92,656,4.882,657,1.744,662,2.789,663,3.963,819,6.562,1104,4.098,1453,3.59,1596,4.626,1723,2.949,2096,4.098,2121,3.903,2285,2.949,2286,3.822,2287,6.044,2288,3.822,2289,5.705,2290,3.822,2291,3.822,2292,3.822,2293,3.822,2294,4.858,2295,5.019,2296,3.822,2297,5.95,2298,3.822,2299,5.484,2300,3.822,2301,5.019,2302,3.822,2303,4.858,2304,3.343,2305,3.822,2306,2.949,2307,3.822,2308,3.822,2309,3.822,2310,3.822,2311,3.822,2312,4.333,2313,3.822,2314,5.95,2315,3.822]],["title/classes/NewsScope.html",[0,0.126,2265,3.814]],["body/classes/NewsScope.html",[0,0.136,2,1.099,3,0.125,4,0.105,5,0.072,8,1.882,10,0.277,11,0.939,17,0.382,18,1.259,24,0.889,26,1.196,27,0.006,28,0.702,29,0.758,32,3.346,41,1.372,44,0.309,48,0.118,59,0.004,60,0.004,76,1.316,83,1.178,84,1.021,163,2.618,168,3.186,186,1.555,217,1.395,218,1.712,243,1.74,247,1.53,248,1.631,281,2.907,366,2.766,510,2.608,511,2.442,514,2.907,603,3.893,604,3.72,610,5.188,614,3.642,615,5.188,616,5.188,618,5.188,619,3.72,620,4.129,621,5.659,622,4.129,624,3.906,625,4.941,626,4.129,641,5.103,774,2.556,934,2.497,975,3.279,981,2.992,1146,3.085,1335,3.906,1340,4.783,1449,3.561,1632,4.729,1917,4.129,2244,5.911,2265,7.02,2316,6.575,2317,7.108,2318,7.108,2319,7.108,2320,5.351,2321,7.108,2322,5.351,2323,4.129,2324,4.941,2325,5.351,2326,5.351,2327,5.351,2328,7.108,2329,5.351,2330,5.351,2331,5.351,2332,5.351,2333,5.351,2334,5.351]],["title/interfaces/NewsTargetFilter.html",[87,0.524,2244,3.436]],["body/interfaces/NewsTargetFilter.html",[3,0.168,4,0.141,5,0.097,10,0.374,11,1.135,17,0.371,27,0.006,44,0.312,48,0.159,59,0.005,60,0.005,87,0.767,89,2.101,162,2.937,163,4.639,164,4.755,186,2.101,187,4.457,511,3.3,1339,7.813,2244,5.973,2316,5.959,2335,6.465]],["title/injectables/NewsUc.html",[152,0.929,2119,3.161]],["body/injectables/NewsUc.html",[0,0.065,3,0.059,4,0.05,5,0.034,10,0.132,11,0.543,17,0.362,18,0.728,21,0.59,24,0.827,26,1.206,27,0.006,28,0.708,29,0.765,36,0.628,41,1.485,44,0.276,46,0.445,48,0.056,59,0.002,60,0.002,64,0.803,76,1.668,83,1.188,84,0.985,144,4.498,152,0.773,153,0.888,155,2.554,162,3.02,163,3.937,164,2.97,165,4.498,166,3.572,169,1.924,171,1.386,173,4.124,174,2.323,186,0.741,187,1.573,188,1.009,189,4.127,191,2.716,209,1.861,243,1.926,247,1.857,248,1.574,252,1.829,261,1.471,319,1.632,336,2.299,366,2.876,411,0.971,419,1.724,427,3.031,505,1.573,510,3.554,511,3.167,513,1.386,514,4.125,518,2.357,531,3.808,532,2.736,576,1.219,577,1.249,578,1.191,579,1.191,603,3.25,642,4.117,652,1.52,662,1.863,674,4.668,868,3.001,934,1.191,961,3.315,975,2.122,981,1.427,982,1.427,1172,1.427,1184,2.234,1191,2.736,1264,3.414,1277,2.103,1305,3.676,1314,3.676,1335,5.328,1339,3.388,1343,3.183,1364,2.173,1453,1.632,1501,3.437,1618,4.117,1628,4.323,1631,5.074,1632,4.321,1637,2.449,1651,3.941,1655,1.427,1660,1.863,1748,2.805,1936,3.001,2096,3.77,2119,2.629,2131,3.388,2178,2.281,2184,2.281,2190,5.294,2192,5.294,2207,3.676,2222,4.619,2227,2.281,2244,2.859,2336,2.103,2337,4.112,2338,4.112,2339,4.112,2340,4.112,2341,5.165,2342,2.552,2343,4.112,2344,4.112,2345,2.552,2346,4.112,2347,2.552,2348,4.112,2349,2.552,2350,4.112,2351,4.616,2352,4.616,2353,3.437,2354,4.112,2355,2.552,2356,4.112,2357,2.552,2358,2.552,2359,4.112,2360,2.552,2361,3.001,2362,2.552,2363,5.165,2364,2.552,2365,4.112,2366,2.552,2367,2.281,2368,2.552,2369,2.552,2370,3.388,2371,4.879,2372,2.552,2373,2.552,2374,2.281,2375,2.552,2376,5.923,2377,2.552,2378,4.112,2379,2.552,2380,4.112,2381,2.552,2382,5.294,2383,2.552,2384,2.552,2385,2.552,2386,4.112,2387,2.281,2388,4.112,2389,2.552,2390,2.552,2391,4.112,2392,2.552,2393,2.552,2394,5.165,2395,2.552,2396,4.112,2397,2.552,2398,2.552,2399,2.552,2400,2.281,2401,2.103,2402,2.552,2403,2.552,2404,2.552,2405,2.552,2406,2.281,2407,4.112,2408,2.552,2409,2.552,2410,2.552,2411,4.112,2412,2.552,2413,2.552,2414,2.552,2415,2.552,2416,2.552]],["title/interfaces/Options.html",[87,0.524,961,2.361]],["body/interfaces/Options.html",[0,0.135,3,0.124,4,0.104,5,0.071,10,0.275,11,0.934,17,0.306,27,0.006,29,0.839,36,0.968,44,0.289,48,0.187,59,0.004,60,0.004,64,2.858,76,1.717,83,1.044,87,0.564,89,1.544,122,2.426,155,1.932,174,1.903,188,2.101,191,2.089,252,2.817,359,4.361,361,3.695,363,4.607,364,4.38,366,1.729,374,2.426,444,3.522,556,2.142,838,2.426,880,2.809,951,3.88,952,4.38,953,4.38,957,4.902,959,4.38,960,4.752,961,4.338,963,4.253,964,6.443,965,5.165,967,4.752,968,4.919,970,6.313,971,4.38,972,4.102,973,4.102,974,5.806,975,3.269,976,3.844,977,7.11,978,5.165,979,4.586,980,3.989,981,4.742,982,3.957,983,6.325,984,6.325,985,4.752,986,5.46,987,6.325,988,6.325,989,4.38,990,3.276,991,2.809,992,5.46,993,4.752,994,4.752]],["title/classes/PaginationQuery.html",[0,0.126,2105,3.289]],["body/classes/PaginationQuery.html",[0,0.203,2,1.316,3,0.149,4,0.125,5,0.086,10,0.331,11,1.054,17,0.345,24,0.802,27,0.006,29,0.865,31,3.053,44,0.29,48,0.141,59,0.005,60,0.005,64,2.512,211,2.179,247,2.282,248,2.432,640,6.158,656,5.784,657,2.923,661,3.693,827,6.158,934,3.724,1146,4.601,1609,6.575,1658,5.784,1659,6.228,2070,5.278,2075,5.278,2105,5.31,2417,5.726,2418,6.641,2419,6.406,2420,4.335,2421,7.981,2422,7.981,2423,7.981,2424,6.406,2425,6.406,2426,7.133,2427,6.406,2428,8.693,2429,5.726,2430,6.406,2431,6.406]],["title/classes/PaginationResponse.html",[0,0.126,2118,3.289]],["body/classes/PaginationResponse.html",[0,0.156,2,1.264,3,0.143,4,0.12,5,0.083,10,0.318,11,1.027,17,0.399,21,1.423,24,0.929,26,0.922,27,0.006,28,0.541,29,0.879,31,3.23,44,0.224,48,0.136,59,0.004,60,0.004,211,2.448,271,6.75,336,4.35,655,5.176,657,2.807,838,4.22,1658,6.383,1659,6.383,2118,5.176,2432,5.498,2433,7.002,2434,7.78,2435,6.152,2436,6.152,2437,6.152,2438,6.152,2439,6.152,2440,6.152,2441,6.152,2442,6.152,2443,6.152]],["title/injectables/ParseObjectIdPipe.html",[152,0.929,683,3.289]],["body/injectables/ParseObjectIdPipe.html",[0,0.173,3,0.158,4,0.133,5,0.091,10,0.351,17,0.293,18,1.466,24,0.683,26,1.018,27,0.006,28,0.598,29,0.646,36,1.158,41,1.168,44,0.324,46,1.186,48,0.15,59,0.005,60,0.005,76,1.258,83,1.002,84,1.296,152,1.556,153,2.365,162,2.104,186,1.974,201,3.245,210,3.4,217,1.772,219,3.1,248,2.521,683,5.506,730,4.723,740,3.59,1598,5.752,2304,4.927,2444,7.396,2445,5.598,2446,8.275,2447,6.795,2448,8.275,2449,8.275,2450,6.795,2451,6.795]],["title/interfaces/PlainTextMailContent.html",[87,0.524,102,3.046]],["body/interfaces/PlainTextMailContent.html",[3,0.149,4,0.125,5,0.086,8,2.477,10,0.33,11,1.053,17,0.344,27,0.006,28,0.563,29,0.757,36,1.242,48,0.141,59,0.005,60,0.005,87,1.026,88,4.912,89,1.857,90,4.088,91,5.352,92,5.303,93,4.254,94,4.254,95,4.912,96,4.254,97,4.254,98,4.254,99,5.603,100,4.088,101,4.254,102,5.352,103,6.225,104,6.225,105,4.912,106,4.329,107,4.088,108,4.254,109,4.254,110,4.254]],["title/classes/ResolvedUser.html",[0,0.126,1860,3.046]],["body/classes/ResolvedUser.html",[0,0.152,2,1.229,3,0.139,4,0.117,5,0.08,10,0.309,11,1.009,17,0.421,24,0.97,27,0.006,36,1.195,44,0.278,48,0.168,59,0.004,60,0.004,166,3.531,186,1.738,209,1.948,211,2.635,242,3.531,243,2.887,245,3.604,427,3.931,655,5.348,657,2.729,740,4.038,1635,4.333,1638,4.023,1639,5.854,1642,5.085,1643,5.385,1644,5.385,1860,4.71,2452,4.928,2453,5.982,2454,5.982,2455,5.982,2456,5.982,2457,5.982,2458,5.982,2459,5.982,2460,5.982]],["title/classes/ResolvedUserMapper.html",[0,0.126,2461,3.814]],["body/classes/ResolvedUserMapper.html",[0,0.16,2,1.293,3,0.147,4,0.123,5,0.084,10,0.325,17,0.272,18,1.398,24,0.632,26,0.943,27,0.006,28,0.695,29,0.598,36,1.049,41,1.082,44,0.287,48,0.139,59,0.004,60,0.004,76,1.166,83,0.929,84,1.201,166,3.79,169,2.582,186,1.829,209,1.456,247,1.8,248,1.918,518,3.935,630,3.523,829,5.252,832,4.188,833,4.188,1635,4.436,1638,4.319,1860,5.572,2202,5.186,2204,5.186,2206,5.626,2461,6.09,2462,5.626,2463,7.055,2464,6.295,2465,4.857,2466,5.626,2467,5.626,2468,5.626,2469,5.626,2470,6.295,2471,6.295,2472,6.295,2473,6.295,2474,6.295,2475,5.626,2476,6.295,2477,5.626]],["title/classes/Role.html",[0,0.126,1638,2.361]],["body/classes/Role.html",[0,0.133,2,1.071,3,0.121,4,0.102,5,0.07,8,1.849,10,0.407,11,0.922,17,0.39,21,1.206,24,0.942,26,0.781,27,0.006,28,0.795,29,0.495,32,3.528,36,1.122,44,0.254,48,0.154,50,1.879,59,0.004,60,0.004,84,1.723,87,0.553,166,3.528,172,1.741,208,3.052,209,1.616,210,2.142,211,2.518,212,2.433,214,2.433,216,3.22,217,1.36,218,1.668,222,3.577,232,2.101,242,2.929,243,2.272,245,2.989,247,2.407,248,2.564,251,2.614,252,1.847,416,2.989,419,2.186,426,2.433,429,4.329,437,2.682,438,2.682,439,2.682,440,2.682,443,4.159,444,2.022,446,2.231,465,2.49,469,2.915,470,2.915,531,2.614,541,3.503,661,3.006,978,3.805,1296,4.466,1436,4.023,1534,3.213,1605,3.805,1635,4.884,1638,4.019,1687,6.493,1688,4.295,1689,4.66,1690,4.023,1691,3.805,1692,6.078,1693,6.244,1694,4.66,1695,4.66,1696,4.023,2478,6.986,2479,4.66,2480,5.214,2481,5.214,2482,5.214]],["title/injectables/RoleRepo.html",[152,0.929,2483,3.436]],["body/injectables/RoleRepo.html",[0,0.144,3,0.132,4,0.111,5,0.076,10,0.294,11,0.976,12,1.976,17,0.376,18,1.309,21,1.313,24,0.906,26,1.304,27,0.006,28,0.814,29,0.827,36,1,41,1.412,44,0.299,46,0.991,48,0.125,59,0.004,60,0.004,76,1.522,83,1.09,152,1.389,153,1.976,155,2.636,162,2.917,166,2.381,174,2.487,186,1.65,188,2.244,191,2.425,209,1.9,217,1.481,219,2.591,265,3.381,266,4.597,268,3.615,934,2.65,1638,4.499,2483,5.137,2484,5.075,2485,9.023,2486,6.606,2487,7.391,2488,7.391,2489,7.391,2490,6.606,2491,5.679,2492,7.391,2493,5.679,2494,7.391,2495,5.679,2496,5.679,2497,7.391,2498,7.391,2499,5.679]],["title/injectables/RoleUC.html",[152,0.929,2500,3.436]],["body/injectables/RoleUC.html",[0,0.163,3,0.149,4,0.125,5,0.086,10,0.331,12,2.23,17,0.345,18,1.413,21,1.482,24,0.802,26,1.196,27,0.006,28,0.702,29,0.758,36,0.779,41,1.101,44,0.316,46,1.118,48,0.141,59,0.005,60,0.005,76,1.187,83,0.945,84,1.222,152,1.5,153,2.23,155,2.373,166,3.924,174,2.145,186,1.861,188,2.532,191,1.891,868,4.676,1635,4.105,1638,4.346,1645,4.676,2483,6.634,2500,5.547,2501,5.726,2502,7.981,2503,6.406,2504,6.406,2505,7.981,2506,6.406,2507,6.406,2508,3.948,2509,6.406,2510,6.406,2511,6.406,2512,6.406,2513,6.406]],["title/classes/School.html",[0,0.126,411,1.882]],["body/classes/School.html",[0,0.165,2,1.332,3,0.151,4,0.127,5,0.087,8,2.129,10,0.335,11,1.062,17,0.413,21,1.499,24,0.918,26,0.971,27,0.006,28,0.827,29,0.616,32,3.371,36,1.112,44,0.292,48,0.143,50,2.337,59,0.005,60,0.005,172,2.004,206,6.005,208,3.513,209,1.859,210,2.664,211,2.386,212,3.025,214,3.025,216,3.207,217,1.69,218,2.074,411,3.06,416,3.44,419,2.718,446,2.774,465,3.096,469,3.625,470,3.625,1621,4.787,1625,4.506,2514,5.794,2515,8.04,2516,5.794,2517,5.794]],["title/classes/SchoolInfoMapper.html",[0,0.126,2174,3.814]],["body/classes/SchoolInfoMapper.html",[0,0.176,2,1.426,3,0.162,4,0.136,5,0.093,10,0.359,17,0.3,18,1.485,24,0.697,26,1.04,27,0.006,28,0.611,29,0.659,41,1.193,44,0.305,48,0.153,59,0.005,60,0.005,76,1.285,83,1.024,84,1.324,186,2.016,411,3.56,518,4.109,630,3.742,829,5.577,832,4.617,833,4.617,2174,6.467,2294,6.827,2518,7.492,2519,5.355,2520,8.382,2521,5.717,2522,6.94,2523,6.94,2524,5.717,2525,6.94]],["title/classes/SchoolInfoResponse.html",[0,0.126,2294,3.608]],["body/classes/SchoolInfoResponse.html",[0,0.174,2,1.405,3,0.159,4,0.134,5,0.092,10,0.353,11,1.097,17,0.359,24,0.834,27,0.006,28,0.839,36,1.132,44,0.248,48,0.151,59,0.005,60,0.005,64,2.816,172,2.319,209,2.206,211,2.268,411,3.542,645,5.311,646,5.311,655,4.727,657,3.12,663,4.071,819,4.99,2294,6.063,2306,5.276,2526,7.998,2527,5.276,2528,5.633,2529,5.633]],["title/classes/SchoolNews.html",[0,0.126,588,3.046]],["body/classes/SchoolNews.html",[0,0.172,2,0.669,3,0.076,4,0.143,5,0.044,8,1.932,10,0.168,11,0.657,16,2.824,17,0.408,18,0.882,24,0.939,26,0.488,27,0.006,28,0.596,29,0.804,32,3.917,36,1.119,41,0.56,44,0.3,48,0.161,50,1.173,59,0.003,60,0.003,83,0.48,84,1.392,87,0.345,162,2.097,163,3.917,164,3.858,166,2.535,169,2.22,172,1.818,190,2.263,208,2.175,209,1.398,210,1.338,211,2.512,212,1.519,214,1.519,216,3.345,217,0.849,218,1.041,222,2.984,229,3.38,234,2.219,242,2.087,243,2.373,245,2.13,247,1.729,248,1.842,251,1.632,252,1.153,324,2.87,351,1.877,408,1.86,411,3.343,416,1.393,419,2.535,426,3.591,427,2.324,437,1.675,438,1.675,439,1.675,440,1.675,442,1.485,444,2.344,446,1.393,447,2.006,448,1.675,467,4.173,474,2.006,489,1.877,493,1.877,508,1.938,509,2.263,510,3.642,511,3.941,512,3.764,513,3.963,514,3.678,515,4.942,516,4.707,517,4.855,518,2.759,519,3.842,521,2.682,522,3.183,523,4.173,524,3.461,525,2.682,526,2.682,527,3.634,528,4.329,529,3.634,530,3.461,531,2.496,532,3.313,533,3.461,534,2.682,535,2.682,536,2.682,537,3.485,538,3.865,539,2.682,540,2.682,541,3.031,542,2.682,543,3.313,544,2.682,545,3.634,546,2.682,547,3.634,548,4.855,549,2.682,550,2.378,551,2.376,552,3.725,553,2.376,554,1.938,555,2.263,556,1.312,557,1.555,558,2.166,559,2.006,560,2.376,561,2.376,562,2.376,563,2.376,564,2.376,565,1.72,566,2.166,567,2.376,568,2.376,569,2.376,570,2.376,571,2.376,572,2.376,573,2.376,574,2.376,575,3.634,576,2.888,577,2.958,578,2.821,579,2.821,580,2.888,581,3.485,582,3.485,583,2.376,584,3.634,585,2.376,586,2.376,587,4.413,588,3.068,589,2.006,590,2.376,2530,3.255]],["title/classes/Scope.html",[0,0.126,603,2.115]],["body/classes/Scope.html",[0,0.149,2,1.202,3,0.136,4,0.114,5,0.079,10,0.303,11,0.995,17,0.403,18,1.335,21,1.353,24,0.915,26,1.129,27,0.006,28,0.663,29,0.716,41,1.006,44,0.274,48,0.129,59,0.004,60,0.004,76,1.084,83,1.112,217,1.526,218,1.872,247,1.674,248,1.783,281,4.093,366,3.033,603,3.225,614,4.255,615,6.084,616,6.084,618,5.5,619,6.482,621,6.207,624,5.5,625,6.119,934,2.731,1037,5.5,1146,3.374,1723,4.516,2323,6.432,2531,4.821,2532,7.536,2533,7.536,2534,6.736,2535,5.852,2536,5.852,2537,5.852,2538,5.852,2539,5.852,2540,5.852,2541,7.536,2542,7.536,2543,5.852,2544,5.852,2545,5.852]],["title/classes/ServerConsole.html",[0,0.126,2546,3.814]],["body/classes/ServerConsole.html",[0,0.151,2,1.22,3,0.138,4,0.116,5,0.08,10,0.307,17,0.328,18,1.347,21,1.373,24,0.843,26,1.14,27,0.006,28,0.669,29,0.723,36,1.021,41,1.308,44,0.276,48,0.131,52,2.836,59,0.004,60,0.004,64,2.88,83,1.122,123,3.255,188,2.347,211,2.077,281,4.807,359,5.454,363,5.235,374,2.709,956,5.307,959,6.267,962,6.799,970,6.507,1235,7.291,1238,5.092,1251,4.106,1366,5.889,1387,5.585,1794,5.454,2000,5.307,2546,5.869,2547,5.307,2548,7.607,2549,5.938,2550,6.152,2551,5.938,2552,7.607,2553,5.869,2554,5.938,2555,6.799,2556,5.938,2557,5.938]],["title/modules/ServerConsoleModule.html",[111,1.309,2558,3.608]],["body/modules/ServerConsoleModule.html",[0,0.171,3,0.156,4,0.131,5,0.09,27,0.006,44,0.345,46,1.171,48,0.148,59,0.005,60,0.005,111,2.174,113,2.602,114,3.514,121,4.118,122,3.062,123,2.871,125,3.514,126,3.588,355,7.045,361,4.665,363,4.461,374,3.062,971,5.528,1354,3.645,1909,3.752,1990,7.045,2546,6.337,2558,7.203,2559,5.998,2560,6.71,2561,6.71,2562,8.213,2563,6.71,2564,6.71,2565,6.71]],["title/controllers/ServerController.html",[664,2.115,2566,3.814]],["body/controllers/ServerController.html",[0,0.181,3,0.166,4,0.139,5,0.096,10,0.369,18,1.51,24,0.717,27,0.006,36,1.037,41,1.227,44,0.259,46,1.245,48,0.157,52,3.409,59,0.005,60,0.005,83,1.053,211,1.949,247,2.438,664,3.648,666,3.409,1235,7.779,1237,5.926,1238,4.504,1239,5.672,1240,4.914,1250,5.507,1251,3.492,2566,6.578,2567,6.38,2568,7.138]],["title/modules/ServerModule.html",[111,1.309,2569,3.608]],["body/modules/ServerModule.html",[0,0.131,3,0.12,4,0.1,5,0.069,17,0.222,27,0.006,36,1.018,44,0.357,46,0.897,48,0.113,57,2.455,59,0.004,60,0.004,83,0.758,84,0.981,111,1.832,112,6.564,113,1.993,114,2.96,118,6.252,121,3.469,122,2.345,123,2.199,126,3.023,169,1.425,181,2.577,186,1.493,217,1.804,218,1.644,232,2.071,234,1.886,313,4.119,381,6.564,556,2.071,576,2.455,577,2.514,578,2.399,579,2.399,580,2.455,666,3.305,729,3.286,961,3.305,1489,5.7,1490,5.7,1491,5.7,1565,3.966,1566,3.751,1567,3.966,1670,3.966,1894,6.564,1909,2.874,1951,6.07,1963,3.751,1964,3.751,1965,3.751,1995,3.966,1996,3.966,1997,6.184,1998,6.184,1999,5.05,2006,4.234,2009,3.751,2010,3.751,2011,4.594,2012,6.184,2013,4.594,2014,3.966,2015,3.286,2217,6.564,2566,6.034,2569,7.293,2570,4.594,2571,4.594,2572,6.564,2573,5.14,2574,3.751,2575,3.42,2576,3.286,2577,4.234,2578,5.14,2579,5.14,2580,3.573,2581,5.14,2582,5.14,2583,5.14,2584,5.14,2585,5.14,2586,5.14,2587,5.14,2588,5.14,2589,5.14,2590,5.14,2591,3.573,2592,5.14,2593,4.594,2594,4.234,2595,5.14]],["title/classes/Submission.html",[0,0.126,1711,3.046]],["body/classes/Submission.html",[0,0.099,2,0.8,3,0.091,4,0.076,5,0.099,8,1.508,10,0.201,11,0.752,17,0.404,18,1.009,21,0.901,24,0.954,26,0.584,27,0.006,28,0.343,29,0.64,31,2.369,32,3.104,36,1.06,41,0.67,44,0.299,48,0.086,50,1.404,59,0.003,60,0.003,76,1.055,83,0.575,84,1.662,87,0.413,169,2.184,172,1.419,208,2.488,209,1.317,210,1.601,211,2.552,212,1.818,214,1.818,216,3.197,217,1.016,218,1.246,222,3.295,242,2.387,243,1.852,245,2.436,247,2.253,248,2.4,251,1.953,252,3.085,416,2.436,419,2.387,426,4.32,429,4.232,437,2.004,438,2.004,439,2.004,440,2.004,442,1.777,443,2.319,444,1.51,446,1.667,448,2.004,465,1.86,468,3.958,484,5.377,523,3.509,565,2.058,934,3.141,975,2.34,1343,5.368,1697,5.713,1698,3.209,1699,6.617,1700,6.1,1701,6.617,1702,7.353,1703,5.475,1704,7.353,1705,4.161,1706,7.177,1707,3.481,1708,3.481,1709,3.481,1710,2.592,1711,3.509,1712,5.089,1713,5.089,1714,4.691,1715,5.089,1716,5.089,1717,4.691,1718,6.617,1719,5.089,1720,2.49,1721,5.089,1722,7.353,1723,4.393,1724,6.015,1725,5.089,1726,3.481,1727,3.481,1728,3.481,1729,3.481,1730,3.481,1731,3.481,1732,3.481,1733,3.005,1734,3.481,1735,3.481,1736,3.481,2596,3.895,2597,3.895,2598,3.895,2599,3.895,2600,3.895,2601,3.895,2602,3.895,2603,3.895,2604,3.895,2605,3.895,2606,3.895]],["title/injectables/SubmissionRepo.html",[152,0.929,2607,4.073]],["body/injectables/SubmissionRepo.html",[0,0.139,3,0.127,4,0.106,5,0.073,10,0.282,12,1.897,17,0.37,18,1.274,21,1.26,24,0.86,26,1.283,27,0.006,28,0.754,29,0.814,41,1.384,44,0.311,46,0.951,48,0.12,59,0.004,60,0.004,76,1.586,83,1.188,152,1.352,153,1.897,155,2.615,162,2.994,173,3.891,174,2.459,186,1.583,188,2.154,191,2.528,217,1.876,218,1.744,219,2.487,232,2.196,265,3.245,266,4.525,268,3.519,366,2.619,412,3.245,484,4.284,505,3.358,506,4.6,593,6.43,597,5.927,603,2.332,614,3.283,621,3.484,774,3.436,1519,3.978,1703,3.788,1705,2.603,1706,4.49,1710,4.787,1711,3.358,1909,3.047,2607,5.927,2608,4.871,2609,7.194,2610,7.194,2611,5.45,2612,7.194,2613,5.45,2614,7.194,2615,5.45,2616,7.194,2617,5.45,2618,7.194,2619,5.45,2620,7.194,2621,5.45]],["title/classes/TargetInfoMapper.html",[0,0.126,2176,3.814]],["body/classes/TargetInfoMapper.html",[0,0.176,2,1.423,3,0.161,4,0.135,5,0.093,10,0.358,17,0.299,18,1.483,24,0.696,26,1.038,27,0.006,28,0.609,29,0.658,41,1.19,44,0.304,48,0.153,59,0.005,60,0.005,76,1.283,83,1.022,84,1.321,187,4.267,511,3.16,518,4.105,552,5.76,630,3.737,829,5.57,833,4.608,2176,6.459,2303,6.822,2314,6.189,2519,5.343,2521,5.705,2524,5.705,2622,7.482,2623,8.371,2624,6.925,2625,6.925,2626,6.925]],["title/classes/TargetInfoResponse.html",[0,0.126,2303,3.608]],["body/classes/TargetInfoResponse.html",[0,0.174,2,1.405,3,0.159,4,0.134,5,0.092,10,0.353,11,1.097,17,0.359,24,0.834,27,0.006,28,0.839,36,1.132,44,0.248,48,0.151,59,0.005,60,0.005,64,2.816,172,2.319,209,2.206,211,2.268,511,4.247,645,5.311,646,5.311,655,4.727,657,3.12,663,4.071,819,4.99,2303,6.063,2306,5.276,2527,5.276,2528,5.633,2529,5.633,2627,7.998]],["title/classes/Task.html",[0,0.126,1705,2.361]],["body/classes/Task.html",[0,0.103,2,0.83,3,0.094,4,0.079,5,0.054,8,1.548,10,0.209,11,0.772,17,0.406,18,1.036,21,0.934,24,0.959,26,0.605,27,0.006,28,0.775,29,0.877,32,3.158,36,1.045,41,1.005,44,0.303,48,0.129,50,1.457,59,0.003,60,0.003,64,2.163,83,0.863,84,1.437,87,0.428,169,2.088,172,1.457,208,2.555,209,1.352,210,1.66,211,2.545,212,1.886,214,1.886,216,3.342,217,1.054,218,1.293,222,3.332,242,2.452,243,2.862,245,2.502,247,2.154,248,2.295,251,2.026,252,2.434,366,2.6,408,3.288,410,4.092,416,2.502,419,1.694,426,3.889,429,3.008,437,2.079,438,2.079,439,2.079,440,2.079,442,1.844,444,1.567,446,1.729,448,2.079,463,2.949,465,1.93,469,2.259,470,2.259,489,3.371,490,4.065,493,2.329,495,4.065,496,2.809,523,3.604,556,2.356,800,2.949,963,2.932,975,2.824,1343,2.49,1454,2.949,1666,4.921,1705,3.598,1710,5.012,1711,3.604,1720,4.816,1737,5.812,1738,3.118,1739,6.206,1740,5.498,1741,3.611,1742,3.611,1743,6.206,1744,3.329,1745,4.512,1746,5.227,1747,5.227,1748,2.195,1749,5.227,1750,4.816,1751,5.227,1752,6.733,1753,6.733,1754,3.611,1755,5.227,1756,3.611,1757,3.611,1758,3.611,1759,3.611,1760,3.611,1761,3.611,1762,5.227,1763,3.611,1764,3.611,1765,3.611,1766,3.611,2628,4.041,2629,4.041,2630,4.041,2631,4.041,2632,4.041,2633,4.041,2634,4.041,2635,4.041,2636,4.041,2637,4.041,2638,4.041]],["title/injectables/TaskAuthorizationService.html",[152,0.929,2639,3.436]],["body/injectables/TaskAuthorizationService.html",[0,0.153,3,0.14,4,0.118,5,0.081,10,0.311,12,2.094,17,0.331,18,1.358,21,1.391,24,0.77,26,1.149,27,0.006,28,0.675,29,0.729,41,1.034,44,0.307,46,1.05,48,0.169,59,0.004,60,0.004,76,1.421,83,0.887,152,1.442,153,2.094,155,2.305,162,2.754,169,2.126,173,2.628,174,2.062,186,1.747,188,2.377,191,2.264,494,4.39,531,4.459,541,3.016,591,6.249,741,5.103,743,4.904,980,3.016,1378,5.103,1384,5.598,1439,3.706,1452,4.39,1664,3.846,1665,4.181,2639,5.331,2640,4.955,2641,7.67,2642,6.015,2643,6.015,2644,7.67,2645,7.326,2646,6.015,2647,6.855,2648,6.319,2649,5.918,2650,6.855,2651,7.67,2652,5.376,2653,4.641,2654,6.015,2655,5.376,2656,6.015,2657,6.015,2658,7.67,2659,6.015,2660,5.376]],["title/controllers/TaskController.html",[664,2.115,2661,3.814]],["body/controllers/TaskController.html",[0,0.153,3,0.14,4,0.117,5,0.081,10,0.31,12,2.09,17,0.259,18,1.357,24,0.603,26,0.9,27,0.006,28,0.528,29,0.571,41,1.032,44,0.351,46,1.048,48,0.132,59,0.004,60,0.004,76,1.646,83,1.13,84,1.146,155,2.303,174,2.059,186,1.744,188,2.373,191,1.772,211,1.639,614,3.496,630,2.68,657,2.739,664,2.569,666,2.868,668,3.7,681,3.838,682,4.382,684,4.382,690,4.382,696,5.291,697,4.572,774,3.659,1658,5.097,1659,5.097,2094,6.158,2103,4.946,2105,6.49,2117,4.632,2118,3.995,2433,5.591,2661,5.911,2662,5.366,2663,4.173,2664,6.004,2665,5.865,2666,6.004,2667,4.382,2668,4.632,2669,6.004,2670,6.004,2671,6.004,2672,6.004,2673,6.004,2674,6.004,2675,6.004,2676,6.004,2677,6.004]],["title/classes/TaskMapper.html",[0,0.126,2668,3.814]],["body/classes/TaskMapper.html",[0,0.163,2,1.316,3,0.149,4,0.125,5,0.086,10,0.331,17,0.277,18,1.413,24,0.644,26,0.96,27,0.006,28,0.564,29,0.609,41,1.101,44,0.29,48,0.141,59,0.005,60,0.005,76,1.61,83,0.945,84,1.222,186,1.861,518,3.966,630,3.562,829,5.31,832,4.262,833,4.262,1705,3.06,1750,4.096,1770,4.676,1771,4.676,1772,4.676,1774,6.325,1775,4.262,2202,5.278,2204,5.278,2524,5.278,2667,6.641,2668,6.158,2678,5.726,2679,7.981,2680,6.406,2681,7.981,2682,6.406,2683,6.406,2684,6.406,2685,6.406,2686,6.406,2687,6.406,2688,6.406,2689,6.406,2690,6.406,2691,6.406,2692,6.406,2693,6.406,2694,6.406,2695,6.406,2696,6.406,2697,6.406,2698,6.406,2699,6.406,2700,6.406]],["title/modules/TaskModule.html",[111,1.309,2572,3.608]],["body/modules/TaskModule.html",[0,0.162,3,0.148,4,0.124,5,0.085,27,0.006,44,0.351,46,1.111,48,0.14,59,0.004,60,0.004,111,2.105,113,2.47,114,3.402,121,3.987,122,2.906,123,2.725,125,3.402,126,2.783,591,6.341,604,4.427,666,3.798,1903,6.625,2508,3.924,2572,7.374,2639,6.625,2652,5.692,2661,6.689,2665,6.625,2701,5.692,2702,5.692,2703,6.625,2704,6.369,2705,6.369,2706,4.237,2707,6.369]],["title/injectables/TaskRepo.html",[152,0.929,2703,3.436]],["body/injectables/TaskRepo.html",[0,0.12,3,0.11,4,0.092,5,0.063,10,0.244,12,1.643,17,0.388,18,1.156,21,1.092,24,0.752,26,1.122,27,0.006,28,0.659,29,0.711,41,1.287,44,0.308,46,0.824,48,0.104,59,0.004,60,0.004,64,1.486,76,1.57,83,0.963,84,1.246,152,1.227,153,1.643,155,2.393,162,2.501,174,2.171,178,4.808,186,1.372,188,1.866,189,3.575,191,2.209,217,1.231,218,1.51,243,1.536,252,2.313,265,2.811,266,4.266,268,3.194,336,4.185,366,2.434,408,1.764,466,3.857,504,3.282,505,2.909,506,4.174,603,2.794,614,2.979,621,5.163,961,4.441,975,1.94,1119,6.399,1130,3.643,1364,3.449,1621,4.808,1651,5.98,1654,3.888,1655,4.185,1659,3.141,1665,4.539,1666,4.515,1705,3.857,1710,3.141,1720,5.163,1745,3.643,1910,5.379,2263,5.836,2367,4.22,2663,4.539,2703,4.539,2708,4.22,2709,7.485,2710,6.529,2711,4.721,2712,4.721,2713,4.721,2714,5.379,2715,5.836,2716,8.477,2717,6.529,2718,4.721,2719,5.038,2720,3.89,2721,4.22,2722,3.89,2723,4.721,2724,4.721,2725,4.721,2726,4.721,2727,4.721,2728,4.721,2729,4.721,2730,4.721,2731,4.721,2732,4.721,2733,4.721,2734,4.721,2735,4.721,2736,6.529,2737,4.721,2738,6.529,2739,4.721,2740,4.721,2741,4.721,2742,4.721,2743,4.721]],["title/classes/TaskResponse.html",[0,0.126,2667,3.608]],["body/classes/TaskResponse.html",[0,0.142,2,1.145,3,0.13,4,0.109,5,0.075,10,0.288,11,0.964,17,0.419,24,0.966,27,0.006,28,0.716,29,0.904,31,2.604,36,1.157,44,0.265,48,0.123,52,3.486,59,0.004,60,0.004,64,1.753,209,1.883,211,2.626,242,3.413,243,3.094,245,3.483,630,3.258,632,4.081,655,5.252,656,5.748,657,2.542,684,4.066,736,5.205,808,4.081,975,2.289,1621,3.317,1705,3.486,1739,6.707,1740,5.942,1750,3.562,1770,4.066,1771,4.066,1772,4.066,1775,5.417,2667,5.327,2744,4.98,2745,6.524,2746,8.141,2747,5.571,2748,5.571,2749,5.571,2750,5.571,2751,5.571,2752,5.571,2753,5.571,2754,5.571,2755,5.571,2756,5.571,2757,5.571,2758,6.707]],["title/classes/TaskScope.html",[0,0.126,2719,3.814]],["body/classes/TaskScope.html",[0,0.121,2,0.98,3,0.111,4,0.093,5,0.064,8,1.741,10,0.247,11,0.994,17,0.396,18,1.165,24,0.936,26,1.318,27,0.006,28,0.774,29,0.856,32,3.155,41,1.512,44,0.239,48,0.105,59,0.004,60,0.004,76,0.883,83,1.255,162,2.921,173,2.873,186,1.386,238,3.05,243,2.448,247,1.364,248,1.453,252,1.689,281,2.591,366,2.861,408,2.457,504,4.571,556,2.649,603,3.763,604,3.316,610,5.92,614,3,615,4.799,616,4.799,618,4.799,619,3.316,620,3.68,621,4.811,622,3.68,624,3.481,625,4.571,626,3.68,975,3.333,980,2.392,1343,5.243,1666,4.208,1705,2.278,1720,3.05,1740,5.92,1750,4.204,1917,3.68,1918,5.877,1920,5.877,1921,4.263,1925,4.263,2719,7.411,2720,5.417,2722,5.417,2759,7.861,2760,6.576,2761,6.576,2762,6.576,2763,6.576,2764,4.77,2765,4.77,2766,6.576,2767,4.77,2768,6.576,2769,4.77,2770,6.576,2771,4.77,2772,3.481,2773,3.481,2774,3.68,2775,3.481,2776,4.77,2777,4.77,2778,4.77]],["title/injectables/TaskUC.html",[152,0.929,2665,3.436]],["body/injectables/TaskUC.html",[0,0.086,3,0.079,4,0.066,5,0.046,10,0.175,12,2.158,17,0.351,18,0.91,21,1.188,24,0.84,26,1.217,27,0.006,28,0.715,29,0.772,41,1.396,44,0.27,46,0.592,48,0.113,59,0.003,60,0.003,66,3.867,76,1.801,83,1.198,84,1.492,144,3.82,152,0.966,153,1.18,155,2.338,162,2.703,166,1.422,173,3.742,174,2.102,185,4.231,186,0.985,191,2.469,201,1.62,232,1.366,234,1.244,243,2.016,252,1.201,330,2.168,366,3.126,377,1.7,504,4.807,505,3.165,531,3.109,541,1.7,594,4.591,595,4.591,599,4.231,601,4.231,604,2.357,696,3.058,697,4.178,871,2.794,934,2.893,975,2.111,980,3.109,1146,2.961,1296,3.284,1298,2.09,1392,2.256,1654,3.058,1655,5.087,1657,6.372,1660,2.475,1664,3.284,1705,4.09,1714,4.231,1740,5.047,1745,2.617,1750,4.421,1770,5.047,1771,5.047,1772,5.047,1774,5.165,1903,5.645,2094,3.749,2103,4.231,2387,3.031,2433,5.047,2508,2.09,2639,4.807,2645,2.794,2655,3.031,2660,4.591,2663,3.57,2665,3.57,2703,5.435,2720,4.231,2721,3.031,2722,2.794,2779,2.794,2780,5.136,2781,5.136,2782,6.915,2783,5.136,2784,3.391,2785,3.391,2786,5.136,2787,3.391,2788,5.136,2789,3.391,2790,3.391,2791,3.391,2792,3.391,2793,3.391,2794,5.136,2795,6.181,2796,3.391,2797,3.391,2798,3.031,2799,3.031,2800,3.031,2801,2.794,2802,2.794,2803,3.391,2804,2.617,2805,5.136,2806,3.391,2807,3.391,2808,3.391,2809,3.391,2810,5.136,2811,3.391,2812,5.136,2813,5.136,2814,3.391,2815,5.136,2816,5.136,2817,3.391,2818,6.915,2819,5.136,2820,3.391,2821,3.391,2822,5.136,2823,3.391,2824,3.391,2825,3.391,2826,6.2,2827,3.391,2828,3.391,2829,3.391,2830,5.136,2831,6.915,2832,5.136,2833,3.391,2834,3.391,2835,3.391,2836,3.391,2837,3.391,2838,3.391,2839,3.391,2840,3.391,2841,3.391,2842,3.391,2843,3.391,2844,3.391,2845,5.136,2846,3.391,2847,2.794]],["title/classes/TaskWithStatusVo.html",[0,0.126,1774,3.436]],["body/classes/TaskWithStatusVo.html",[0,0.17,2,1.373,3,0.156,4,0.131,5,0.09,10,0.345,11,1.082,17,0.382,21,1.546,24,0.89,26,1.001,27,0.006,28,0.588,29,0.635,31,2.834,44,0.243,48,0.147,59,0.005,60,0.005,87,0.709,975,2.746,1705,4.799,1733,5.156,1750,4.273,1767,7.441,1768,7.607,1769,5.506,1770,4.877,1771,4.877,1772,4.877,1773,5.973,1774,5.694,1775,6.499,1776,7.322,1777,5.973,2848,8.192,2849,6.683]],["title/classes/Team.html",[0,0.126,550,2.361]],["body/classes/Team.html",[0,0.165,2,1.332,3,0.151,4,0.127,5,0.087,8,2.129,10,0.335,11,1.062,17,0.413,21,1.499,24,0.918,26,0.971,27,0.006,28,0.827,29,0.616,32,3.371,36,1.112,44,0.292,48,0.143,50,2.337,59,0.005,60,0.005,172,2.004,206,6.005,208,3.513,209,1.859,210,2.664,211,2.386,212,3.025,214,3.025,216,3.207,217,1.69,218,2.074,416,3.44,419,2.718,446,2.774,465,3.096,469,3.625,470,3.625,550,3.84,1621,4.787,1626,4.506,2516,5.794,2517,5.794,2850,5.794,2851,8.04]],["title/classes/TeamNews.html",[0,0.126,589,3.046]],["body/classes/TeamNews.html",[0,0.172,2,0.669,3,0.076,4,0.143,5,0.044,8,1.932,10,0.168,11,0.657,16,2.824,17,0.408,18,0.882,24,0.939,26,0.488,27,0.006,28,0.596,29,0.804,32,3.917,36,1.119,41,0.56,44,0.3,48,0.161,50,1.173,59,0.003,60,0.003,83,0.48,84,1.392,87,0.345,162,2.097,163,3.917,164,3.858,166,2.535,169,2.22,172,1.818,190,2.263,208,2.175,209,1.398,210,1.338,211,2.512,212,1.519,214,1.519,216,3.345,217,0.849,218,1.041,222,2.984,229,3.38,234,2.219,242,2.087,243,2.373,245,2.13,247,1.729,248,1.842,251,1.632,252,1.153,324,2.87,351,1.877,408,1.86,411,3.287,416,1.393,419,2.535,426,3.591,427,2.324,437,1.675,438,1.675,439,1.675,440,1.675,442,1.485,444,2.344,446,1.393,447,2.006,448,1.675,467,3.725,474,2.006,489,1.877,493,1.877,508,1.938,509,2.263,510,3.642,511,3.941,512,3.764,513,3.963,514,3.678,515,4.942,516,4.707,517,4.855,518,2.759,519,3.842,521,2.682,522,3.183,523,4.173,524,3.461,525,2.682,526,2.682,527,3.634,528,4.329,529,3.634,530,3.461,531,2.496,532,3.313,533,3.461,534,2.682,535,2.682,536,2.682,537,3.485,538,3.865,539,2.682,540,2.682,541,3.031,542,2.682,543,3.313,544,2.682,545,3.634,546,2.682,547,3.634,548,4.855,549,2.682,550,2.888,551,2.376,552,3.725,553,2.376,554,1.938,555,2.263,556,1.312,557,1.555,558,2.166,559,2.006,560,2.376,561,2.376,562,2.376,563,2.376,564,2.376,565,1.72,566,2.166,567,2.376,568,2.376,569,2.376,570,2.376,571,2.376,572,2.376,573,2.376,574,2.376,575,3.634,576,2.888,577,2.958,578,2.821,579,2.821,580,2.888,581,3.485,582,3.485,583,2.376,584,3.634,585,2.376,586,2.376,587,4.413,588,2.006,589,3.068,590,3.634,2852,3.255]],["title/controllers/TeamNewsController.html",[664,2.115,2224,3.814]],["body/controllers/TeamNewsController.html",[0,0.142,3,0.13,4,0.109,5,0.075,10,0.288,12,1.939,17,0.241,18,1.293,24,0.56,26,0.835,27,0.006,28,0.49,29,0.529,36,0.99,41,0.958,44,0.346,46,0.972,48,0.123,59,0.004,60,0.004,66,4.081,76,1.508,83,0.822,84,1.063,155,2.222,169,2.024,174,1.962,186,1.619,188,2.202,189,2.661,191,1.644,211,1.521,506,4.667,510,2.679,550,4.283,603,3.483,614,3.715,630,2.487,657,2.542,664,2.384,666,2.661,668,3.433,681,3.562,682,4.066,683,4.857,684,4.066,690,4.066,693,4.299,696,5.34,697,4.444,981,3.115,1164,4.847,1220,4.299,1626,3.873,1655,4.83,1866,2.943,2104,6.005,2105,5.748,2107,6.013,2117,4.299,2118,3.707,2119,5.205,2121,3.873,2122,4.066,2123,4.98,2124,4.98,2130,4.59,2131,4.59,2132,4.98,2133,4.98,2134,4.98,2135,4.98,2136,4.98,2224,5.632,2706,3.707,2853,6.524,2854,4.98,2855,8.141,2856,5.571,2857,7.299,2858,5.571,2859,8.141,2860,5.571,2861,5.571,2862,4.98,2863,5.571,2864,5.571]],["title/classes/TestBootstrapConsole.html",[0,0.126,2865,4.073]],["body/classes/TestBootstrapConsole.html",[0,0.171,2,1.379,3,0.156,4,0.131,5,0.09,8,2.174,10,0.347,18,1.455,24,0.674,27,0.006,36,0.816,41,1.153,44,0.298,48,0.181,59,0.005,60,0.005,76,1.521,83,1.212,126,2.932,155,1.832,174,2.386,191,1.981,363,4.461,374,3.062,576,3.205,577,3.283,578,3.132,579,3.132,580,3.205,581,3.868,1184,5.023,1238,3.545,1242,5.528,1243,5.998,1254,5.178,1257,4.898,1479,5.528,2233,4.135,2553,6.337,2865,6.766,2866,5.528,2867,8.875,2868,6.71,2869,7.34,2870,6.71,2871,5.178,2872,5.998,2873,5.998,2874,5.998,2875,5.998]],["title/injectables/TimeoutInterceptor.html",[152,0.929,1798,3.814]],["body/injectables/TimeoutInterceptor.html",[0,0.137,3,0.126,4,0.106,5,0.073,10,0.279,11,0.945,17,0.346,18,1.267,24,0.892,26,1.072,27,0.006,28,0.63,29,0.811,31,2.919,41,1.23,44,0.31,46,0.943,48,0.119,59,0.004,60,0.004,64,1.701,83,1.26,134,4.453,152,1.345,153,1.881,247,1.546,248,1.647,281,2.936,366,2.609,518,3.66,576,2.581,577,2.644,578,3.984,579,2.522,580,2.581,581,3.116,664,3.061,740,2.855,1037,5.222,1164,4.26,1241,5.52,1246,5.894,1253,4.973,1265,6.395,1266,6.395,1267,6.587,1268,7.63,1270,2.936,1271,7.169,1274,4.453,1276,4.831,1354,3.886,1355,3.78,1376,4.453,1517,4.17,1748,2.936,1796,6.343,1798,5.52,2059,5.222,2876,4.831,2877,7.155,2878,5.222,2879,4.973,2880,5.894,2881,8.02,2882,8.02,2883,8.02,2884,5.405,2885,5.405,2886,6.188,2887,5.405,2888,5.405,2889,5.405,2890,5.405,2891,5.405,2892,7.155,2893,7.155,2894,5.405,2895,7.155,2896,5.405,2897,5.405,2898,5.405,2899,5.405,2900,5.405,2901,5.405,2902,5.405,2903,7.155,2904,5.405,2905,5.405]],["title/classes/UpdateNewsParams.html",[0,0.126,2114,3.608]],["body/classes/UpdateNewsParams.html",[0,0.226,2,1.231,3,0.14,4,0.117,5,0.08,10,0.31,11,1.173,16,3.367,17,0.364,24,0.847,27,0.006,29,0.727,36,1.08,44,0.278,48,0.132,59,0.004,60,0.004,64,2.795,172,2.338,211,2.301,243,2.489,510,3.544,512,4.489,514,4.578,629,4.624,630,3.416,632,4.278,634,5.356,636,6.304,637,4.715,638,6.304,639,5.904,656,5.909,657,2.734,658,6.839,659,7.316,660,6.945,661,3.455,880,4.042,1592,4.556,1627,5.091,2071,6.304,2072,6.304,2073,5.091,2074,5.904,2114,5.585,2906,7.938,2907,7.652,2908,5.993,2909,5.993,2910,5.993]],["title/classes/User.html",[0,0.126,169,1.371]],["body/classes/User.html",[0,0.126,2,1.016,3,0.115,4,0.097,5,0.066,8,1.784,10,0.445,11,0.89,17,0.405,21,1.143,24,0.954,26,0.741,27,0.006,28,0.725,29,0.819,32,3.452,36,1.155,44,0.299,48,0.148,50,1.782,59,0.004,60,0.004,84,1.571,87,0.524,169,1.868,172,1.679,208,2.945,209,1.559,210,2.032,211,2.564,212,2.307,214,2.307,216,3.339,217,1.289,218,1.582,222,3.528,242,2.825,243,2.192,245,2.884,247,2.193,248,2.336,251,2.479,252,2.716,411,3.525,416,2.884,419,2.073,426,3.843,427,3.145,429,3.467,437,2.543,438,2.543,439,2.543,440,2.543,442,2.256,443,2.944,444,1.917,446,2.116,447,3.047,465,2.362,467,3.047,473,3.815,474,3.047,1296,4.309,1635,4.574,1637,2.944,1638,3.219,1643,5.264,1644,5.264,1692,3.815,1696,3.815,1778,6.353,1779,4.073,1780,5.724,1781,4.419,1782,4.419,1783,4.419,1784,4.419,1785,4.419,1786,4.419,1787,4.419,1788,4.419,1789,4.419,1790,4.419,2479,4.419,2911,6.739,2912,4.944,2913,4.944,2914,4.944,2915,4.944,2916,6.739,2917,4.944,2918,4.944,2919,4.944]],["title/controllers/UserController.html",[664,2.115,2920,3.814]],["body/controllers/UserController.html",[0,0.169,3,0.155,4,0.13,5,0.089,10,0.343,12,2.312,17,0.287,18,1.445,24,0.667,26,0.995,27,0.006,28,0.585,29,0.631,41,1.142,44,0.35,46,1.159,48,0.146,59,0.005,60,0.005,83,0.98,155,2.412,169,1.841,174,2.194,186,1.93,188,2.625,211,1.813,657,3.031,664,2.842,666,3.172,668,4.093,681,4.246,682,4.848,690,4.848,696,5.26,697,4.74,1860,4.093,2117,5.125,2706,4.419,2920,6.297,2921,5.936,2922,6.642,2923,8.161,2924,6.642,2925,5.878,2926,6.642,2927,6.642,2928,6.642,2929,6.642,2930,6.642]],["title/injectables/UserFacade.html",[152,0.929,1839,3.436]],["body/injectables/UserFacade.html",[0,0.169,3,0.155,4,0.13,5,0.089,10,0.344,12,2.317,17,0.353,18,1.447,21,1.539,24,0.821,26,1.224,27,0.006,28,0.719,29,0.777,41,1.144,44,0.335,46,1.161,48,0.147,59,0.005,60,0.005,76,1.233,83,0.982,152,1.536,153,2.317,155,2.414,162,2.855,173,2.908,174,2.197,186,1.934,188,2.63,191,1.964,832,4.428,1839,5.68,1860,5.449,2925,6.41,2931,5.949,2932,8.171,2933,6.656,2934,6.656,2935,8.171,2936,6.656,2937,6.656,2938,6.656]],["title/classes/UserInfoMapper.html",[0,0.126,2177,3.814]],["body/classes/UserInfoMapper.html",[0,0.175,2,1.417,3,0.161,4,0.135,5,0.093,10,0.356,17,0.298,18,1.479,24,0.693,26,1.033,27,0.006,28,0.607,29,0.655,41,1.185,44,0.303,48,0.152,59,0.005,60,0.005,76,1.277,83,1.017,84,1.316,169,2.65,186,2.003,518,4.098,630,3.727,829,5.556,832,4.588,833,4.588,2177,6.442,2289,6.812,2463,7.463,2465,5.32,2466,6.163,2467,6.163,2468,6.163,2469,6.163,2519,5.32,2521,5.681,2939,7.463]],["title/classes/UserInfoResponse.html",[0,0.126,2289,3.608]],["body/classes/UserInfoResponse.html",[0,0.164,2,1.329,3,0.151,4,0.126,5,0.087,10,0.334,11,1.06,17,0.377,24,0.877,27,0.006,28,0.804,29,0.868,36,1.164,44,0.235,48,0.143,59,0.005,60,0.005,64,2.874,169,2.653,172,2.001,209,2.171,211,2.384,645,5.134,646,5.134,655,4.242,656,5.81,657,2.952,663,3.852,1643,5.582,1644,5.582,2289,5.861,2301,7.177,2306,4.992,2353,5.343,2527,4.992,2528,5.33,2529,5.33,2940,8.161,2941,7.177,2942,6.47]],["title/modules/UserModule.html",[111,1.309,118,3.436]],["body/modules/UserModule.html",[0,0.162,3,0.148,4,0.124,5,0.085,27,0.006,44,0.339,46,1.109,48,0.14,59,0.004,60,0.004,111,2.103,113,2.465,114,3.398,118,7.043,121,3.982,122,2.9,123,2.72,125,3.398,147,3.885,664,2.72,666,3.793,1839,6.969,2483,6.621,2500,6.621,2508,3.917,2706,4.229,2920,6.683,2925,6.338,2943,5.681,2944,5.681,2945,5.681,2946,6.338,2947,6.356,2948,6.356]],["title/injectables/UserRepo.html",[152,0.929,2946,3.289]],["body/injectables/UserRepo.html",[0,0.169,3,0.155,4,0.13,5,0.089,10,0.344,12,2.317,17,0.353,18,1.447,21,1.539,24,0.821,26,1.224,27,0.006,28,0.719,29,0.777,41,1.144,44,0.321,46,1.161,48,0.147,59,0.005,60,0.005,76,1.233,83,0.982,152,1.536,153,2.317,155,2.414,162,2.855,169,2.451,174,2.197,186,1.934,188,2.63,191,1.964,209,1.89,217,1.735,219,3.037,265,3.963,266,4.871,268,3.997,2486,7.303,2490,7.303,2946,5.437,2949,5.949,2950,6.656,2951,6.656,2952,6.656]],["title/injectables/UserUC.html",[152,0.929,2925,3.289]],["body/injectables/UserUC.html",[0,0.158,3,0.145,4,0.122,5,0.084,10,0.322,12,2.731,17,0.339,18,1.39,21,1.442,24,0.788,26,1.176,27,0.006,28,0.691,29,0.746,41,1.072,44,0.344,46,1.088,48,0.137,59,0.004,60,0.004,76,1.669,83,0.92,152,1.475,153,2.17,155,2.344,162,2.79,169,1.728,173,2.724,174,2.109,186,1.811,188,2.464,191,2.316,366,2.028,1635,3.207,1860,5.29,2461,4.81,2500,6.689,2508,3.842,2925,5.22,2946,6.307,2953,5.572,2954,7.846,2955,6.234,2956,6.234,2957,7.846,2958,6.234,2959,5.136,2960,6.234,2961,6.234,2962,6.234,2963,6.234,2964,5.572,2965,6.234,2966,5.572,2967,6.234,2968,6.234]],["title/classes/ValidationError.html",[0,0.126,23,3.436]],["body/classes/ValidationError.html",[0,0.151,2,1.22,3,0.138,4,0.116,5,0.08,8,2.014,9,6.274,10,0.307,11,1.004,12,3.416,13,3.396,14,5.574,15,5.275,16,3.08,17,0.42,18,1.347,19,6.915,20,6.915,21,1.373,23,5.288,24,0.968,26,0.89,27,0.006,28,0.523,29,0.564,31,1.9,32,3.99,33,5.307,34,6.36,35,5.307,36,1.139,37,5.307,38,5.307,39,5.307,40,5.307,41,1.308,42,5.307,43,3.535,44,0.276,45,4.582,46,1.036,47,5.307,48,0.131,49,4.892,50,2.14,53,3.225,54,2.651,55,4.334,58,5.307,59,0.004,60,0.004,336,3.32,2969,5.307,2970,5.938,2971,5.938,2972,5.938]],["title/classes/ValidationErrorDetailResponse.html",[0,0.126,71,3.814]],["body/classes/ValidationErrorDetailResponse.html",[0,0.186,2,1.506,3,0.171,4,0.143,5,0.098,12,2.552,17,0.317,21,1.695,24,0.736,26,1.099,27,0.006,28,0.645,29,0.697,36,1.199,48,0.162,49,6.04,54,3.866,59,0.005,60,0.005,68,5.007,71,6.683,2973,7.741,2974,6.553,2975,7.331,2976,7.331,2977,7.135]],["title/modules/ValidationModule.html",[111,1.309,387,3.608]],["body/modules/ValidationModule.html",[0,0.187,3,0.171,4,0.144,5,0.099,27,0.006,44,0.335,46,1.282,48,0.162,59,0.005,60,0.005,111,2.296,113,2.849,125,3.144,387,6.33,401,7.752,1244,4.698,1255,3.882,1289,5.669,1585,6.692,2978,7.348,2979,7.348,2980,7.348]],["title/changelog.html",[2981,3.188,2982,2.872,2983,3.693]],["body/changelog.html",[0,0.051,2,0.848,3,0.014,4,0.011,5,0.068,10,0.03,13,1.366,14,0.936,15,0.335,24,0.201,27,0.002,28,0.138,29,0.149,31,0.353,41,0.27,44,0.073,52,2.779,53,1.825,54,2.479,56,1.147,57,0.751,59,0.001,60,0.001,68,2.113,83,0.086,84,1.086,87,0.117,106,0.854,111,0.81,114,0.472,122,0.503,123,0.472,125,0.249,126,0.254,147,0.284,150,1.259,155,0.159,166,1.631,168,0.656,169,2.036,171,0.316,172,0.498,173,0.482,174,0.423,175,0.766,178,0.346,181,1.535,182,1.147,189,0.278,191,0.172,201,0.278,208,0.254,209,0.462,221,0.449,226,0.372,227,3.16,230,0.449,233,2.362,234,1.809,236,2.995,238,0.705,239,0.705,242,0.244,243,1.182,247,0.961,248,0.479,257,0.372,261,3.12,291,0.449,306,1.093,308,0.734,313,0.346,319,0.705,326,0.346,327,0.404,328,1.189,329,1.75,330,0.705,331,0.977,346,0.616,363,0.854,370,0.387,374,1.249,377,3.906,378,1.575,389,0.734,393,0.424,395,2.458,397,2.235,399,0.335,408,1.702,411,2.749,412,2.458,414,2.869,427,0.271,444,0.774,449,0.936,458,0.805,459,1.74,460,0.404,466,0.954,484,0.346,494,0.424,510,0.405,511,0.265,512,0.977,513,0.854,530,1.093,531,1.951,537,0.906,543,0.387,550,1.307,554,0.656,556,0.234,576,0.954,577,0.539,578,0.271,580,0.527,582,0.335,603,0.249,614,1.249,631,1.213,632,0.616,637,1.687,640,0.449,641,4.4,647,0.679,652,1.189,668,0.358,669,0.325,674,0.346,679,2.255,681,0.372,714,0.346,732,0.705,741,0.387,744,0.325,746,0.387,751,0.679,764,0.372,765,0.372,774,0.278,782,0.404,786,0.387,805,0.358,807,0.424,808,1.879,810,0.449,838,2.079,870,0.424,880,1.259,920,0.908,933,0.404,934,0.514,961,0.278,963,1.372,964,1.388,968,1.388,970,0.404,974,0.705,976,1.825,979,0.906,980,0.553,981,0.879,982,0.616,986,0.851,991,1.92,1038,1.277,1056,1.277,1097,1.277,1103,2,1104,1.147,1108,1.839,1109,0.766,1120,0.479,1125,0.679,1126,0.449,1133,1.687,1146,0.906,1153,0.449,1160,0.908,1161,0.335,1164,0.656,1172,1.117,1174,1.295,1184,2.113,1187,0.449,1190,1.213,1191,2.037,1192,1.63,1195,0.734,1201,1.329,1211,0.479,1212,4.94,1213,1.329,1237,3.955,1238,2.407,1239,1.046,1240,1.765,1250,0.449,1251,2.412,1255,0.83,1263,0.734,1270,0.316,1296,0.372,1298,1.23,1299,0.539,1300,0.679,1301,0.766,1325,0.985,1353,0.335,1354,0.316,1355,1.775,1357,2.128,1364,1.055,1366,2.235,1373,0.372,1375,0.449,1384,2.234,1385,1.005,1391,1.213,1418,0.404,1419,0.479,1422,0.449,1427,0.479,1428,1.046,1436,0.851,1439,0.969,1441,0.449,1448,0.449,1449,1.046,1453,1.005,1454,0.424,1475,6.2,1476,0.449,1492,0.479,1495,0.805,1499,0.449,1518,0.479,1519,0.805,1520,1.093,1523,0.734,1534,0.358,1548,1.457,1550,0.805,1553,0.372,1568,1.147,1577,0.479,1590,0.479,1591,1.645,1592,1.419,1595,2.704,1596,3.583,1603,0.851,1604,0.404,1605,1.998,1609,0.479,1611,1.74,1625,3.427,1626,1.388,1627,0.387,1629,0.387,1635,1.728,1636,2.335,1637,4.406,1638,1.138,1640,0.766,1654,0.656,1655,0.879,1658,0.387,1665,1.093,1666,0.879,1671,1.046,1690,0.449,1700,0.908,1703,1.093,1705,1.462,1710,1.586,1711,0.679,1717,0.479,1720,0.705,1744,1.295,1748,1.663,1775,0.734,1780,1.388,1794,0.358,1796,0.404,1797,3.205,1799,0.734,1807,0.449,1811,0.479,1814,0.424,1815,1.821,1822,1.147,1825,0.479,1827,0.479,1836,0.479,1843,1.405,1845,2.592,1847,2.235,1866,1.259,1880,1.147,1909,4.722,1910,0.908,1930,0.404,1932,0.449,1939,0.479,1942,2.148,1960,1.586,1978,1.645,1989,0.449,2008,0.424,2010,0.805,2014,1.541,2015,0.372,2019,1.093,2040,0.424,2042,0.404,2045,0.449,2057,0.908,2058,2.335,2059,0.805,2073,1.821,2096,2.234,2137,0.479,2148,0.404,2154,3.249,2232,1.586,2233,0.969,2234,4.837,2238,0.766,2277,0.479,2280,0.358,2287,0.479,2304,1.189,2312,2.362,2324,0.766,2351,2.13,2353,1.046,2361,0.805,2400,0.52,2401,2.255,2418,4.575,2420,1.085,2429,0.985,2508,0.969,2550,0.404,2574,2.452,2575,0.387,2576,1.005,2577,0.479,2580,2.335,2591,1.657,2647,1.785,2648,1.964,2650,1.785,2653,3.185,2663,2.128,2714,0.908,2745,0.52,2773,1.457,2775,0.805,2801,0.908,2802,0.908,2847,0.908,2878,1.147,2886,0.449,2941,1.405,2977,0.908,2983,2.736,2984,0.582,2985,1.388,2986,0.908,2987,0.52,2988,0.582,2989,0.582,2990,1.572,2991,0.766,2992,4.334,2993,5.51,2994,8.374,2995,4.333,2996,0.582,2997,8.161,2998,0.582,2999,0.582,3000,1.572,3001,1.102,3002,0.582,3003,0.582,3004,0.985,3005,0.479,3006,3.003,3007,0.582,3008,5.899,3009,0.582,3010,7.429,3011,0.582,3012,0.582,3013,0.582,3014,0.582,3015,1.902,3016,0.582,3017,0.582,3018,8.494,3019,3.36,3020,0.582,3021,0.449,3022,3.635,3023,0.582,3024,0.582,3025,0.582,3026,2.747,3027,1.102,3028,0.52,3029,0.582,3030,0.582,3031,2.13,3032,0.582,3033,0.582,3034,3.003,3035,1.147,3036,0.805,3037,0.908,3038,1.093,3039,0.52,3040,0.582,3041,1.147,3042,2.527,3043,5.411,3044,0.582,3045,0.582,3046,1.997,3047,1.572,3048,2.653,3049,0.582,3050,0.582,3051,0.582,3052,0.582,3053,0.582,3054,0.387,3055,0.582,3056,0.582,3057,0.582,3058,0.582,3059,0.582,3060,0.582,3061,0.582,3062,0.851,3063,1.102,3064,0.582,3065,0.985,3066,0.582,3067,3.635,3068,1.102,3069,1.997,3070,2.736,3071,0.582,3072,5.939,3073,3.061,3074,0.582,3075,0.52,3076,0.582,3077,1.102,3078,0.582,3079,0.582,3080,0.582,3081,0.424,3082,0.582,3083,2.446,3084,0.582,3085,0.582,3086,0.582,3087,1.102,3088,5.1,3089,0.582,3090,0.582,3091,0.582,3092,1.102,3093,0.52,3094,0.582,3095,0.851,3096,0.582,3097,0.582,3098,1.102,3099,0.582,3100,3.477,3101,0.582,3102,0.582,3103,0.582,3104,0.582,3105,1.102,3106,1.572,3107,0.582,3108,0.52,3109,0.582,3110,0.582,3111,0.582,3112,2.255,3113,0.582,3114,0.582,3115,1.102,3116,0.582,3117,0.424,3118,1.997,3119,0.52,3120,1.457,3121,0.985,3122,0.582,3123,3.891,3124,1.572,3125,0.582,3126,6.001,3127,0.582,3128,0.582,3129,0.582,3130,0.582,3131,5.554,3132,0.582,3133,4.059,3134,0.985,3135,0.582,3136,0.582,3137,0.582,3138,3.061,3139,2.255,3140,0.582,3141,0.582,3142,0.582,3143,0.582,3144,1.572,3145,0.582,3146,9.012,3147,0.582,3148,0.479,3149,1.785,3150,1.572,3151,1.102,3152,0.582,3153,0.582,3154,1.902,3155,0.582,3156,0.582,3157,1.102,3158,0.582,3159,0.582,3160,1.785,3161,0.479,3162,1.405,3163,0.582,3164,0.582,3165,0.582,3166,0.582,3167,0.582,3168,1.405,3169,0.582,3170,0.582,3171,0.582,3172,0.582,3173,1.964,3174,3.061,3175,2.736,3176,0.582,3177,0.582,3178,0.582,3179,0.582,3180,0.582,3181,0.582,3182,0.582,3183,0.766,3184,1.572,3185,0.908,3186,0.582,3187,0.582,3188,0.404,3189,0.582,3190,0.582,3191,0.582,3192,0.52,3193,1.572,3194,0.582,3195,5.554,3196,0.582,3197,1.102,3198,2.384,3199,0.582,3200,0.582,3201,0.582,3202,0.582,3203,1.405,3204,2.384,3205,0.582,3206,2.384,3207,0.582,3208,1.997,3209,1.102,3210,2.362,3211,0.582,3212,0.582,3213,1.997,3214,0.582,3215,1.997,3216,4.072,3217,0.582,3218,0.582,3219,1.102,3220,1.997,3221,3.401,3222,0.582,3223,1.102,3224,0.52,3225,0.52,3226,0.449,3227,0.52,3228,1.964,3229,2.592,3230,1.457,3231,0.404,3232,1.102,3233,0.582,3234,0.582,3235,1.405,3236,0.582,3237,0.582,3238,0.582,3239,0.582,3240,1.572,3241,0.582,3242,0.582,3243,5.554,3244,2.13,3245,1.102,3246,1.102,3247,1.102,3248,1.785,3249,0.582,3250,0.582,3251,0.582,3252,0.582,3253,1.785,3254,1.102,3255,0.582,3256,0.582,3257,1.572,3258,0.582,3259,0.479,3260,0.766,3261,2.13,3262,0.52,3263,1.213,3264,0.582,3265,2.736,3266,0.582,3267,1.572,3268,2.522,3269,0.582,3270,0.582,3271,0.582,3272,1.102,3273,0.582,3274,2.13,3275,1.102,3276,0.582,3277,0.582,3278,1.997,3279,2.384,3280,1.645,3281,0.908,3282,0.582,3283,0.582,3284,2.805,3285,0.582,3286,0.582,3287,0.582,3288,0.985,3289,0.582,3290,0.582,3291,1.572,3292,0.908,3293,0.582,3294,0.985,3295,0.582,3296,3.36,3297,3.205,3298,1.102,3299,2.384,3300,0.582,3301,0.582,3302,0.582,3303,1.785,3304,0.52,3305,1.405,3306,0.582,3307,0.582,3308,0.582,3309,0.479,3310,0.582,3311,0.582,3312,0.582,3313,0.582,3314,2.737,3315,1.997,3316,0.582,3317,0.985,3318,2.736,3319,0.479,3320,1.997,3321,1.102,3322,0.985,3323,1.388,3324,0.985,3325,0.985,3326,1.277,3327,0.582,3328,0.582,3329,0.52,3330,0.582,3331,0.479,3332,0.424,3333,0.479,3334,0.582,3335,0.52,3336,0.582,3337,1.997,3338,0.582,3339,6.369,3340,0.582,3341,0.582,3342,0.908,3343,0.582,3344,0.582,3345,0.582,3346,1.572,3347,0.582,3348,1.295,3349,1.213,3350,0.582,3351,0.582,3352,0.582,3353,0.582,3354,1.102,3355,0.582,3356,0.582,3357,1.102,3358,0.582,3359,1.997,3360,0.908,3361,0.582,3362,0.582,3363,0.582,3364,2.112,3365,0.582,3366,0.582,3367,0.582,3368,0.582,3369,0.582,3370,3.003,3371,0.582,3372,0.52,3373,0.582,3374,3.401,3375,1.102,3376,1.147,3377,1.102,3378,0.582,3379,0.582,3380,3.887,3381,0.582,3382,0.582,3383,0.582,3384,0.582,3385,3.891,3386,3.36,3387,0.582,3388,4.748,3389,0.582,3390,0.582,3391,0.582,3392,2.384,3393,0.582,3394,0.582,3395,1.645,3396,0.479,3397,0.582,3398,0.52,3399,0.582,3400,1.785,3401,0.582,3402,0.582,3403,1.572,3404,0.582,3405,1.785,3406,0.582,3407,0.582,3408,1.572,3409,0.985,3410,0.985,3411,1.102,3412,1.102,3413,1.785,3414,1.102,3415,0.52,3416,0.582,3417,1.102,3418,1.102,3419,1.572,3420,1.102,3421,1.785,3422,0.582,3423,0.985,3424,0.582,3425,1.102,3426,0.985,3427,0.582,3428,2.736,3429,2.737,3430,1.102,3431,0.582,3432,2.13,3433,0.582,3434,2.737,3435,3.061,3436,0.582,3437,0.582,3438,1.102,3439,0.582,3440,0.582,3441,0.582,3442,0.582,3443,0.52,3444,0.582,3445,0.582,3446,0.582,3447,0.582,3448,0.582,3449,0.582,3450,0.582,3451,0.582,3452,0.582,3453,1.102,3454,3.249,3455,0.582,3456,1.405,3457,0.908,3458,0.582,3459,0.582,3460,1.102,3461,1.102,3462,0.582,3463,1.645,3464,0.582,3465,0.582,3466,0.582,3467,0.582,3468,0.582,3469,0.582,3470,1.997,3471,3.635,3472,0.582,3473,0.582,3474,0.582,3475,1.295,3476,0.479,3477,0.582,3478,0.582,3479,0.582,3480,1.102,3481,0.985,3482,1.102,3483,0.985,3484,1.102,3485,0.582,3486,1.405,3487,0.582,3488,0.582,3489,0.582,3490,2.148,3491,0.582,3492,1.102,3493,0.582,3494,0.582,3495,0.985,3496,0.582,3497,0.582,3498,1.405,3499,1.785,3500,0.582,3501,0.582,3502,0.985,3503,0.582,3504,0.582,3505,0.582,3506,0.582,3507,0.582,3508,2.737,3509,1.102,3510,0.582,3511,0.582,3512,0.582,3513,0.582,3514,0.582,3515,0.582,3516,0.985,3517,0.582,3518,0.582,3519,0.582,3520,0.582,3521,0.582,3522,0.985,3523,0.582,3524,0.582,3525,2.384,3526,1.102,3527,0.582,3528,1.572,3529,1.147,3530,0.582,3531,0.582,3532,0.582,3533,1.102,3534,0.582,3535,0.582,3536,0.985,3537,0.582,3538,0.582,3539,0.851,3540,1.102,3541,2.737,3542,0.582,3543,0.582,3544,0.582,3545,0.479,3546,0.582,3547,1.102,3548,0.985,3549,0.582,3550,0.582,3551,0.582,3552,0.582,3553,2.384,3554,0.52,3555,0.582,3556,0.985,3557,0.582,3558,0.52,3559,1.997,3560,0.908,3561,0.582,3562,1.102,3563,1.572,3564,0.582,3565,0.582,3566,0.582,3567,0.582,3568,1.102,3569,0.582,3570,0.479,3571,0.582,3572,0.582,3573,0.582,3574,1.572,3575,0.582,3576,0.582,3577,1.102,3578,0.582,3579,0.582,3580,0.582,3581,0.52,3582,1.102,3583,0.582,3584,1.572,3585,0.449,3586,0.582,3587,0.582,3588,1.147,3589,1.102,3590,1.457,3591,0.582,3592,0.582,3593,0.582,3594,0.582,3595,1.572,3596,1.541,3597,0.582,3598,0.52,3599,0.582,3600,1.572,3601,0.582,3602,0.582,3603,0.582,3604,1.572,3605,0.582,3606,0.582,3607,1.102,3608,0.582,3609,1.405,3610,1.102,3611,0.582,3612,0.582,3613,0.582,3614,0.582,3615,0.582,3616,0.449,3617,0.851,3618,0.449,3619,0.582,3620,0.582,3621,0.52,3622,0.985,3623,0.582,3624,0.582,3625,0.582,3626,0.582,3627,1.572,3628,0.582,3629,0.582,3630,0.582,3631,1.997,3632,0.582,3633,1.102,3634,1.102,3635,0.582,3636,0.582,3637,0.582,3638,1.102,3639,0.582,3640,0.582,3641,0.582,3642,0.52,3643,0.582,3644,0.582,3645,0.582,3646,0.52,3647,0.582,3648,0.582,3649,0.582,3650,0.582,3651,0.582,3652,0.582,3653,0.582,3654,0.582,3655,0.52,3656,0.582,3657,0.582,3658,0.582,3659,0.582,3660,0.582,3661,1.102,3662,0.582,3663,0.582,3664,1.102,3665,0.582,3666,0.908,3667,1.388,3668,0.582,3669,1.102,3670,0.52,3671,0.582,3672,0.52,3673,0.582,3674,1.102,3675,0.582,3676,0.582,3677,0.479,3678,0.582,3679,2.384,3680,0.582,3681,0.582,3682,0.582,3683,0.582,3684,0.52,3685,0.582,3686,0.582,3687,0.582,3688,0.582,3689,0.582,3690,0.449,3691,0.582,3692,0.582,3693,0.582,3694,0.582,3695,0.582,3696,0.582,3697,0.734,3698,1.102,3699,0.582,3700,1.572,3701,0.582,3702,0.582,3703,0.582,3704,0.582,3705,0.582,3706,0.582,3707,0.582,3708,0.582,3709,0.582,3710,1.102,3711,0.479,3712,1.102,3713,0.52,3714,1.295,3715,0.582,3716,0.582,3717,0.479,3718,0.582,3719,8.34,3720,0.582,3721,0.582,3722,0.479,3723,0.582,3724,0.582,3725,0.582,3726,0.582,3727,0.582,3728,2.737,3729,0.582,3730,1.147,3731,0.582,3732,0.582,3733,0.582,3734,0.582,3735,0.582,3736,1.997,3737,1.785,3738,1.457,3739,1.405,3740,2.384,3741,1.102,3742,1.102,3743,3.003,3744,1.541,3745,0.985,3746,1.102,3747,1.102,3748,0.908,3749,1.102,3750,0.582,3751,0.582,3752,2.736,3753,0.479,3754,0.404,3755,0.908,3756,0.582,3757,0.449,3758,0.404,3759,0.449,3760,0.582,3761,0.582,3762,0.52,3763,0.582,3764,0.582,3765,0.582,3766,0.582,3767,0.582,3768,1.102,3769,0.582,3770,0.582,3771,0.582,3772,0.582,3773,0.52,3774,0.582,3775,0.582,3776,0.985,3777,0.479,3778,0.582,3779,1.572,3780,0.582,3781,0.52,3782,1.102,3783,0.582,3784,0.582,3785,0.52,3786,0.582,3787,1.102,3788,0.582,3789,0.582,3790,0.582,3791,0.582,3792,0.582,3793,0.985,3794,0.985,3795,1.997,3796,1.645,3797,0.582,3798,0.582,3799,0.582,3800,1.295,3801,0.582,3802,0.582,3803,0.582,3804,1.102,3805,1.572,3806,0.582,3807,0.582,3808,0.582,3809,0.582,3810,1.102,3811,0.582,3812,0.52,3813,1.102,3814,0.582,3815,0.52,3816,0.582,3817,0.582,3818,0.582,3819,1.102,3820,1.102,3821,0.582,3822,0.582,3823,0.582,3824,0.582,3825,0.582,3826,1.572,3827,1.572,3828,0.404,3829,1.964,3830,0.582,3831,1.102,3832,0.582,3833,0.582,3834,1.102,3835,1.572,3836,0.985,3837,0.582,3838,0.582,3839,0.52,3840,0.582,3841,0.582,3842,0.582,3843,0.582,3844,0.582,3845,0.582,3846,0.582,3847,0.582,3848,0.582,3849,0.582,3850,0.582,3851,0.582,3852,1.102,3853,0.52,3854,0.479,3855,0.582,3856,0.479,3857,0.582,3858,0.479,3859,0.582,3860,1.295,3861,0.582,3862,0.582,3863,0.582,3864,1.102,3865,0.582,3866,0.582,3867,0.582,3868,0.908,3869,0.582,3870,0.582,3871,0.582,3872,0.582,3873,0.582,3874,0.52,3875,0.582,3876,1.102,3877,0.582,3878,0.582,3879,1.102,3880,1.102,3881,1.572,3882,1.785,3883,1.102,3884,1.295,3885,0.908,3886,0.404,3887,0.582,3888,0.52,3889,0.582,3890,0.805,3891,0.582,3892,0.582,3893,0.582,3894,0.582,3895,0.582,3896,0.52,3897,0.582,3898,1.102,3899,1.572,3900,0.985,3901,0.582,3902,0.582,3903,0.582,3904,1.102,3905,0.985,3906,1.102,3907,0.582,3908,0.582,3909,0.582,3910,0.582,3911,0.582,3912,0.582,3913,0.582,3914,0.582,3915,0.582,3916,0.52,3917,0.52,3918,0.582,3919,0.582,3920,1.572,3921,0.582,3922,1.102,3923,0.582,3924,0.985,3925,0.582,3926,1.102,3927,0.582,3928,1.102,3929,0.582,3930,0.908,3931,0.582,3932,0.52,3933,0.582,3934,0.582,3935,0.52,3936,1.572,3937,1.997,3938,1.102,3939,0.985,3940,1.102,3941,0.908,3942,1.102,3943,0.582,3944,1.102,3945,0.52,3946,0.582,3947,1.102,3948,0.985,3949,0.582,3950,0.52,3951,0.582,3952,0.52,3953,0.582,3954,0.582,3955,1.102,3956,0.582,3957,0.582,3958,0.582,3959,0.582,3960,0.52,3961,0.52,3962,0.582,3963,0.582,3964,0.582,3965,0.582,3966,0.582,3967,0.582,3968,0.582,3969,0.582,3970,0.582,3971,0.582,3972,0.582,3973,0.582,3974,0.582,3975,0.582,3976,0.908,3977,0.582,3978,0.582,3979,0.582,3980,0.582,3981,0.582,3982,0.582,3983,0.582,3984,0.582,3985,0.582,3986,0.582,3987,0.479,3988,0.582,3989,0.479,3990,0.582,3991,0.582,3992,0.52,3993,0.582,3994,0.582,3995,0.582,3996,0.582,3997,0.582,3998,0.582,3999,0.582,4000,0.582,4001,0.582,4002,0.582,4003,0.479,4004,0.582,4005,0.582,4006,0.582,4007,0.582,4008,1.572,4009,0.582,4010,1.102,4011,1.572,4012,1.102,4013,1.102,4014,1.102,4015,1.102,4016,0.582,4017,0.582,4018,0.582,4019,0.582,4020,0.582,4021,0.582,4022,0.52,4023,0.582,4024,1.102,4025,0.582,4026,0.582,4027,0.449,4028,0.582,4029,0.479,4030,0.582,4031,1.102,4032,0.582,4033,0.449,4034,0.582,4035,0.582,4036,0.582,4037,0.582,4038,0.479,4039,0.582,4040,1.572,4041,1.572,4042,0.582,4043,0.985,4044,0.582,4045,0.582,4046,0.582,4047,0.582,4048,0.582,4049,0.582,4050,0.52,4051,0.582,4052,0.582,4053,1.102,4054,0.52,4055,0.52,4056,0.52,4057,0.582,4058,0.582,4059,0.582,4060,0.582,4061,0.582,4062,0.582,4063,0.582,4064,0.582,4065,0.582,4066,1.102,4067,1.102,4068,0.582,4069,0.52,4070,0.582,4071,0.582,4072,0.582,4073,1.102,4074,0.582,4075,0.582,4076,1.102,4077,0.582,4078,1.102,4079,0.582,4080,0.582,4081,1.102,4082,1.997,4083,0.582,4084,0.582,4085,0.582,4086,0.582,4087,0.582,4088,0.851,4089,0.52,4090,1.102,4091,0.582,4092,0.582,4093,0.582,4094,0.582,4095,0.582,4096,0.582,4097,0.582,4098,0.582,4099,0.582,4100,0.582,4101,0.582,4102,0.582,4103,0.582,4104,1.572,4105,0.582,4106,0.582,4107,0.582,4108,0.582,4109,0.582,4110,0.582,4111,0.582,4112,1.102,4113,1.102,4114,0.582,4115,0.582,4116,0.582,4117,1.997,4118,4.349,4119,1.102,4120,0.908,4121,0.985,4122,1.102,4123,1.102,4124,0.582,4125,1.102,4126,0.985,4127,1.102,4128,1.102,4129,1.102,4130,0.908,4131,1.102,4132,1.997,4133,1.102,4134,1.997,4135,1.102,4136,1.102,4137,0.985,4138,0.908,4139,1.572,4140,1.102,4141,0.582,4142,0.479,4143,0.851,4144,1.102,4145,0.582,4146,2.384,4147,1.102,4148,0.582,4149,0.479,4150,0.582,4151,1.997,4152,0.582,4153,0.582,4154,0.582,4155,0.582,4156,0.52,4157,0.582,4158,0.582,4159,0.582,4160,1.102,4161,1.102,4162,1.102,4163,0.582,4164,0.582,4165,0.582,4166,0.582,4167,0.582,4168,1.102,4169,1.102,4170,0.582,4171,0.582,4172,0.449,4173,0.582,4174,0.582,4175,0.582,4176,1.102,4177,0.582,4178,1.572,4179,1.405,4180,0.582,4181,0.582,4182,0.479,4183,1.102,4184,1.102,4185,0.582,4186,0.449,4187,0.582,4188,0.582,4189,1.572,4190,1.102,4191,1.102,4192,0.582,4193,1.102,4194,0.582,4195,0.582,4196,0.582,4197,1.997,4198,0.582,4199,0.582,4200,0.582,4201,0.582,4202,0.582,4203,0.582,4204,0.582,4205,1.102,4206,0.582,4207,0.582,4208,0.582,4209,0.52,4210,0.582,4211,1.102,4212,0.582,4213,0.582,4214,0.479,4215,0.582,4216,1.102,4217,0.582,4218,0.52,4219,0.582,4220,1.102,4221,1.102,4222,0.582,4223,0.582,4224,0.52,4225,1.102,4226,0.582,4227,0.582,4228,1.102,4229,1.102,4230,0.582,4231,0.582,4232,0.582,4233,1.102,4234,1.102,4235,0.582,4236,0.582,4237,1.102,4238,0.582,4239,0.582,4240,0.582,4241,1.102,4242,0.582,4243,0.582,4244,0.479,4245,0.582,4246,1.997,4247,0.479,4248,0.582,4249,1.102,4250,0.449,4251,1.102,4252,0.582,4253,2.384,4254,1.102,4255,0.449,4256,0.582,4257,0.582,4258,0.479,4259,0.582,4260,0.582,4261,0.582,4262,0.582,4263,0.582,4264,0.582,4265,0.582,4266,0.582,4267,0.582,4268,0.582,4269,0.582,4270,0.582,4271,0.985,4272,0.582,4273,0.582,4274,0.582,4275,0.582,4276,0.479,4277,0.582,4278,0.582,4279,0.52,4280,0.582,4281,0.52,4282,0.582,4283,0.582,4284,0.582,4285,0.479,4286,0.449,4287,0.582,4288,0.582,4289,0.52,4290,1.572,4291,0.582,4292,0.52,4293,0.52,4294,0.582,4295,0.52,4296,0.582,4297,0.582,4298,0.582,4299,0.582,4300,0.582,4301,1.997,4302,0.582,4303,0.582,4304,0.52,4305,0.582,4306,1.405,4307,0.582,4308,0.582,4309,0.582,4310,0.582,4311,0.52,4312,0.582,4313,0.582,4314,1.102,4315,0.582,4316,0.582,4317,0.582,4318,0.449,4319,1.102,4320,0.582,4321,0.582,4322,0.582,4323,0.582,4324,1.572,4325,1.102,4326,1.102,4327,0.582,4328,0.52,4329,1.102,4330,0.52,4331,1.572,4332,0.582,4333,0.582,4334,0.582,4335,0.582,4336,0.582,4337,1.102,4338,1.102,4339,1.102,4340,1.102,4341,1.405,4342,1.102,4343,0.582,4344,1.102,4345,0.582,4346,1.102,4347,0.52,4348,1.572,4349,0.582,4350,0.582,4351,0.582,4352,0.582,4353,2.384,4354,0.582,4355,0.52,4356,0.582,4357,0.582,4358,0.582,4359,0.52,4360,0.582,4361,0.908,4362,0.582,4363,0.52,4364,0.449,4365,0.582,4366,0.582,4367,0.582,4368,0.582,4369,1.102,4370,0.582,4371,0.582,4372,0.582,4373,0.582,4374,0.52,4375,0.582,4376,0.582,4377,0.582,4378,0.582,4379,0.479,4380,0.582,4381,0.582,4382,0.582,4383,1.102,4384,0.52]],["title/coverage.html",[3697,4.484]],["body/coverage.html",[0,0.251,1,1.299,5,0.044,6,1.745,7,1.745,9,1.248,17,0.084,23,1.357,27,0.006,43,1.163,53,1.061,54,2.244,59,0.002,60,0.002,61,1.507,62,1.745,63,1.745,71,1.507,84,0.373,87,1.01,88,1.203,90,4.147,91,1.203,95,1.203,99,1.203,102,1.203,105,1.203,106,1.061,119,1.425,120,1.357,133,2.292,144,1.203,145,1.299,152,1.754,154,1.745,169,0.914,206,1.248,207,2.716,222,0.757,247,0.558,254,1.357,255,1.745,299,1.299,300,1.745,323,1.745,334,1.425,359,1.203,360,1.609,361,1.357,365,1.745,408,0.73,409,3.301,411,0.743,417,1.507,484,1.163,485,2.716,487,1.507,498,1.609,499,1.745,508,1.163,509,3.904,510,0.717,511,0.891,522,1.248,548,1.299,550,0.933,588,1.203,589,1.203,591,1.299,592,2.716,603,0.835,605,1.507,627,1.357,628,2.716,629,3.301,650,3.123,664,2.916,665,1.507,667,1.745,675,1.425,681,1.248,683,1.299,685,1.357,687,1.357,688,1.507,696,1.163,697,1.004,701,1.092,702,4.147,731,1.299,733,1.299,737,1.299,739,1.163,752,1.299,753,1.163,787,1.299,788,3.301,802,1.299,811,1.203,815,1.425,816,2.716,828,1.745,853,1.425,854,1.745,908,1.357,909,2.716,919,1.425,934,4.798,937,1.745,951,1.425,952,2.716,953,2.716,957,1.203,961,0.933,995,1.507,996,1.745,997,1.745,1025,1.248,1026,1.609,1029,1.745,1078,2.716,1079,2.716,1090,1.299,1136,1.507,1232,1.507,1233,3.525,1234,3.525,1245,1.609,1252,1.609,1258,1.609,1259,1.745,1260,1.745,1264,1.126,1286,1.425,1290,1.745,1294,1.609,1302,2.947,1303,2.716,1310,1.248,1344,1.357,1345,1.745,1346,1.745,1361,1.507,1362,2.544,1363,2.406,1398,2.716,1399,1.507,1403,2.544,1404,2.544,1405,2.716,1441,1.507,1487,1.507,1488,3.525,1494,1.609,1496,5.824,1497,5.509,1500,1.609,1501,1.299,1514,1.609,1516,1.609,1521,1.609,1524,1.609,1534,3.997,1561,1.507,1562,1.609,1574,1.609,1585,1.507,1586,1.745,1587,1.745,1618,1.357,1619,2.406,1631,1.357,1633,3.123,1638,0.933,1639,1.357,1642,1.299,1649,1.745,1650,1.745,1651,1.299,1652,2.406,1653,2.406,1657,1.425,1662,1.507,1663,2.716,1666,1.092,1669,1.745,1687,1.507,1688,2.716,1697,1.507,1698,2.716,1705,0.933,1711,1.203,1737,1.507,1738,2.544,1767,1.507,1768,2.716,1769,2.716,1774,1.357,1778,1.507,1779,2.716,1798,1.507,1800,1.507,1801,1.745,1802,1.745,1805,3.525,1833,1.507,1834,1.745,1835,1.745,1837,1.745,1839,1.357,1860,1.203,1870,2.716,1871,2.716,1903,1.357,1904,1.745,1911,1.507,1916,1.745,1917,3.301,1926,1.745,1952,2.406,1955,1.507,1961,1.357,1968,1.507,1977,2.716,1981,1.507,1999,1.425,2018,1.507,2019,2.292,2020,1.609,2021,1.609,2031,1.609,2063,2.716,2064,1.507,2092,1.507,2093,1.745,2104,1.357,2105,1.299,2114,1.425,2118,1.299,2119,1.248,2121,1.357,2122,1.425,2145,2.716,2146,2.716,2159,1.609,2162,1.745,2174,1.507,2176,1.507,2177,1.507,2222,1.299,2224,1.507,2233,1.203,2239,1.745,2244,1.357,2265,1.507,2285,3.301,2289,1.425,2294,1.425,2299,1.609,2303,1.425,2304,1.163,2316,2.716,2323,1.507,2335,1.745,2336,1.609,2417,1.745,2418,1.425,2432,1.745,2444,1.745,2445,1.609,2452,1.609,2461,1.507,2462,1.745,2483,1.357,2484,1.745,2500,1.357,2501,1.745,2514,1.745,2518,1.745,2519,3.301,2526,1.745,2527,3.301,2531,1.609,2546,1.507,2547,1.745,2566,1.507,2567,1.745,2580,2.292,2607,1.609,2608,1.745,2622,1.745,2627,1.745,2639,1.357,2640,1.609,2661,1.507,2662,1.745,2665,1.357,2667,1.425,2668,1.507,2678,1.745,2703,1.357,2708,1.745,2719,1.507,2744,1.745,2758,1.609,2759,1.745,2779,1.609,2850,1.745,2853,1.745,2854,1.745,2865,1.609,2866,2.716,2871,3.301,2876,1.745,2886,1.507,2906,1.745,2920,1.507,2921,1.745,2925,1.299,2931,1.745,2939,1.745,2940,1.745,2946,1.299,2949,1.745,2953,1.745,2969,1.745,2973,1.745,2974,1.745,3031,3.824,3083,3.824,3274,1.745,3284,1.507,3364,1.507,3374,1.609,3536,1.745,3556,1.745,3667,1.357,3697,1.299,4244,7.953,4385,1.609,4386,8.291,4387,9.635,4388,7.338,4389,7.338,4390,1.745,4391,6.093,4392,1.953,4393,7.897,4394,6.092,4395,6.816,4396,5.617,4397,1.745,4398,1.745,4399,3.824,4400,3.824,4401,1.745,4402,1.745,4403,7.097,4404,1.745,4405,1.745,4406,9.261,4407,3.525,4408,1.609,4409,1.953,4410,1.953,4411,2.947,4412,1.953,4413,5.027,4414,1.745,4415,2.947,4416,1.745,4417,7.338,4418,3.297,4419,1.953,4420,1.609,4421,1.953,4422,1.953,4423,4.279,4424,4.279,4425,1.953,4426,1.953,4427,1.953,4428,1.953,4429,1.953,4430,7.338,4431,1.745,4432,1.745,4433,4.279,4434,4.279,4435,1.953,4436,2.947,4437,2.947,4438,1.745,4439,1.745,4440,1.745,4441,1.745,4442,1.745,4443,1.745,4444,1.953,4445,5.027,4446,4.279,4447,1.953,4448,1.745,4449,1.745,4450,1.745,4451,1.745,4452,1.745,4453,1.745,4454,1.953,4455,1.953,4456,1.953,4457,1.745,4458,1.745,4459,3.525,4460,1.953]],["title/dependencies.html",[114,2.543,3987,3.404]],["body/dependencies.html",[0,0.15,4,0.08,5,0.079,17,0.176,27,0.006,46,0.712,52,1.949,59,0.003,60,0.003,114,1.746,128,3.149,130,3.648,150,3.651,155,1.608,174,2.034,181,2.046,209,0.944,217,1.802,218,1.306,219,1.862,318,3.149,329,4.419,363,2.217,374,1.862,377,2.046,389,2.715,391,2.715,454,2.837,522,3.766,538,2.609,576,2.813,657,1.862,661,3.984,680,2.979,714,2.43,1056,2.609,1131,3.149,1191,2.715,1244,2.609,1274,3.362,1355,3.112,1373,4.838,1374,3.362,1439,2.515,1462,3.648,1780,2.837,1815,2.715,1846,6.177,1847,2.715,1883,3.648,1959,2.979,1960,2.715,1963,2.979,1996,3.149,2058,2.837,2352,3.648,2553,3.149,2575,2.715,2576,3.766,2577,3.362,2591,6.249,3065,3.648,3075,3.648,3134,3.648,3149,3.648,3457,4.853,3483,3.648,3621,3.648,3622,3.648,3666,4.853,3670,3.648,3773,3.648,3793,3.648,3794,3.648,3839,3.648,3874,3.648,3886,2.837,3890,4.299,3900,3.648,4089,3.648,4328,3.648,4363,3.648,4461,5.89,4462,8.62,4463,4.081,4464,4.081,4465,4.081,4466,4.081,4467,4.081,4468,4.081,4469,5.89,4470,4.081,4471,7.568,4472,4.081,4473,4.081,4474,4.081,4475,4.081,4476,4.081,4477,4.081,4478,4.081,4479,4.081,4480,4.081,4481,4.081,4482,3.362,4483,4.081,4484,4.081,4485,5.89,4486,4.081,4487,4.081,4488,4.081,4489,4.081,4490,4.081,4491,4.081,4492,4.081,4493,5.89,4494,4.081,4495,5.89,4496,4.081,4497,4.081,4498,4.081,4499,8.025,4500,4.081,4501,4.081,4502,4.081,4503,4.081,4504,3.648,4505,4.081,4506,4.081,4507,4.081,4508,4.081,4509,5.89,4510,4.081,4511,6.912,4512,4.081,4513,4.081,4514,4.081,4515,5.89,4516,4.081,4517,5.89,4518,5.89,4519,4.081,4520,4.081,4521,4.081,4522,4.081,4523,2.979,4524,4.081,4525,4.081,4526,4.081,4527,4.081,4528,4.081,4529,5.89,4530,4.081,4531,4.081,4532,4.081,4533,4.081,4534,4.081,4535,4.081,4536,4.081,4537,4.081,4538,4.081,4539,4.081,4540,4.081,4541,4.081,4542,4.081,4543,4.081,4544,4.081,4545,4.081,4546,4.081,4547,5.89,4548,5.265,4549,4.081,4550,4.081,4551,4.081,4552,4.081,4553,3.648,4554,4.081,4555,4.081,4556,5.89,4557,4.081,4558,4.081,4559,4.081,4560,4.081,4561,4.081,4562,4.081,4563,4.081,4564,4.081,4565,4.081,4566,4.081,4567,4.081,4568,4.081,4569,5.89,4570,4.081,4571,4.081,4572,4.081,4573,4.081,4574,4.081,4575,5.89,4576,3.648,4577,3.362,4578,4.081,4579,4.081,4580,4.081,4581,4.081,4582,4.081,4583,4.081,4584,4.081,4585,4.081,4586,3.648,4587,4.081,4588,4.081,4589,4.081,4590,4.081,4591,4.081,4592,4.081,4593,4.081,4594,4.081,4595,3.362,4596,4.081,4597,4.081,4598,4.081,4599,4.081,4600,4.081,4601,4.081,4602,4.081,4603,4.081,4604,4.081,4605,4.081,4606,4.081]],["title/miscellaneous/enumerations.html",[4607,2.642,4608,5.312]],["body/miscellaneous/enumerations.html",[10,0.368,27,0.006,59,0.005,60,0.005,164,4.269,248,3.015,408,2.661,411,2.711,466,3.402,550,3.402,1218,6.214,1439,4.389,1452,5.198,1619,5.198,1625,4.951,1626,4.951,1652,5.198,1653,6.214,1660,6.214,1661,7.014,2640,5.868,2645,7.014,2779,5.868,2795,7.609,2798,6.366,2799,6.366,2800,6.366,2801,5.868,4607,4.554,4608,6.366,4609,6.366,4610,6.366,4611,7.122,4612,7.122]],["title/miscellaneous/functions.html",[4607,2.642,4613,4.338]],["body/miscellaneous/functions.html",[9,4.589,10,0.281,17,0.347,26,1.205,27,0.006,28,0.708,29,0.764,36,1.041,41,1.47,43,4.274,52,2.594,54,3.589,59,0.004,60,0.004,66,3.037,172,1.354,181,4.032,226,3.473,234,1.993,238,3.473,248,2.187,336,3.037,370,5.918,522,5.958,556,2.189,559,3.347,630,2.425,756,4.783,757,4.931,934,2.535,975,2.232,980,2.724,1146,3.131,1251,3.512,1344,4.99,1353,4.138,1378,3.614,1406,6.416,1422,4.191,1427,4.475,1443,4.855,1496,4.191,1497,6.243,1535,4.475,1538,4.475,1542,4.475,1561,5.539,1566,5.868,1568,5.239,1598,4.99,1794,3.347,1933,4.475,1939,4.475,2148,3.776,2159,6.624,2550,5.589,2758,6.624,2871,7.05,2993,4.855,3006,4.855,3481,4.855,3581,4.855,3737,6.416,3941,4.475,4138,4.475,4289,4.855,4397,6.416,4398,6.416,4404,4.855,4405,4.855,4439,4.855,4440,6.416,4441,4.855,4442,6.416,4523,3.964,4607,3.473,4613,3.964,4614,5.432,4615,5.432,4616,7.186,4617,5.432,4618,5.432,4619,7.047,4620,4.855,4621,7.178,4622,4.855,4623,5.432,4624,4.855,4625,4.475,4626,3.964,4627,7.178,4628,7.178,4629,4.855,4630,5.432,4631,4.855,4632,7.186,4633,5.432,4634,5.432,4635,4.475,4636,4.855,4637,7.178,4638,5.432]],["title/index.html",[10,0.214,2981,3.188,2982,2.872]],["body/index.html",[13,3.229,14,2.639,15,2.555,16,1.626,27,0.005,28,0.55,31,2.315,52,2.984,54,2.789,57,2.984,59,0.004,60,0.004,64,1.395,67,2.833,84,0.846,114,1.896,150,4.376,184,2.833,209,1.025,220,3.419,226,5.023,227,3.393,230,4.82,231,2.731,233,2.407,234,1.626,238,2.833,247,1.267,261,2.555,330,3.994,331,4.677,374,3.779,395,2.639,397,2.949,460,3.081,510,2.292,533,3.081,537,2.555,582,3.601,632,2.478,637,2.731,668,4.458,933,3.081,976,4.668,990,2.731,1094,3.081,1103,3.719,1109,5.461,1125,5.556,1133,2.731,1184,3.93,1189,3.081,1201,4.156,1212,3.493,1237,3.081,1238,2.341,1251,3.056,1270,2.407,1301,5.029,1353,2.555,1355,3.3,1364,2.341,1373,5.023,1375,3.419,1385,3.994,1439,2.731,1553,3.994,1558,3.419,1604,3.081,1654,2.639,1748,2.407,1799,2.949,1811,3.651,2015,2.833,2044,3.651,2148,3.081,2279,4.559,2280,2.731,2353,2.949,2426,3.961,2574,3.234,2575,2.949,2576,3.994,2774,3.419,2985,3.081,2986,3.651,3015,3.081,3026,4.814,3028,5.583,3042,3.081,3054,2.949,3133,4.82,3146,3.961,3154,3.081,3162,7.893,3173,3.651,3183,3.081,3210,3.419,3224,5.583,3226,4.82,3231,3.081,3263,3.419,3331,3.651,3333,3.651,3490,4.625,3498,3.961,3548,6.466,3590,4.559,3667,3.081,3697,2.949,3711,5.146,3730,4.559,3738,3.234,3757,3.419,3758,5.461,3828,3.081,3856,5.96,3858,5.146,3888,3.961,4033,3.419,4056,3.961,4142,3.651,4143,4.82,4182,3.651,4285,3.651,4318,3.419,4359,3.961,4361,3.651,4523,3.234,4639,3.419,4640,7.08,4641,4.559,4642,3.419,4643,3.651,4644,3.419,4645,5.146,4646,4.156,4647,2.949,4648,3.961,4649,4.432,4650,5.583,4651,5.583,4652,4.432,4653,4.432,4654,4.432,4655,3.419,4656,3.961,4657,6.247,4658,3.961,4659,3.961,4660,3.234,4661,7.235,4662,5.029,4663,3.961,4664,4.432,4665,3.961,4666,5.146,4667,4.432,4668,3.651,4669,4.432,4670,4.432,4671,4.432,4672,4.432,4673,3.961,4674,3.419,4675,4.432,4676,3.961,4677,6.247,4678,6.247,4679,8.282,4680,7.856,4681,4.432,4682,4.432,4683,6.247,4684,3.961,4685,4.432,4686,3.651,4687,6.247,4688,4.432,4689,3.961,4690,6.247,4691,3.234,4692,3.961,4693,4.432,4694,4.432,4695,3.419,4696,4.432,4697,3.961,4698,4.432,4699,3.651,4700,4.82,4701,4.432,4702,4.432,4703,3.961,4704,4.432,4705,2.949,4706,3.651]],["title/license.html",[2981,3.188,2982,2.872,4707,3.693]],["body/license.html",[0,0.025,4,0.174,5,0.024,13,3.747,14,0.578,18,0.172,24,0.097,27,0.001,31,0.569,44,0.035,57,1.454,59,0.001,60,0.001,67,1.137,83,0.143,84,0.902,87,0.465,89,0.715,100,0.62,106,0.527,107,2.552,123,0.415,166,2.229,168,1.813,169,1.767,171,1.654,172,0.443,178,1.059,183,2.199,184,3.84,216,0.356,221,3.381,234,2.639,239,6.132,243,0.316,261,1.025,281,0.527,307,0.675,326,0.578,328,1.059,331,0.475,346,0.543,366,0.316,377,0.892,378,1.566,391,0.646,396,0.749,411,0.369,449,0.578,452,1.898,457,0.8,512,0.475,528,0.62,531,2.666,532,0.646,559,2.188,578,0.453,579,0.453,603,0.415,632,1.376,637,1.876,639,0.749,642,2.116,652,0.578,680,0.708,743,0.62,751,2.188,766,0.578,774,0.849,786,0.646,806,0.749,807,0.708,838,1.123,870,1.298,933,1.71,961,0.464,978,2.591,979,1.755,982,0.994,991,1.608,1097,1.137,1103,2.377,1129,0.8,1133,2.188,1146,2.047,1161,3.21,1164,1.465,1165,3.706,1172,2.232,1194,0.8,1201,1.637,1212,1.376,1213,0.646,1239,5.293,1240,2.726,1251,2.724,1255,2.109,1270,0.527,1298,1.876,1299,3.032,1301,3.287,1352,1.637,1364,0.939,1373,1.137,1392,0.646,1428,0.646,1448,3.648,1523,1.183,1592,0.578,1595,0.675,1605,2.222,1607,1.298,1637,3.315,1654,1.059,1659,1.183,1691,2.914,1775,0.646,1812,0.8,1815,1.637,1863,0.8,1866,3.063,1880,4.231,1909,1.702,1930,0.675,1934,0.646,1936,0.708,2008,0.708,2010,0.708,2015,0.62,2038,0.675,2039,3.198,2041,0.8,2042,2.775,2045,1.898,2058,2.116,2074,3.887,2138,0.8,2148,4.03,2233,0.598,2279,1.298,2280,2.46,2304,4.281,2353,0.646,2361,0.708,2401,0.8,2418,1.796,2534,0.867,2550,1.236,2555,0.867,2772,1.298,2773,3.451,2804,0.749,2847,2.027,2862,1.589,2879,2.116,2964,0.867,2987,0.867,2991,1.71,2992,2.222,2994,1.589,3004,2.199,3005,1.465,3015,3.287,3026,2.916,3038,2.116,3100,0.867,3112,0.8,3117,0.708,3121,3.173,3133,0.749,3160,0.867,3183,2.116,3185,0.8,3226,6.664,3228,6.795,3230,5.398,3231,1.71,3244,0.867,3259,1.465,3268,1.465,3280,0.8,3284,0.749,3292,1.465,3294,1.589,3304,2.721,3309,1.465,3317,0.867,3323,0.675,3329,2.199,3331,0.8,3348,2.508,3360,0.8,3364,1.372,3370,1.589,3374,1.465,3376,0.708,3396,0.8,3409,1.589,3421,0.867,3443,0.867,3457,1.465,3486,0.867,3490,2.552,3499,0.867,3502,0.867,3516,0.867,3529,2.222,3539,2.739,3558,1.589,3560,0.8,3570,1.465,3585,3.381,3588,0.708,3596,0.749,3598,0.867,3616,0.749,3617,2.739,3672,0.867,3690,0.749,3697,1.183,3713,1.589,3717,1.465,3722,0.8,3738,0.708,3744,3.381,3755,0.8,3757,6.187,3758,3.696,3759,1.898,3762,6.774,3777,1.465,3812,0.867,3854,0.8,3868,0.8,3882,0.867,3884,1.465,3885,1.465,3916,0.867,3939,0.867,3941,0.8,3976,0.8,4003,0.8,4027,1.372,4120,1.465,4143,2.349,4149,1.465,4182,1.465,4186,1.898,4218,1.589,4250,1.898,4255,0.749,4258,3.289,4276,4.587,4279,0.867,4286,0.749,4292,5.976,4293,1.589,4295,1.589,4304,0.867,4341,0.867,4347,1.589,4364,4.296,4374,2.199,4411,0.867,4523,0.708,4622,2.721,4624,0.867,4626,2.222,4629,0.867,4631,0.867,4632,0.867,4640,0.8,4643,0.8,4647,3.537,4660,5.077,4662,0.675,4663,2.199,4668,3.61,4689,0.867,4691,1.796,4700,1.898,4705,0.646,4707,8.635,4708,6.686,4709,6.536,4710,0.971,4711,2.46,4712,7.888,4713,5.384,4714,5.779,4715,3.55,4716,0.971,4717,0.971,4718,1.778,4719,3.55,4720,2.46,4721,2.46,4722,5.797,4723,0.971,4724,0.971,4725,1.589,4726,3.55,4727,3.61,4728,1.778,4729,1.778,4730,5.539,4731,4.728,4732,0.971,4733,0.971,4734,3.992,4735,1.589,4736,0.867,4737,0.867,4738,4.977,4739,8.6,4740,2.46,4741,2.199,4742,0.971,4743,0.971,4744,3.044,4745,5.038,4746,0.971,4747,5.038,4748,0.971,4749,3.55,4750,0.749,4751,0.8,4752,5.697,4753,0.867,4754,0.867,4755,5.316,4756,5.568,4757,3.55,4758,5.797,4759,0.971,4760,1.778,4761,0.971,4762,0.971,4763,2.199,4764,0.971,4765,0.971,4766,0.971,4767,0.971,4768,0.971,4769,0.971,4770,3.044,4771,2.46,4772,0.971,4773,0.971,4774,5.73,4775,1.898,4776,0.971,4777,2.027,4778,2.46,4779,0.971,4780,2.199,4781,0.749,4782,1.778,4783,1.778,4784,2.46,4785,0.971,4786,4.948,4787,3.55,4788,3.55,4789,3.992,4790,2.46,4791,1.778,4792,0.971,4793,0.971,4794,0.971,4795,2.46,4796,0.971,4797,0.971,4798,1.778,4799,0.971,4800,1.778,4801,0.971,4802,0.971,4803,3.044,4804,0.867,4805,1.778,4806,8.562,4807,2.46,4808,5.038,4809,2.721,4810,1.372,4811,0.971,4812,1.778,4813,2.46,4814,5.038,4815,5.316,4816,0.971,4817,3.044,4818,1.778,4819,3.044,4820,2.721,4821,0.971,4822,2.46,4823,7.663,4824,1.589,4825,0.971,4826,4.728,4827,0.971,4828,2.199,4829,2.775,4830,0.971,4831,6.373,4832,2.199,4833,1.778,4834,5.568,4835,3.992,4836,0.971,4837,1.778,4838,4.382,4839,0.971,4840,6.006,4841,1.778,4842,0.971,4843,0.8,4844,0.971,4845,2.46,4846,0.971,4847,0.971,4848,0.971,4849,0.8,4850,2.46,4851,2.721,4852,0.971,4853,0.971,4854,0.971,4855,1.589,4856,5.316,4857,0.867,4858,0.8,4859,2.199,4860,2.46,4861,2.46,4862,0.971,4863,3.173,4864,0.867,4865,1.236,4866,2.199,4867,0.971,4868,0.971,4869,0.971,4870,1.589,4871,0.971,4872,6.919,4873,1.589,4874,2.199,4875,0.708,4876,1.778,4877,1.778,4878,2.925,4879,0.971,4880,0.971,4881,0.971,4882,1.778,4883,0.971,4884,1.465,4885,0.971,4886,2.925,4887,0.971,4888,0.8,4889,4.382,4890,2.508,4891,0.971,4892,3.173,4893,0.971,4894,1.778,4895,0.971,4896,0.971,4897,0.971,4898,0.971,4899,0.971,4900,2.46,4901,0.971,4902,1.778,4903,1.778,4904,1.778,4905,0.971,4906,6.006,4907,1.589,4908,0.971,4909,0.971,4910,0.867,4911,0.971,4912,0.971,4913,0.971,4914,2.46,4915,0.867,4916,0.971,4917,5.697,4918,0.749,4919,0.971,4920,0.971,4921,3.55,4922,3.568,4923,0.971,4924,0.971,4925,2.46,4926,0.971,4927,0.971,4928,3.044,4929,0.971,4930,0.971,4931,0.971,4932,0.971,4933,0.971,4934,0.971,4935,1.778,4936,0.971,4937,0.971,4938,0.971,4939,1.778,4940,0.971,4941,0.971,4942,0.971,4943,0.971,4944,0.971,4945,1.778,4946,1.298,4947,4.503,4948,0.971,4949,3.992,4950,0.971,4951,0.971,4952,2.46,4953,3.044,4954,3.044,4955,3.044,4956,0.971,4957,3.173,4958,3.173,4959,0.971,4960,2.46,4961,0.971,4962,1.778,4963,0.971,4964,1.589,4965,3.55,4966,1.778,4967,3.044,4968,3.044,4969,0.971,4970,2.46,4971,3.173,4972,0.971,4973,0.971,4974,3.61,4975,1.778,4976,0.708,4977,0.971,4978,0.867,4979,2.46,4980,0.971,4981,0.971,4982,2.199,4983,0.971,4984,0.971,4985,0.971,4986,0.971,4987,0.971,4988,2.46,4989,0.971,4990,0.867,4991,2.199,4992,1.778,4993,3.992,4994,6.427,4995,2.46,4996,1.778,4997,1.778,4998,1.778,4999,3.044,5000,0.867,5001,0.971,5002,0.971,5003,0.971,5004,3.568,5005,1.778,5006,0.971,5007,0.971,5008,0.971,5009,0.971,5010,1.778,5011,0.971,5012,1.778,5013,0.971,5014,0.971,5015,3.451,5016,0.971,5017,4.977,5018,0.971,5019,0.971,5020,0.971,5021,1.778,5022,0.971,5023,2.591,5024,3.044,5025,1.778,5026,0.867,5027,0.971,5028,0.971,5029,0.971,5030,0.971,5031,1.778,5032,0.971,5033,0.971,5034,0.8,5035,2.721,5036,0.971,5037,1.778,5038,0.971,5039,0.971,5040,2.199,5041,0.971,5042,0.971,5043,0.971,5044,0.971,5045,3.044,5046,0.971,5047,0.971,5048,0.867,5049,0.867,5050,0.867,5051,0.971,5052,0.971,5053,0.971,5054,3.55,5055,0.971,5056,0.971,5057,3.044,5058,0.971,5059,0.971,5060,0.971,5061,0.971,5062,0.971,5063,0.971,5064,3.044,5065,0.971,5066,0.971,5067,2.46,5068,0.971,5069,0.8,5070,2.46,5071,0.971,5072,0.971,5073,0.971,5074,0.971,5075,0.971,5076,0.971,5077,0.971,5078,0.867,5079,0.971,5080,0.708,5081,1.778,5082,0.867,5083,0.971,5084,3.044,5085,0.971,5086,0.971,5087,1.778,5088,2.46,5089,2.46,5090,0.8,5091,1.778,5092,0.971,5093,4.382,5094,0.971,5095,0.971,5096,1.778,5097,0.971,5098,0.971,5099,0.971,5100,0.971,5101,3.044,5102,2.46,5103,0.971,5104,3.55,5105,0.971,5106,0.971,5107,0.971,5108,0.971,5109,0.867,5110,0.971,5111,1.778,5112,1.778,5113,1.589,5114,2.46,5115,0.867,5116,0.971,5117,2.46,5118,0.971,5119,1.465,5120,0.971,5121,1.778,5122,0.971,5123,0.971,5124,1.778,5125,7.396,5126,2.46,5127,0.971,5128,3.55,5129,5.316,5130,2.46,5131,0.971,5132,0.971,5133,0.971,5134,3.044,5135,0.971,5136,2.46,5137,0.971,5138,0.971,5139,0.971,5140,0.971,5141,0.971,5142,0.971,5143,0.971,5144,3.044,5145,1.778,5146,0.971,5147,0.971,5148,2.46,5149,0.971,5150,1.778,5151,2.46,5152,1.778,5153,0.971,5154,0.971,5155,0.971,5156,1.778,5157,2.46,5158,0.867,5159,0.971,5160,0.971,5161,1.778,5162,0.971,5163,0.867,5164,0.971,5165,0.971,5166,0.971,5167,2.46,5168,1.778,5169,0.867,5170,0.971,5171,0.971,5172,3.044,5173,0.971,5174,2.46,5175,0.971,5176,0.971,5177,1.778,5178,0.971,5179,0.971,5180,0.971,5181,2.46,5182,1.778,5183,1.778,5184,0.971,5185,1.778,5186,4.382,5187,1.589,5188,2.46,5189,3.044,5190,0.867,5191,0.971,5192,1.778,5193,0.971,5194,2.46,5195,0.971,5196,0.971,5197,0.971,5198,0.971,5199,0.971,5200,0.971,5201,2.46,5202,1.778,5203,0.971,5204,0.867,5205,0.971,5206,0.971,5207,1.778,5208,1.778,5209,0.971,5210,1.589,5211,0.971,5212,0.971,5213,0.8,5214,0.971,5215,2.46,5216,0.971,5217,0.971,5218,0.971,5219,0.971,5220,1.778,5221,2.46,5222,0.971,5223,0.971,5224,0.971,5225,0.971,5226,1.778,5227,0.971,5228,0.971,5229,0.971,5230,0.971,5231,0.971,5232,0.971,5233,0.971,5234,0.971,5235,0.749,5236,0.971,5237,0.971,5238,0.971,5239,3.044,5240,0.971,5241,0.971,5242,1.778,5243,0.971,5244,0.971,5245,0.971,5246,0.971,5247,0.971,5248,0.971,5249,0.971,5250,0.8,5251,0.971,5252,0.971,5253,0.971,5254,0.867,5255,1.778,5256,0.971,5257,0.971,5258,0.971,5259,0.971,5260,0.867,5261,1.778,5262,0.971,5263,0.971,5264,0.867,5265,0.867,5266,0.675,5267,0.971,5268,1.778,5269,1.778,5270,0.971,5271,0.971,5272,0.971,5273,0.971,5274,2.46,5275,1.465,5276,0.971,5277,1.778,5278,1.778,5279,0.971,5280,0.8,5281,0.867,5282,0.971,5283,0.867,5284,0.971,5285,0.971,5286,1.778,5287,0.971,5288,2.46,5289,0.971,5290,0.971,5291,0.971,5292,0.971,5293,0.971,5294,0.971,5295,0.971,5296,0.971,5297,0.971,5298,0.867,5299,0.971,5300,0.8,5301,0.971,5302,0.971,5303,0.971,5304,0.971,5305,0.971,5306,0.971,5307,0.971,5308,0.971,5309,0.971,5310,0.971,5311,0.971,5312,0.749,5313,0.867,5314,1.778,5315,1.589,5316,0.971,5317,0.971,5318,0.971,5319,0.971,5320,0.971,5321,0.971,5322,0.867,5323,0.749,5324,0.971,5325,0.8,5326,0.971,5327,0.971,5328,0.971,5329,0.971,5330,0.971]],["title/modules.html",[113,2.613]],["body/modules.html",[27,0.005,59,0.005,60,0.005,112,4.732,113,2.514,118,4.506,138,4.506,143,4.506,355,4.732,381,4.732,384,4.732,385,4.732,386,4.145,387,4.732,1021,4.732,1161,5.415,1481,4.732,1815,6.755,1894,4.732,1951,4.506,1990,4.732,2017,5.002,2217,4.732,2558,4.732,2569,4.732,2572,4.732,5331,10.153,5332,10.153,5333,9.167,5334,9.393]],["title/overview.html",[3081,4.918]],["body/overview.html",[2,0.861,27,0.006,59,0.003,60,0.003,89,1.218,112,6.604,113,1.625,114,2.569,115,3.746,116,3.746,117,3.746,118,6.676,119,5.121,120,4.877,121,3.011,122,1.913,123,1.794,138,6.382,139,3.746,140,3.746,141,3.746,142,3.746,143,5.865,144,5.354,145,4.668,153,1.459,299,4.668,355,6.158,356,3.746,357,3.746,358,3.746,359,5.477,381,6.783,382,3.746,383,3.746,384,5.121,385,5.121,386,5.555,387,5.121,591,4.668,666,2.002,685,4.877,957,4.323,1021,6.158,1022,3.746,1023,3.746,1024,3.746,1025,5.682,1090,5.781,1264,5.009,1310,5.555,1348,3.746,1349,3.746,1350,3.746,1441,3.234,1481,6.158,1482,3.746,1483,3.746,1484,3.746,1839,6.04,1894,5.918,1895,3.746,1896,3.746,1903,4.877,1946,3.746,1947,3.746,1948,3.746,1951,4.877,1990,7.01,1991,3.746,1992,3.746,2119,5.555,2217,6.852,2218,3.746,2220,3.746,2221,3.746,2222,4.668,2483,4.877,2500,4.877,2558,6.158,2559,3.746,2569,7.051,2570,3.746,2571,3.746,2572,6.912,2639,4.877,2665,4.877,2701,3.746,2702,3.746,2703,4.877,2925,4.668,2943,3.746,2944,3.746,2945,3.746,2946,4.668,3081,3.059,3284,3.234,4394,3.746,5335,4.192,5336,4.192]],["title/todo.html",[232,1.665,2981,3.188,2982,2.872]],["body/todo.html",[0,0.108,5,0.057,11,0.559,13,1.891,17,0.261,21,0.98,27,0.005,28,0.532,36,0.515,52,3.371,53,2.3,54,2.7,56,3.091,57,3.889,59,0.003,60,0.003,68,2.3,89,1.23,111,2.155,123,2.588,126,1.851,147,2.072,150,3.196,155,1.926,169,1.677,171,2.3,172,2.221,174,1.139,181,2.124,186,1.23,209,1.399,223,5.813,226,3.868,227,4.84,232,1.706,233,3.833,234,2.825,247,2.201,261,5.368,268,2.959,308,4.025,313,2.522,325,4.025,378,2.179,389,4.025,395,3.602,399,2.442,400,3.091,403,3.268,458,5.15,510,1.554,513,2.3,577,2.959,582,2.442,630,2.7,632,3.382,664,1.812,668,2.61,774,2.023,805,3.728,944,2.61,961,3.371,963,2.124,976,2.3,979,2.442,981,2.368,982,2.368,991,4.301,1038,4.512,1097,2.708,1125,4.348,1165,2.708,1172,2.368,1192,2.522,1201,4.025,1238,4.604,1251,2.072,1264,2.442,1270,3.286,1285,2.61,1300,3.728,1353,4.068,1355,3.196,1364,3.728,1386,4.984,1419,3.489,1476,3.268,1495,3.091,1497,3.091,1520,2.944,1522,2.818,1552,5.417,1553,3.868,1589,6.707,1592,2.522,1595,2.944,1611,3.091,1671,4.025,1796,2.944,1813,3.489,1815,2.818,1845,3.268,1847,2.818,1863,4.984,1865,3.786,1866,2.237,1930,2.944,1942,2.708,2026,6.307,2038,2.944,2039,3.091,2053,2.944,2058,2.944,2232,2.818,2233,2.61,2280,2.61,2304,2.522,2312,3.268,2508,2.61,2574,3.091,2576,3.868,2591,4.905,2706,2.818,2772,3.091,2773,3.091,2992,3.091,3008,6.707,3010,3.786,3036,3.091,3054,2.818,3126,3.489,3139,3.489,3148,4.984,3188,2.944,3210,3.268,3216,3.786,3260,2.944,3281,3.489,3309,3.489,3319,3.489,3323,4.905,3324,3.786,3325,3.786,3348,3.489,3349,3.268,3380,3.786,3596,3.268,3667,4.205,3739,3.786,3743,3.786,3828,2.944,3976,3.489,3987,3.489,3989,3.489,4033,3.268,4286,3.268,4318,3.268,4379,3.489,4548,3.786,4576,3.786,4577,3.489,4686,3.489,4695,3.268,4705,2.818,4706,3.489,4750,3.268,4875,3.091,4910,3.786,5034,3.489,5312,4.667,5337,3.489,5338,4.235,5339,3.786,5340,3.786,5341,3.268,5342,3.489,5343,4.235,5344,4.235,5345,3.786,5346,4.235,5347,5.618,5348,4.235,5349,4.235,5350,4.235,5351,4.235,5352,4.235,5353,4.235,5354,4.235,5355,3.489,5356,4.235,5357,4.235,5358,4.235,5359,4.235,5360,4.235,5361,4.235,5362,4.235,5363,4.235,5364,4.235,5365,4.235,5366,4.235,5367,4.235,5368,4.235,5369,4.235,5370,3.786,5371,4.235,5372,4.235,5373,4.235,5374,4.235,5375,4.235,5376,3.786,5377,4.235,5378,4.235,5379,3.786,5380,3.786,5381,3.786,5382,4.235,5383,3.786,5384,4.235,5385,4.235,5386,4.235,5387,3.489,5388,4.235,5389,6.307,5390,4.235,5391,4.235,5392,4.235,5393,4.235,5394,4.235,5395,4.235,5396,3.489,5397,4.235,5398,6.049,5399,3.786,5400,4.235]],["title/miscellaneous/typealiases.html",[4607,2.642,5401,5.944]],["body/miscellaneous/typealiases.html",[10,0.29,17,0.42,27,0.006,31,1.795,34,5.097,36,0.682,59,0.004,60,0.004,87,0.595,111,1.941,162,2.27,169,1.555,172,1.398,209,1.297,271,5.962,408,2.096,411,2.135,505,5.033,510,2.691,531,3.677,550,2.679,552,4.518,619,5.097,625,5.097,702,3.587,711,5.097,719,4.518,722,4.879,734,5.097,961,3.502,1038,3.587,1362,4.328,1363,5.962,1368,6.041,1377,6.041,1619,4.094,1621,5.489,1627,3.733,1628,5.351,1629,4.879,1633,4.094,1638,3.502,1642,3.733,1645,5.351,1652,4.094,1653,5.351,1656,6.041,1690,4.328,1738,4.328,1743,6.041,1866,2.964,1952,4.094,1966,5.657,1967,6.041,2009,4.094,2010,4.094,2018,4.328,2019,5.097,2022,6.554,2058,5.097,2285,4.328,2297,6.554,2336,4.622,2370,4.622,2371,4.622,2433,4.094,2452,4.622,2531,4.622,3475,4.622,3476,4.622,4407,4.622,4408,6.041,4607,3.587,4609,6.554,4610,5.014,5026,5.014,5402,5.61,5403,7.332,5404,7.332,5405,5.61,5406,7.742,5407,7.332,5408,5.61,5409,7.332,5410,7.332,5411,5.61,5412,5.61,5413,5.014,5414,5.61,5415,5.014,5416,5.014,5417,5.61,5418,7.332,5419,5.61,5420,7.332,5421,5.61,5422,5.014,5423,5.61,5424,5.014,5425,5.61,5426,5.61,5427,5.61,5428,3.9,5429,5.61,5430,5.61,5431,5.61,5432,5.61]],["title/miscellaneous/variables.html",[3048,4.338,4607,2.642]],["body/miscellaneous/variables.html",[1,2.06,5,0.024,9,1.979,10,0.094,11,0.239,13,1.382,16,1.487,17,0.371,18,0.321,27,0.006,28,0.58,31,1.296,36,0.894,41,0.312,43,2.412,48,0.089,52,1.479,53,0.985,54,4.202,55,1.323,59,0.002,60,0.002,64,1.508,65,2.06,66,2.678,68,0.985,76,1.702,83,1.29,84,1.501,111,0.48,125,1.325,133,2.816,150,2.14,155,1.468,166,1.698,168,1.08,169,2.338,173,1.77,174,1.288,181,0.909,185,1.494,191,1.587,201,1.479,208,0.792,210,1.272,211,0.495,216,0.665,227,1.681,231,1.117,232,0.731,234,0.665,247,2.754,248,2.917,252,0.642,281,1.681,308,1.206,313,3.203,319,3.439,326,1.843,328,1.08,331,0.887,332,3.337,334,1.323,363,2.2,374,1.413,378,0.933,399,1.045,400,1.323,408,2.338,409,1.399,410,2.412,411,2.87,412,1.08,413,1.323,414,1.26,419,2.456,427,0.846,454,1.26,459,1.323,463,1.323,464,1.494,484,1.08,508,1.08,510,0.665,537,1.045,538,1.159,550,0.866,556,1.632,576,1.479,577,1.514,578,1.445,579,1.445,580,1.479,581,1.045,588,1.117,589,1.117,614,1.413,628,1.494,629,2.389,632,1.731,650,4.276,655,0.958,662,2.957,664,0.776,666,0.866,681,1.979,696,3.488,697,2.084,702,1.159,731,2.06,732,1.979,733,2.06,751,1.117,756,1.014,774,0.866,787,1.206,802,1.206,808,1.731,811,1.117,870,1.323,880,0.958,934,0.846,944,1.117,961,1.935,963,0.909,974,1.159,976,0.985,979,1.045,980,1.552,982,1.014,991,0.958,1104,1.323,1109,1.26,1125,1.117,1146,2.335,1165,1.159,1177,1.399,1184,2.2,1212,1.014,1232,1.399,1233,1.494,1234,3.337,1237,1.26,1238,1.635,1241,1.399,1245,2.55,1246,2.55,1247,1.621,1248,1.621,1251,1.514,1252,2.55,1253,2.152,1254,1.399,1255,2.14,1256,1.323,1257,1.323,1264,2.761,1267,1.399,1270,1.681,1285,2.952,1300,1.117,1344,2.152,1353,1.045,1354,0.985,1355,1.635,1364,0.958,1384,1.323,1391,1.399,1392,1.206,1403,1.399,1404,1.399,1405,2.55,1418,1.26,1449,1.206,1459,1.621,1476,1.399,1479,1.494,1487,1.399,1488,1.494,1492,1.494,1494,3.337,1495,1.323,1496,1.399,1497,4.813,1499,1.399,1500,2.55,1501,2.695,1514,2.55,1515,1.621,1516,2.55,1517,4.521,1518,1.494,1519,1.323,1520,4.073,1521,2.55,1522,2.695,1523,1.206,1524,2.55,1525,1.621,1526,2.767,1527,1.621,1528,1.494,1529,1.621,1530,1.621,1531,1.621,1532,1.621,1533,1.621,1535,1.494,1538,1.494,1542,1.494,1548,1.323,1549,2.767,1550,1.323,1551,1.621,1552,1.206,1553,2.59,1554,2.767,1555,1.494,1556,2.767,1557,1.621,1558,2.389,1559,1.621,1560,1.621,1561,1.399,1562,2.55,1563,1.621,1564,1.621,1565,1.399,1566,1.323,1567,1.399,1568,1.323,1569,1.621,1570,1.621,1571,1.621,1572,1.621,1573,4.808,1574,2.55,1575,4.808,1576,1.621,1577,1.494,1578,1.621,1591,2.55,1598,1.26,1621,1.08,1634,1.979,1635,3.219,1638,2.288,1640,1.26,1643,1.979,1644,1.979,1666,1.014,1691,1.323,1705,0.866,1711,1.117,1748,0.985,1780,2.816,1805,1.494,1806,1.621,1807,1.399,1808,1.621,1825,1.494,1831,1.621,1832,1.621,1845,1.399,1847,3.579,1860,1.908,1870,1.494,1871,2.55,1884,1.621,1909,2.265,1934,1.206,1942,1.979,1952,1.323,1957,1.399,1958,2.55,1963,1.323,1966,1.399,1968,2.389,1969,1.494,1970,1.494,1971,1.494,1972,1.399,1973,1.494,1995,2.389,1999,2.957,2009,2.259,2014,1.399,2015,1.979,2018,1.399,2019,2.816,2020,1.494,2021,2.55,2027,1.621,2029,4.281,2031,2.55,2032,1.621,2033,2.767,2034,1.621,2035,1.621,2036,1.621,2037,1.494,2038,1.26,2039,1.323,2040,1.323,2041,1.494,2042,1.26,2043,1.621,2044,1.494,2045,1.399,2046,1.621,2047,1.621,2048,1.621,2049,1.621,2050,1.621,2051,1.621,2053,2.152,2073,1.206,2145,1.494,2146,2.55,2232,1.206,2233,2.496,2285,1.399,2299,2.55,2304,3.203,2323,2.389,2418,1.323,2465,1.399,2475,1.621,2477,1.621,2553,2.389,2558,1.323,2575,1.206,2576,1.979,2580,4.35,2866,1.494,2869,2.767,2871,3.126,2872,1.621,2873,1.621,2874,1.621,2875,1.621,2878,1.323,2886,2.389,2966,1.621,3026,2.695,3036,3.496,3042,1.26,3048,1.323,3108,1.621,3154,4.073,3210,2.389,3225,1.621,3259,1.494,3260,1.26,3261,1.621,3262,2.767,3263,1.399,3303,2.767,3323,1.26,3415,1.621,3617,1.399,3697,1.206,3754,1.26,3854,1.494,3860,1.494,3886,2.816,3917,2.767,4050,2.767,4054,1.621,4142,1.494,4385,1.494,4390,1.621,4399,1.621,4400,4.281,4401,2.767,4402,3.621,4407,1.494,4408,3.946,4414,1.621,4415,4.281,4416,2.767,4420,3.337,4431,1.621,4432,2.767,4436,1.621,4437,1.621,4438,2.767,4443,1.621,4448,1.621,4449,2.767,4450,1.621,4451,2.767,4452,1.621,4453,2.767,4457,1.621,4458,2.767,4459,3.946,4504,1.621,4607,1.159,4613,2.259,4616,5.593,4619,1.494,4639,2.389,4666,1.494,4697,1.621,4843,1.494,4875,1.323,5342,1.494,5355,3.337,5379,2.767,5389,1.621,5406,2.767,5413,1.621,5415,2.767,5416,3.621,5424,1.621,5433,1.813,5434,1.813,5435,3.096,5436,1.813,5437,1.813,5438,1.813,5439,4.051,5440,1.813,5441,1.813,5442,1.813,5443,4.79,5444,4.051,5445,1.813,5446,1.813,5447,1.813,5448,3.096,5449,1.813,5450,1.813,5451,1.813,5452,1.813,5453,1.813,5454,3.096,5455,1.813,5456,1.813,5457,1.813,5458,1.813,5459,1.813,5460,1.813,5461,1.813,5462,1.621,5463,1.813,5464,1.621,5465,1.813,5466,1.813,5467,1.813,5468,1.813,5469,1.813,5470,2.55,5471,1.621,5472,1.621,5473,1.621,5474,1.813,5475,1.813,5476,1.813,5477,2.767,5478,1.813,5479,1.813,5480,1.813,5481,1.813,5482,1.813,5483,1.621,5484,1.813,5485,1.813,5486,1.813,5487,1.813,5488,1.813,5489,1.813,5490,1.813,5491,1.813,5492,1.813,5493,1.813,5494,1.813,5495,1.813,5496,1.813,5497,1.813,5498,1.813,5499,1.813,5500,1.813,5501,1.813,5502,1.813,5503,1.813,5504,1.813,5505,1.813,5506,1.813,5507,1.813,5508,1.813,5509,1.813,5510,1.813,5511,1.813,5512,1.813,5513,1.813,5514,4.051,5515,3.096,5516,1.621,5517,1.813,5518,3.096,5519,1.813,5520,3.096,5521,1.813,5522,1.813,5523,1.813,5524,1.813,5525,1.813,5526,1.813,5527,1.813,5528,1.813,5529,1.813,5530,1.813]],["title/additional-documentation/nestjs-application.html",[331,1.737,374,1.62,1299,1.737,2420,1.928]],["body/additional-documentation/nestjs-application.html",[8,0.964,13,3.585,14,3.226,27,0.005,28,0.321,57,3.423,59,0.003,60,0.003,89,1.058,111,1.435,113,1.412,122,1.662,150,2.863,168,3.226,171,1.978,184,2.328,227,5.059,233,2.943,234,3.136,247,1.042,261,2.1,308,3.605,327,2.532,328,2.168,329,2.328,331,4.412,363,4.161,374,3.984,377,1.826,378,2.788,392,2.81,452,2.81,454,2.532,512,1.782,518,2.953,576,3.423,580,2.588,642,3.767,647,2.244,674,2.168,808,2.036,838,2.953,880,3.786,968,3.767,970,3.767,976,1.978,979,2.1,982,3.03,986,4.181,990,4.416,991,1.924,1038,2.328,1056,3.464,1094,2.532,1103,2.168,1157,3,1161,2.1,1165,4.137,1192,2.168,1212,2.036,1213,3.605,1238,4.243,1251,3.506,1257,2.658,1299,1.782,1300,2.244,1301,3.767,1353,3.124,1355,1.924,1364,2.863,1373,2.328,1392,2.423,1428,2.423,1475,2.658,1520,4.982,1548,2.658,1552,4.769,1558,2.81,1604,3.767,1670,2.81,1792,3,1799,3.605,1866,1.924,1932,2.81,1934,2.423,1960,4.769,1978,3,2015,3.464,2040,2.658,2055,3.255,2232,5.098,2233,4.416,2238,2.532,2312,2.81,2420,2.943,2575,2.423,2576,2.328,2593,3.255,2594,4.464,2879,3.767,2982,3.767,2985,2.532,3008,3,3015,3.767,3026,6.331,3036,6.237,3037,4.464,3062,2.81,3081,2.658,3095,4.181,3112,3,3221,3,3228,3,3231,2.532,3253,3.255,3260,4.982,3263,4.181,3280,5.331,3281,4.464,3322,3.255,3326,4.898,3463,3,3529,3.955,3666,3,3667,6.415,3697,5.098,3714,4.464,3828,2.532,3856,3,3860,4.464,3886,2.532,3992,5.784,4055,3.255,4088,4.181,4138,3,4420,3,4459,3,4586,3.255,4595,3,4639,2.81,4640,3,4641,2.658,4642,2.81,4644,2.81,4647,2.423,4648,3.255,4655,4.993,4666,3,4686,3,4705,4.769,4713,3,4843,3,4864,4.843,4865,2.532,4874,3.255,4875,4.723,4917,3.255,4946,2.658,5015,2.658,5023,3.955,5080,2.658,5119,3,5163,3.255,5169,3.255,5280,4.464,5300,3,5323,2.81,5333,3.255,5376,4.843,5380,5.784,5381,5.784,5428,3.767,5470,4.464,5471,4.843,5472,3.255,5473,3.255,5531,3.642,5532,3.642,5533,3.642,5534,3.642,5535,3.642,5536,3.642,5537,3.642,5538,3.642,5539,3.642,5540,5.419,5541,3.642,5542,3.642,5543,3.642,5544,5.419,5545,7.167,5546,3.642,5547,3.642,5548,3.642,5549,3,5550,3.642,5551,7.167,5552,3.642,5553,3.255,5554,3.642,5555,3.642,5556,3.642,5557,8.031,5558,3.642,5559,3.642,5560,3.642,5561,3.642,5562,5.419,5563,3.642,5564,3.642,5565,3.642,5566,3.642,5567,5.419,5568,3.642,5569,3.642,5570,4.843,5571,5.419,5572,3.642,5573,3.642,5574,3.642,5575,3.642,5576,5.419,5577,3.642,5578,3.642,5579,2.81,5580,3.642,5581,3.642,5582,3.642,5583,3.642,5584,3.642,5585,3.642,5586,3.255,5587,3.642,5588,3.642,5589,3.642,5590,3.642,5591,3.642,5592,6.471,5593,4.843,5594,3.642,5595,3.642,5596,3.642,5597,3.642,5598,3.642,5599,3.642,5600,5.419,5601,3.642,5602,5.419,5603,4.464,5604,3.255,5605,3.642,5606,6.471,5607,5.419,5608,3.642,5609,3.642,5610,3.642,5611,3.255,5612,3.642,5613,3.255,5614,3.642,5615,3.642,5616,3.642,5617,3.642,5618,3.642,5619,3.642,5620,3.642,5621,3.642]],["title/additional-documentation/nestjs-application/software-architecture.html",[1299,1.737,2420,1.928,4646,2.362,4714,2.739]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.66,4,0.047,5,0.043,13,3.362,14,1.913,15,0.774,24,0.495,26,0.481,27,0.003,28,0.21,31,0.43,50,0.859,52,3.598,53,2.419,54,2.906,56,0.98,57,1.534,59,0.001,60,0.001,65,1.586,66,1.332,68,2.113,83,0.198,84,0.613,87,0.665,89,0.692,114,1.905,123,1.02,126,0.587,147,0.657,166,0.999,168,1.913,169,2.011,171,4.544,172,0.801,175,0.933,181,0.673,184,2.487,194,1.106,201,0.641,209,1.234,226,5.257,227,0.729,229,0.751,232,0.541,233,1.294,234,2.851,238,0.858,239,2.054,247,0.384,248,0.979,261,0.774,324,0.774,326,5.564,327,0.933,328,2.316,329,4.424,331,3.745,346,0.751,363,0.729,377,3.996,378,2.001,391,3.785,392,1.839,395,3.177,396,1.036,397,4.171,399,0.774,408,0.502,412,1.419,459,0.98,466,1.534,511,1.087,512,1.166,531,1.195,537,1.852,550,0.641,554,0.799,556,0.541,557,0.641,579,0.627,582,1.374,603,0.575,614,1.775,631,1.036,637,1.468,641,0.858,647,3.037,652,1.419,663,0.799,714,1.913,743,0.858,746,0.893,766,0.799,774,0.641,805,0.827,808,2.756,838,3.995,963,3.007,976,1.294,979,1.374,982,1.332,989,1.106,990,0.827,1038,2.847,1056,0.858,1103,2.651,1108,2.479,1133,4.47,1161,1.374,1172,0.751,1184,2.113,1189,2.704,1192,2.316,1212,0.751,1238,1.697,1239,0.893,1240,4.594,1255,3.168,1262,4.836,1263,3.785,1270,4.158,1285,0.827,1298,3.288,1299,1.572,1301,4.357,1353,1.852,1354,2.898,1355,4.574,1357,1.656,1366,2.138,1378,2.138,1418,0.933,1422,3.001,1428,0.893,1439,0.827,1449,0.893,1452,0.98,1453,0.858,1475,0.98,1522,4.331,1523,0.893,1528,1.106,1550,0.98,1553,0.858,1598,0.933,1611,4.152,1625,0.933,1635,1.226,1637,3.177,1638,0.641,1640,0.933,1654,0.799,1655,0.751,1658,0.893,1664,0.858,1671,2.138,1677,4.06,1691,2.345,1703,0.933,1720,1.524,1748,2.113,1793,1.036,1794,2.397,1796,0.933,1797,4.94,1799,0.893,1807,1.036,1812,1.106,1814,3.597,1822,0.98,1866,3.005,1867,1.2,1879,1.106,1880,3.25,1909,1.332,1930,2.233,1934,1.586,1936,2.839,1940,1.739,1972,1.036,1989,1.036,2037,1.106,2038,0.933,2039,3.25,2042,2.233,2059,0.98,2073,1.586,2111,2.13,2238,0.933,2279,4.377,2280,3.037,2304,0.799,2324,0.933,2361,0.98,2420,0.729,2550,0.933,2574,0.98,2575,2.138,2576,2.054,2648,1.106,2649,1.036,2653,1.036,2663,2.233,2714,1.106,2773,2.345,2775,0.98,2802,1.106,2804,2.479,2878,0.98,2879,0.933,2880,1.106,2985,1.656,2986,1.963,2991,2.704,2992,2.345,2995,2.647,3005,1.106,3015,1.656,3021,2.479,3035,6.754,3037,1.106,3038,3.095,3041,0.98,3042,1.656,3048,0.98,3054,1.586,3081,0.98,3093,3.98,3095,1.036,3117,2.839,3119,1.2,3120,0.98,3139,1.106,3148,1.106,3154,0.933,3161,1.106,3168,1.2,3173,1.106,3175,2.871,3183,2.233,3188,0.933,3192,1.2,3203,2.13,3221,1.106,3227,1.2,3230,3.597,3265,2.871,3268,1.106,3292,1.106,3297,1.963,3323,0.933,3326,0.858,3332,2.839,3333,1.106,3335,1.2,3342,2.647,3364,1.036,3372,1.2,3376,3.25,3395,1.106,3396,1.963,3398,1.2,3400,1.2,3410,1.2,3413,1.2,3432,1.2,3476,1.963,3490,2.487,3522,2.13,3529,3.894,3539,7.159,3545,1.963,3588,2.839,3590,6.002,3609,1.2,3616,1.839,3646,2.13,3667,1.656,3677,3.669,3690,1.839,3711,1.106,3717,1.106,3730,3.25,3738,2.345,3744,3.001,3752,3.477,3758,3.426,3759,1.036,3776,1.2,3777,1.963,3781,1.2,3796,1.963,3800,2.647,3815,5.602,3828,0.933,3829,1.106,3858,1.106,3885,1.106,3890,0.98,3896,3.98,3905,2.13,3935,2.871,3952,2.13,3989,1.106,4003,1.106,4027,3.001,4029,1.106,4038,1.106,4088,1.036,4121,1.2,4126,1.2,4137,2.13,4156,3.98,4172,1.839,4186,1.839,4214,1.106,4244,1.106,4247,1.106,4250,1.036,4255,2.479,4258,1.106,4271,1.2,4276,1.963,4306,1.2,4318,4.117,4330,1.2,4355,1.2,4364,1.839,4384,2.13,4595,1.963,4620,2.13,4625,1.963,4626,3.894,4636,1.2,4639,2.479,4641,1.739,4646,5.567,4647,2.963,4655,1.036,4656,2.13,4660,2.839,4662,0.933,4668,1.963,4674,6.823,4691,0.98,4695,1.036,4700,1.839,4713,1.963,4714,1.036,4725,2.13,4727,1.106,4730,1.2,4735,1.2,4738,1.2,4741,1.2,4750,1.036,4752,1.2,4763,1.2,4774,1.963,4775,3.803,4777,4.06,4780,2.13,4781,1.839,4804,1.2,4809,1.2,4810,4.836,4829,0.933,4832,1.2,4849,1.106,4851,2.871,4855,1.2,4857,1.2,4863,1.2,4865,2.233,4872,1.2,4873,1.2,4878,5.7,4884,1.106,4886,1.106,4888,1.963,4890,1.106,4892,1.2,4918,3.001,4922,1.2,4946,0.98,4947,1.2,4964,1.2,4974,1.106,4976,0.98,4991,1.2,4994,1.2,5000,1.2,5004,2.13,5015,0.98,5017,1.2,5023,2.345,5035,1.2,5048,2.13,5049,3.98,5069,1.106,5078,3.477,5080,0.98,5082,1.2,5090,1.106,5109,1.2,5113,1.2,5115,1.2,5119,1.106,5158,4.405,5187,1.2,5204,1.2,5213,4.396,5235,5.189,5250,1.106,5264,1.2,5265,1.2,5266,4.357,5275,1.106,5313,1.2,5325,1.106,5337,1.963,5340,1.2,5341,3.803,5383,2.13,5399,1.2,5549,1.106,5579,1.036,5622,1.343,5623,1.343,5624,5.818,5625,5.997,5626,2.383,5627,3.213,5628,2.871,5629,4.686,5630,2.383,5631,2.871,5632,5.336,5633,1.343,5634,1.343,5635,3.001,5636,3.477,5637,1.343,5638,1.343,5639,1.343,5640,1.343,5641,2.383,5642,1.343,5643,1.343,5644,4.453,5645,1.343,5646,1.343,5647,3.213,5648,2.383,5649,1.343,5650,1.343,5651,1.343,5652,1.343,5653,1.343,5654,1.343,5655,1.343,5656,1.2,5657,2.383,5658,4.929,5659,1.343,5660,1.343,5661,2.383,5662,2.383,5663,3.89,5664,3.213,5665,3.89,5666,1.343,5667,3.477,5668,3.477,5669,1.343,5670,1.343,5671,1.343,5672,1.343,5673,1.343,5674,1.343,5675,2.871,5676,1.343,5677,1.343,5678,1.343,5679,7.532,5680,1.343,5681,7.382,5682,1.343,5683,2.13,5684,1.343,5685,2.383,5686,1.106,5687,4.377,5688,5.997,5689,1.343,5690,2.871,5691,2.13,5692,2.383,5693,1.343,5694,1.343,5695,1.343,5696,1.343,5697,1.343,5698,3.205,5699,2.383,5700,1.343,5701,1.343,5702,1.343,5703,1.343,5704,1.2,5705,1.343,5706,1.343,5707,1.343,5708,1.2,5709,1.343,5710,1.343,5711,1.343,5712,1.2,5713,2.383,5714,1.343,5715,3.213,5716,1.343,5717,1.343,5718,1.343,5719,2.383,5720,1.343,5721,2.383,5722,3.213,5723,1.343,5724,1.343,5725,1.343,5726,2.383,5727,3.213,5728,1.343,5729,1.343,5730,1.343,5731,1.343,5732,1.343,5733,1.343,5734,1.2,5735,1.343,5736,2.383,5737,1.343,5738,1.343,5739,5.997,5740,1.343,5741,1.2,5742,1.106,5743,1.343,5744,1.343,5745,1.343,5746,1.343,5747,1.343,5748,1.343,5749,1.343,5750,3.213,5751,1.343,5752,2.383,5753,3.213,5754,1.343,5755,1.343,5756,1.343,5757,1.343,5758,2.383,5759,1.343,5760,1.343,5761,1.343,5762,2.13,5763,1.343,5764,1.2,5765,1.343,5766,1.343,5767,2.383,5768,1.343,5769,1.2,5770,1.343,5771,2.383,5772,1.343,5773,1.343,5774,1.343,5775,1.343,5776,1.2,5777,1.343,5778,1.343,5779,2.383,5780,1.343,5781,1.343,5782,1.343,5783,1.343,5784,1.343,5785,1.2,5786,1.343,5787,1.343,5788,1.343,5789,1.2,5790,3.213,5791,1.343,5792,1.343,5793,1.343,5794,1.343,5795,1.343,5796,2.383,5797,1.343,5798,1.2,5799,1.343,5800,3.213,5801,1.343,5802,1.343,5803,2.383,5804,1.343,5805,2.383,5806,1.343,5807,1.343,5808,1.343,5809,1.343,5810,1.343,5811,1.343,5812,1.343,5813,2.383,5814,1.343,5815,1.343,5816,1.343,5817,1.343,5818,1.343,5819,1.343,5820,1.343,5821,1.343,5822,8.144,5823,1.343,5824,1.343,5825,1.2,5826,1.343,5827,1.343,5828,2.383,5829,1.343,5830,1.343,5831,1.343,5832,1.343,5833,1.343,5834,1.343,5835,1.2,5836,1.343,5837,1.343,5838,1.2,5839,1.343,5840,1.343,5841,1.343,5842,1.343,5843,2.383,5844,1.343,5845,1.343,5846,2.479,5847,1.343,5848,1.343,5849,1.106,5850,1.343,5851,1.343,5852,4.453,5853,1.343,5854,1.343,5855,1.343,5856,1.343,5857,1.343,5858,1.343,5859,1.343,5860,1.343,5861,1.343,5862,1.343,5863,1.343,5864,2.383,5865,1.343,5866,1.343,5867,2.383,5868,1.343,5869,1.343,5870,1.343,5871,2.383,5872,1.343,5873,1.343,5874,1.343,5875,1.343,5876,1.2,5877,2.383,5878,1.343,5879,2.383,5880,1.343,5881,1.343,5882,1.343,5883,1.2,5884,2.383]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.389,1299,1.522,2420,1.69,4646,2.07,5687,2.271]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.206,2,0.502,3,0.057,4,0.048,5,0.109,11,0.662,13,1.771,17,0.171,21,0.565,24,0.75,27,0.006,28,0.657,44,0.144,48,0.15,52,3.248,53,2.722,57,1.895,59,0.002,60,0.002,66,1.365,67,3.689,68,1.326,76,1.069,83,0.739,84,0.757,87,0.259,89,1.152,111,2.383,113,3.149,114,1.044,125,1.697,126,1.733,138,1.697,143,3.483,144,2.444,145,3.839,147,3.327,150,3.353,152,0.459,155,1.083,168,1.453,169,1.76,171,3.134,172,1.786,174,1.066,175,1.697,181,3.871,188,0.965,191,1.171,209,0.565,211,1.733,216,0.896,227,2.722,229,3.803,231,3.556,234,3.351,240,1.883,241,2.011,247,0.698,257,1.561,291,1.883,307,2.757,310,1.624,311,2.182,324,2.287,325,1.624,326,3.436,328,2.984,330,2.536,331,1.194,370,1.624,374,2.896,377,4.152,378,2.968,389,3.334,399,2.287,411,1.907,460,2.757,510,1.839,512,1.941,537,2.287,554,2.984,580,1.166,582,1.407,614,1.114,627,1.697,630,3.199,632,1.365,642,3.483,647,2.444,652,1.453,661,2.889,664,3.195,666,3.032,674,1.453,680,1.782,683,1.624,693,1.883,696,2.362,697,2.041,714,2.362,744,1.365,766,1.453,774,2.393,805,1.504,808,1.365,838,3.523,944,2.444,963,1.224,979,1.407,982,2.218,990,3.556,991,2.647,1013,1.782,1094,1.697,1096,2.011,1097,4.058,1098,4.128,1126,1.883,1133,1.504,1161,1.407,1164,1.453,1172,2.218,1184,3.134,1192,1.453,1212,2.802,1213,2.639,1238,2.096,1240,4.132,1251,1.194,1253,1.697,1262,3.866,1285,1.504,1298,3.911,1299,2.451,1300,1.504,1303,2.011,1308,2.182,1310,4.348,1352,1.624,1353,3.659,1354,3.694,1356,3.483,1357,1.697,1358,1.697,1359,1.697,1363,1.782,1364,1.29,1366,1.624,1378,1.624,1387,1.624,1454,1.782,1511,2.182,1520,1.697,1522,1.624,1553,3.204,1588,4.128,1589,3.268,1598,1.697,1604,1.697,1607,1.782,1611,3.657,1629,1.624,1664,2.536,1705,1.166,1793,1.883,1794,2.444,1800,1.883,1814,1.782,1822,1.782,1847,1.624,1866,3.593,1879,2.011,1909,1.365,1940,2.895,1942,1.561,2008,3.657,2038,2.757,2105,1.624,2126,2.182,2127,2.182,2128,2.182,2129,2.182,2130,2.011,2138,2.011,2232,1.624,2279,2.895,2280,1.504,2295,2.182,2304,2.362,2324,1.697,2353,1.624,2445,2.011,2508,3.088,2580,1.697,2591,1.697,2706,1.624,2715,2.182,2774,1.883,2775,1.782,2946,1.624,2959,5.229,2991,1.697,2995,2.011,3015,2.757,3021,1.883,3034,2.182,3035,5.45,3038,1.697,3041,1.782,3048,1.782,3054,5.137,3120,1.782,3154,2.757,3161,4.128,3188,2.757,3231,1.697,3297,4.754,3323,4.727,3326,2.536,3332,1.782,3349,1.883,3376,3.657,3426,2.182,3454,2.182,3463,2.011,3490,2.536,3588,2.895,3590,1.782,3617,1.883,3618,3.061,3744,1.883,3748,2.011,3753,2.011,3754,2.757,3758,1.697,3759,1.883,3796,4.128,3853,2.182,3886,4.412,3924,2.182,3930,2.011,3932,2.182,3945,2.182,3960,2.182,3961,2.182,4033,1.883,4143,1.883,4172,1.883,4224,2.182,4247,2.011,4619,2.011,4625,2.011,4626,1.782,4643,2.011,4646,3.334,4647,4.223,4655,1.883,4660,1.782,4662,1.697,4673,2.182,4674,3.866,4684,2.182,4691,1.782,4692,2.182,4699,2.011,4700,4.452,4703,2.182,4705,1.624,4706,2.011,4737,2.182,4751,2.011,4753,2.182,4781,1.883,4810,1.883,4824,2.182,4829,1.697,4849,2.011,4858,2.011,4859,2.182,4865,1.697,4884,2.011,4890,2.011,4918,1.883,4946,2.895,4957,2.182,4976,1.782,5015,1.782,5069,2.011,5080,1.782,5190,4.479,5235,3.061,5260,2.182,5266,1.697,5283,2.182,5325,2.011,5341,4.452,5342,4.128,5347,5.635,5355,4.128,5396,4.128,5428,3.483,5462,2.182,5477,2.182,5483,2.182,5549,2.011,5553,2.182,5603,3.268,5624,2.182,5635,1.883,5668,2.182,5681,7.203,5683,2.182,5686,3.268,5687,4.633,5704,2.182,5712,2.182,5734,3.546,5741,4.479,5776,3.546,5798,3.546,5835,3.546,5838,2.182,5846,1.883,5885,2.011,5886,2.182,5887,2.441,5888,5.011,5889,2.441,5890,6.406,5891,3.268,5892,2.441,5893,3.967,5894,5.77,5895,2.441,5896,2.441,5897,2.441,5898,2.441,5899,2.441,5900,2.441,5901,2.441,5902,3.967,5903,2.441,5904,2.441,5905,2.441,5906,2.182,5907,3.967,5908,2.441,5909,2.441,5910,2.441,5911,2.441,5912,2.182,5913,2.441,5914,2.441,5915,2.182,5916,3.967,5917,2.441,5918,2.011,5919,2.441,5920,2.441,5921,2.441,5922,2.441,5923,2.441,5924,2.441,5925,2.441,5926,2.441,5927,3.967,5928,3.967,5929,2.441,5930,2.182,5931,3.546,5932,2.441,5933,2.441,5934,2.441,5935,2.441,5936,2.441,5937,2.441,5938,2.441,5939,2.441,5940,2.441,5941,2.441,5942,2.441,5943,2.441,5944,2.441,5945,2.441,5946,2.441,5947,2.441,5948,2.441,5949,2.441,5950,2.441,5951,2.441,5952,2.441,5953,2.441,5954,2.441,5955,2.441,5956,2.441,5957,2.441,5958,2.441,5959,2.441,5960,2.441,5961,2.441,5962,2.441,5963,2.182,5964,2.441,5965,2.441,5966,2.182,5967,2.441,5968,2.441,5969,2.441,5970,2.441,5971,2.441,5972,2.441,5973,2.441,5974,2.441,5975,2.441,5976,2.182,5977,2.441]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[1299,1.522,2420,1.69,5347,2.271,5635,2.401,5978,2.781]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,2.544,14,3.393,24,0.392,27,0.006,36,0.474,51,3.213,54,1.741,57,3.217,59,0.003,60,0.003,67,2.493,76,1.056,83,0.841,84,1.413,87,0.413,123,1.669,155,1.065,162,1.765,169,2.504,172,1.42,174,1.048,181,4.127,191,2.326,194,4.695,201,1.863,211,1.065,229,3.187,232,1.571,233,3.095,234,3.36,257,2.493,291,4.397,310,2.595,326,5.061,327,4.682,328,2.322,329,2.493,330,2.493,331,4.026,374,2.6,377,1.955,378,2.932,389,2.595,392,4.397,395,2.322,396,3.009,397,2.595,411,2.563,419,1.635,427,2.66,460,3.962,513,2.118,524,3.962,531,1.955,614,2.6,631,5.196,641,2.493,652,4.411,766,3.393,805,3.512,838,3.596,871,3.213,880,2.06,934,1.82,970,2.711,1013,2.846,1165,2.493,1184,3.095,1189,2.711,1192,3.393,1195,2.595,1201,2.595,1212,3.187,1240,2.248,1263,2.595,1270,2.118,1285,2.403,1298,5.37,1354,4.828,1358,2.711,1359,2.711,1387,2.595,1418,2.711,1449,2.595,1453,4.306,1522,2.595,1534,2.403,1548,2.846,1604,2.711,1607,2.846,1705,1.863,1748,2.118,1780,3.962,1866,3.558,2053,2.711,2238,2.711,2361,2.846,2374,3.486,2406,3.486,2465,3.009,2591,2.711,2649,3.009,2663,2.711,2772,2.846,2985,2.711,2991,2.711,3026,2.595,3035,2.846,3038,2.711,3041,5.752,3054,2.595,3062,3.009,3117,4.16,3183,3.962,3188,3.962,3229,3.009,3230,2.846,3332,2.846,3405,6.02,3428,3.486,3490,2.493,3585,3.009,3588,4.915,3616,3.009,3618,3.009,3722,3.213,3730,2.846,3754,2.711,3757,4.397,3890,2.846,4027,3.009,4038,3.213,4214,3.213,4250,3.009,4364,3.009,4482,3.213,4523,2.846,4613,2.846,4626,2.846,4642,3.009,4646,4.929,4647,3.792,4660,2.846,4662,2.711,4751,4.695,4775,6.351,4781,3.009,4786,3.213,4829,2.711,4865,3.962,4976,2.846,5015,4.16,5023,4.16,5080,2.846,5213,3.213,5235,3.009,5254,3.486,5266,2.711,5300,3.213,5312,3.009,5322,5.094,5323,3.009,5337,3.213,5347,6.931,5387,3.213,5428,2.711,5579,3.009,5603,3.213,5631,3.486,5635,4.397,5636,3.486,5681,6.081,5764,3.486,5769,3.486,5789,3.486,5825,3.486,5849,3.213,5885,3.213,5890,5.094,5906,5.094,5963,3.486,5966,3.486,5978,3.486,5979,3.9,5980,3.9,5981,3.9,5982,3.9,5983,3.9,5984,3.9,5985,3.9,5986,3.9,5987,5.699,5988,3.9,5989,3.9,5990,3.9,5991,3.9,5992,3.9,5993,3.9,5994,3.9,5995,3.9,5996,3.9,5997,3.9,5998,3.9,5999,3.9,6000,3.9,6001,3.9,6002,3.486,6003,3.9,6004,3.9,6005,3.486,6006,3.9,6007,3.486,6008,3.9,6009,3.9,6010,3.9,6011,3.9,6012,3.9,6013,3.9,6014,3.9,6015,5.094,6016,3.9,6017,3.9,6018,3.9,6019,3.9,6020,3.9,6021,3.9,6022,3.9,6023,3.9,6024,3.9,6025,3.9,6026,3.9,6027,3.9,6028,3.9,6029,3.9,6030,3.9,6031,3.9,6032,3.9,6033,3.9,6034,3.9,6035,3.9,6036,3.9,6037,3.9,6038,3.9,6039,3.9,6040,3.9,6041,3.9,6042,3.9,6043,3.9,6044,5.699,6045,3.9,6046,3.213,6047,3.9,6048,3.486,6049,3.9,6050,3.9,6051,3.9,6052,3.9,6053,3.213]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[391,2.07,1299,1.522,2420,1.69,5266,2.163,5629,2.563]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.166,13,3.338,14,2.807,15,2.718,16,1.73,17,0.348,21,1.09,23,4.534,27,0.006,28,0.415,31,2.087,36,1.131,44,0.272,48,0.104,51,3.884,52,3.116,53,4.062,54,3.782,59,0.004,60,0.004,65,3.137,66,2.636,68,4.602,87,0.692,111,2.243,126,2.85,152,0.886,155,1.287,168,2.807,184,4.782,224,3.884,227,2.561,229,4.182,231,2.905,234,2.962,247,2.423,307,3.277,310,3.137,324,2.718,326,5.045,327,3.277,328,3.884,329,3.014,331,2.306,366,1.533,374,2.976,377,3.271,386,4.17,389,3.137,391,4.34,395,2.807,397,5.37,403,3.638,449,3.884,559,2.905,637,4.019,838,2.151,963,2.364,981,2.636,982,3.647,1118,3.884,1172,2.636,1251,2.306,1264,5.279,1270,5.049,1284,4.214,1285,4.019,1286,3.441,1294,3.884,1298,2.905,1299,3.191,1300,4.609,1355,2.491,1356,3.277,1387,3.137,1522,4.976,1523,6.092,1552,4.34,1555,3.884,1671,4.34,1676,4.214,1677,3.884,1679,4.214,1683,4.214,1685,4.214,1686,4.214,1748,3.543,1794,2.905,1814,3.441,1866,3.446,1909,2.636,1930,3.277,1931,4.214,1934,3.137,1940,4.761,1942,4.17,2137,5.374,2382,4.214,2550,3.277,2774,3.638,2775,3.441,2977,3.884,3042,3.277,3120,3.441,3133,3.638,3326,3.014,3490,3.014,3948,4.214,4130,5.374,4641,3.441,4705,3.137,4870,4.214,4990,4.214,5266,3.277,5593,4.214,5629,5.374,5742,3.884,5785,4.214,5891,3.884,5915,4.214,5918,3.884,5976,4.214,6053,3.884,6054,4.715,6055,8.07,6056,4.715,6057,4.715,6058,4.715,6059,8.07,6060,4.214,6061,4.715,6062,4.715,6063,7.479,6064,4.715,6065,4.715,6066,4.715,6067,4.715,6068,6.523,6069,4.715,6070,4.715,6071,4.715,6072,4.214,6073,4.715,6074,6.523,6075,4.715,6076,4.715,6077,4.715,6078,4.715,6079,4.715,6080,4.715,6081,4.715,6082,4.715,6083,4.715,6084,4.715,6085,4.715,6086,4.715]],["title/additional-documentation/nestjs-application/testing.html",[1299,2.022,1799,2.75,2420,2.244]],["body/additional-documentation/nestjs-application/testing.html",[0,0.078,2,0.368,13,2.777,17,0.205,24,0.477,26,0.268,27,0.006,28,0.353,41,0.308,44,0.111,52,0.856,54,3.497,59,0.002,60,0.002,65,2.671,66,2.986,68,0.973,76,1.423,83,0.788,84,0.585,111,1.937,113,1.188,114,1.718,123,0.766,125,1.718,126,1.754,144,1.888,155,2.241,156,1.601,157,1.601,163,0.876,166,0.751,168,4.226,169,1.113,171,0.973,172,0.446,173,0.783,174,1.565,175,2.13,179,1.601,181,2.013,191,2.454,201,1.917,217,0.467,227,5.074,229,1.713,231,1.104,233,2.18,234,3.086,238,1.959,240,1.382,247,1.359,248,1.448,266,1.619,268,1.964,310,3.553,325,1.192,326,2.39,328,1.824,330,1.959,331,2.612,374,0.817,377,2.383,378,3.2,386,1.145,393,1.307,395,1.824,408,0.669,427,0.836,449,1.066,454,2.13,458,1.307,508,1.066,510,2.136,543,1.192,556,0.722,559,1.104,578,0.836,579,0.836,582,2.314,603,1.311,630,0.8,663,1.066,664,2.033,666,0.856,732,1.145,744,1.002,751,2.928,766,1.066,774,2.551,805,1.104,808,1.713,838,3.339,865,1.601,933,2.13,963,3.669,974,2.567,976,0.973,980,0.898,1013,2.236,1056,1.145,1097,1.145,1125,1.104,1133,1.888,1146,3.078,1161,1.766,1164,1.066,1172,1.002,1184,3.161,1187,1.382,1189,1.245,1190,1.382,1191,1.192,1192,3.179,1195,1.192,1213,3.873,1238,4.935,1240,3.078,1242,4.795,1251,0.876,1254,4.12,1255,2.821,1256,3.468,1257,3.897,1262,1.382,1263,3.161,1267,1.382,1270,1.664,1285,2.474,1296,1.959,1297,2.738,1298,3.833,1300,1.104,1335,1.307,1352,1.192,1354,0.973,1355,2.121,1366,2.038,1378,1.192,1385,1.959,1387,4.363,1428,1.192,1439,1.104,1448,2.364,1449,2.671,1452,1.307,1453,1.145,1458,4.247,1495,1.307,1499,2.364,1519,1.307,1523,1.192,1534,4.913,1550,1.307,1552,3.873,1553,3.038,1568,2.236,1590,1.476,1595,1.245,1607,1.307,1610,1.601,1634,1.145,1635,0.921,1636,1.245,1654,1.066,1655,1.713,1670,1.382,1671,1.192,1703,1.245,1748,2.581,1775,1.192,1792,1.476,1794,1.888,1796,2.13,1799,5.707,1813,1.476,1866,2.821,1909,1.002,1932,1.382,1933,1.476,1934,1.192,1935,1.601,1936,3.468,1940,1.307,1942,2.567,2006,1.476,2015,2.567,2017,2.364,2019,2.13,2028,1.601,2040,1.307,2042,1.245,2053,4.046,2057,2.524,2059,1.307,2060,1.601,2094,2.236,2102,1.601,2107,1.476,2118,1.192,2119,1.145,2149,1.601,2222,2.671,2232,3.553,2233,2.474,2238,3.712,2280,1.104,2287,1.476,2304,1.066,2324,3.303,2353,1.192,2370,1.476,2371,1.476,2433,1.307,2508,4.828,2569,2.236,2594,1.476,2653,1.382,2706,1.192,2772,2.236,2804,1.382,2878,4.248,2879,1.245,2880,1.476,2959,1.476,2982,1.245,2991,1.245,2992,1.307,3021,1.382,3026,1.192,3035,4.998,3039,1.601,3041,2.236,3042,2.13,3054,3.161,3062,1.382,3070,1.601,3117,2.236,3120,4.248,3126,1.476,3154,2.13,3183,3.712,3185,1.476,3188,3.303,3226,2.364,3229,1.382,3230,1.307,3231,2.13,3235,1.601,3248,1.601,3260,2.13,3288,1.601,3305,1.601,3318,2.738,3319,3.307,3326,5.009,3332,1.307,3349,1.382,3376,3.468,3423,2.738,3456,4.773,3475,2.524,3490,1.145,3495,5.56,3539,1.382,3554,1.601,3560,1.476,3570,1.476,3585,3.097,3590,1.307,3596,1.382,3618,1.382,3655,1.601,3677,1.476,3684,1.601,3730,2.236,3738,2.93,3745,1.601,3748,1.476,3753,1.476,3754,2.13,3755,1.476,3758,4.046,3785,1.601,3800,1.476,3828,2.13,3829,1.476,3868,3.307,3884,1.476,3890,1.307,3950,1.601,4029,1.476,4043,1.601,4069,3.588,4088,1.382,4120,1.476,4130,1.476,4149,1.476,4172,1.382,4179,5.56,4186,2.364,4255,1.382,4281,1.601,4285,1.476,4311,1.601,4361,1.476,4385,1.476,4482,1.476,4553,1.601,4577,1.476,4613,4.54,4635,1.476,4642,4.12,4647,1.192,4650,1.601,4651,1.601,4659,1.601,4662,1.245,4665,1.601,4674,1.382,4691,2.236,4695,5.283,4699,1.476,4714,1.382,4727,1.476,4736,1.601,4750,1.382,4754,1.601,4774,1.476,4775,3.097,4777,1.476,4786,3.307,4810,1.382,4820,1.601,4828,1.601,4829,1.245,4858,1.476,4865,3.303,4866,1.601,4878,2.524,4886,1.476,4888,1.476,4907,1.601,4915,1.601,4918,1.382,4946,1.307,4958,1.601,4971,1.601,4974,1.476,4976,1.307,4982,1.601,5023,2.236,5034,1.476,5040,1.601,5050,6.344,5090,1.476,5210,1.601,5275,1.476,5280,1.476,5281,1.601,5298,4.247,5312,1.382,5341,3.097,5345,1.601,5347,1.307,5370,1.601,5387,1.476,5396,1.476,5422,1.601,5428,1.245,5464,1.601,5516,2.738,5570,1.601,5579,5.06,5586,1.601,5604,1.601,5628,1.601,5656,1.601,5667,1.601,5675,2.738,5681,5.476,5686,1.476,5687,3.897,5690,1.601,5691,1.601,5698,1.476,5708,4.247,5742,1.476,5846,1.382,5849,3.307,5883,2.738,5885,3.914,5886,1.601,5891,1.476,5912,1.601,5918,1.476,5930,1.601,5931,1.601,6002,1.601,6005,2.738,6007,1.601,6015,1.601,6048,1.601,6053,2.524,6060,1.601,6072,1.601,6087,3.064,6088,1.791,6089,1.791,6090,1.791,6091,1.791,6092,1.791,6093,1.791,6094,1.791,6095,1.791,6096,1.791,6097,1.791,6098,1.791,6099,1.791,6100,1.791,6101,3.064,6102,1.791,6103,1.791,6104,1.791,6105,1.791,6106,1.791,6107,1.791,6108,1.791,6109,1.791,6110,1.791,6111,1.791,6112,1.791,6113,1.791,6114,1.791,6115,1.791,6116,1.791,6117,1.791,6118,1.791,6119,1.791,6120,1.791,6121,1.791,6122,1.791,6123,1.791,6124,1.791,6125,1.791,6126,1.791,6127,1.791,6128,1.791,6129,4.014,6130,1.791,6131,4.014,6132,3.064,6133,5.34,6134,3.064,6135,4.014,6136,1.791,6137,1.791,6138,3.064,6139,1.791,6140,1.791,6141,1.791,6142,1.791,6143,1.791,6144,1.791,6145,1.791,6146,1.791,6147,5.82,6148,1.791,6149,1.791,6150,1.791,6151,1.791,6152,1.791,6153,1.791,6154,1.791,6155,1.791,6156,1.791,6157,1.791,6158,1.791,6159,1.791,6160,3.064,6161,1.791,6162,3.064,6163,1.791,6164,1.791,6165,1.791,6166,3.064,6167,1.791,6168,1.791,6169,4.014,6170,3.064,6171,3.064,6172,1.791,6173,1.791,6174,4.752,6175,1.791,6176,1.791,6177,1.791,6178,1.791,6179,1.791,6180,1.791,6181,1.791,6182,3.064,6183,3.064,6184,1.791,6185,3.064,6186,1.791,6187,1.791,6188,1.791,6189,1.791,6190,1.791,6191,3.064,6192,3.064,6193,1.791,6194,1.791,6195,3.064,6196,1.791,6197,1.791,6198,3.064,6199,1.791,6200,1.791,6201,1.791,6202,1.791,6203,1.791,6204,1.791,6205,3.064,6206,4.752,6207,1.791,6208,1.791,6209,1.791,6210,1.791,6211,1.791,6212,1.791,6213,3.064,6214,1.791,6215,1.791,6216,1.791,6217,1.791,6218,1.791,6219,1.791,6220,1.791,6221,1.791,6222,1.791,6223,1.791,6224,3.064,6225,1.791,6226,1.791,6227,1.791,6228,1.791,6229,1.791,6230,1.791,6231,1.791,6232,1.791,6233,1.791,6234,1.791,6235,1.791,6236,1.791,6237,1.791,6238,1.791,6239,1.791,6240,1.791,6241,1.791,6242,1.791,6243,1.791,6244,1.791,6245,1.791,6246,1.791,6247,1.791,6248,1.791,6249,1.791,6250,1.791,6251,1.791,6252,1.791,6253,1.791,6254,1.791,6255,1.791,6256,1.791,6257,1.791]],["title/additional-documentation/nestjs-application/decisions.html",[1299,2.022,2420,2.244,6046,3.404]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.63,27,0.005,52,3.03,59,0.004,60,0.004,172,1.581,181,3.977,209,1.467,211,1.732,217,1.654,226,4.056,234,3.176,239,4.056,313,3.777,329,4.056,374,2.895,444,2.46,580,3.789,603,2.714,714,3.777,744,3.547,808,4.435,838,2.895,963,3.181,1056,5.533,1172,3.547,1250,4.895,1251,3.103,1255,3.351,1355,3.351,1358,5.514,1359,4.41,1385,4.056,1428,4.221,1592,3.777,1815,5.758,1866,3.351,1941,5.67,2053,4.41,2277,6.534,2280,3.909,2324,5.514,2649,6.12,2985,4.41,3038,4.41,3095,6.677,3326,4.056,3342,6.534,3395,5.226,3545,5.226,3642,5.67,3714,5.226,3836,5.67,3886,4.41,4022,5.67,4209,5.67,4635,5.226,4641,4.63,4646,4.221,4829,4.41,5250,5.226,5323,4.895,5687,4.63,5698,5.226,5846,4.895,5876,5.67,6046,6.534,6258,6.344,6259,6.344,6260,6.344,6261,6.344,6262,6.344,6263,6.344,6264,6.344,6265,6.344,6266,6.344,6267,7.932,6268,6.344,6269,6.344,6270,6.344,6271,6.344,6272,6.344,6273,6.344,6274,6.344,6275,6.344,6276,6.344,6277,6.344,6278,6.344,6279,6.344,6280,6.344]],["title/additional-documentation/nestjs-application/vscode.html",[1299,2.022,2420,2.244,4644,3.188]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.113,27,0.005,57,4.019,59,0.005,60,0.005,227,4.57,330,4.465,331,4.116,346,3.905,374,3.839,391,4.647,808,3.905,991,4.445,1220,5.389,1238,3.69,1364,4.445,1866,3.69,2008,5.098,2073,4.647,2879,4.855,3036,5.098,3229,5.389,3260,5.849,3326,4.465,3360,5.754,3529,5.098,3690,5.389,3754,4.855,3930,6.932,4644,6.492,4676,7.521,4705,4.647,4875,5.098,4978,6.243,5315,8.072,5339,6.243,5428,4.855,5470,5.754,5611,6.243,5613,6.243,6281,6.985,6282,6.985,6283,6.985,6284,6.985,6285,6.985,6286,6.985,6287,6.985,6288,6.985,6289,6.985]],["title/additional-documentation/nestjs-application/git.html",[1299,2.022,2420,2.244,4645,3.404]],["body/additional-documentation/nestjs-application/git.html",[27,0.005,59,0.005,60,0.005,399,4.426,579,3.583,1748,4.17,1794,4.731,1909,4.293,2580,5.337,4286,5.924,4379,7.331,4645,7.741,4658,6.862,5762,6.862,6290,7.678,6291,7.678,6292,7.678,6293,7.678]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":934,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4541,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4578,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4588,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4502,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":4492,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4501,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4568,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":4600,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4592,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4561,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":4546,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4552,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4591,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4485,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":4555,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4544,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4387,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4433,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4445,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4444,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":4423,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4393,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4406,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4386,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4417,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4403,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4413,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4434,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4430,"title":{},"body":{"coverage.html":{}}}],["0000d213816abba584714c0a",{"_index":929,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["0000d224816abba584714c9c",{"_index":6231,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":6233,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1146,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4569,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4581,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4528,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4514,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4564,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":6182,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4525,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4606,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4579,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4496,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4467,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":6183,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4493,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":4531,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":4468,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4507,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4389,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":4429,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":4428,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4396,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4395,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4424,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4455,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":4422,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":4435,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2418,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":4388,"title":{},"body":{"coverage.html":{}}}],["106",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3374,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["110",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["111",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":4571,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["121",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["1289",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3502,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["14.14",{"_index":1477,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["1499",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":3370,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["154",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":5542,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":3364,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4526,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["187",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3486,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":4934,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":6274,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":6273,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":751,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4585,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4543,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4565,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4529,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4489,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4510,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":4491,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":4419,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":4392,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3284,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["2007",{"_index":4711,"title":{},"body":{"license.html":{}}}],["2020",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":3274,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["213",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3083,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22.10.0",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["231",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["237",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["239",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["247",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3031,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":3556,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["26.10.0",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["26.10.1",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["26.10.2",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["26.10.3",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["26.11.0",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["26.11.1",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["26.11.2",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["26.11.3",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["26.12.0",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["26.9.2",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["26.9.3",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["267",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["269",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["274",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["279",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3244,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["29",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["297",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":5372,"title":{},"body":{"todo.html":{}}}],["3",{"_index":3585,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4575,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4582,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":6224,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4572,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4563,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4604,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4483,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4583,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":4427,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":4412,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3516,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":5601,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["315",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["318",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["319",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":4394,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["331",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["3395",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["354",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["365",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["370",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["377",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["386",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["388",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["391",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["394",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":933,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4499,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4596,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4521,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4538,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":2030,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["4.2.0",{"_index":4520,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4503,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4470,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":4497,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4462,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4469,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":4522,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5535,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4/18",{"_index":4446,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4454,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":4410,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5336,"title":{},"body":{"overview.html":{}}}],["4008",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":5383,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":6084,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":1555,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["436",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["487",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["490",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":3185,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4487,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4488,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4524,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":4476,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4567,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":4545,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":4447,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4426,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4391,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":6075,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":5546,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5541,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":4409,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":6232,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":732,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4509,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4478,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":3483,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.9.4",{"_index":4573,"title":{},"body":{"dependencies.html":{}}}],["6.9.6",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["6/10",{"_index":4456,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":4411,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":2496,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["62",{"_index":5335,"title":{},"body":{"overview.html":{}}}],["6294",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":4418,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["68",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":5365,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":5011,"title":{},"body":{"license.html":{}}}],["6d",{"_index":5029,"title":{},"body":{"license.html":{}}}],["7",{"_index":2847,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":4511,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4519,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":4584,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["7021",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1441,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["8.0.0",{"_index":4472,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":4474,"title":{},"body":{"dependencies.html":{}}}],["8.0.9",{"_index":4471,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":4505,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":4603,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":4480,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4533,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":4421,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":5572,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":4425,"title":{},"body":{"coverage.html":{}}}],["8300",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["9003",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["9083",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":5565,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2423,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4683,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":646,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":1511,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_${now.getdate()}_${now.gethours()}_${now.getminutes()}_${now.getseconds",{"_index":1147,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":1531,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":1544,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5887,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":1532,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":1546,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5578,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":208,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["_id.$oid",{"_index":1216,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_operator",{"_index":615,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_queries",{"_index":616,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":2881,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":4702,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":6125,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":5069,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4700,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4956,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1129,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["abstract",{"_index":324,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstractbootstrapconsole",{"_index":2867,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["abstraction",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":463,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":5145,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5144,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5353,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":4289,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":1240,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":5874,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":533,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":3885,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":3896,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1037,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4995,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5310,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4779,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4955,"title":{},"body":{"license.html":{}}}],["according",{"_index":3396,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1636,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1634,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":5313,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4898,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":5192,"title":{},"body":{"license.html":{}}}],["act",{"_index":6124,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":1391,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":3360,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1869,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":4822,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5231,"title":{},"body":{"license.html":{}}}],["actors",{"_index":5987,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":5213,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":5049,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4801,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1909,"title":{},"body":{"injectables/LessonRepo.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1212,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":459,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":1299,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":2774,"title":{},"body":{"classes/TaskScope.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5558,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":618,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":624,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["address",{"_index":5265,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":4797,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3905,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":1108,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addtokentowhitelist",{"_index":1887,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":1893,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":1872,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":1874,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":6012,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":3221,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":4932,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":5075,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5299,"title":{},"body":{"license.html":{}}}],["affects",{"_index":5076,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4709,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":5173,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4895,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":6190,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":6192,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterduedateornone",{"_index":2722,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["afterduedateornone(duedate",{"_index":2763,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":6119,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":6239,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":6117,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":4138,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":4946,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4982,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5876,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":5329,"title":{},"body":{"license.html":{}}}],["agree",{"_index":5248,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5287,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":5984,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":5201,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4479,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":1829,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":5402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["all_entities",{"_index":1999,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allcollectionswithfilepaths",{"_index":1159,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.filter",{"_index":1169,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.map((file",{"_index":1175,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["alleging",{"_index":5180,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3229,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":2991,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2073,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":6115,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4958,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":346,"title":{},"body":{"classes/BusinessError.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FileSystemAdapter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4764,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":5007,"title":{},"body":{"license.html":{}}}],["always",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":3476,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amp",{"_index":4634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amqp",{"_index":4481,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":1980,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4484,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4599,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":5146,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":6137,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4757,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":5896,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5879,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":6215,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ansible",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["anti",{"_index":4920,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":4968,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4809,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":5944,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4652,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4653,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4657,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":655,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty()@decodehtmlentities",{"_index":2754,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apiproperty({description",{"_index":819,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["apiproperty({enum",{"_index":2308,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":2306,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":656,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional()@decodehtmlentities",{"_index":2748,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apipropertyoptional({description",{"_index":2301,"title":{},"body":{"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({type",{"_index":2298,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":2117,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":2124,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":2670,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":2927,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":1613,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":61,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{}}}],["apivalidationerrorresponse(error",{"_index":1536,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":1553,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":6241,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":6236,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":403,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":402,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":400,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":401,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":5400,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":88,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["applicable",{"_index":4814,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5567,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":331,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4641,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":1096,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":5270,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1165,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":6245,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5658,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4668,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4951,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5306,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3225,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":5433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5416,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../bootstrap.console.ts",{"_index":5442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":5436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":5437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5406,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":5448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../decode",{"_index":4617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../empty",{"_index":5441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5408,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../file",{"_index":5451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../find",{"_index":4610,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4616,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":5450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5413,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../management.ts",{"_index":4615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":5438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5415,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4609,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../school.factory.ts",{"_index":5445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":5407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../setup",{"_index":5446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":5435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.entity.ts",{"_index":5417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.uc.ts",{"_index":4611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../types.ts",{"_index":5404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":5449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":5411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5419,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5553,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5605,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5610,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":1488,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console.module.ts",{"_index":2561,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/console.ts",{"_index":4390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":2547,"title":{},"body":{"classes/ServerConsole.html":{},"coverage.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":2551,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":2554,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":2549,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts",{"_index":2866,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts:5",{"_index":2868,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":388,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":1290,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":1292,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":2973,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":1283,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":1496,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":1649,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":1345,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":4399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":1791,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":1669,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":1680,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":1678,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":1684,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":1675,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":1682,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":1949,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":1926,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":1586,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":2978,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":4404,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/management.ts",{"_index":4405,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":1805,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":4407,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":1801,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":1834,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":1870,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":1837,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":1840,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":1842,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":146,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":1302,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":2018,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/database/setup",{"_index":4414,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":1362,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":1351,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":667,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:15",{"_index":672,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:22",{"_index":677,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":816,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13",{"_index":824,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18",{"_index":823,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23",{"_index":820,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:28",{"_index":825,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33",{"_index":826,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41",{"_index":936,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46",{"_index":935,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8",{"_index":821,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts",{"_index":2063,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:12",{"_index":2077,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:16",{"_index":2078,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:22",{"_index":2066,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:26",{"_index":2067,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":1897,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":828,"title":{},"body":{"classes/DashboardMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":831,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":937,"title":{},"body":{"injectables/DashboardUc.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:14",{"_index":943,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6",{"_index":940,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9",{"_index":941,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/mail/mail.interface.ts",{"_index":90,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":1952,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/mail/mail.module.ts:28",{"_index":1956,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":1977,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":1982,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:18",{"_index":1984,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/management/console/database",{"_index":952,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["apps/server/src/modules/management/controller/database",{"_index":996,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"coverage.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts",{"_index":300,"title":{},"body":{"injectables/BsonConverter.html":{},"coverage.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:11",{"_index":316,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:21",{"_index":304,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/management.module.ts",{"_index":1994,"title":{},"body":{"modules/ManagementModule.html":{}}}],["apps/server/src/modules/management/uc/database",{"_index":1078,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":628,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":2145,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":2285,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":2292,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:21",{"_index":2310,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:26",{"_index":2286,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":2291,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:38",{"_index":2300,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":2302,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:50",{"_index":2309,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":2307,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":2305,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":2296,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:71",{"_index":2290,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:76",{"_index":2313,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:81",{"_index":2288,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:86",{"_index":2311,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":2293,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":2526,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":2627,"title":{},"body":{"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":2906,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":2940,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":2093,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":2098,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":2106,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":2110,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":2116,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":2101,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":2853,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":2162,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:31",{"_index":2169,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:45",{"_index":2167,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:58",{"_index":2173,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:9",{"_index":2171,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":2518,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":2622,"title":{},"body":{"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":2939,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":2223,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":2316,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":2239,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":2261,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:19",{"_index":2245,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:32",{"_index":2251,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":2247,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":2336,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:112",{"_index":2366,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:136",{"_index":2347,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:14",{"_index":2343,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:147",{"_index":2358,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:167",{"_index":2364,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":2357,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:195",{"_index":2360,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:27",{"_index":2345,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:57",{"_index":2349,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:88",{"_index":2355,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":2744,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:10",{"_index":2755,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:13",{"_index":2747,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:16",{"_index":2752,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":2749,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":2751,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":2753,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":2750,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:32",{"_index":2757,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:35",{"_index":2756,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":2662,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":2664,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":2678,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:5",{"_index":2680,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":2608,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:10",{"_index":2611,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:13",{"_index":2615,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:21",{"_index":2617,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:26",{"_index":2613,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task",{"_index":2759,"title":{},"body":{"classes/TaskScope.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":2708,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:10",{"_index":2711,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:24",{"_index":2713,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:63",{"_index":2718,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":2704,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":2640,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:11",{"_index":2643,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:17",{"_index":2646,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":2779,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:118",{"_index":2793,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:13",{"_index":2785,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:21",{"_index":2790,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:35",{"_index":2791,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:57",{"_index":2792,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:79",{"_index":2796,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:84",{"_index":2787,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:97",{"_index":2789,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":2452,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":2456,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":2455,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":2453,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":2460,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":2458,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":2457,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":2459,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":2454,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":2921,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":2924,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":2462,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":2464,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":2484,"title":{},"body":{"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:11",{"_index":2493,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:16",{"_index":2491,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:21",{"_index":2495,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:7",{"_index":2489,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":2949,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:6",{"_index":2950,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:9",{"_index":2951,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":2501,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":2506,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":2504,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":2953,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":2958,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":2956,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":2931,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":2934,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":2936,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":2947,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":4431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts",{"_index":592,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:22",{"_index":596,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:25",{"_index":598,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:32",{"_index":600,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:38",{"_index":602,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:8",{"_index":623,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts",{"_index":499,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:10",{"_index":503,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:7",{"_index":501,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts",{"_index":788,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14",{"_index":1231,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17",{"_index":1230,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21",{"_index":791,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:29",{"_index":798,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:32",{"_index":799,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:36",{"_index":797,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:39",{"_index":795,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:43",{"_index":851,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:51",{"_index":852,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6",{"_index":1229,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts",{"_index":854,"title":{},"body":{"classes/DashboardModelMapper.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:21",{"_index":859,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:45",{"_index":864,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:6",{"_index":861,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts",{"_index":909,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:10",{"_index":1648,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:14",{"_index":912,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:18",{"_index":916,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:24",{"_index":917,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:30",{"_index":914,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:36",{"_index":915,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:8",{"_index":1647,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:9",{"_index":1646,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/server.controller.ts",{"_index":2567,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":2568,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":2573,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":5493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":323,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":337,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":340,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":339,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":338,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":335,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":341,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":342,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":2969,"title":{},"body":{"classes/ValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":2971,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":4436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":1259,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":1233,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":2876,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":2887,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":2885,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":2884,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":2889,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":2891,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":2417,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":2424,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":2427,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":2432,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":2436,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":2439,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":2438,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":2437,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":2435,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":2444,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":4437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/decode",{"_index":4439,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4441,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":4443,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":246,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":250,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":249,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":253,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":409,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:29",{"_index":424,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:32",{"_index":422,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:36",{"_index":428,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:40",{"_index":432,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:44",{"_index":436,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:48",{"_index":434,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:52",{"_index":418,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:65",{"_index":441,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":485,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":491,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":488,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:26",{"_index":492,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":702,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:109",{"_index":720,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:113",{"_index":718,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:125",{"_index":726,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":1226,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:22",{"_index":1227,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:24",{"_index":1225,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:32",{"_index":1228,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:49",{"_index":1614,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:56",{"_index":1615,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:58",{"_index":1616,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:62",{"_index":1617,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:77",{"_index":716,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:79",{"_index":713,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:81",{"_index":717,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:83",{"_index":715,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:85",{"_index":723,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:92",{"_index":728,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:96",{"_index":712,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":1398,"title":{},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:16",{"_index":1401,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:19",{"_index":1400,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":1663,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:14",{"_index":1902,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:17",{"_index":1901,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:20",{"_index":1900,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":509,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":2089,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":2080,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":2082,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":2083,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":2085,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":2086,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":2087,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":2088,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":2084,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":2081,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":2090,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":2079,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:79",{"_index":2091,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":1688,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:15",{"_index":2481,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:19",{"_index":2482,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:29",{"_index":2478,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2514,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:7",{"_index":2515,"title":{},"body":{"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":1698,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:23",{"_index":2604,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":2602,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":2598,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":2605,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:36",{"_index":2597,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":2603,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:43",{"_index":2599,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":2600,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":2601,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:51",{"_index":2606,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:57",{"_index":2596,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":1738,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:24",{"_index":2633,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:27",{"_index":2629,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:30",{"_index":2631,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:33",{"_index":2634,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:36",{"_index":2636,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:39",{"_index":2630,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:42",{"_index":2632,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:45",{"_index":2635,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:47",{"_index":2638,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:52",{"_index":2637,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:68",{"_index":2628,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":2850,"title":{},"body":{"classes/Team.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:7",{"_index":2851,"title":{},"body":{"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":1779,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:19",{"_index":2913,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:22",{"_index":2914,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:25",{"_index":2915,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:29",{"_index":2918,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:33",{"_index":2911,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/factory/course.factory.ts",{"_index":4448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/school.factory.ts",{"_index":4450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/user.factory.ts",{"_index":4452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":1652,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":1633,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5429,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":1619,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5430,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/vo/task",{"_index":1768,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["apps/server/src/shared/infra/console/console",{"_index":360,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"coverage.html":{}}}],["apps/server/src/shared/infra/database/management/database",{"_index":1026,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"coverage.html":{}}}],["apps/server/src/shared/infra/file",{"_index":1403,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":255,"title":{},"body":{"injectables/BaseRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":278,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":274,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":276,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":280,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":287,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":283,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":285,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":269,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":267,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":272,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson",{"_index":1916,"title":{},"body":{"classes/LessonScope.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts",{"_index":1904,"title":{},"body":{"injectables/LessonRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:15",{"_index":1908,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:9",{"_index":1906,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":4457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":2531,"title":{},"body":{"classes/Scope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:11",{"_index":2533,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:17",{"_index":2538,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:25",{"_index":2536,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:9",{"_index":2535,"title":{},"body":{"classes/Scope.html":{}}}],["appthis",{"_index":4654,"title":{},"body":{"index.html":{}}}],["arc",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4646,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":5954,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5324,"title":{},"body":{"license.html":{}}}],["archives",{"_index":6001,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":6121,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":6014,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4486,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":2553,"title":{},"body":{"classes/ServerConsole.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":6167,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":1506,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5652,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":5291,"title":{},"body":{"license.html":{}}}],["around",{"_index":5337,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":5210,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":5221,"title":{},"body":{"license.html":{}}}],["array",{"_index":1436,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":869,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["array.isarray(collectionnamefilter",{"_index":1166,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["array.isarray(constraint",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":1328,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":4929,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1218,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["ascending",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["asking",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4754,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":6214,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":5163,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":5930,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":4879,"title":{},"body":{"license.html":{}}}],["assume",{"_index":5283,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":5965,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5309,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":5113,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":3950,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5857,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5315,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":98,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":101,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":5123,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":5097,"title":{},"body":{"license.html":{}}}],["aud",{"_index":1819,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":1827,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":5852,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":5351,"title":{},"body":{"todo.html":{}}}],["auth.guard.ts",{"_index":1802,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":151,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":1303,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":1311,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":1319,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":1321,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":1315,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":1313,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":1317,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":1810,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":1832,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":1831,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":681,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":690,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1640,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5862,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":3154,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":1803,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1804,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":112,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":5096,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":2804,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":149,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":138,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":144,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":5090,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":5187,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":5225,"title":{},"body":{"license.html":{}}}],["authors",{"_index":5102,"title":{},"body":{"license.html":{}}}],["auto",{"_index":5590,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":6087,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":3421,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":4143,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":6092,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1161,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":1739,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{}}}],["avoid",{"_index":3318,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":6138,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4733,"title":{},"body":{"license.html":{}}}],["aws",{"_index":4363,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3065,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1691,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backuop",{"_index":1198,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup",{"_index":1113,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup.js",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":2237,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":6024,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":730,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('dashboard",{"_index":763,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["badrequestexception('invalid",{"_index":2451,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('target",{"_index":781,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["bar",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":325,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":446,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["base64",{"_index":4602,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":93,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":1103,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["basedir",{"_index":1088,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baseentity",{"_index":206,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/School.html":{},"classes/Team.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":2517,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:7",{"_index":2516,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentitywithtimestamps",{"_index":222,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":437,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":439,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":438,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":440,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["basepath",{"_index":1080,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baserepo",{"_index":254,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"coverage.html":{}}}],["baserepo:14",{"_index":2256,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:19",{"_index":2254,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:27",{"_index":2255,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:36",{"_index":2257,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:40",{"_index":2260,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:44",{"_index":2258,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:48",{"_index":2259,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:53",{"_index":2252,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:9",{"_index":2253,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["basic",{"_index":4888,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":3622,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":109,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4494,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":4766,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":4776,"title":{},"body":{"license.html":{}}}],["before",{"_index":582,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":6181,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":6169,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5568,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4684,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4908,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":3039,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":393,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":2880,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":3884,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":5219,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4915,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4760,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5428,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5312,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":2038,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":3376,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4984,"title":{},"body":{"license.html":{}}}],["bind",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["birthdate",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":6096,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":6103,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blue",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["bob",{"_index":6000,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":680,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4594,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":975,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICreateNews.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4442,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":4638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":2871,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.boot([process.argv0",{"_index":2875,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":2869,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":6168,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["boss",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["bosscloud",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":3941,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["box",{"_index":6161,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":3162,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":3303,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":5995,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":5333,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5331,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["bson",{"_index":318,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["bson.ejson.deserialize(bsondocuments",{"_index":322,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson.ejson.serialize(documents",{"_index":320,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson/ejson",{"_index":314,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bsonconverter",{"_index":299,"title":{"injectables/BsonConverter.html":{}},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"coverage.html":{},"overview.html":{}}}],["bsondocuments",{"_index":312,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["btw",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5840,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["bufferencoding",{"_index":1455,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["buffers",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1520,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["building",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":5570,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":3400,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5343,"title":{},"body":{"todo.html":{}}}],["business",{"_index":326,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":38,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":6074,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["bycourseids",{"_index":1918,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycourseids(courseids",{"_index":1920,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bydraft",{"_index":2760,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft(isdraft",{"_index":2766,"title":{},"body":{"classes/TaskScope.html":{}}}],["byhidden",{"_index":1919,"title":{},"body":{"classes/LessonScope.html":{}}}],["byhidden(ishidden",{"_index":1922,"title":{},"body":{"classes/LessonScope.html":{}}}],["bylessonids",{"_index":2761,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonids(lessonids",{"_index":2768,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypassdocumentvalidation",{"_index":1064,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["bytargets",{"_index":2317,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":2319,"title":{},"body":{"classes/NewsScope.html":{}}}],["byteacherid",{"_index":2762,"title":{},"body":{"classes/TaskScope.html":{}}}],["byteacherid(userid",{"_index":2770,"title":{},"body":{"classes/TaskScope.html":{}}}],["byunpublished",{"_index":2318,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":2321,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":2609,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":2612,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":978,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":2485,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5719,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":4022,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":5868,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":1263,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":2060,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":3183,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":1268,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":1551,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":3730,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":5929,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":6227,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["capabilities",{"_index":5574,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capitalization",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":3754,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5834,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":6048,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":6079,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4962,"title":{},"body":{"license.html":{}}}],["case",{"_index":1298,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":4775,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1499,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":1504,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5842,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":2896,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":2899,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5844,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":3558,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":1937,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":108,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":5127,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1620,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":5087,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":5137,"title":{},"body":{"license.html":{}}}],["chain",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":3319,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4498,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":2992,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1475,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":2983,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2985,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":3112,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":3372,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":5872,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":5066,"title":{},"body":{"license.html":{}}}],["characters",{"_index":1427,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":4745,"title":{},"body":{"license.html":{}}}],["chat",{"_index":3522,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":233,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":1590,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4693,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4697,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":4088,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":6039,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":4661,"title":{},"body":{"index.html":{}}}],["children",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":4149,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":5273,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4574,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":4913,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4921,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5308,"title":{},"body":{"license.html":{}}}],["claim",{"_index":5177,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5189,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":1347,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":1795,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":3041,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":458,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":1194,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["clearcollection",{"_index":1030,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearcollection(collectionname",{"_index":1040,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearly",{"_index":6053,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5606,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":329,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":2009,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":4698,"title":{},"body":{"index.html":{}}}],["close",{"_index":2057,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":6195,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":5305,"title":{},"body":{"license.html":{}}}],["closing",{"_index":3745,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4639,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3325,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":4359,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2577,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4550,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4536,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5363,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":139,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":142,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":140,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":141,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule",{"_index":356,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_exports",{"_index":358,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_providers",{"_index":357,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":382,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule",{"_index":1022,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_exports",{"_index":1024,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_imports",{"_index":1023,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":1348,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":1349,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":1350,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule",{"_index":1482,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_exports",{"_index":1483,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_providers",{"_index":1484,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":1895,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":1896,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1946,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1947,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1948,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":1991,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":1993,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":1992,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":2218,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":2221,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":2219,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":2220,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":2559,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":2560,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["cluster_servermodule",{"_index":2570,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":2571,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":2701,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":2702,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2943,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2944,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2945,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":5836,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":4056,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":4069,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":1600,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":5250,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":444,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(modelentity",{"_index":907,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["collection(this",{"_index":429,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["collection.deletemany",{"_index":1067,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.find({}).toarray",{"_index":1065,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.insertmany(jsondocuments",{"_index":1062,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.name",{"_index":1073,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionexists",{"_index":1031,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionexists(collectionname",{"_index":1042,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname",{"_index":1005,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter",{"_index":1115,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter.length",{"_index":1167,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter?.includes(collectionname",{"_index":1170,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnames",{"_index":1071,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname}.json",{"_index":1152,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections",{"_index":964,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{}}}],["collections.includes(collectionname",{"_index":1075,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collection",{"_index":1072,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collectionname",{"_index":1150,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport",{"_index":1206,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport.map(async",{"_index":1208,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed",{"_index":1179,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed.map(async",{"_index":1182,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionswithfilepaths",{"_index":1149,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["color",{"_index":410,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["columnnames",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["columns",{"_index":703,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["colums",{"_index":758,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["combine",{"_index":5260,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":4979,"title":{},"body":{"license.html":{}}}],["come",{"_index":4624,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["comes",{"_index":4969,"title":{},"body":{"license.html":{}}}],["command",{"_index":970,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":962,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["commander",{"_index":4504,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commandresponse",{"_index":2874,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4843,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":1699,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["commentschema",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":5052,"title":{},"body":{"license.html":{}}}],["commit",{"_index":3858,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":5202,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4696,"title":{},"body":{"index.html":{}}}],["common",{"_index":4523,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4884,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4729,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":5932,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":1518,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":6269,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4975,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4983,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5234,"title":{},"body":{"license.html":{}}}],["compile",{"_index":1257,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4869,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":4692,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completed",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":1940,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":5159,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4905,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5602,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":3539,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4674,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":4506,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":2818,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":4817,"title":{},"body":{"license.html":{}}}],["computetaskstatusforstudent",{"_index":2780,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforstudent(task",{"_index":2786,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher",{"_index":2781,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher(task",{"_index":2788,"title":{},"body":{"injectables/TaskUC.html":{}}}],["concept",{"_index":3297,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5890,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":5266,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":5951,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":4508,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":6107,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":5228,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4786,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":2580,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2574,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":2589,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":2590,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":2588,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":5526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":5612,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5536,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":390,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":5889,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":4137,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4675,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2058,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":5403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":3410,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":3432,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["consentversionservice",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":5148,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5290,"title":{},"body":{"license.html":{}}}],["consider",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":5115,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":6045,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":3717,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":5970,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":363,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console/database",{"_index":2004,"title":{},"body":{"modules/ManagementModule.html":{}}}],["consolelogger",{"_index":1927,"title":{},"body":{"injectables/Logger.html":{}}}],["consolemodule",{"_index":2562,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":959,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{}}}],["consolewritermodule",{"_index":355,"title":{"modules/ConsoleWriterModule.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["consolewriterservice",{"_index":359,"title":{"injectables/ConsoleWriterService.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"coverage.html":{},"overview.html":{}}}],["conspicuously",{"_index":4950,"title":{},"body":{"license.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4897,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('dashboard_repo",{"_index":946,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(@inject(request",{"_index":1380,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":1979,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":956,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":2642,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["constructor(dashboardrepo",{"_index":939,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":2434,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":265,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":1309,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":2975,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(filesystemadapter",{"_index":1089,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["constructor(id",{"_index":710,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["constructor(message",{"_index":2970,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":2342,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(operator",{"_index":2532,"title":{},"body":{"classes/Scope.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":416,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["constructor(protected",{"_index":288,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":1395,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":2503,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(task",{"_index":1776,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":2784,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":1291,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":333,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":1838,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":2955,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":2933,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":5238,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":5035,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":3443,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":5235,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4620,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":4689,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":2279,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":512,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":92,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":97,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":5199,"title":{},"body":{"license.html":{}}}],["context",{"_index":1270,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":6229,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":3713,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":5060,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":5112,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5244,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4736,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":5186,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5188,"title":{},"body":{"license.html":{}}}],["control",{"_index":4258,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":5191,"title":{},"body":{"license.html":{}}}],["controller",{"_index":664,"title":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('dashboard",{"_index":691,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('management/database",{"_index":1014,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["controller('news",{"_index":2125,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":2671,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":2860,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":2928,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":5902,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dashboard.controller",{"_index":1898,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/database",{"_index":2002,"title":{},"body":{"modules/ManagementModule.html":{}}}],["controller/dto",{"_index":832,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":2960,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":2624,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":2228,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":2705,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":2229,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":666,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"modules/ManagementModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":4836,"title":{},"body":{"license.html":{}}}],["convention",{"_index":6099,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convert",{"_index":1219,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["converted",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["converter/bson.converter",{"_index":1135,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["convey",{"_index":4823,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5223,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":5067,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4831,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":5111,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4728,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4722,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3762,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":4787,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4724,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4712,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4794,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4911,"title":{},"body":{"license.html":{}}}],["core",{"_index":389,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6293,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":2581,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":6080,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":6057,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":6058,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":381,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":3120,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":5285,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":4179,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":4872,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3134,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":5005,"title":{},"body":{"license.html":{}}}],["count",{"_index":506,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":505,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":2268,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":2736,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":5178,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5431,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":4821,"title":{},"body":{"license.html":{}}}],["country",{"_index":5215,"title":{},"body":{"license.html":{}}}],["counts",{"_index":5427,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":408,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":493,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["coursefactory",{"_index":4449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":484,"title":{"classes/CourseGroup.html":{}},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":1707,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegroupid",{"_index":1716,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegrouprepo",{"_index":498,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{},"coverage.html":{}}}],["coursegroups",{"_index":494,"title":{},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["coursegroupsofuser",{"_index":2620,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":490,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseids",{"_index":504,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["coursename",{"_index":2746,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":508,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":583,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courserepo",{"_index":591,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"coverage.html":{},"overview.html":{}}}],["courses",{"_index":466,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsScope.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursescope",{"_index":605,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["court",{"_index":5243,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5304,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":5205,"title":{},"body":{"license.html":{}}}],["cover",{"_index":6005,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":3697,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4806,"title":{},"body":{"license.html":{}}}],["covers",{"_index":6220,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1184,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":2126,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":2097,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":2344,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcollection",{"_index":1032,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcollection(collectionname",{"_index":1044,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcurrenttestuser",{"_index":4432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1453,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{}}}],["createdat.$date",{"_index":1217,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["createdir",{"_index":1407,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdir(folderpath",{"_index":1416,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createerrorresponse",{"_index":1500,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":1508,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":1535,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":1542,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":1524,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":1557,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":1541,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":1561,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":1538,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":519,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":547,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":2031,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":6225,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":5959,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":627,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":5460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":1968,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":1974,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":1888,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":1892,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":1418,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":372,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["createtestmodule",{"_index":1252,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtmpdir",{"_index":1408,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createtmpdir(dirnameprefix",{"_index":1420,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["creating",{"_index":631,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1596,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":513,"title":{},"body":{"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":524,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4848,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":391,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5851,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":5952,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":6017,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":4512,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":3265,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1578,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1580,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":225,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":5140,"title":{},"body":{"license.html":{}}}],["curentuser",{"_index":2803,"title":{},"body":{"injectables/TaskUC.html":{}}}],["current",{"_index":1104,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currentdatetime",{"_index":1143,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["currently",{"_index":2040,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":696,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":2128,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":2823,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":693,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":1300,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":6076,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4997,"title":{},"body":{"license.html":{}}}],["customary",{"_index":5257,"title":{},"body":{"license.html":{}}}],["customer",{"_index":5002,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":394,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":1944,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5629,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":452,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":5288,"title":{},"body":{"license.html":{}}}],["dash",{"_index":3888,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dashboard",{"_index":669,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{}}}],["dashboard.getgrid().map((elementwithposition",{"_index":836,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.id",{"_index":834,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.model.entity",{"_index":866,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.model.mapper",{"_index":918,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.moveelement(from",{"_index":949,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard_repo",{"_index":1899,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":665,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardentity",{"_index":701,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["dashboardentity(modelentity.id",{"_index":879,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementmodel",{"_index":787,"title":{"classes/DashboardGridElementModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel(elementwithposition.gridelement.getid",{"_index":883,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementresponse",{"_index":815,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboardid",{"_index":678,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{}}}],["dashboardmapper",{"_index":688,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"coverage.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":694,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":925,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":811,"title":{"classes/DashboardModelEntity.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelentity(entity.getid",{"_index":902,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper",{"_index":853,"title":{"classes/DashboardModelMapper.html":{}},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["dashboardmodelmapper.mapgridelementtomodel(elementwithposition",{"_index":905,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.maptoentity(dashboardmodel",{"_index":927,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelmapper.maptomodel(entity",{"_index":921,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardprops",{"_index":711,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":908,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardresponse",{"_index":687,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboards",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["dashboarduc",{"_index":685,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":838,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/Options.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":847,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.id",{"_index":841,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":845,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":843,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5739,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":963,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":2592,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":2021,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:51",{"_index":2023,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:64",{"_index":2025,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":2020,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database/types.ts",{"_index":5421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasemanagementconsole",{"_index":951,"title":{"classes/DatabaseManagementConsole.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["databasemanagementcontroller",{"_index":995,"title":{"controllers/DatabaseManagementController.html":{}},"body":{"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"coverage.html":{}}}],["databasemanagementmodule",{"_index":1021,"title":{"modules/DatabaseManagementModule.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemanagementservice",{"_index":1025,"title":{"injectables/DatabaseManagementService.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"coverage.html":{},"overview.html":{}}}],["databasemanagementuc",{"_index":957,"title":{"injectables/DatabaseManagementUc.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"coverage.html":{},"overview.html":{}}}],["databases",{"_index":6270,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5713,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5539,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":1279,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":5522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":5833,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":3294,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1038,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":1489,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":1490,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":1491,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":5424,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbs",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":5979,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1670,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":1674,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":1685,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4676,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":2594,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4933,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1863,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":3398,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":6046,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":347,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":5103,"title":{},"body":{"license.html":{}}}],["decoded",{"_index":4621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodehtmlentities",{"_index":2758,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decorated",{"_index":1606,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4619,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decryption",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":3227,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4923,"title":{},"body":{"license.html":{}}}],["default",{"_index":247,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default...what",{"_index":455,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":420,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":421,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":423,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5538,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultcolumns",{"_index":731,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreference",{"_index":739,"title":{"classes/DefaultGridReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["defaultgridreference(loaded.id",{"_index":876,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultgridreferencemodel",{"_index":802,"title":{"classes/DefaultGridReferenceModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel(elementwithposition.gridelement.getmetadata().id",{"_index":891,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultmessage",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":2056,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaultrows",{"_index":733,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":640,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":2883,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":5282,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4761,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5240,"title":{},"body":{"license.html":{}}}],["define",{"_index":229,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":5549,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2008,"title":{},"body":{"modules/ManagementModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":1245,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":1249,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":1232,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1191,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":2100,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":2346,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":2099,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":3305,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedcount",{"_index":1066,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["deletedid",{"_index":2143,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":3609,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":6091,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":5072,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5203,"title":{},"body":{"license.html":{}}}],["depend",{"_index":6015,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":3062,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependent",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["depending",{"_index":1442,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["depends",{"_index":1429,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["deploy",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1375,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":5211,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1661,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5849,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":6111,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":6112,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":6247,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptions",{"_index":1753,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["descriptive",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deserialize",{"_index":301,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["deserialize(bsondocuments",{"_index":303,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["deserializes",{"_index":305,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["design",{"_index":5635,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":5013,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4727,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5837,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5871,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":5264,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":2974,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":2976,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4672,"title":{},"body":{"index.html":{}}}],["details",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1177,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":5489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":3776,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":5044,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6281,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5562,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4640,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":6100,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3304,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":3828,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":4704,"title":{},"body":{"index.html":{}}}],["di",{"_index":5913,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["diagonalsize",{"_index":932,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dictionary",{"_index":1997,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["die",{"_index":3335,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4547,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5391,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":5263,"title":{},"body":{"license.html":{}}}],["different",{"_index":2280,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":5094,"title":{},"body":{"license.html":{}}}],["digits",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1100,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["direct",{"_index":1972,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4909,"title":{},"body":{"license.html":{}}}],["directions",{"_index":5018,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4810,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":1419,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"todo.html":{}}}],["dirnameprefix",{"_index":1424,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["dirpath",{"_index":1470,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["disable",{"_index":577,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":4943,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5274,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":5092,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":5982,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":5990,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":223,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":555,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":587,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":5226,"title":{},"body":{"license.html":{}}}],["display",{"_index":3004,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["displayat",{"_index":514,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":736,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":639,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4833,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":4089,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":5554,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":6122,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":5267,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4720,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5319,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5229,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4788,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":3253,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5379,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":632,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":3667,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":2987,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":306,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doe",{"_index":5529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":2044,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":6256,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":5347,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":4513,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/TaskScope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4695,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":6129,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":6134,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":6148,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":6143,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":6151,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":5046,"title":{},"body":{"license.html":{}}}],["down",{"_index":6094,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":5156,"title":{},"body":{"license.html":{}}}],["draft",{"_index":2721,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["drafts",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["driven",{"_index":5978,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":5423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["drop/create",{"_index":1188,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["dropcollection",{"_index":1033,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropcollection(collectionname",{"_index":1046,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropdown",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":6007,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":630,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5894,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.availabledate",{"_index":2684,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.content",{"_index":2181,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":2697,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":2202,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":2197,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":2183,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":2699,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":2686,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":2466,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.gridelements",{"_index":835,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":833,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":2468,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":2524,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":2206,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":2474,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":2195,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":2472,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":2185,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":2187,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":2690,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":2193,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":2189,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":2191,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":2179,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":2210,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":2204,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":2200,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":1513,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":1512,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":2926,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":2134,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":1589,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":5508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1740,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["dummy",{"_index":3108,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["duplicate",{"_index":3684,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":4996,"title":{},"body":{"license.html":{}}}],["duration",{"_index":1261,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":1258,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":3139,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":5043,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4880,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1957,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":870,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":226,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":1569,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.reference.load",{"_index":872,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e.value",{"_index":1570,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.xpos",{"_index":873,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e.ypos",{"_index":874,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e2e",{"_index":2232,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":3758,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4805,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":1365,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":530,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":5302,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4940,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4924,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5317,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5717,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":6093,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":5171,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":5320,"title":{},"body":{"license.html":{}}}],["element",{"_index":764,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{}}}],["element.gridelement",{"_index":773,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementdto",{"_index":837,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":846,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":840,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":844,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":842,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":849,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":850,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elements",{"_index":827,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["elementtomove",{"_index":778,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementwithposition",{"_index":848,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement.getid",{"_index":882,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement.getmetadata",{"_index":839,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementwithposition.gridelement.getmetadata().displaycolor",{"_index":893,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement.getmetadata().id",{"_index":890,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement.getmetadata().title",{"_index":895,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementwithposition.pos.x",{"_index":885,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementwithposition.pos.y",{"_index":887,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["eligible",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":268,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.findone",{"_index":889,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.findone(dashboardgridelementmodel",{"_index":881,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.findone(dashboardmodelentity",{"_index":900,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.flush",{"_index":6266,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":6240,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1780,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":5991,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":6277,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":4992,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5326,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1449,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":2323,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":625,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":6008,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":1595,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":1591,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":1602,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":4438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4825,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5703,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encoded",{"_index":1443,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encoding",{"_index":1406,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encodings",{"_index":4623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encouraged",{"_index":4769,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":1213,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6286,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6292,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":3288,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":3800,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":2862,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":5980,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4945,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":168,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4655,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":1886,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":5236,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4967,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5252,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":181,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":298,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":292,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.transformer.ts",{"_index":4440,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":4415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.getid",{"_index":901,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":5893,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":1622,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/role.entity",{"_index":1641,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["entity/school.entity",{"_index":1623,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/task.entity",{"_index":1773,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["entity/team.entity",{"_index":1624,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entityid",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entityids",{"_index":2658,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["entitymanager",{"_index":266,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2012,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":3119,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1858,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":541,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":4608,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":651,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":3149,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":5356,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":3829,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["eol",{"_index":1414,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["eq",{"_index":1925,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["equal",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":4900,"title":{},"body":{"license.html":{}}}],["err",{"_index":2900,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":6149,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":1676,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":1288,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":1497,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":1503,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":1507,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":1509,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":1537,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":1346,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":1573,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":1564,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":404,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":384,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":1563,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":43,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":1547,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":354,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":1533,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":68,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":4515,"title":{},"body":{"dependencies.html":{}}}],["escaped",{"_index":4630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":576,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":581,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":1565,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":4866,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2650,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["etc",{"_index":4318,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":6081,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":6082,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":4182,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":3160,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":3405,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":4718,"title":{},"body":{"license.html":{}}}],["everything",{"_index":3748,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":1867,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4804,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":4878,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["examples",{"_index":4633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exceeds",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":3348,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":1285,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":1530,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":1525,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1527,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":1559,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":1612,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":1498,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":1529,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1523,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":1964,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":1970,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":5033,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3598,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":3916,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":5196,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4903,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":5245,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4860,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2233,"title":{},"body":{"modules/NewsModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5848,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":2238,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5557,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":4816,"title":{},"body":{"license.html":{}}}],["execution",{"_index":2878,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":1267,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":5172,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4941,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1454,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":880,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/JwtConstants.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"interfaces/Options.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existingreference",{"_index":888,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["existinguser",{"_index":6040,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1195,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["existssync",{"_index":1460,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["existssync(folderpath",{"_index":1468,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["exit",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["exp",{"_index":1818,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":6150,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":6251,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":6132,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":6153,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":6211,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":6135,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":6216,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":6250,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":6126,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":5050,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":6210,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":6147,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":3939,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":5983,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":6139,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":1836,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":1830,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":1376,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":4894,"title":{},"body":{"license.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exportcollection",{"_index":999,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(@param('collectionname",{"_index":1019,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(collectionname",{"_index":1002,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollections",{"_index":954,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{}}}],["exportcollections(options",{"_index":960,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["exportcollectionstofilesystem",{"_index":1081,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["exportcollectionstofilesystem(collections",{"_index":1092,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exported",{"_index":1098,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exportedcollections",{"_index":1207,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exportedcollections.push(`${collectionname}:${sortedbsondocuments.length",{"_index":1224,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exporting",{"_index":3945,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":147,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3148,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5763,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":1373,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":5276,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":1567,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":5122,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1592,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":307,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4978,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4835,"title":{},"body":{"license.html":{}}}],["external",{"_index":3590,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":1808,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":515,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":1782,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":2912,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":1610,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":1844,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1852,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5859,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":5109,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":645,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["f23f76",{"_index":747,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["facade",{"_index":3815,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":6109,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":5258,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4904,"title":{},"body":{"license.html":{}}}],["factory",{"_index":6086,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":3560,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6287,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":3596,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":5297,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4899,"title":{},"body":{"license.html":{}}}],["fake",{"_index":742,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fallback",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":980,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILessonProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Options.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":5038,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4688,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4802,"title":{},"body":{"license.html":{}}}],["fast",{"_index":6002,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4587,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":5047,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":150,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5772,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":1322,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":148,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersapp",{"_index":1382,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":1393,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":145,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":1344,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":1515,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":1389,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4461,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4463,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":4464,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":1374,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4465,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4466,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":143,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":1361,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":1368,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":1310,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":1377,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":3133,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4687,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5603,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":4960,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":6016,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["ffffff",{"_index":5513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":2977,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":426,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":5345,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.collectionname",{"_index":1176,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["file.entity",{"_index":1708,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["fileids",{"_index":1719,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":1157,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application.html":{}}}],["filename.split('.')[0",{"_index":1158,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames",{"_index":1153,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["filenames.map((filename",{"_index":1155,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filepath",{"_index":1137,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["files",{"_index":991,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["filestorage/security",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["filesystem",{"_index":965,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["filesystemadapter",{"_index":1090,"title":{"injectables/FileSystemAdapter.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"coverage.html":{},"overview.html":{}}}],["filesystemmodule",{"_index":1481,"title":{"modules/FileSystemModule.html":{}},"body":{"modules/FileSystemModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["filter",{"_index":981,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"modules/ErrorModule.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2839,"title":{},"body":{"injectables/TaskUC.html":{}}}],["filter.query.ts",{"_index":2146,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":2152,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":2150,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":2155,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":2335,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":1287,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":1120,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["filteredcollectionswithfilepaths",{"_index":1168,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths.length",{"_index":1171,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filterquery",{"_index":621,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":1119,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/LessonRepo.html":{},"classes/NewsFilterQuery.html":{},"injectables/TaskRepo.html":{}}}],["filters?.afterduedateornone",{"_index":2734,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.draft",{"_index":2732,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.hidden",{"_index":1913,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["final",{"_index":6047,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":5132,"title":{},"body":{"license.html":{}}}],["find",{"_index":1364,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":1367,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":2094,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":2103,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findall(targets",{"_index":2243,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbycourseids",{"_index":1905,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbycourseids(courseids",{"_index":1907,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbyparentids",{"_index":2709,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids(parentids",{"_index":2712,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbytaskids",{"_index":2610,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":2614,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuserid",{"_index":593,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":597,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/SubmissionRepo.html":{}}}],["findallforstudent",{"_index":594,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforstudent(userid",{"_index":599,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":595,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":601,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteam",{"_index":2855,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":2856,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":2337,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":2348,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":6207,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":500,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":502,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":2486,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":2490,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":2487,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":2492,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["finddocumentsofcollection",{"_index":1034,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["finddocumentsofcollection(collectionname",{"_index":1048,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["findforuser",{"_index":670,"title":{},"body":{"controllers/DashboardController.html":{}}}],["finding",{"_index":1630,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":2241,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":2246,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":2095,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":2108,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":2242,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":2250,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":2338,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":2354,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2011,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["findtasksandcount",{"_index":2710,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":2717,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":6066,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":2353,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstlogin",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":1643,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["fit",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":5278,"title":{},"body":{"license.html":{}}}],["fix",{"_index":3008,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":2994,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":3743,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixme",{"_index":2771,"title":{},"body":{"classes/TaskScope.html":{}}}],["fixtures",{"_index":6177,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":2154,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flags",{"_index":977,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["flow",{"_index":4885,"title":{},"body":{"license.html":{}}}],["flush",{"_index":256,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["fly",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":6021,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":6219,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":990,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folderpath",{"_index":1138,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["folders",{"_index":5888,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":4250,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":3529,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5609,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":617,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":606,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4939,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":5963,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":1608,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":3812,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["forceserverobjectid",{"_index":1063,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["foreign",{"_index":6276,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":6213,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":4276,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":449,"title":{},"body":{"classes/Course.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":3992,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4987,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1953,"title":{},"body":{"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1954,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2015,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4715,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5853,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4713,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4734,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4527,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":5972,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":5971,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":1461,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fs.rm",{"_index":1474,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fsp",{"_index":1459,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["fulfilled",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4927,"title":{},"body":{"license.html":{}}}],["full",{"_index":1428,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fully",{"_index":745,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["function",{"_index":1534,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":392,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":5061,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4613,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":5015,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":532,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5607,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":3230,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":4629,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["generate",{"_index":3755,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4666,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4625,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":2109,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":2857,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('me",{"_index":2923,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":1370,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getbasedir",{"_index":1127,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["getcollectionnames",{"_index":1035,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdashboardbyid",{"_index":910,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":913,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdatabasecollection",{"_index":1036,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdatabasecollection(collectionname",{"_index":1051,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdb",{"_index":1054,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdefaultmaxduedate",{"_index":2782,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getdescriptions",{"_index":1752,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getdetails",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getentitypermissions",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteol",{"_index":1456,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["getgrid",{"_index":706,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gethello",{"_index":1235,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":707,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getinout",{"_index":2548,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":2552,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getitems",{"_index":2838,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getmetadata",{"_index":738,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getnewspermissions",{"_index":2339,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":2356,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofstudents",{"_index":415,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getparentid",{"_index":486,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":2641,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(userid",{"_index":2644,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":1304,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":1312,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":1305,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":1314,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":2537,"title":{},"body":{"classes/Scope.html":{}}}],["getrequiredpermissions",{"_index":2340,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":2359,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getseedfolder",{"_index":1082,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getservice",{"_index":1394,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":1381,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":2341,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":2362,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfolder",{"_index":1083,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["gettargetfolder(toseedfolder",{"_index":1101,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getter",{"_index":453,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":2888,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":2981,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":1306,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":1316,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":1307,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":1318,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":911,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":1308,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":1320,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":2954,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(userid",{"_index":2957,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":4645,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git://github.com/hpi",{"_index":4535,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/leeroybrun/mongoose",{"_index":4558,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/schul",{"_index":4549,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3263,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4957,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1164,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":1352,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4963,"title":{},"body":{"license.html":{}}}],["global",{"_index":399,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":1487,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":1286,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":1582,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":1792,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":1492,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":1585,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":4708,"title":{},"body":{"license.html":{}}}],["go",{"_index":3333,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5387,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4781,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":5998,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":1959,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":4635,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":5084,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4782,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":1700,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":1701,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["graded",{"_index":1770,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradedstudentids",{"_index":2836,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradefileids",{"_index":1721,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":1702,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":5104,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4889,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5151,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5334,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":5014,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5311,"title":{},"body":{"license.html":{}}}],["grid",{"_index":704,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridarray",{"_index":931,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["gridelement",{"_index":753,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["gridelement(e.id",{"_index":875,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelementreferencemetadata",{"_index":734,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":813,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["gridelementwithposition",{"_index":719,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridindexfromposition",{"_index":708,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["gridindexfromposition(pos",{"_index":721,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridposition",{"_index":722,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["group",{"_index":2647,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["grouping",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":2651,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["gt",{"_index":2333,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":2778,"title":{},"body":{"classes/TaskScope.html":{}}}],["guarantee",{"_index":2138,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5462,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":5916,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5864,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5548,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":6252,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":2072,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":2775,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handlebars",{"_index":4627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":327,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":3989,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":1550,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":395,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":5950,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":6200,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hardcodedtestdashboardid",{"_index":928,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["hash",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["haspermission",{"_index":2822,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":2783,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":2794,"title":{},"body":{"injectables/TaskUC.html":{}}}],["having",{"_index":4902,"title":{},"body":{"license.html":{}}}],["header",{"_index":1825,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4768,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":456,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":6166,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":1519,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":3853,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":6140,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":6128,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5577,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":231,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":5193,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5880,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":1664,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":6022,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":5966,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1187,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4548,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4551,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":5129,"title":{},"body":{"license.html":{}}}],["holders",{"_index":5091,"title":{},"body":{"license.html":{}}}],["holding",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":3454,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1713,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":1744,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":3752,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":3890,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":457,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":1505,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":1579,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":5020,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5380,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":5039,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2575,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":522,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["htmlcontent",{"_index":103,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":105,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["http",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4717,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/licenses",{"_index":5330,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":332,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":6073,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":5917,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":6254,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5362,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":6010,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3324,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":6019,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":5953,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5349,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5759,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpstatus",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":58,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":348,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":6077,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["i...properties",{"_index":462,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":1817,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icollectionfilepath",{"_index":1136,"title":{"interfaces/ICollectionFilePath.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"coverage.html":{}}}],["icons",{"_index":6289,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":487,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"coverage.html":{}}}],["icourseproperties",{"_index":417,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{}}}],["icreatenews",{"_index":1618,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":697,"title":{"interfaces/ICurrentUser.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":2445,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":2447,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":5409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardrepo",{"_index":919,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["identical",{"_index":1882,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":5217,"title":{},"body":{"license.html":{}}}],["identified",{"_index":6083,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":792,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["identifier",{"_index":1294,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":1881,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":6106,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":6267,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":182,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{}}}],["ierrortype",{"_index":334,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":6033,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":6042,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":6035,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":1399,"title":{"interfaces/IFileProperties.html":{}},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{},"coverage.html":{}}}],["ifindoptions",{"_index":1651,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["iframe",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":4054,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":1853,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["igridelement",{"_index":752,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["igridelementreference",{"_index":737,"title":{"interfaces/IGridElementReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["ilessonproperties",{"_index":1662,"title":{"interfaces/ILessonProperties.html":{}},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"coverage.html":{}}}],["ilogger",{"_index":1501,"title":{"interfaces/ILogger.html":{}},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":1372,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":1390,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":1360,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4656,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":1930,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":4865,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":5918,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":1814,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":740,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":5964,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":6265,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":5239,"title":{},"body":{"license.html":{}}}],["import",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":1378,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importcollection",{"_index":1000,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollection(@param('collectionname",{"_index":1016,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["importcollection(collectionname",{"_index":1008,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollections",{"_index":1001,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["imported",{"_index":1202,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importeddocumentsamount",{"_index":1199,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importer",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":5184,"title":{},"body":{"license.html":{}}}],["imports",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":5114,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5242,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":2330,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":4762,"title":{},"body":{"license.html":{}}}],["improves",{"_index":6088,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5895,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":5292,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5294,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4716,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5289,"title":{},"body":{"license.html":{}}}],["include",{"_index":221,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":4861,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4820,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":1448,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4986,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1597,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":4767,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":5259,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":5042,"title":{},"body":{"license.html":{}}}],["increase",{"_index":3498,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":5110,"title":{},"body":{"license.html":{}}}],["independant",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":6050,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4976,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@manytomany('user",{"_index":430,"title":{},"body":{"classes/Course.html":{}}}],["index()@manytoone('school",{"_index":425,"title":{},"body":{"classes/Course.html":{}}}],["index({name",{"_index":2916,"title":{},"body":{"classes/User.html":{}}}],["index.ts",{"_index":5342,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":3380,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":5154,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":5120,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3570,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4799,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":5053,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":548,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":1631,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":6027,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":368,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["info.mapper",{"_index":2175,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":2519,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":2521,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":2314,"title":{},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":2527,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":2529,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":2942,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":2528,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":5026,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":1301,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infra",{"_index":2016,"title":{},"body":{"modules/ManagementModule.html":{}}}],["infrastructure",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":5152,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5181,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4813,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":224,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":810,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{}}}],["inheritances",{"_index":2278,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{}}}],["inital",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":6060,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":1935,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5858,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":5175,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":5515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":944,"title":{},"body":{"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('mail_service_options",{"_index":1986,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject(mikroorm",{"_index":2052,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":2054,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":1356,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":1932,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":96,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":95,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["inner",{"_index":4659,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":1794,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["inputroles",{"_index":2507,"title":{},"body":{"injectables/RoleUC.html":{}}}],["inputroles.map((role",{"_index":2509,"title":{},"body":{"injectables/RoleUC.html":{}}}],["insensitive",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["insertedcount",{"_index":1061,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["inside",{"_index":330,"title":{},"body":{"classes/BusinessError.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":6253,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4874,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":5057,"title":{},"body":{"license.html":{}}}],["installed",{"_index":5070,"title":{},"body":{"license.html":{}}}],["instance",{"_index":1385,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":1517,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":4361,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instant",{"_index":461,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["instead",{"_index":1192,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4673,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4952,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3456,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":4737,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4944,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5322,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":5254,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4828,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4832,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5850,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":1265,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":1266,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":1253,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":407,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":385,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4998,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5168,"title":{},"body":{"license.html":{}}}],["interface",{"_index":87,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":1849,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":89,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":5062,"title":{},"body":{"license.html":{}}}],["internal",{"_index":537,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":6025,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":379,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["internalservererrorexception",{"_index":1510,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":1540,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":5301,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4871,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4883,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":5996,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":1357,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":4247,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":4214,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5531,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5338,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1174,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["invalidate",{"_index":4973,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":5877,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5882,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5700,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":5997,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":1657,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":1645,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":1998,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":1639,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{}}}],["irole",{"_index":1642,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":1687,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":4891,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":2156,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":1516,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":1554,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":658,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":635,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdraft",{"_index":1750,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["iserv",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":1514,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":1549,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":1722,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["ishidden",{"_index":1924,"title":{},"body":{"classes/LessonScope.html":{}}}],["isin",{"_index":2157,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":2161,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":2428,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":2425,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":2419,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":2158,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isnumber",{"_index":2069,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0",{"_index":2076,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isolated",{"_index":5883,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":6114,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":659,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":2153,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":2908,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":2147,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":2907,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":2151,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":2395,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":1821,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":660,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":633,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":649,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":644,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":607,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubstitutionteacher",{"_index":609,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issue",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":1828,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":3714,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":608,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["istechnicalerror",{"_index":1521,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":1556,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":1945,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionproperties",{"_index":1697,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["iswhitelisted",{"_index":1873,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":1876,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":3332,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":6113,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":6131,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":6133,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":6206,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskproperties",{"_index":1737,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["itaskstatus",{"_index":1767,"title":{"interfaces/ITaskStatus.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["item",{"_index":4846,"title":{},"body":{"license.html":{}}}],["items",{"_index":1690,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":5073,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1628,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":1778,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["javascript",{"_index":309,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["jest",{"_index":3260,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":4459,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":6208,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4681,"title":{},"body":{"index.html":{}}}],["job",{"_index":3093,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":4156,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":5528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":3642,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["joinpath",{"_index":1409,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["joinpath(...paths",{"_index":1431,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["jose",{"_index":4530,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":454,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":308,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.parse(text",{"_index":1185,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify",{"_index":1173,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify(collections",{"_index":987,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["json.stringify(e.constraints",{"_index":1571,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(sortedbsondocuments",{"_index":1221,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments",{"_index":321,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments.length",{"_index":1060,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["jsonwebtoken",{"_index":4532,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":1823,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":6223,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":1847,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_whitelist_accept_all",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["jwtauthguard",{"_index":1800,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":133,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":1856,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":1855,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1851,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":1806,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1833,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":119,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":120,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":1884,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1201,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5555,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4867,"title":{},"body":{"license.html":{}}}],["key",{"_index":2401,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":5432,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":1812,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":4824,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4725,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":4750,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":5207,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5214,"title":{},"body":{"license.html":{}}}],["known",{"_index":3618,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5843,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":464,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":3028,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["language",{"_index":3292,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4980,"title":{},"body":{"license.html":{}}}],["last",{"_index":2941,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastldapsync",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":1644,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":559,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":2352,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5611,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5361,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4815,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4791,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5179,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5838,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5341,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":3010,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":4534,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4537,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":4038,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4631,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["lean",{"_index":4553,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["learnroommodule",{"_index":1894,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["leave",{"_index":5397,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":2877,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":1353,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5580,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5388,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4756,"title":{},"body":{"license.html":{}}}],["lern",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":4306,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":1666,"title":{"classes/Lesson.html":{}},"body":{"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":1741,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonid",{"_index":1747,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonids",{"_index":2720,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["lessonrepo",{"_index":1903,"title":{"injectables/LessonRepo.html":{}},"body":{"injectables/LessonRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["lessons",{"_index":1665,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessonscope",{"_index":1911,"title":{"classes/LessonScope.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"coverage.html":{}}}],["letter",{"_index":5927,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4772,"title":{},"body":{"license.html":{}}}],["level",{"_index":4172,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":6110,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":5093,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4812,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4859,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":5034,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4707,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4795,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4796,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4798,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4731,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5155,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":5101,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":5149,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1659,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":5286,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3259,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":3329,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":579,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":3268,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4881,"title":{},"body":{"license.html":{}}}],["links",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":5376,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["lists",{"_index":1435,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["literal",{"_index":1621,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"injectables/LessonRepo.html":{},"classes/School.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":5176,"title":{},"body":{"license.html":{}}}],["living",{"_index":5994,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":1160,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["load/perf",{"_index":5354,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5903,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loadallcollectionsfromdatabase",{"_index":1084,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromdatabase(targetfolder",{"_index":1105,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadallcollectionsfromfilesystem",{"_index":1085,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromfilesystem(basedir",{"_index":1111,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1086,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames(source",{"_index":1114,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loaded",{"_index":871,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loaded.color",{"_index":878,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["loaded.title",{"_index":877,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["loader",{"_index":6159,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":1107,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["local",{"_index":3457,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5547,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5560,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":2593,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":5961,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":1126,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1131,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["log",{"_index":1671,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":1679,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5377,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5869,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4671,"title":{},"body":{"index.html":{}}}],["logger",{"_index":1264,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":1502,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":1272,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger(newsuc.name",{"_index":2373,"title":{},"body":{"injectables/NewsUc.html":{}}}],["logger.error(error",{"_index":1575,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":1572,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":1560,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":6144,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":1928,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":1950,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":405,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggermodule",{"_index":386,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":6068,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":397,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":1260,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":1273,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":1269,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":3035,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":3463,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":5936,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":5340,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4691,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1811,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":5293,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5295,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":5928,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":2334,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":5855,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":6275,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4989,"title":{},"body":{"license.html":{}}}],["made",{"_index":4763,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":106,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["mail.interface",{"_index":1985,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":1962,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":1975,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":91,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailcatcher",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":99,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["maildrop",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":1951,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":2587,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":1955,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{}}}],["mails",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":1961,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["mailserviceoptions",{"_index":1981,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["main",{"_index":3161,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":1386,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{}}}],["mainly",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":4003,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":3935,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":3203,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4863,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1880,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4918,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2074,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":6201,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":3545,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":3037,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["management.console",{"_index":2005,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.console.ts",{"_index":953,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["management.console.ts:11",{"_index":958,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:25",{"_index":969,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:49",{"_index":966,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.controller",{"_index":2003,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.controller.ts",{"_index":997,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"coverage.html":{}}}],["management.controller.ts:15",{"_index":1010,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:21",{"_index":1007,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:27",{"_index":1004,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:9",{"_index":1012,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.module.ts",{"_index":1027,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service",{"_index":1028,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service.ts",{"_index":1029,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"coverage.html":{}}}],["management.service.ts:13",{"_index":1052,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:18",{"_index":1053,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:30",{"_index":1049,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:36",{"_index":1041,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:42",{"_index":1050,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:50",{"_index":1043,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:56",{"_index":1045,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:6",{"_index":1039,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:60",{"_index":1047,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:9",{"_index":1055,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.uc",{"_index":973,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["management.uc.ts",{"_index":1079,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"coverage.html":{}}}],["management.uc.ts:134",{"_index":1122,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:183",{"_index":1093,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:19",{"_index":1091,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:30",{"_index":1128,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:38",{"_index":1099,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:46",{"_index":1102,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:63",{"_index":1106,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:76",{"_index":1112,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:91",{"_index":1116,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management/database",{"_index":998,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["managementmodule",{"_index":1990,"title":{"modules/ManagementModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":4482,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5344,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":5194,"title":{},"body":{"license.html":{}}}],["manual",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":6141,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":3777,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":443,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["manytomany('file",{"_index":1718,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytomany('role",{"_index":1692,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytomany('user",{"_index":468,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":442,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('course",{"_index":489,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":1715,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('dashboardmodelentity",{"_index":793,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('defaultgridreferencemodel",{"_index":796,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('lesson",{"_index":1746,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["manytoone('school",{"_index":467,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('task",{"_index":1712,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('team",{"_index":590,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["manytoone('user",{"_index":523,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":714,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((elementwithposition",{"_index":904,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["map((submission",{"_index":2841,"title":{},"body":{"injectables/TaskUC.html":{}}}],["mapcreatenewstodomain",{"_index":2163,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":2166,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":5910,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelementtomodel",{"_index":855,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(elementwithposition",{"_index":858,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapnewsscopetodomain",{"_index":2164,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":2168,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedelements",{"_index":903,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapper",{"_index":2959,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/dashboard.mapper",{"_index":689,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":2123,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":2669,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":6222,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":5687,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoentity",{"_index":856,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoentity(modelentity",{"_index":860,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel",{"_index":857,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel(entity",{"_index":863,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoresponse",{"_index":829,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":830,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":2170,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":2520,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":2623,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":2679,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":2463,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":2165,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":2172,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":5237,"title":{},"body":{"license.html":{}}}],["marked",{"_index":5099,"title":{},"body":{"license.html":{}}}],["marker",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["marks",{"_index":5108,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4793,"title":{},"body":{"license.html":{}}}],["master",{"_index":3711,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":1094,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":345,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":6197,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":60,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4906,"title":{},"body":{"license.html":{}}}],["materially",{"_index":5074,"title":{},"body":{"license.html":{}}}],["materials",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["math.floor(index",{"_index":767,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["matrix",{"_index":3413,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":2429,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":2431,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":2422,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":1771,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":2037,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5382,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":2929,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":2922,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":5116,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4701,"title":{},"body":{"index.html":{}}}],["means",{"_index":4660,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4926,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4663,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":5881,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4949,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4961,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4847,"title":{},"body":{"license.html":{}}}],["member",{"_index":1325,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":2019,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4844,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5277,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4827,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4706,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":5165,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5771,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":4893,"title":{},"body":{"license.html":{}}}],["meta",{"_index":6260,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":4577,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":1366,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metic",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":3794,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5694,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":4033,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4539,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":4271,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":2234,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":2236,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":2026,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm.init",{"_index":5527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5375,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":2048,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":2050,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":2051,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":1995,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":2006,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":2032,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":2046,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports.length",{"_index":2047,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports[0",{"_index":2049,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmoduleasyncoptions",{"_index":2027,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":2043,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":2892,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":94,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":2070,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(0",{"_index":2075,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(1",{"_index":2430,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":2421,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":5934,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6280,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4607,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":5098,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1384,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":2329,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4540,"title":{},"body":{"dependencies.html":{}}}],["mkdir",{"_index":1464,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdir(folderpath",{"_index":1469,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp",{"_index":1465,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp(dirpath",{"_index":1473,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mm",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":3860,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":6118,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":6174,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":6162,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":6164,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":3280,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":652,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardModelMapper.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["model.dashboard",{"_index":898,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.reference",{"_index":896,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.xpos",{"_index":884,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.ypos",{"_index":886,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity",{"_index":862,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.gridelements",{"_index":906,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.gridelements.init",{"_index":867,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["models",{"_index":2406,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4789,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4850,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4292,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":4966,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4758,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4818,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":5533,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":111,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":6235,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":6238,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":6237,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":6204,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":6203,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5483,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":6158,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":5942,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":5937,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":2028,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":6173,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":6172,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":2578,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":5947,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":5945,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":5946,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/learnroom/learnroom.module",{"_index":2586,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/mail/mail.module",{"_index":2585,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/management/management.module",{"_index":2564,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/news/news.module",{"_index":2584,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":2582,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":2583,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":4542,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":313,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongo.ensureinstance",{"_index":2035,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.geturi",{"_index":2036,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongod",{"_index":2055,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongodatabasemoduleoptions",{"_index":2022,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1056,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoexport",{"_index":1095,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongoimport",{"_index":1123,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongomemorydatabasemodule",{"_index":2017,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":6186,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":2029,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongomemoryserver.create",{"_index":2034,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":2591,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4560,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3490,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":5138,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":6090,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":3224,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":4651,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5357,"title":{},"body":{"todo.html":{}}}],["move",{"_index":3034,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["moveelement",{"_index":671,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{}}}],["moveelement(dashboardid",{"_index":673,"title":{},"body":{"controllers/DashboardController.html":{}}}],["moveelement(from",{"_index":725,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["moveelementondashboard",{"_index":938,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementondashboard(dashboardid",{"_index":942,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementparams",{"_index":675,"title":{"classes/MoveElementParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"coverage.html":{}}}],["moveelementposition",{"_index":2064,"title":{"classes/MoveElementPosition.html":{}},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"coverage.html":{}}}],["ms",{"_index":1246,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1526,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":4126,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":1611,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":294,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":4699,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nameonly",{"_index":1069,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["names",{"_index":1097,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":5396,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4562,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":4580,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4977,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":2776,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":4027,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":4626,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":4873,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needing",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":3677,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":1552,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5386,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5551,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5556,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5575,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5576,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5569,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5571,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5550,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5559,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5563,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5561,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5566,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5471,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5583,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5584,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5473,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5472,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5585,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":4209,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":1388,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":1241,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":374,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5608,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1244,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4473,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4475,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":657,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1243,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{}}}],["nestjs/testing.test",{"_index":6163,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestjs@7",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["nestjs@8",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["net",{"_index":4670,"title":{},"body":{"index.html":{}}}],["network",{"_index":4730,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":84,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":5989,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":510,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":2182,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":2230,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":2854,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["news.controller.ts:22",{"_index":2858,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":2203,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":2379,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":2184,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":2178,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":629,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":2910,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":654,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":634,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":2909,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":643,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":653,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":648,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":2207,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":2186,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":2188,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":2190,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":2192,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":2180,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":2205,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":2199,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news:104",{"_index":520,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:110",{"_index":2852,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:31",{"_index":544,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:35",{"_index":521,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:39",{"_index":526,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:42",{"_index":534,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:45",{"_index":539,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:48",{"_index":540,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":542,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":536,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":525,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":546,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":535,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:79",{"_index":549,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:98",{"_index":2530,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":2403,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":5958,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":5962,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":2235,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":2377,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":2371,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":2299,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":2315,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":2370,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":2092,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":2388,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":2274,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":2281,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":2270,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":2104,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsid",{"_index":2102,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":2131,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":2393,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":2135,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":2390,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":2122,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":2129,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":2133,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":2130,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":2142,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":2217,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":2222,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":2121,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsscope",{"_index":2265,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstarget",{"_index":552,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":2244,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":575,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":584,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":2119,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":2397,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":2384,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":578,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":2897,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":1280,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":1476,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4648,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":5856,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4557,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4559,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2773,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":5009,"title":{},"body":{"license.html":{}}}],["none",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":2411,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":3616,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":5037,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":4401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":729,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["notfoundexception('no",{"_index":785,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["notfoundexception(`the",{"_index":2013,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["nothing",{"_index":5150,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4838,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4834,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":5139,"title":{},"body":{"license.html":{}}}],["notify",{"_index":5135,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":5088,"title":{},"body":{"license.html":{}}}],["november",{"_index":4710,"title":{},"body":{"license.html":{}}}],["now",{"_index":641,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now.getfullyear()}_",{"_index":1144,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now.getmonth",{"_index":1145,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now}ms",{"_index":1282,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3036,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":1343,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"injectables/NewsUc.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{}}}],["number",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IPagination.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtPayload.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Submission.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":5269,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":5426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":3395,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5534,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":989,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["o.id",{"_index":2660,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["oauth",{"_index":3874,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":3670,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":2304,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":565,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":2402,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":86,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":662,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":5516,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid.createfromhexstring(id",{"_index":804,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["objectid.isvalid(value",{"_index":2450,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":310,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":5249,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":5022,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4928,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1271,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":5008,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1528,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":5147,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3722,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":2350,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4755,"title":{},"body":{"license.html":{}}}],["offered",{"_index":5028,"title":{},"body":{"license.html":{}}}],["offering",{"_index":5012,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5573,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4852,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":2740,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":6018,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":6098,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":3173,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":4279,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":1967,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1172,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onepassword",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["onerror",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":5933,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":800,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":812,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('submission",{"_index":1749,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["oneweekago",{"_index":2845,"title":{},"body":{"injectables/TaskUC.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":2846,"title":{},"body":{"injectables/TaskUC.html":{}}}],["onload",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":2024,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":3248,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3886,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":5564,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":5298,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":5016,"title":{},"body":{"license.html":{}}}],["operates",{"_index":6089,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4868,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4347,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2648,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":2534,"title":{},"body":{"classes/Scope.html":{},"license.html":{}}}],["opportunity",{"_index":5256,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":6262,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":3216,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":5968,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":6268,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":2045,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":6078,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":1118,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":961,"title":{"interfaces/Options.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.collection",{"_index":984,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options.exchange",{"_index":1971,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":2386,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":1976,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.ts",{"_index":1653,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":1973,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options?.collection",{"_index":983,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options?.override",{"_index":993,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["ora",{"_index":375,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["ora.ora",{"_index":371,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["orchestration",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1654,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1130,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["orderby(bsondocuments",{"_index":1215,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["ordering",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":5161,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4800,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":786,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{}}}],["original",{"_index":4295,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":2053,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":6242,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":2264,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":6178,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":6011,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1996,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":1430,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["os.eol",{"_index":1467,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["others",{"_index":1607,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":2042,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":5924,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":6108,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5359,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2550,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":766,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":3342,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":6221,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":6071,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":974,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":6226,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":6234,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":1284,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":398,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5422,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3081,"title":{"overview.html":{}},"body":{"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":3554,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":5190,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5670,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":2295,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":2715,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5540,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":3987,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":4972,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5350,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4862,"title":{},"body":{"license.html":{}}}],["page",{"_index":2420,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":2426,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":1338,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1655,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5899,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":2742,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination?.skip",{"_index":2741,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":5960,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":2105,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":2118,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":2136,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["paginationresponse(taskresponses",{"_index":2677,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":4566,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5321,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":5126,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5200,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":3070,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BsonConverter.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":695,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["param('teamid",{"_index":2861,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":6154,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":6152,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5898,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":2378,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":2137,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":674,"title":{},"body":{"controllers/DashboardController.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":2213,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":2214,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.from",{"_index":699,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.target",{"_index":2375,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":2216,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":2215,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":2212,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.to",{"_index":700,"title":{},"body":{"controllers/DashboardController.html":{}}}],["param|query].ts",{"_index":5897,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["parentids",{"_index":2716,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.courseids",{"_index":2727,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.lessonids",{"_index":2729,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.teacherid",{"_index":2725,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope",{"_index":2723,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bycourseids(parentids.courseids",{"_index":2728,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bylessonids(parentids.lessonids",{"_index":2730,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.byteacherid(parentids.teacherid",{"_index":2726,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parents",{"_index":2714,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":3924,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":5957,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":683,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4495,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":3192,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":4647,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":1629,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2071,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4856,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4826,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4886,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":5017,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":5166,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":5925,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":1604,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":5509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":1846,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1848,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1850,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":2010,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":527,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":679,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":2115,"title":{},"body":{"controllers/NewsController.html":{}}}],["patch(':id/moveelement",{"_index":676,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patching",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":5125,"title":{},"body":{"license.html":{}}}],["patents",{"_index":5185,"title":{},"body":{"license.html":{}}}],["path",{"_index":1125,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join(...paths",{"_index":1480,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["paths",{"_index":1109,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":663,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":1843,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":1835,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":1862,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":5230,"title":{},"body":{"license.html":{}}}],["peer",{"_index":5024,"title":{},"body":{"license.html":{}}}],["peers",{"_index":5027,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":5912,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":3499,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":4877,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5134,"title":{},"body":{"license.html":{}}}],["permission",{"_index":531,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":2416,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":2415,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":4954,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4985,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4771,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4719,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":2654,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedcourses.map((o",{"_index":2659,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":5065,"title":{},"body":{"license.html":{}}}],["persist",{"_index":257,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":270,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{}}}],["persist/make",{"_index":5974,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":258,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistall(entities",{"_index":273,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush",{"_index":259,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush(entities",{"_index":275,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistance",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["persistandflush",{"_index":260,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush(entity",{"_index":277,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{}}}],["persisted",{"_index":291,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":5977,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1989,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":6069,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":6101,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":3409,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":5247,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":5988,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4993,"title":{},"body":{"license.html":{}}}],["physically",{"_index":5006,"title":{},"body":{"license.html":{}}}],["pick",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":4748,"title":{},"body":{"license.html":{}}}],["pin",{"_index":3428,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":1588,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":2979,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":5915,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":2448,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3121,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":311,"title":{},"body":{"injectables/BsonConverter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":104,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":102,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["platform",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4517,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":5170,"title":{},"body":{"license.html":{}}}],["point",{"_index":636,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5318,"title":{},"body":{"license.html":{}}}],["policy",{"_index":4224,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["polymorphic",{"_index":809,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["pool",{"_index":3773,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":2277,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":558,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":5545,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":5031,"title":{},"body":{"license.html":{}}}],["pos",{"_index":724,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["pos.x",{"_index":759,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["pos.y",{"_index":761,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["position",{"_index":765,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{}}}],["positionfromgridindex",{"_index":709,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["positionfromgridindex(index",{"_index":727,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["possesses",{"_index":5003,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4970,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":5300,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":3738,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1013,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post('export",{"_index":1006,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('export/:collectionname",{"_index":1003,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed",{"_index":1011,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed/:collectionname",{"_index":1009,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["potential",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":5369,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4938,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4679,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4732,"title":{},"body":{"license.html":{}}}],["practice",{"_index":5204,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":6255,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5374,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4723,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4785,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4642,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":5167,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":6072,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":6116,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4849,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":668,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":6279,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":6278,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":1938,"title":{},"body":{"injectables/Logger.html":{}}}],["prepared",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["preparing",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":4667,"title":{},"body":{"index.html":{}}}],["present",{"_index":3854,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4842,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":5095,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":4055,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":3882,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":5169,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4744,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5232,"title":{},"body":{"license.html":{}}}],["primary",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["primaryrolesearchoperation",{"_index":1689,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":2480,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":6176,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":6020,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":5136,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":6264,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":366,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonScope.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":1890,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":4285,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":3690,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":5058,"title":{},"body":{"license.html":{}}}],["process",{"_index":4029,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5873,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":5222,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4870,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":6065,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4994,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":3281,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":5233,"title":{},"body":{"license.html":{}}}],["program",{"_index":4739,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4948,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5327,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4857,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4749,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4910,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4935,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5227,"title":{},"body":{"license.html":{}}}],["project",{"_index":2986,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4570,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":3793,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":4845,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4837,"title":{},"body":{"license.html":{}}}],["promise",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":1247,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":868,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"injectables/RoleUC.html":{}}}],["promise.resolve",{"_index":1479,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["promise.resolve(currentuser.user",{"_index":2930,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":1458,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4516,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4808,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5153,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4819,"title":{},"body":{"license.html":{}}}],["proper",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3006,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":6261,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":2240,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["property",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":2479,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({onupdate",{"_index":251,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":4637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":419,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.availabledate",{"_index":1759,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.color",{"_index":481,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.colums",{"_index":768,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.comment",{"_index":1732,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":562,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.course",{"_index":496,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["props.creator",{"_index":566,"title":{},"body":{"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.description",{"_index":471,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":564,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":1761,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.email",{"_index":1790,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.externalid",{"_index":570,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1786,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.grade",{"_index":1735,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":1736,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid.foreach((element",{"_index":771,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.hidden",{"_index":1667,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["props.lastname",{"_index":1788,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.lesson",{"_index":1765,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.name",{"_index":469,"title":{},"body":{"classes/Course.html":{},"classes/File.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["props.permissions",{"_index":1693,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":1762,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.roles",{"_index":1695,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.rows",{"_index":769,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.school",{"_index":474,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.source",{"_index":572,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.sourcedescription",{"_index":574,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.student",{"_index":1730,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.students",{"_index":475,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":479,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":568,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":1734,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teacher",{"_index":1764,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.teachers",{"_index":477,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":560,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.updater",{"_index":567,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":4751,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":2882,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4919,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4959,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":5078,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":5281,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":1255,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":184,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":1942,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":1936,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":396,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":5089,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":5131,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5271,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5272,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1239,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":5100,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4778,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3309,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":642,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":3856,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4622,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["purposes",{"_index":5040,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":5220,"title":{},"body":{"license.html":{}}}],["push",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":805,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":5976,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":3839,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":5143,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5280,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":2324,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":2328,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":614,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonScope.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":2209,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":2208,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":2211,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":5956,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":2539,"title":{},"body":{"classes/Scope.html":{}}}],["queryordermap",{"_index":2263,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":2595,"title":{},"body":{"modules/ServerModule.html":{}}}],["querystring",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1960,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5543,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5537,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":1958,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":1969,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":1966,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["random",{"_index":1426,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rates",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":4518,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1439,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4990,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readdir",{"_index":1410,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readdir(folderpath",{"_index":1433,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile",{"_index":1411,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile(filepath",{"_index":1437,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readily",{"_index":5209,"title":{},"body":{"license.html":{}}}],["reading",{"_index":5080,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":6004,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":6175,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":450,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["reason",{"_index":5218,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":5004,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":5141,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4747,"title":{},"body":{"license.html":{}}}],["received",{"_index":4974,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":5157,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5224,"title":{},"body":{"license.html":{}}}],["recent",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["recieve",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":5064,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5216,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":107,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4853,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6291,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6285,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6283,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["recursively",{"_index":1447,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["red",{"_index":5368,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":1883,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":1891,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5314,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":3168,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":3781,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4636,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":920,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{}}}],["refactored",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":3235,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":5986,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":557,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.color",{"_index":892,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["reference.title",{"_index":894,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["referenced",{"_index":543,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":744,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":4743,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4790,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4576,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":5993,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":5251,"title":{},"body":{"license.html":{}}}],["regard",{"_index":5085,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4664,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4971,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":4887,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3917,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":6026,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":6202,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":5130,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":6212,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":647,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":6009,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":6272,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":3095,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":4912,"title":{},"body":{"license.html":{}}}],["relative",{"_index":1124,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["release",{"_index":3423,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4783,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4773,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4964,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4784,"title":{},"body":{"license.html":{}}}],["relies",{"_index":5967,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5381,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":5208,"title":{},"body":{"license.html":{}}}],["remain",{"_index":5021,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4741,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":5253,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":5255,"title":{},"body":{"license.html":{}}}],["removal",{"_index":5086,"title":{},"body":{"license.html":{}}}],["remove",{"_index":261,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":279,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall",{"_index":262,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall(entities",{"_index":282,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush",{"_index":263,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush(entities",{"_index":284,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush",{"_index":264,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush(entity",{"_index":286,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removed",{"_index":2993,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["removedirrecursive",{"_index":1412,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedirrecursive(folderpath",{"_index":1444,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removeing",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":1446,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removing",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":4632,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["repair",{"_index":3672,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["repeats",{"_index":2007,"title":{},"body":{"modules/ManagementModule.html":{}}}],["replace",{"_index":2802,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":3349,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":6056,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5371,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":110,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":2508,"title":{},"body":{"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":6180,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":2369,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":2227,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":986,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":6085,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":6194,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":3188,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3054,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":5055,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":6228,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":6230,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":1355,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":6257,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":6248,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":1864,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":1865,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2886,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2014,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":1797,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":2893,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":3617,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":1885,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":1809,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":1493,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('rimraf",{"_index":1463,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["require('ts",{"_index":5496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":979,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":2396,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4965,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":5023,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":1392,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4803,"title":{},"body":{"license.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":2964,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":2967,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":2968,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":1860,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":2461,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":2966,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyroles",{"_index":2502,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyroles(inputroles",{"_index":2505,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":2488,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":2494,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":2248,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":2932,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(userid",{"_index":2935,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resort",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":6191,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4942,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5392,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":2107,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":6249,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":1584,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5901,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":5900,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":5955,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":5158,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":5973,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":3415,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":5552,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5393,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":1262,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5845,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":2399,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":4936,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":5117,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4218,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":774,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/NewsScope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.query",{"_index":2540,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":4458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":4770,"title":{},"body":{"license.html":{}}}],["results",{"_index":59,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":5068,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":2111,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5867,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5839,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":2745,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":6130,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5914,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":3481,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["reverted",{"_index":3581,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":4694,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5303,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5261,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":5992,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":4374,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":4752,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":1462,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"dependencies.html":{}}}],["rimraf.sync(folderpath",{"_index":1478,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["risk",{"_index":5279,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":3952,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1638,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1781,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":2477,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":2476,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":2512,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":2961,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":1783,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":2917,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":4050,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":2483,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":1635,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":2511,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":2475,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":2500,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":5071,"title":{},"body":{"license.html":{}}}],["room",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":230,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":5467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":5490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":6199,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":1237,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":3210,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":1965,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["rows",{"_index":705,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["royalty",{"_index":5174,"title":{},"body":{"license.html":{}}}],["rss",{"_index":538,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":6013,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":3588,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":3026,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":6157,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":2879,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3331,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":6165,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":1274,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1276,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":5316,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4669,"title":{},"body":{"index.html":{}}}],["sale",{"_index":5183,"title":{},"body":{"license.html":{}}}],["same",{"_index":3038,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":1326,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":1387,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":6170,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":5931,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":6171,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":6062,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":3737,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["sanitize",{"_index":3621,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":5348,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":183,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5586,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":5019,"title":{},"body":{"license.html":{}}}],["sc",{"_index":3146,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["scans",{"_index":1117,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["scenarios",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":460,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5904,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":3426,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":411,"title":{"classes/School.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["school._id",{"_index":5517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school._id.tohexstring",{"_index":5519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school.entity",{"_index":447,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["school.id",{"_index":5518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school_edit",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["schoolfactory",{"_index":4451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":5514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schoolid",{"_index":427,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":2522,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":2523,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":2525,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":2174,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":2196,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":2294,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":588,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":586,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1625,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/School.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["schoolyears",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":638,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2576,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1250,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":603,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.addquery(parentidscope.query",{"_index":2731,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.afterduedateornone(filters.afterduedateornone",{"_index":2735,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids(courseids",{"_index":1912,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bydraft(filters.draft",{"_index":2733,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byhidden(filters.hidden",{"_index":1914,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bytargets(targets",{"_index":2266,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":2267,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.forallgrouptypes(userid",{"_index":611,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":613,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/LessonRepo.html":{}}}],["scope.request",{"_index":1379,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":2408,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":2863,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":2864,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":1929,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1917,"title":{},"body":{"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["scope.ts:10",{"_index":1923,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:12",{"_index":2765,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:19",{"_index":2769,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:22",{"_index":2322,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:24",{"_index":2767,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:32",{"_index":2764,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:5",{"_index":1921,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:7",{"_index":2320,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:11",{"_index":620,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:25",{"_index":626,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:9",{"_index":622,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":2405,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":2383,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":1333,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopeoperator",{"_index":619,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["scopes",{"_index":2112,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4875,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4490,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2653,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":1784,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":2919,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":6070,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4811,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4759,"title":{},"body":{"license.html":{}}}],["secret",{"_index":1807,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":1854,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":4917,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4988,"title":{},"body":{"license.html":{}}}],["secure",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["secures",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":2995,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":968,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seedcollections",{"_index":955,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["seedcollections(options",{"_index":967,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["seeddata",{"_index":6120,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seeddatabasecollectionsfromfilesystem",{"_index":1087,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["seeddatabasecollectionsfromfilesystem(collections",{"_index":1121,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount",{"_index":1181,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount.push(`${collectionname}:${importeddocumentsamount",{"_index":1203,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seeds",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":5384,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":5366,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":4384,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":5198,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5182,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":4792,"title":{},"body":{"license.html":{}}}],["send",{"_index":1978,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":1983,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":6034,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5870,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":1297,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":3739,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":4477,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":5030,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1934,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4686,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":3759,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":6049,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4650,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4649,"title":{},"body":{"index.html":{}}}],["serialization",{"_index":5346,"title":{},"body":{"todo.html":{}}}],["serialize",{"_index":302,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["serialize(documents",{"_index":315,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serialized",{"_index":3836,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["serializes",{"_index":317,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serve",{"_index":4586,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5600,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":1251,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":2565,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":2579,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":5385,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5364,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":2546,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["serverconsolemodule",{"_index":2558,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":2566,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":4402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":6055,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":2569,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":4304,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":4864,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":377,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":1336,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":6209,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":5949,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":1332,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":1323,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":1363,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":1371,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":1369,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":1396,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":1397,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":1354,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":5284,"title":{},"body":{"license.html":{}}}],["session",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":1748,"title":{},"body":{"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradedstudentids)].length",{"_index":2842,"title":{},"body":{"injectables/TaskUC.html":{}}}],["set(permissions",{"_index":2513,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submittedstudentids)].length",{"_index":2835,"title":{},"body":{"injectables/TaskUC.html":{}}}],["setcontext",{"_index":1943,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":3785,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":2890,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":1248,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":3930,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":976,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"interfaces/Options.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setupentities",{"_index":4416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setuppath",{"_index":1178,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["setversion('3.0",{"_index":5503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4922,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4735,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":3323,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":684,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":2160,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":5919,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/JwtPayload.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/entity/base.entity",{"_index":801,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["shared/domain/types",{"_index":2367,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/domain/types/news.types",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/TargetInfoMapper.html":{}}}],["shared/infra/console",{"_index":2000,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ServerConsole.html":{}}}],["shared/infra/console/console",{"_index":971,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["shared/infra/database",{"_index":1134,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/file",{"_index":1132,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/pipes",{"_index":5943,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":604,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"modules/TaskModule.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["shared/repo/base.repo",{"_index":2262,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":5920,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":5940,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":5923,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["shit",{"_index":451,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":822,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4556,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":735,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["shouldnt",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2351,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":3646,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5328,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5854,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":5056,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4780,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":3021,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5399,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5835,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":6127,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4665,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":6243,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":5246,"title":{},"body":{"license.html":{}}}],["single",{"_index":982,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["six",{"_index":1425,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["size",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["sizetype",{"_index":814,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["sjw",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":1658,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":1609,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":5390,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":1190,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":6288,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":1543,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4589,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":4355,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":4714,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":5041,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4901,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4914,"title":{},"body":{"license.html":{}}}],["solid",{"_index":6258,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":2649,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5325,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["solving",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":6063,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":6067,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1211,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["sorted",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["sortedbsondocuments",{"_index":1214,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sorting",{"_index":1910,"title":{},"body":{"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["sorting.ts",{"_index":5360,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1660,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":2817,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":2387,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":1656,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5892,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":516,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3322,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":2297,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5847,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5861,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":5001,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4742,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5470,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3005,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4726,"title":{},"body":{"license.html":{}}}],["specification",{"_index":3796,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":5975,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4855,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":5268,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2041,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["spin",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":367,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["spirit",{"_index":5262,"title":{},"body":{"license.html":{}}}],["split",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":6205,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":6196,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":6271,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5477,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":2001,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/core/error/dto/error.response",{"_index":343,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":344,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger",{"_index":1277,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{}}}],["src/core/logger/logger.module",{"_index":2225,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":682,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization/authorization.module",{"_index":2226,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":2368,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":6184,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/user",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["src/repositories",{"_index":2652,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{}}}],["src/repositories/learnroom/dashboard.repo",{"_index":945,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{}}}],["stabilisation",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["stabilized",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":1558,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":4851,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4854,"title":{},"body":{"license.html":{}}}],["start",{"_index":4705,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":2982,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":4142,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5544,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":1545,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":3948,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":3868,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":4892,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":5119,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":4385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":518,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4953,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1775,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.graded",{"_index":2693,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.isdraft",{"_index":2694,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.maxsubmissions",{"_index":2692,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.submitted",{"_index":2691,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.vo.ts",{"_index":1769,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["status.vo.ts:11",{"_index":2849,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["status.vo.ts:13",{"_index":2848,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["stay",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":6044,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4753,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":6095,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":5981,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":2059,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":3100,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":3175,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5863,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":6198,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":4408,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1845,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1939,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["stringtoboolean",{"_index":2159,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4593,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":1358,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6290,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5885,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5886,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":1941,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5358,"title":{},"body":{"todo.html":{}}}],["student",{"_index":1703,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":2800,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":1704,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":1714,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{}}}],["students",{"_index":412,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["studentsubmissions",{"_index":2824,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.filter((submission",{"_index":2828,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.length",{"_index":2827,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studio",{"_index":4678,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4703,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1822,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":5164,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":100,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":5195,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4916,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1711,"title":{"classes/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":1742,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["submission.isgraded",{"_index":2840,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.isgraded()).length",{"_index":2829,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.student.id",{"_index":2826,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissionrepo",{"_index":2607,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["submissions",{"_index":1710,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["submitted",{"_index":1772,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["submittedstudentids",{"_index":2833,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subprograms",{"_index":4882,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":5010,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5582,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":5051,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":5162,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":433,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":413,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["succeed",{"_index":6146,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":4130,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":4774,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":5206,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":5059,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5398,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5339,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5581,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":6160,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":5081,"title":{},"body":{"license.html":{}}}],["support",{"_index":1815,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":1824,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":746,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5532,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supportjwtservice",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["supports",{"_index":4293,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":1816,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":4740,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":5241,"title":{},"body":{"license.html":{}}}],["survive",{"_index":5118,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":5296,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5332,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3666,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":3126,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":2400,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":1133,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system.adapter",{"_index":1486,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system.adapter.ts",{"_index":1405,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["system.adapter.ts:12",{"_index":1415,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:18",{"_index":1457,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:26",{"_index":1417,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:36",{"_index":1434,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:48",{"_index":1451,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:57",{"_index":1438,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:68",{"_index":1421,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:78",{"_index":1445,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:84",{"_index":1432,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.module.ts",{"_index":1485,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system/file",{"_index":1404,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["system/school",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["systemid",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":1422,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":271,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":1220,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":3536,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":465,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["tables",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4460,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":4662,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":782,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{}}}],["takes",{"_index":3753,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3262,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":5036,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1275,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":511,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":1341,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":2625,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":2626,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":2327,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":2413,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":2325,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":2326,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":650,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetfolder",{"_index":1110,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["targetid",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":1339,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":2176,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":2194,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":2303,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["targetmodel",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":2363,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":2409,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":1331,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":1335,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":2412,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":1340,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":1705,"title":{"classes/Task.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":2797,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.availabledate",{"_index":2685,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course",{"_index":2843,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.course.getnumberofstudents",{"_index":2844,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.createdat",{"_index":2688,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":2687,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1709,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["task.getdescriptions",{"_index":2696,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.id",{"_index":2682,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.isdraft",{"_index":2830,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.name",{"_index":2683,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.submissions",{"_index":2837,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().filter((submission",{"_index":2825,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().map((submission",{"_index":2834,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.updatedat",{"_index":2689,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":2799,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":2801,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":2639,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskcontroller",{"_index":2661,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskdashboardpermission",{"_index":2795,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":2806,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":2808,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdesc",{"_index":2695,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.color",{"_index":2700,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.name",{"_index":2698,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskentities",{"_index":2738,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskids",{"_index":2616,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["taskmapper",{"_index":2668,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":2676,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":2572,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparentdescriptions",{"_index":1743,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/typealiases.html":{}}}],["taskparentpermission",{"_index":2645,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":2811,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":2655,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":2703,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":2667,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["taskresponses",{"_index":2674,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":2663,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":2819,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskscope",{"_index":2719,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["taskscope('$or",{"_index":2724,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskswithstatus",{"_index":2672,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":2675,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":2665,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":2681,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":1774,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["taskwithstatusvo(task",{"_index":2832,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":1720,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":2798,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherid",{"_index":1745,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["teacherids",{"_index":435,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":414,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["team",{"_index":550,"title":{"classes/Team.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":551,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamid",{"_index":2859,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":1706,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":589,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":585,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":2224,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["teams",{"_index":1626,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Team.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5370,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5614,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5865,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":1522,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4925,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5604,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4839,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1423,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["template",{"_index":1566,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":741,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["term",{"_index":4890,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":5124,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5142,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":5133,"title":{},"body":{"license.html":{}}}],["termination",{"_index":5121,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3757,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":1238,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":1254,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":1234,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":1236,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":6003,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testbootstrapconsole",{"_index":2865,"title":{"classes/TestBootstrapConsole.html":{}},"body":{"classes/TestBootstrapConsole.html":{},"coverage.html":{}}}],["testcase",{"_index":6104,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":6123,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":5579,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":5487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testhelpers",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":1799,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":1242,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":6185,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":6193,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":6189,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":6188,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":6187,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":227,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":370,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":5938,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":5921,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":5939,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":228,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":4777,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":807,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"license.html":{}}}],["think",{"_index":5891,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4947,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._id",{"_index":803,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["this._operator",{"_index":2541,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries",{"_index":2543,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":2542,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":2545,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":2544,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":2903,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":610,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":2331,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":2332,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(query",{"_index":2777,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":1987,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":1820,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":2398,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":6028,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":2376,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":2414,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(userid",{"_index":2810,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":2410,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.availabledate",{"_index":1758,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.basepath",{"_index":1140,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.deserialize(bsondocuments",{"_index":1186,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.serialize(jsondocuments",{"_index":1210,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.byuseridquery(userid",{"_index":2619,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":2498,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.code",{"_index":349,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":482,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.columns",{"_index":760,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.comment",{"_index":1731,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.computetaskstatusforstudent(task",{"_index":2820,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.computetaskstatusforteacher(task",{"_index":2821,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":2556,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":2557,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(report",{"_index":988,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.content",{"_index":561,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.course",{"_index":495,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["this.course._id",{"_index":497,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.course.color",{"_index":1757,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.course.name",{"_index":1754,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.courserepo.findallforstudent(userid",{"_index":2657,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallforteacher(userid",{"_index":2656,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.createerrorresponse(error",{"_index":1583,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creator",{"_index":1402,"title":{},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.dashboardrepo.getdashboardbyid(dashboardid",{"_index":948,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.getusersdashboard",{"_index":947,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.persistandflush(dashboard",{"_index":950,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard",{"_index":692,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.moveelementondashboard(dashboardid",{"_index":698,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":2440,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.databasemanagementservice.clearcollection(collectionname",{"_index":1196,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.collectionexists(collectionname",{"_index":1193,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.createcollection(collectionname",{"_index":1197,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.finddocumentsofcollection(collectionname",{"_index":1209,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.getcollectionnames",{"_index":1148,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.importcollection",{"_index":1200,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem",{"_index":1018,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem([collectionname",{"_index":1020,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem(filter",{"_index":994,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem",{"_index":1015,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem([collectionname",{"_index":1017,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem(filter",{"_index":985,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.db.collection(collectionname",{"_index":1058,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.createcollection(collectionname",{"_index":1076,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.dropcollection(collectionname",{"_index":1077,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.listcollections(undefined",{"_index":1068,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.description",{"_index":472,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":353,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":563,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.displaycolor",{"_index":749,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.duedate",{"_index":1760,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.em",{"_index":922,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.find(coursegroup",{"_index":2621,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(lesson",{"_index":1915,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount(course",{"_index":612,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":507,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(news",{"_index":2275,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":2618,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":2739,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":930,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":926,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":2271,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":2497,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":2952,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":295,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.getconnection('write').getdb",{"_index":1057,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.em.persist(entity",{"_index":289,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":923,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":293,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":290,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(modelentity",{"_index":924,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.populate(coursenews",{"_index":2284,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":2276,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":2272,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":2282,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":2743,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":2283,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(entity",{"_index":296,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":297,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":1789,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.encoding",{"_index":1466,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.externalid",{"_index":569,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":1342,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":1330,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":1334,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":5948,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.filesystemadapter.createdir(targetfolder",{"_index":1205,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.eol",{"_index":1223,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(__dirname",{"_index":1139,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(basedir",{"_index":1156,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(targetfolder",{"_index":1151,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(this.basedir",{"_index":1141,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readdir(basedir",{"_index":1154,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readfile(filepath",{"_index":1183,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.writefile(filepath",{"_index":1222,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.findallforstudent(currentuser.userid",{"_index":2807,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(currentuser.userid",{"_index":2809,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":2499,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":2269,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":2737,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.firstname",{"_index":1785,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.getcollectionnames",{"_index":1074,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdatabasecollection(collectionname",{"_index":1059,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdefaultmaxduedate",{"_index":2814,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.getentitypermissions(userid",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":2391,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":2385,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getseedfolder",{"_index":1142,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.gettargetfilters(userid",{"_index":2407,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfolder(toseedfolder",{"_index":1204,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getuser(userid",{"_index":1324,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":1724,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":1725,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment.length",{"_index":1726,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles",{"_index":1727,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles.length",{"_index":1728,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":770,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.delete(this.gridindexfromposition(from",{"_index":784,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(key",{"_index":777,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(this.gridindexfromposition(from",{"_index":779,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(this.gridindexfromposition(to",{"_index":780,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.keys()].map((key",{"_index":775,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.set(this.gridindexfromposition(element.pos",{"_index":772,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.set(this.gridindexfromposition(to",{"_index":783,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":2805,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":1668,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["this.id",{"_index":748,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.joinpath(os.tmpdir",{"_index":1471,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":1859,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.lastname",{"_index":1787,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.lesson",{"_index":1755,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.lesson.name",{"_index":1756,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.lessonrepo.findallbycourseids(courseids",{"_index":2813,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.limit",{"_index":2443,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.loadallcollectionsfromdatabase(folder",{"_index":1163,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadallcollectionsfromfilesystem(folder",{"_index":1162,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1180,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.logger",{"_index":2372,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`create",{"_index":2374,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":6064,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":2381,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":2392,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":2382,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":6037,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":6061,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":1278,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":1281,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":352,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":2062,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":470,"title":{},"body":{"classes/Course.html":{},"classes/File.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":2389,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":2394,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":2380,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":2404,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":2127,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":2144,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":2132,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":2140,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":2141,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.module",{"_index":2870,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["this.options.routingkey",{"_index":1988,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.orm.close",{"_index":2061,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.permissions",{"_index":1694,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.positionfromgridindex(key",{"_index":776,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.private",{"_index":1751,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.propertiestopopulate",{"_index":2273,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.reference",{"_index":754,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.reference.getmetadata",{"_index":755,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.request.app.get('feathersapp",{"_index":1383,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(role.id",{"_index":2510,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles.set(props.roles",{"_index":1696,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["this.roleuc.resolvepermissionsbyroles(roles",{"_index":2965,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.rows",{"_index":762,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.school",{"_index":473,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.skip",{"_index":2442,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":571,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.sourcedescription",{"_index":573,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":380,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["this.status",{"_index":1777,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.student",{"_index":1729,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.students.length",{"_index":483,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":476,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.set(props.submissions",{"_index":1766,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":480,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.task",{"_index":1733,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskrepo.findallbyparentids",{"_index":2815,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findall(currentuser",{"_index":2673,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacher",{"_index":1763,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.teachers.set(props.teachers",{"_index":478,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5367,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":6142,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":351,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":750,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.total",{"_index":2441,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":350,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":6036,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(userid",{"_index":1861,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":6041,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(userid",{"_index":2962,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":6032,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":6030,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(userid",{"_index":2938,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":4364,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":5083,"title":{},"body":{"license.html":{}}}],["thr",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":4120,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4829,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":2894,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":2902,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":2901,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":4281,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":4907,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4680,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["ticketsystem",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":4682,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":637,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":1796,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":2905,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":2898,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":2895,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1798,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":2904,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":3655,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":4121,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":2287,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":6136,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4597,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["tmpdirpath",{"_index":1472,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["toarray",{"_index":1070,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["todo",{"_index":232,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":2149,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":6156,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4643,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":6054,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["toseedfolder",{"_index":992,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["total",{"_index":2433,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":1677,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5860,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5884,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":5106,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":5105,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":5107,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":3744,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5846,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4830,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":5063,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5160,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":6006,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1598,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":2446,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":1601,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4500,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":1599,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":1931,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4658,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":5025,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":5969,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5875,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":5082,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4931,"title":{},"body":{"license.html":{}}}],["tries",{"_index":4311,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5878,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":4330,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":556,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1548,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":5355,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":4255,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":1826,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":1650,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":5401,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":6259,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1723,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/Submission.html":{}}}],["typeorm",{"_index":6263,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":554,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":4400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/entity",{"_index":445,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["types/news.types",{"_index":553,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["typesafety",{"_index":2139,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":580,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":5048,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":1359,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":2706,"title":{},"body":{"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5911,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/dashboard.uc",{"_index":686,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/database",{"_index":972,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["uc/news.uc",{"_index":2120,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.authorization.service",{"_index":2707,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":2666,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":2937,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":4595,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":5841,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":1293,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":185,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":5999,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":252,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3226,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":6145,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":6105,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":1577,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":1296,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":3326,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["univention",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["universal",{"_index":4598,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":319,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":1539,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":5054,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":6218,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4896,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4807,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3317,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":5079,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1632,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1889,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["unskip",{"_index":2231,"title":{},"body":{"modules/NewsModule.html":{}}}],["unstable",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":6051,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":743,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unused",{"_index":2872,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":3042,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":2096,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":2365,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":2113,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":2312,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":2114,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":517,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":545,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":4341,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1627,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":2249,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upgraded",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":4590,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1717,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":5985,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":5926,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":1295,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":1963,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1495,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":3548,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":4601,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":3960,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":1289,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1866,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":1494,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2033,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":806,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"license.html":{}}}],["useguards(jwtauthguard",{"_index":5453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":169,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":6031,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.${date.now()}@example.com",{"_index":5530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user._id",{"_index":5523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":2470,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":448,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["user.facade",{"_index":2948,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":2467,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.id",{"_index":2465,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":2469,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.ldapdn",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":1329,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":5941,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.roles.getitems",{"_index":2963,"title":{},"body":{"injectables/UserUC.html":{}}}],["user.school.tostring",{"_index":2473,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":1327,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.uc.ts",{"_index":5935,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":2471,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":1868,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5695,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":6023,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":6029,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":6043,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":2920,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfacade",{"_index":1839,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userfactory",{"_index":4453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":6217,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":1337,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["useridobject",{"_index":5520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useridobject.tohexstring",{"_index":5521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userids",{"_index":431,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userinfomapper",{"_index":2177,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":2198,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":2201,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":2289,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":118,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":4043,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":2946,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1637,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":6038,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["useruc",{"_index":2925,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":4186,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":1256,"title":{},"body":{"controllers/DelayController.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":378,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["utf",{"_index":1440,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["util",{"_index":3961,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":6155,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":3932,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":4328,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":5502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":5389,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5394,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1605,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":1793,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":1841,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":1879,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validatenested",{"_index":2068,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["validatenested()@apiproperty",{"_index":2065,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["validates",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":1878,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":1871,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":1877,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":1875,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":2980,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":1587,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":1594,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":406,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":2972,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":23,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":71,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":85,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":387,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":1593,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":661,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":5922,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":2449,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":248,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueobject",{"_index":2831,"title":{},"body":{"injectables/TaskUC.html":{}}}],["valueof",{"_index":5418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":3475,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":4244,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":3048,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":2873,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":4721,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1672,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":1681,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":1686,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":6246,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":6244,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":3495,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":6179,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":3228,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":4738,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":1189,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":808,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":2361,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":529,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":5077,"title":{},"body":{"license.html":{}}}],["violation",{"_index":5128,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4554,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5373,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":528,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visiblelessons",{"_index":2812,"title":{},"body":{"injectables/TaskUC.html":{}}}],["visiblelessons.map((o",{"_index":2816,"title":{},"body":{"injectables/TaskUC.html":{}}}],["visual",{"_index":4677,"title":{},"body":{"index.html":{}}}],["void",{"_index":281,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4981,"title":{},"body":{"license.html":{}}}],["vor",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":1813,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4644,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6284,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5395,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5613,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6282,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vue.js",{"_index":4628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vulnerabilities",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":3075,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["waive",{"_index":4937,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5307,"title":{},"body":{"license.html":{}}}],["want",{"_index":2772,"title":{},"body":{"classes/TaskScope.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":1673,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":1683,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4841,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4840,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5378,"title":{},"body":{"todo.html":{}}}],["way",{"_index":2039,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4991,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":5323,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3117,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":6102,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":2555,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":1933,"title":{},"body":{"injectables/Logger.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":5045,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":1603,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":1857,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3231,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":5032,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4858,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4765,"title":{},"body":{"license.html":{}}}],["wil",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3976,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":4379,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":3900,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":4690,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4930,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4746,"title":{},"body":{"license.html":{}}}],["wishes",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["within",{"_index":328,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3015,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5352,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["wopi",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":4685,"title":{},"body":{"index.html":{}}}],["work",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4876,"title":{},"body":{"license.html":{}}}],["workers",{"_index":3261,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflow",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["workflows",{"_index":6052,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":4286,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":6097,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":2148,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":5197,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":865,"title":{},"body":{"classes/DashboardModelMapper.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":899,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrap(reference).toreference",{"_index":897,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrapped",{"_index":5464,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":794,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["wraps",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":1452,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":1574,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":1581,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writefile",{"_index":1413,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writefile(filepath",{"_index":1450,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writer",{"_index":376,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.module",{"_index":2563,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["writer.module.ts",{"_index":362,"title":{},"body":{"modules/ConsoleWriterModule.html":{}}}],["writer.service",{"_index":364,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["writer.service.ts",{"_index":365,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"coverage.html":{}}}],["writer.service.ts:10",{"_index":373,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:12",{"_index":369,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer/console",{"_index":361,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["writes",{"_index":5866,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":1562,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":1576,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":5275,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4999,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1568,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":756,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4605,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":789,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["xposition",{"_index":817,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xss",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":757,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{}}}],["year",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":5000,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":336,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":5212,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":6059,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":790,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["yposition",{"_index":818,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["yyyy",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BsonConverter.html":{"url":"injectables/BsonConverter.html","title":"injectable - BsonConverter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BsonConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/converter/bson.converter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(bsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:21\n                \n            \n\n\n            \n                \n                    Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-bson/ejson objects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-json documents\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(documents: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:11\n                \n            \n\n\n            \n                \n                    Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    documents\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-json documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-bson/ejson objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as BSON from 'bson';\n\n@Injectable()\nexport class BsonConverter {\n\t/**\n\t * Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\t * @param documents mongo-json documents\n\t * @returns mongo-bson/ejson objects\n\t */\n\tserialize(documents: unknown[]): unknown[] {\n\t\tconst bsonDocuments = BSON.EJSON.serialize(documents) as unknown[];\n\t\treturn bsonDocuments;\n\t}\n\n\t/**\n\t * Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\t * @param bsonDocuments mongo-bson/ejson objects\n\t * @returns mongo-json documents\n\t */\n\tdeserialize(bsonDocuments: unknown[]): unknown[] {\n\t\tconst jsonDocuments = BSON.EJSON.deserialize(bsonDocuments) as unknown[];\n\t\treturn jsonDocuments;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleWriterModule.html":{"url":"modules/ConsoleWriterModule.html","title":"module - ConsoleWriterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleWriterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleWriterService } from './console-writer.service';\n\n@Module({\n\tproviders: [ConsoleWriterService],\n\texports: [ConsoleWriterService],\n})\nexport class ConsoleWriterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriterService.html":{"url":"injectables/ConsoleWriterService.html","title":"injectable - ConsoleWriterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ora.Ora\n\n                    \n                \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\nimport * as ora from 'ora';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriterService {\n\tprivate spinner: ora.Ora = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNumberOfStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroup.html":{"url":"classes/CourseGroup.html","title":"class - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseGroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseGroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/course.repo.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                            \n                                    Async\n                                moveElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElement(dashboardId: string, params: MoveElementParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/moveElement')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                MoveElementParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Patch, Param, Body } from '@nestjs/common';\nimport { Authenticate } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { DashboardUc } from '../uc/dashboard.uc';\n\nimport { DashboardResponse, MoveElementParams } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(/* currentUser.userId */);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/moveElement')\n\tasync moveElement(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t/* @CurrentUser() currentUser: ICurrentUser, */\n\t\t@Body() params: MoveElementParams\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.moveElementOnDashboard(dashboardId, params.from, params.to);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                            \n                                rows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                            \n                                    Private\n                                gridIndexFromPosition\n                            \n                            \n                                moveElement\n                            \n                            \n                                    Private\n                                positionFromGridIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:81\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementWithPosition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        gridIndexFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    gridIndexFromPosition(pos: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveElement\n                        \n                    \n                \n            \n            \n                \nmoveElement(from: GridPosition, to: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElementWithPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        positionFromGridIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    positionFromGridIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (elementToMove) {\n\t\t\tif (this.grid.get(this.gridIndexFromPosition(to))) {\n\t\t\t\tthrow new BadRequestException('target position already taken');\n\t\t\t}\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\t\t\treturn {\n\t\t\t\tpos: to,\n\t\t\t\tgridElement: elementToMove,\n\t\t\t};\n\t\t}\n\t\tthrow new NotFoundException('no element at origin position');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementModel.html":{"url":"classes/DashboardGridElementModel.html","title":"class - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                reference\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DefaultGridReferenceModel', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((elementWithPosition) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\tconst data = elementWithPosition.gridElement.getMetadata();\n\t\t\telementDTO.id = data.id;\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\n\t\t\tconst { pos } = elementWithPosition;\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelEntity.html":{"url":"classes/DashboardModelEntity.html","title":"class - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelMapper.html":{"url":"classes/DashboardModelMapper.html","title":"class - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                mapGridElementToModel\n                            \n                            \n                                    Static\n                                    Async\n                                mapToEntity\n                            \n                            \n                                    Static\n                                    Async\n                                mapToModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToModel(entity: DashboardEntity, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, wrap, EntityManager } from '@mikro-orm/core';\nimport { DashboardEntity, GridElement, GridElementWithPosition, DefaultGridReference } from '@shared/domain';\nimport { DashboardGridElementModel, DashboardModelEntity, DefaultGridReferenceModel } from './dashboard.model.entity';\n\nexport class DashboardModelMapper {\n\tstatic async mapToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tawait modelEntity.gridElements.init();\n\t\tconst grid: GridElementWithPosition[] = await Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\tconst loaded = await e.reference.load();\n\t\t\t\tconst result = {\n\t\t\t\t\tpos: { x: e.xPos, y: e.yPos },\n\t\t\t\t\tgridElement: new GridElement(e.id, new DefaultGridReference(loaded.id, loaded.title, loaded.color)),\n\t\t\t\t};\n\t\t\t\treturn result;\n\t\t\t})\n\t\t);\n\t\treturn new DashboardEntity(modelEntity.id, { grid });\n\t}\n\n\tstatic async mapGridElementToModel(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity,\n\t\tem: EntityManager\n\t): Promise {\n\t\tconst existing = await em.findOne(DashboardGridElementModel, elementWithPosition.gridElement.getId());\n\t\tconst model = existing || new DashboardGridElementModel(elementWithPosition.gridElement.getId());\n\t\tmodel.xPos = elementWithPosition.pos.x;\n\t\tmodel.yPos = elementWithPosition.pos.y;\n\n\t\tconst existingReference = await em.findOne(\n\t\t\tDefaultGridReferenceModel,\n\t\t\telementWithPosition.gridElement.getMetadata().id\n\t\t);\n\t\tconst reference =\n\t\t\texistingReference || new DefaultGridReferenceModel(elementWithPosition.gridElement.getMetadata().id);\n\t\treference.color = elementWithPosition.gridElement.getMetadata().displayColor;\n\t\treference.title = elementWithPosition.gridElement.getMetadata().title;\n\t\tmodel.reference = wrap(reference).toReference();\n\n\t\tmodel.dashboard = wrap(dashboard).toReference();\n\t\treturn model;\n\t}\n\n\tstatic async mapToModel(entity: DashboardEntity, em: EntityManager): Promise {\n\t\tconst existing = await em.findOne(DashboardModelEntity, entity.getId());\n\t\tconst modelEntity = existing || new DashboardModelEntity(entity.getId());\n\t\tconst mappedElements = await Promise.all(\n\t\t\tentity\n\t\t\t\t.getGrid()\n\t\t\t\t.map((elementWithPosition) => DashboardModelMapper.mapGridElementToModel(elementWithPosition, modelEntity, em))\n\t\t);\n\n\t\tmodelEntity.gridElements = new Collection(modelEntity, mappedElements);\n\n\t\treturn modelEntity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, GridElementWithPosition } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tthis.em.persist(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\t\tconst gridArray: GridElementWithPosition[] = [];\n\t\tconst diagonalSize = 4;\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                moveElementOnDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElementOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElementOnDashboard(dashboardId: EntityId, from: GridPosition, to: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity, EntityId, GridPosition } from '@shared/domain';\nimport { IDashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo) {}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard();\n\t\treturn dashboard;\n\t}\n\n\tasync moveElementOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tfrom: GridPosition,\n\t\tto: GridPosition\n\t\t/* currentUser: ICurrentUser */\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tdashboard.moveElement(from, to);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseManagementConsole.html":{"url":"classes/DatabaseManagementConsole.html","title":"class - DatabaseManagementConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseManagementConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                seedCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService, databaseManagementUc: DatabaseManagementUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/console/database-management.console.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementUc\n                                                  \n                                                        \n                                                                        DatabaseManagementUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'export', options: undefined, description: 'export database collections to filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'seed', options: undefined, description: 'reset database collections with seed data from filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseManagementController.html":{"url":"controllers/DatabaseManagementController.html","title":"controller - DatabaseManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/controller/database-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/database\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollection\n                            \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                            \n                                    Async\n                                importCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post } from '@nestjs/common';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\n@Controller('management/database')\nexport class DatabaseManagementController {\n\tconstructor(private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Post('seed')\n\tasync importCollections(): Promise {\n\t\tconst result = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem();\n\t\treturn result;\n\t}\n\n\t@Post('seed/:collectionName')\n\tasync importCollection(@Param('collectionName') collectionName: string): Promise {\n\t\tconst result = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem([collectionName]);\n\t\treturn result;\n\t}\n\n\t@Post('export')\n\tasync exportCollections(): Promise {\n\t\tconst result = await this.databaseManagementUc.exportCollectionsToFileSystem();\n\t\treturn result;\n\t}\n\n\t@Post('export/:collectionName')\n\tasync exportCollection(@Param('collectionName') collectionName: string): Promise {\n\t\tconst result = await this.databaseManagementUc.exportCollectionsToFileSystem([collectionName]);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseManagementModule.html":{"url":"modules/DatabaseManagementModule.html","title":"module - DatabaseManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseManagementService } from './database-management.service';\n\n@Module({\n\timports: [DatabaseManagementService],\n\texports: [DatabaseManagementService],\n})\nexport class DatabaseManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementService.html":{"url":"injectables/DatabaseManagementService.html","title":"injectable - DatabaseManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCollection\n                            \n                            \n                                    Async\n                                collectionExists\n                            \n                            \n                                    Async\n                                createCollection\n                            \n                            \n                                    Async\n                                dropCollection\n                            \n                            \n                                    Async\n                                findDocumentsOfCollection\n                            \n                            \n                                    Async\n                                getCollectionNames\n                            \n                            \n                                    Private\n                                getDatabaseCollection\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionExists(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dropCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDocumentsOfCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDocumentsOfCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionNames()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDatabaseCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string, jsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Collection, Db } from 'mongodb';\n\n@Injectable()\nexport class DatabaseManagementService {\n\tconstructor(private em: EntityManager) {}\n\n\tprivate get db(): Db {\n\t\treturn this.em.getConnection('write').getDb();\n\t}\n\n\tprivate getDatabaseCollection(collectionName: string): Collection {\n\t\tconst collection = this.db.collection(collectionName);\n\t\treturn collection;\n\t}\n\n\tasync importCollection(collectionName: string, jsonDocuments: unknown[]): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tif (jsonDocuments.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst { insertedCount } = await collection.insertMany(jsonDocuments, {\n\t\t\tforceServerObjectId: true,\n\t\t\tbypassDocumentValidation: true,\n\t\t});\n\t\treturn insertedCount;\n\t}\n\n\tasync findDocumentsOfCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst documents = (await collection.find({}).toArray()) as unknown[];\n\t\treturn documents;\n\t}\n\n\tasync clearCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst { deletedCount } = await collection.deleteMany({});\n\t\treturn deletedCount || 0;\n\t}\n\n\tasync getCollectionNames(): Promise {\n\t\tconst collections = (await this.db.listCollections(undefined, { nameOnly: true }).toArray()) as unknown[] as {\n\t\t\tname: string;\n\t\t}[];\n\t\tconst collectionNames = collections.map((collection) => collection.name);\n\t\treturn collectionNames;\n\t}\n\n\tasync collectionExists(collectionName: string): Promise {\n\t\tconst collections = await this.getCollectionNames();\n\t\tconst result = collections.includes(collectionName);\n\t\treturn result;\n\t}\n\n\tasync createCollection(collectionName: string): Promise {\n\t\tawait this.db.createCollection(collectionName);\n\t}\n\n\tasync dropCollection(collectionName: string): Promise {\n\t\tawait this.db.dropCollection(collectionName);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementUc.html":{"url":"injectables/DatabaseManagementUc.html","title":"injectable - DatabaseManagementUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollectionsToFileSystem\n                            \n                            \n                                    Private\n                                getSeedFolder\n                            \n                            \n                                    Private\n                                getTargetFolder\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromFilesystem\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                            \n                            \n                                    Async\n                                seedDatabaseCollectionsFromFileSystem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseDir\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystemAdapter: FileSystemAdapter, databaseManagementService: DatabaseManagementService, bsonConverter: BsonConverter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystemAdapter\n                                                  \n                                                        \n                                                                        FileSystemAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementService\n                                                  \n                                                        \n                                                                        DatabaseManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsonConverter\n                                                  \n                                                        \n                                                                        BsonConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollectionsToFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:183\n                \n            \n\n\n            \n                \n                    Exports all or defined  from database as bson to filesystem.\nThe behaviour should match $ mongoexport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional override existing seed data files\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSeedFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeedFolder()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:38\n                \n            \n\n\n            \n                \n                    setup dir with json files\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTargetFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFolder(toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:46\n                \n            \n\n\n            \n                \n                    export folder name based on current date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromDatabase(targetFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:63\n                \n            \n\n\n            \n                \n                    Loads all collection names from database and adds related file paths.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromFilesystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromFilesystem(baseDir: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:76\n                \n            \n\n\n            \n                \n                    Loads all collection names and file paths from backup files.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionsAvailableFromSourceAndFilterByCollectionNames(source: \"files\" | \"database\", folder: string, collectionNameFilter?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:91\n                \n            \n\n\n            \n                \n                    Scans  for existing collections and optionally filters them based on \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            \"files\" | \"database\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionNameFilter\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the filtered collection names and related file paths\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedDatabaseCollectionsFromFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedDatabaseCollectionsFromFileSystem(collections?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:134\n                \n            \n\n\n            \n                \n                    Imports all or filtered  from filesystem as bson to database.\nThe behaviour should match $ mongoimport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../../../backup'\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                        \n                    \n\n            \n                \n                    relative path to seed data folder based of location of this file.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseDir\n                    \n                \n\n                \n                    \n                        getbaseDir()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:30\n                                \n                            \n                    \n                        \n                                absolute path reference for seed data base folder.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReference.html":{"url":"classes/DefaultGridReference.html","title":"class - DefaultGridReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElementReference\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, displayColor: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (elementToMove) {\n\t\t\tif (this.grid.get(this.gridIndexFromPosition(to))) {\n\t\t\t\tthrow new BadRequestException('target position already taken');\n\t\t\t}\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\t\t\treturn {\n\t\t\t\tpos: to,\n\t\t\t\tgridElement: elementToMove,\n\t\t\t};\n\t\t}\n\t\tthrow new NotFoundException('no element at origin position');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReferenceModel.html":{"url":"classes/DefaultGridReferenceModel.html","title":"class - DefaultGridReferenceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReferenceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                title\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IFileProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IFileProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tname: string;\n\tcreator: User;\n}\n\n@Entity({ tableName: 'files' })\nexport class File extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: User;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemAdapter.html":{"url":"injectables/FileSystemAdapter.html","title":"injectable - FileSystemAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDir\n                            \n                            \n                                    Async\n                                createTmpDir\n                            \n                            \n                                joinPath\n                            \n                            \n                                    Async\n                                readDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Async\n                                removeDirRecursive\n                            \n                            \n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EOL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:26\n                \n            \n\n\n            \n                \n                    creates a directory if not already exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTmpDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTmpDir(dirNamePrefix: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:68\n                \n            \n\n\n            \n                \n                    Creates a folder in systems temp path.\nThe dirNamePrefix given will be extended by six random characters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirNamePrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        full path string to temp folder, format depends on os\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinPath\n                        \n                    \n                \n            \n            \n                \njoinPath(...paths: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    readDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:36\n                \n            \n\n\n            \n                \n                    Lists filenames of given folderPath\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string array of filenames\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:57\n                \n            \n\n\n            \n                \n                    Read file from filesystem with given encoding, defaults to utf-8\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to existing file, format depending on os\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        file content as encoded text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDirRecursive\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDirRecursive(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:78\n                \n            \n\n\n            \n                \n                    Removes the given folder recursively including content when not empty.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder, format depending on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(filePath: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:48\n                \n            \n\n\n            \n                \n                    Write text to file, will override existing files.\nThe folder in which the file will be created must exist.\nThe path format depends on os\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to a file\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferEncoding\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EOL\n                    \n                \n\n                \n                    \n                        getEOL()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { promises as fsp, existsSync } from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nimport rimraf = require('rimraf');\n\nconst { mkdir, readdir, writeFile, readFile, mkdtemp } = fsp;\n\n@Injectable()\nexport class FileSystemAdapter {\n\tprivate encoding: BufferEncoding;\n\n\tconstructor() {\n\t\tthis.encoding = 'utf-8';\n\t}\n\n\tget EOL(): string {\n\t\treturn os.EOL;\n\t}\n\n\t/**\n\t * creates a directory if not already exists\n\t * @param folderPath\n\t */\n\tasync createDir(folderPath: string): Promise {\n\t\tconst exists = existsSync(folderPath);\n\t\tif (!exists) await mkdir(folderPath);\n\t}\n\n\t/**\n\t * Lists filenames of given folderPath\n\t * @param folderPath path to an existing folder\n\t * @returns string array of filenames\n\t */\n\tasync readDir(folderPath: string): Promise {\n\t\tconst filenames = await readdir(folderPath, { encoding: this.encoding });\n\t\treturn filenames;\n\t}\n\n\t/**\n\t * Write text to file, will override existing files.\n\t * The folder in which the file will be created must exist.\n\t * The path format depends on os\n\t * @param filePath path to a file\n\t * @param text\n\t */\n\tasync writeFile(filePath: string, text: string): Promise {\n\t\tawait writeFile(filePath, text);\n\t}\n\n\t/**\n\t * Read file from filesystem with given encoding, defaults to utf-8\n\t * @param filePath path to existing file, format depending on os\n\t * @returns file content as encoded text\n\t */\n\tasync readFile(filePath: string): Promise {\n\t\tconst text = await readFile(filePath, this.encoding);\n\t\treturn text;\n\t}\n\n\t/**\n\t * Creates a folder in systems temp path.\n\t * The dirNamePrefix given will be extended by six random characters.\n\t * @param dirNamePrefix\n\t * @returns full path string to temp folder, format depends on os\n\t */\n\tasync createTmpDir(dirNamePrefix: string): Promise {\n\t\tconst dirPath = this.joinPath(os.tmpdir(), dirNamePrefix);\n\t\tconst tmpDirPath = await mkdtemp(dirPath);\n\t\treturn tmpDirPath;\n\t}\n\n\t/**\n\t * Removes the given folder recursively including content when not empty.\n\t * @param folderPath path to an existing folder, format depending on\n\t */\n\tasync removeDirRecursive(folderPath: string): Promise {\n\t\t// fs.rm changed in node 14.14, use rimraf instead\n\t\trimraf.sync(folderPath);\n\t\treturn Promise.resolve();\n\t}\n\n\tjoinPath(...paths: string[]): string {\n\t\treturn path.join(...paths);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileSystemModule.html":{"url":"modules/FileSystemModule.html","title":"module - FileSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    FileSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileSystemAdapter } from './file-system.adapter';\n\n@Module({\n\tproviders: [FileSystemAdapter],\n\texports: [FileSystemAdapter],\n})\nexport class FileSystemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger: ILogger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                reference\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, reference: IGridElementReference)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reference\n                                                  \n                                                        \n                                                                        IGridElementReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElementReference\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (elementToMove) {\n\t\t\tif (this.grid.get(this.gridIndexFromPosition(to))) {\n\t\t\t\tthrow new BadRequestException('target position already taken');\n\t\t\t}\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\t\t\treturn {\n\t\t\t\tpos: to,\n\t\t\t\tgridElement: elementToMove,\n\t\t\t};\n\t\t}\n\t\tthrow new NotFoundException('no element at origin position');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionFilePath.html":{"url":"interfaces/ICollectionFilePath.html","title":"interface - ICollectionFilePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionFilePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collectionName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDashboardById\n                                    \n                                \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                                \n                                    \n                                        persistAndFlush\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \ngetDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \npersistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, GridElementWithPosition } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tthis.em.persist(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\t\tconst gridArray: GridElementWithPosition[] = [];\n\t\tconst diagonalSize = 4;\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tname: string;\n\tcreator: User;\n}\n\n@Entity({ tableName: 'files' })\nexport class File extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: User;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getId\n                                        \n                                \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (elementToMove) {\n\t\t\tif (this.grid.get(this.gridIndexFromPosition(to))) {\n\t\t\t\tthrow new BadRequestException('target position already taken');\n\t\t\t}\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\t\t\treturn {\n\t\t\t\tpos: to,\n\t\t\t\tgridElement: elementToMove,\n\t\t\t};\n\t\t}\n\t\tthrow new NotFoundException('no element at origin position');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElementReference.html":{"url":"interfaces/IGridElementReference.html","title":"interface - IGridElementReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElementReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tmoveElement(from: GridPosition, to: GridPosition): GridElementWithPosition {\n\t\tconst elementToMove = this.grid.get(this.gridIndexFromPosition(from));\n\t\tif (elementToMove) {\n\t\t\tif (this.grid.get(this.gridIndexFromPosition(to))) {\n\t\t\t\tthrow new BadRequestException('target position already taken');\n\t\t\t}\n\t\t\tthis.grid.set(this.gridIndexFromPosition(to), elementToMove);\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(from));\n\t\t\treturn {\n\t\t\t\tpos: to,\n\t\t\t\tgridElement: elementToMove,\n\t\t\t};\n\t\t}\n\t\tthrow new NotFoundException('no element at origin position');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILessonProperties.html":{"url":"interfaces/ILessonProperties.html","title":"interface - ILessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\ninterface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availableDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacher\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacher:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\t\treturn descriptions;\n\t}\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/vo/task-with-status.vo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            isDraft\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDraft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDraft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from '../entity/task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { UserFacade } from '@src/modules/user';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti, userId } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(userId);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ILessonProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ILessonProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\ninterface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCourseIds(courseIds: EntityId[], filters?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:15\n                \n            \n\n\n            \n                \n                    TODO add pagination and sorting\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/core';\n\nimport { EntityId, Lesson } from '@shared/domain';\n\nimport { LessonScope } from './lesson-scope';\n\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * TODO add pagination and sorting\n\t */\n\tasync findAllByCourseIds(courseIds: EntityId[], filters?: { hidden?: boolean }): Promise {\n\t\tconst scope = new LessonScope();\n\n\t\tscope.byCourseIds(courseIds);\n\n\t\tif (filters?.hidden !== undefined) {\n\t\t\tscope.byHidden(filters.hidden);\n\t\t}\n\n\t\tconst lessons = this.em.find(Lesson, scope.query);\n\t\treturn lessons;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonScope.html":{"url":"classes/LessonScope.html","title":"class - LessonScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourseIds\n                            \n                            \n                                byHidden\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byHidden\n                        \n                    \n                \n            \n            \n                \nbyHidden(isHidden: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isHidden\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Lesson } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class LessonScope extends Scope {\n\tbyCourseIds(courseIds: EntityId[]): LessonScope {\n\t\tthis.addQuery({ course: { $in: courseIds } });\n\t\treturn this;\n\t}\n\n\tbyHidden(isHidden: boolean): LessonScope {\n\t\tthis.addQuery({ hidden: { $eq: isHidden } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend ConsoleLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends ConsoleLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFileSystemModule\n\nFileSystemModule\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BsonConverter\n                        \n                        \n                            ConsoleWriterService\n                        \n                        \n                            DatabaseManagementService\n                        \n                        \n                            DatabaseManagementUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementModule\n                        \n                        \n                            FileSystemModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { DatabaseManagementService, DatabaseManagementModule } from '@shared/infra/database';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { FileSystemModule } from '@shared/infra/file-system';\n\nimport { ConsoleWriterService } from '@shared/infra/console';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { DatabaseManagementController } from './controller/database-management.controller';\nimport { DatabaseManagementUc } from './uc/database-management.uc';\nimport { BsonConverter } from './converter/bson.converter';\nimport { DatabaseManagementConsole } from './console/database-management.console';\n\n@Module({\n\timports: [\n\t\tFileSystemModule,\n\t\tDatabaseManagementModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\t// TODO repeats server module definitions\n\t\t\ttype: 'mongo',\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tDatabaseManagementUc,\n\t\tDatabaseManagementService,\n\t\tBsonConverter,\n\t\t// console providers\n\t\tDatabaseManagementConsole,\n\t\t// infra services\n\t\tConsoleWriterService,\n\t],\n\tcontrollers: [DatabaseManagementController],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleAsyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server-global-4.2';\nimport { MongoDatabaseModuleOptions } from './types';\n\nconst createMikroOrmModule = async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementParams.html":{"url":"classes/MoveElementParams.html","title":"class - MoveElementParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\tx: number;\n\n\t@IsNumber()\n\t@Min(0)\n\ty: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementPosition.html":{"url":"classes/MoveElementPosition.html","title":"class - MoveElementPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\tx: number;\n\n\t@IsNumber()\n\t@Min(0)\n\ty: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/news.entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery, PaginationResponse } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News } from '@shared/domain';\nimport { ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain/types/news.types';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger/logger.module';\nimport { AuthorizationModule } from '@src/modules/authorization/authorization.module';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '@shared/domain';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:57\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions, News, SortOrder } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '@shared/domain/types/news.types';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tprivate logger: ILogger;\n\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService) {\n\t\tthis.logger = new Logger(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            override\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Role')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByRoles(inputRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IPermissionsAndRoles, Role } from '@shared/domain';\n\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByRoles(inputRoles: Role[]): Promise {\n\t\tconst roles = await Promise.all(\n\t\t\tinputRoles.map((role) => this.roleRepo.resolvePermissionsFromSubRolesById(role.id))\n\t\t);\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operator: ScopeOperator)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operator\n                                                  \n                                                        \n                                                                        ScopeOperator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\n\ntype ScopeOperator = '$and' | '$or';\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tprivate _operator: ScopeOperator;\n\n\tconstructor(operator: ScopeOperator = '$and') {\n\t\tthis._operator = operator;\n\t}\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { [this._operator]: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConsoleWriterModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ConsoleWriterModule } from '@shared/infra/console/console-writer/console-writer.module';\nimport { ManagementModule } from '../modules/management/management.module';\nimport { ServerConsole } from './server.console';\n\n@Module({\n\timports: [ManagementModule, ConsoleModule, ConsoleWriterModule],\n\tproviders: [\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { LearnroomModule } from './modules/learnroom/learnroom.module';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isGraded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isGraded\n                        \n                    \n                \n            \n            \n                \nisGraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/submission.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain/types/news.types';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                            \n                                    Optional\n                                teacher\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                isDraft\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'teacherId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskParentDescriptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\t\treturn descriptions;\n\t}\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(userId: EntityId, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { CourseRepo } from '@src/repositories';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tasync getPermittedCourses(userId: EntityId, permission: TaskParentPermission): Promise {\n\t\t// courseGroups are missing\n\t\t// lessons are missing -> only search for hidden: false,\n\t\tconst [permittedCourses] =\n\t\t\tpermission === TaskParentPermission.write\n\t\t\t\t? await this.courseRepo.findAllForTeacher(userId)\n\t\t\t\t: await this.courseRepo.findAllForStudent(userId);\n\n\t\tconst entityIds = permittedCourses.map((o) => o.id);\n\t\treturn entityIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationResponse, PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst dto = new TaskResponse();\n\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.availableDate = task.availableDate;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = {\n\t\t\tsubmitted: status.submitted,\n\t\t\tmaxSubmissions: status.maxSubmissions,\n\t\t\tgraded: status.graded,\n\t\t\tisDraft: status.isDraft,\n\t\t};\n\n\t\tconst taskDesc = task.getDescriptions();\n\t\tdto.courseName = taskDesc.name;\n\t\tdto.displayColor = taskDesc.color;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo } from '@src/repositories';\n\nimport { LessonRepo } from '@shared/repo';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskRepo } from './repo';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, LessonRepo, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByParentIds\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByParentIds(parentIds: literal type, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:24\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents which can be any of\n\na teacher who owns the task\na list of courses\na list of lessons\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parentIds for teacher, courses and lesson\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, FilterQuery, QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, IFindOptions, Lesson, Task } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * Find all tasks by their parents which can be any of\n\t * - a teacher who owns the task\n\t * - a list of courses\n\t * - a list of lessons\n\t *\n\t * @param parentIds parentIds for teacher, courses and lesson\n\t * @param filters filters\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllByParentIds(\n\t\tparentIds: {\n\t\t\tteacherId?: EntityId;\n\t\t\tcourseIds?: EntityId[];\n\t\t\tlessonIds?: EntityId[];\n\t\t},\n\t\tfilters?: { draft?: boolean; afterDueDateOrNone?: Date },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\n\t\tconst parentIdScope = new TaskScope('$or');\n\n\t\tif (parentIds.teacherId) {\n\t\t\tparentIdScope.byTeacherId(parentIds.teacherId);\n\t\t}\n\n\t\tif (parentIds.courseIds) {\n\t\t\tparentIdScope.byCourseIds(parentIds.courseIds);\n\t\t}\n\n\t\tif (parentIds.lessonIds) {\n\t\t\tparentIdScope.byLessonIds(parentIds.lessonIds);\n\t\t}\n\n\t\tscope.addQuery(parentIdScope.query);\n\n\t\tif (filters?.draft !== undefined) {\n\t\t\tscope.byDraft(filters.draft);\n\t\t}\n\n\t\tif (filters?.afterDueDateOrNone !== undefined) {\n\t\t\tscope.afterDueDateOrNone(filters.afterDueDateOrNone);\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(taskEntities, ['course', 'lesson', 'submissions']);\n\t\treturn [taskEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiProperty()\n\tavailableDate?: Date;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t\tisDraft: boolean;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byCourseIds\n                            \n                            \n                                byDraft\n                            \n                            \n                                byLessonIds\n                            \n                            \n                                byTeacherId\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byDraft\n                        \n                    \n                \n            \n            \n                \nbyDraft(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonIds\n                        \n                    \n                \n            \n            \n                \nbyLessonIds(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byTeacherId\n                        \n                    \n                \n            \n            \n                \nbyTeacherId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Task } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nexport class TaskScope extends Scope {\n\tbyTeacherId(userId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ teacher: userId }, { course: null }, { lesson: null }],\n\t\t});\n\t\treturn this;\n\t}\n\n\tbyCourseIds(courseIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ course: { $in: courseIds } }, { lesson: null }],\n\t\t});\n\t\treturn this;\n\t}\n\n\tbyLessonIds(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ lesson: { $in: lessonIds } });\n\t\treturn this;\n\t}\n\n\tbyDraft(isDraft: boolean): TaskScope {\n\t\t// FIXME - WE DON'T WANT THIS!!! NON-OPTIONAL BOOLEAN PROPERTIES HAVE TO BE DEFINED.\n\t\t// additionally handle undefined and null as false\n\t\tconst query = isDraft ? { private: { $eq: true } } : { private: { $ne: true } };\n\t\tthis.addQuery(query);\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeTaskStatusForStudent\n                            \n                            \n                                    Private\n                                computeTaskStatusForTeacher\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, lessonRepo: LessonRepo, authorizationService: TaskAuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForStudent(task: Task, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForTeacher(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder, Task, TaskWithStatusVo } from '@shared/domain';\n\nimport { LessonRepo } from '@shared/repo';\nimport { TaskRepo } from '../repo';\nimport { TaskAuthorizationService, TaskParentPermission } from './task.authorization.service';\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly authorizationService: TaskAuthorizationService\n\t) {}\n\n\t// TODO replace curentUser with userId. this requires that permissions are loaded inside the use case by authorization service\n\tasync findAll(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllForTeacher(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courseIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\t\tconst visibleLessons = await this.lessonRepo.findAllByCourseIds(courseIds, { hidden: false });\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcourseIds,\n\t\t\t\tlessonIds: visibleLessons.map((o) => o.id),\n\t\t\t},\n\t\t\t{ draft: false, afterDueDateOrNone: dueDate },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.asc },\n\t\t\t}\n\t\t);\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForStudent(task, userId));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate async findAllForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courseIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.write);\n\t\tconst visibleLessons = await this.lessonRepo.findAllByCourseIds(courseIds, { hidden: false });\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tteacherId: userId,\n\t\t\t\tcourseIds,\n\t\t\t\tlessonIds: visibleLessons.map((o) => o.id),\n\t\t\t},\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.desc },\n\t\t\t}\n\t\t);\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForTeacher(task));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\t\treturn hasPermission;\n\t}\n\n\tprivate computeTaskStatusForStudent(task: Task, userId: EntityId): TaskWithStatusVo {\n\t\tconst studentSubmissions = task.submissions.getItems().filter((submission) => submission.student.id === userId);\n\n\t\tconst submitted = studentSubmissions.length > 0 ? 1 : 0;\n\t\tconst graded = studentSubmissions.filter((submission) => submission.isGraded()).length;\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = task.isDraft();\n\n\t\tconst valueObject = new TaskWithStatusVo(task, { submitted, maxSubmissions, graded, isDraft });\n\n\t\treturn valueObject;\n\t}\n\n\tprivate computeTaskStatusForTeacher(task: Task): TaskWithStatusVo {\n\t\tconst submittedStudentIds = task.submissions.getItems().map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst submitted = [...new Set(submittedStudentIds)].length;\n\n\t\tconst gradedStudentIds = task.submissions\n\t\t\t.getItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst graded = [...new Set(gradedStudentIds)].length;\n\t\tconst maxSubmissions = task.course ? task.course.getNumberOfStudents() : 0;\n\t\tconst isDraft = task.isDraft();\n\n\t\tconst valueObject = new TaskWithStatusVo(task, { submitted, maxSubmissions, graded, isDraft });\n\n\t\treturn valueObject;\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/vo/task-with-status.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from '../entity/task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, PaginationResponse, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBootstrapConsole.html":{"url":"classes/TestBootstrapConsole.html","title":"class - TestBootstrapConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBootstrapConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/test/bootstrap.console.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AbstractBootstrapConsole\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/test/bootstrap.console.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { AbstractBootstrapConsole, BootstrapConsole } from 'nestjs-console';\n\nexport class TestBootstrapConsole extends AbstractBootstrapConsole {\n\tcreate(): Promise {\n\t\treturn Test.createTestingModule({\n\t\t\timports: [this.options.module],\n\t\t}).compile();\n\t}\n}\n\nexport const execute = async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(userId: EntityId): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(userId);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName;\n\t\tdto.lastName = user.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, User } from '@shared/domain';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId);\n\t\tconst roles = user.roles.getItems();\n\t\tconst resolved = await this.roleUC.resolvePermissionsByRoles(roles);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\n[Unreleased]\nAdded\n\nBC-394 - send email wishes from federal states also to ticketsystem\nBC-391 - display special characters properly\n\nFixed\n\nBC-436 - Fix univention LDAP strategy\n\nChanged\n\nBC-487 - update mongodb-memory-server from 6.9.6 to 7.4.4\nBC-490 - setup entities for tests without needing a database\n\n[26.12.0] - 2021-10-12\nAdded\n\nBC-388 - add simple script for end sjw\nBC-319 - add route to change the position of a course dashboard element\nBC-343 - run unstable e2e tests on label run unstable tests\nBC-6   - Show prepared tasks (drafts) for teachers\n\nChanged\n\nBC-25 - sort database seeds ascending by date of creation (_id, createdAt)\nBC-25 - move logic of npm run setup into console application and add management application with same behavior\nBC-237 - Clean up global entity registration\nBC-331 - BC-354 - rename ansible variables for OnePassword\nBC-269 - check in firstLogin that students can only pass with existing birthdate\nBC-154 - remove lesson entity from task repository\nBC-231 - upgraded nestjs@7 to nestjs@8\n\nFixed\nSecurity\n\nBC-386 - added CREATE tests for consentVersionService\nBC-297 - fixed set-value dependency vulnerabilities\nBC-377 - fixed axios dependency vulnerabilities\n\n[26.11.3] - 2021-10-05\nFixed\n\nBC-121 - run add bucket to files migration in parallel\n\n[26.11.2] - 2021-09-29\nFixed\n\nBC-111 wait for mongodb to spin up in deployment\n\nBC-370 - fixed file directory creation\n\n\n[26.11.1] - 2021-09-29\nFixed\n\nBC-365 - fixed task overview pagination\n\n[26.11.0] - 2021-09-22\nChanged\n\nBC-274 Change Course Colors\nBC-213 - rewrite file deletion with deletion marker\nBC-68 - e2e run dependent on build image job\nBC-179 - refactor task and entity and relations\nBC-315 - stabilized resolve user roles workflow by use roles from requested user and not from jwt\n\nAdded\n\nBC-121 add bucket and storage provider to file documents\nBC-164 - refactored the supportJWTservice and added roles information to its jwt data\nBC-279 - introduce console application interface to call providers via console command\nBC-9 add entity and repo for course dashboards\nBC-9 add a route to recieve dummy data for course dashboards\nBC-318 implement persistance for course dashboards\n\nFixed\n\nBC-232 prevent users from changing schoolyears\nBC-233 - when an LDAP system is removed from a school, the ldapschoolidentifier and lastLdapSync are removed as well\nmoved some changelog entries into their correct place\n\nRemoved\n\nBC-262 - remove S3 lifecycle configuration code\nBC-247 - remove timestamp from LDAP search Query for sync\n\n[26.10.3] - 2021-09-09\nFixed\n\nBC-267 - skip whitelist-check for api requests on /wopi\n\n[26.10.2] - 2021-09-03\nAdded\n\nBC-120 - add feature flag for S3 CORS\nBS-112 - insert missing attribute during school creation\n\n[26.10.1] - 2021-09-03\nFixed\n\nBC-187 - secures the system route\n\n[26.10.0] - 2021-09-03\nFixed\n\nremove broken systemid from seed data\nSC-9083 - expose env variables for school administration\nBC-44 - remove JWT_WHITELIST_ACCEPT_ALL feature flag\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store\nBC-119 - remove malfunction S3 lifecycle migration\nBC-38 - BC-124 - Add ansible files for Bosscloud (default)\nBC-110 - fileStorage/security should only be called from within the cluster\n\nAdded\n\nBC-5 - Show completed tasks for students\n\nChanged\n\nRefactor nestjs task module and resort imports for course and coursegroup entities and repositories. Add testHelpers.\n\n[26.9.3] - 2021-09-10\nFixed\n\nBC-239 - fix date parsing for students birth date\n\n[26.9.2] - 2021-08-27\nChanged\n\nBC-137 - fix bug with display of Blue Bar\nBC-106 - exit maintenance & change school year for LDAP schools on Boss and NBC\n\n[26.9.1] - 2021-08-18\nChanged\n\nSC-9192 - enable cors for nestjs app routes\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n[26.9.0] - 2021-08-14\nChanged\n\nOPS-2491 - Change the hydra service url\nSC-9231 - add permissions to SuperHero to edit admin role\nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nAdded\n\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9231 - add permissions to SuperHero to edit admin role\n\n[26.8.0] - 2021-08-10\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/console.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/server.console.ts\n            \n            class\n            ServerConsole\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/server/src/console/test/bootstrap.console.ts\n            \n            class\n            TestBootstrapConsole\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/console/test/bootstrap.console.ts\n            \n            variable\n            execute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/management.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            injectable\n            JwtValidationAdapter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/setup-entities.ts\n            \n            variable\n            setupEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardGridElementResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n            \n            class\n            MoveElementParams\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n            \n            class\n            MoveElementPosition\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n            \n            class\n            DashboardMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n            \n            injectable\n            DashboardUc\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            AppendedAttachment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            HtmlMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            InlineAttachment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            Mail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailAttachment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            PlainTextMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            interface\n            MailModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            variable\n            createRabbitMqModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            interface\n            MailServiceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/console/database-management.console.ts\n            \n            class\n            DatabaseManagementConsole\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/console/database-management.console.ts\n            \n            interface\n            Options\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/controller/database-management.controller.ts\n            \n            controller\n            DatabaseManagementController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/converter/bson.converter.ts\n            \n            injectable\n            BsonConverter\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/uc/database-management.uc.ts\n            \n            injectable\n            DatabaseManagementUc\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/management/uc/database-management.uc.ts\n            \n            interface\n            ICollectionFilePath\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/target-info.response.ts\n            \n            class\n            TargetInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/team-news.controller.ts\n            \n            controller\n            TeamNewsController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/target-info.mapper.ts\n            \n            class\n            TargetInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task-scope.ts\n            \n            class\n            TaskScope\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.authorization.service.ts\n            \n            injectable\n            TaskAuthorizationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n            \n            class\n            ResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            class\n            CourseScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            injectable\n            CourseRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/coursegroup.repo.ts\n            \n            injectable\n            CourseGroupRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DashboardGridElementModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DashboardModelEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DefaultGridReferenceModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n            \n            class\n            DashboardModelMapper\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            injectable\n            DashboardRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            interface\n            IDashboardRepo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/validation.error.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n            \n            function\n            DecodeHtmlEntities\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/all-entities.ts\n            \n            variable\n            ALL_ENTITIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            interface\n            ICourseProperties\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            variable\n            DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/coursegroup.entity.ts\n            \n            class\n            CourseGroup\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/coursegroup.entity.ts\n            \n            interface\n            ICourseGroupProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            DashboardEntity\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            DefaultGridReference\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            GridElement\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            interface\n            IGridElement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            interface\n            IGridElementReference\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            variable\n            defaultColumns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            variable\n            defaultRows\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/file.entity.ts\n            \n            interface\n            IFileProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/lesson.entity.ts\n            \n            interface\n            ILessonProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/submission.entity.ts\n            \n            interface\n            ISubmissionProperties\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/task.entity.ts\n            \n            interface\n            ITaskProperties\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/team.entity.ts\n            \n            class\n            Team\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/course.factory.ts\n            \n            variable\n            courseFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/school.factory.ts\n            \n            variable\n            schoolFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/user.factory.ts\n            \n            variable\n            userFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IFindOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/types/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/types/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/vo/task-with-status.vo.ts\n            \n            class\n            TaskWithStatusVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/vo/task-with-status.vo.ts\n            \n            interface\n            ITaskStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n            \n            injectable\n            ConsoleWriterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/infra/database/management/database-management.service.ts\n            \n            injectable\n            DatabaseManagementService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/shared/infra/file-system/file-system.adapter.ts\n            \n            injectable\n            FileSystemAdapter\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                apps/server/src/shared/infra/file-system/file-system.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/base.repo.ts\n            \n            injectable\n            BaseRepo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/lesson/lesson-scope.ts\n            \n            class\n            LessonScope\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/lesson/lesson.repo.ts\n            \n            injectable\n            LessonRepo\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            class\n            Scope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.3.0\n        \n            @nestjs/common : ^8.0.9\n        \n            @nestjs/core : ^8.0.9\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.0.9\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.9\n        \n            @nestjs/swagger : ^5.1.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.22.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            bson : ^4.5.1\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^8.1.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.3.2\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^7.0.0\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^7.3.1\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^6.0.0\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../management.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            DecodeHtmlEntities   (apps/.../decode-html-entities.transformer.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/management.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DecodeHtmlEntities\n                        \n                    \n                \n            \n            \n                \nDecodeHtmlEntities()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a string value so that all contained html entities are decoded.\nThe purpose of this decorator is to revert html entity encodings that come from generic\ninput sanitization in the legacy server. We don't need this encoding in the output of our API\nbecause in common template systems (e.g handlebars and vue.js) strings are generally\nescaped for the output. That leads to wrong text output because html entities are rendered \"as is\"\nwith all characters encoded again.\nExamples:\n\nwhen text = \"X & Y\" and template is {{ text }} it is rendered as \"X &amp; Y\" => wrong\nwhen text = \"X & Y\"     and template is {{ text }} it is rendered as \"X & Y\"      => good\n\n(both for vue.js and handlebars)\nUse this decorator in your response DTO wherever redundant html encoding from the legacy server has to be reverted.\nIMPORTANT: Should be removed later when sanitization works properly\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        the string with decoded html entities\n\n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleWriterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        20 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    33 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    62 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    40 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GridElementReferenceMetadata   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementWithPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            ScopeOperator   (apps/.../scope.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskParentDescriptions   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/database/mongo-memory-database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementReferenceMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementWithPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScopeOperator\n                \n            \n            \n                \n                        \"$and\" | \"$or\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                        School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskParentDescriptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            defaultColumns   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            defaultRows   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            execute   (apps/.../bootstrap.console.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            setupEntities   (apps/.../setup-entities.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                               (apps/.../file-system.adapter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tDefaultGridReferenceModel,\n\tFile,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: {\n\t\tname?: string;\n\t\tdescription?: string;\n\t\tcolor?: string;\n\t\tschool?: School;\n\t\tstudents?: User[];\n\t\tteachers?: User[];\n\t\tsubstitutionTeachers?: User[];\n\t}): Course => {\n\t\tconst course = new Course({\n\t\t\tname: 'course #1',\n\t\t\tdescription: 'course #1 description',\n\t\t\tcolor: '#FFFFFF',\n\t\t\tschool: schoolFactory.build(),\n\t\t\t...(props || {}),\n\t\t});\n\t\treturn course;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst school = schoolFactory.build();\n\tschool._id = new ObjectId();\n\tschool.id = school._id.toHexString();\n\tconst userIdObject = new ObjectId();\n\tconst userId = userIdObject.toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school });\n\tuser._id = userIdObject;\n\tuser.id = userId;\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId, roles: roleIds, schoolId: school.id, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/console/test/bootstrap.console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: { name?: string }): School => {\n\t\tconst school = new School({\n\t\t\tname: 'school #1',\n\t\t\t...props,\n\t\t});\n\t\treturn school;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/setup-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst orm = await MikroORM.init({ type: 'mongo', dbName: 'dummy', entities: ALL_ENTITIES });\n\treturn orm;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/shared/domain/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: { firstName?: string; lastName?: string; email?: string }): User => {\n\t\tconst user = new User({\n\t\t\tfirstName: 'John',\n\t\t\tlastName: 'Doe',\n\t\t\temail: `user.${Date.now()}@example.com`,\n\t\t\troles: [],\n\t\t\tschool: schoolFactory.build(),\n\t\t\t...props,\n\t\t});\n\t\treturn user;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/file-system/file-system.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : fsp\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
