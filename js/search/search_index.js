var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.142,1,3.105]],["body/classes/ApiValidationError.html",[0,0.173,1,4.787,2,1.067,3,0.224,4,0.183,5,0.13,6,6.054,7,4.77,8,2.033,9,5.373,10,0.47,11,1.129,12,3.666,13,2.752,14,3.601,15,2.935,16,0.669,17,1.789,18,6.057,19,1.644,20,5.417,21,6.371,22,0.95,23,5.417,24,1.152,25,0.01,26,0.914,27,0.843,28,6.651,29,2.045,30,3.49,31,4.77,32,1.176,33,4.77,34,4.77,35,4.77,36,4.77,37,1.409,38,2.952,39,0.394,40,4.026,41,1.181,42,5.417,43,0.224,44,4.77,45,2.235,46,4.344,47,3.747,48,3.908,49,2.235,50,3.771,51,4.026,52,3.079,53,3.379,54,5.417,55,0.006,56,0.007,57,0.006]],["title/classes/ApiValidationErrorResponse.html",[0,0.142,58,3.577]],["body/classes/ApiValidationErrorResponse.html",[0,0.172,1,5.828,2,1.063,3,0.223,4,0.182,5,0.129,8,2.028,10,0.469,11,1.127,13,2.745,14,3.592,15,2.665,16,0.585,19,1.637,22,0.778,24,1.147,25,0.01,26,0.91,27,0.84,28,6.639,38,4.109,39,0.433,43,0.223,47,3.738,48,4.834,49,2.226,51,4.01,55,0.006,56,0.007,57,0.006,58,5.5,59,6.639,60,4.752,61,1.979,62,4.507,63,4.077,64,4.507,65,3.858,66,6.859,67,5.396,68,5.603,69,5.396,70,4.752,71,4.752,72,5.396,73,5.396,74,2.545,75,5.396,76,5.396,77,5.396,78,6.859,79,6.859,80,5.396,81,1.534,82,1.613,83,6.859,84,5.396]],["title/controllers/AuthController.html",[85,2.094,86,3.315]],["body/controllers/AuthController.html",[0,0.21,3,0.272,4,0.222,5,0.158,25,0.01,39,0.445,41,1.437,43,0.272,55,0.007,56,0.008,57,0.007,85,3.094,86,5.76,87,3.323,88,5.803,89,4.897,90,6.59,91,4.588,92,5.284,93,2.991,94,4.331,95,5.411,96,5.803,97,6.59,98,3.204]],["title/classes/AuthEntity.html",[0,0.142,99,3.315]],["body/classes/AuthEntity.html",[0,0.21,2,1.299,3,0.272,4,0.222,5,0.158,10,0.572,11,1.273,16,0.511,22,0.747,25,0.01,32,1.207,39,0.378,43,0.272,55,0.007,56,0.008,57,0.007,99,5.76,100,5.803,101,8.235,102,1.714,103,4.004,104,6.59,105,2.895]],["title/modules/AuthModule.html",[106,1.319,107,3.105]],["body/modules/AuthModule.html",[0,0.17,3,0.221,4,0.18,5,0.128,25,0.01,39,0.498,41,1.163,43,0.221,55,0.006,56,0.007,57,0.006,86,5.06,87,2.69,95,5.813,96,4.697,106,2.217,107,6.125,108,2.135,109,2.422,110,2.907,111,2.907,112,2.69,113,3.404,114,3.521,115,4.697,116,4.697,117,4.697,118,4.697,119,5.485,120,5.811,121,3.711,122,2.794,123,2.422,124,5.335,125,3.87,126,6.809,127,3.964,128,5.335,129,4.278,130,3.506,131,4.697,132,5.335,133,5.335,134,5.335,135,5.335,136,5.335,137,5.335,138,3.714,139,4.278,140,4.697,141,4.278,142,4.697]],["title/injectables/AuthService.html",[95,2.931,143,1.103]],["body/injectables/AuthService.html",[0,0.167,3,0.216,4,0.176,5,0.125,10,0.454,16,0.576,17,1.748,19,1.586,22,0.842,24,1.579,25,0.01,26,1.253,27,1.156,32,1.292,37,1.748,39,0.45,41,1.139,43,0.216,55,0.009,56,0.007,57,0.006,74,2.268,81,1.503,82,1.229,95,4.415,98,2.541,99,3.883,129,4.19,143,1.662,144,2.224,145,4.601,146,3.425,147,5.388,148,6.719,149,5.225,150,5.177,151,8.443,152,5.225,153,6.719,154,5.225,155,2.655,156,3.336,157,6.719,158,5.329,159,5.225,160,3.638,161,6.719,162,5.225,163,5.225,164,2.295,165,2.848,166,5.225,167,5.225,168,4.19,169,2.97,170,5.225,171,3.883,172,3.106]],["title/modules/AuthorizationModule.html",[106,1.319,173,2.931]],["body/modules/AuthorizationModule.html",[0,0.186,3,0.241,4,0.196,5,0.139,25,0.01,39,0.468,41,1.27,43,0.241,55,0.006,56,0.008,57,0.006,106,2.308,108,2.331,109,2.643,110,3.173,111,3.173,112,2.936,113,3.543,114,3.665,121,3.92,122,3.049,123,2.643,125,4.089,173,5.855,174,5.127,175,5.127,176,5.127,177,5.127,178,5.607,179,5.581,180,5.322,181,5.823,182,5.823,183,5.823,184,2.831,185,5.127]],["title/injectables/AuthorizationService.html",[143,1.103,179,2.782]],["body/injectables/AuthorizationService.html",[0,0.124,3,0.16,4,0.131,5,0.093,10,0.337,16,0.538,17,1.429,19,1.177,22,0.787,24,1.475,25,0.01,26,1.17,27,1.08,32,1.183,37,1.905,39,0.398,41,0.846,43,0.16,55,0.004,56,0.006,57,0.004,74,2.341,81,1.228,82,0.912,98,1.886,143,1.359,144,1.651,146,3.351,155,2.634,156,3.235,165,3.99,172,2.306,179,3.426,180,4.741,184,1.886,185,3.415,186,3.415,187,6.378,188,6.378,189,6.378,190,3.879,191,3.879,192,3.879,193,3.564,194,3.813,195,4.004,196,4.734,197,4.467,198,3.879,199,3.265,200,5.493,201,3.981,202,1.834,203,4.254,204,3.824,205,3.879,206,3.879,207,5.562,208,3.879,209,3.879,210,4.123,211,4.082,212,4.837,213,3.426,214,4.837,215,1.274,216,2.031,217,2.7,218,4.681,219,3.61,220,3.879,221,3.879,222,3.11,223,3.879,224,3.879,225,3.879,226,5.493,227,3.879,228,3.879,229,3.879,230,5.493,231,3.879,232,3.879]],["title/classes/BaseEntity.html",[0,0.142,233,1.785]],["body/classes/BaseEntity.html",[0,0.243,2,1.082,3,0.227,4,0.185,5,0.131,8,1.624,10,0.477,11,1.249,13,2.198,16,0.538,22,0.786,25,0.01,32,1.183,39,0.398,43,0.287,55,0.006,56,0.008,57,0.006,82,1.788,102,1.978,202,1.926,233,3.196,234,4.404,235,3.294,236,2.077,237,3.294,238,3.624,239,5.492,240,3.624,241,5.492,242,3.136,243,2.473,244,2.198,245,3.609,246,4.836,247,4.081,248,3.256,249,4.404,250,4.404,251,4.836,252,3.609,253,2.876,254,4.836,255,2.578,256,4.404,257,3.425,258,2.198,259,2.993,260,2.134,261,4.836,262,4.404,263,4.836,264,4.081,265,3.609,266,4.404,267,4.404,268,2.67,269,2.869,270,4.836,271,2.67]],["title/classes/BaseEntityWithTimestamps.html",[0,0.142,248,2.094]],["body/classes/BaseEntityWithTimestamps.html",[0,0.232,2,0.984,3,0.206,4,0.168,5,0.119,8,1.929,10,0.433,11,1.193,13,1.998,16,0.598,22,0.93,25,0.01,30,2.776,32,1.199,39,0.374,43,0.27,55,0.005,56,0.007,57,0.005,82,1.88,102,2.173,202,1.858,233,3.282,234,4.003,235,3.383,236,2.133,237,3.298,238,3.629,240,3.629,242,3.179,243,2.326,244,1.998,245,3.281,246,4.396,247,3.71,248,3.412,249,4.003,250,4.003,251,4.396,252,3.281,253,2.615,254,4.396,255,2.344,256,4.003,257,3.113,258,1.998,259,2.721,260,1.94,261,4.396,262,4.003,263,4.396,264,3.71,265,3.281,266,4.003,267,4.003,268,3.533,269,3.017,270,4.396,271,3.533,272,4.992,273,1.697,274,2.393,275,4.992,276,4.992,277,2.721,278,2.266,279,4.992,280,2.344,281,2.344]],["title/classes/BusinessError.html",[0,0.142,9,2.782]],["body/classes/BusinessError.html",[0,0.239,2,0.912,3,0.191,4,0.156,5,0.111,8,2.069,9,4.365,10,0.402,11,1.019,12,3.687,13,3.378,14,4.204,15,3.186,16,0.672,17,1.614,18,5.997,19,1.883,22,0.91,24,0.984,25,0.01,26,0.781,27,0.721,29,2.342,32,1.276,37,1.204,38,3.815,39,0.402,40,5.557,41,1.009,43,0.256,45,2.56,49,2.888,50,5.206,55,0.005,56,0.007,57,0.005,61,1.698,65,3.636,81,1.035,82,1.089,273,1.204,282,3.712,283,3.815,284,4.32,285,3.815,286,4.078,287,3.527,288,3.688,289,4.078,290,2.817,291,5.201,292,4.629,293,4.914,294,6.205,295,4.629,296,4.629,297,4.629,298,4.629,299,4.076,300,4.076,301,3.712,302,5.464,303,4.076,304,3.87,305,5.464,306,4.076,307,4.873,308,2.887,309,3.44,310,4.076,311,4.076,312,4.076]],["title/modules/CoreModule.html",[106,1.319,313,3.105]],["body/modules/CoreModule.html",[0,0.172,3,0.223,4,0.182,5,0.129,25,0.01,39,0.47,41,1.175,43,0.223,49,2.826,55,0.006,56,0.007,57,0.006,61,1.975,106,2.42,108,2.156,109,2.445,110,2.935,111,2.935,112,2.716,113,2.445,114,2.529,121,3.733,122,2.821,123,2.445,125,3.894,290,3.11,313,6.166,314,4.743,315,4.743,316,5.825,317,5.825,318,5.218,319,5.825,320,5.386,321,4.502,322,6.85,323,4.272,324,5.493,325,6.032,326,6.85,327,4.502,328,5.091,329,4.502,330,6.85,331,4.072,332,5.493,333,6.032,334,6.85,335,5.091,336,5.386,337,5.386,338,5.386,339,5.386]],["title/classes/Course.html",[0,0.142,340,1.785]],["body/classes/Course.html",[0,0.154,2,0.95,3,0.199,4,0.162,5,0.115,8,1.885,10,0.419,11,1.047,16,0.66,19,1.463,22,0.974,24,1.025,25,0.01,26,1.282,27,0.75,30,3.456,32,1.264,39,0.41,43,0.199,45,1.989,55,0.005,56,0.007,57,0.005,82,1.787,102,2.214,202,1.537,215,1.584,217,3.356,233,2.551,235,3.135,236,1.977,237,2.63,238,2.894,240,2.894,242,3.35,243,1.719,244,1.929,248,3.889,268,3.1,269,2.406,271,3.1,273,1.858,274,2.62,277,2.627,278,2.188,280,2.263,281,2.263,340,2.551,341,4.245,342,7.142,343,5.308,344,5.613,345,4.929,346,4.82,347,4.82,348,4.82,349,6.375,350,4.82,351,6.375,352,3.473,353,4.82,354,2.74,355,2.74,356,2.74,357,2.74,358,2.74,359,5.613,360,2.74,361,2.865,362,3.006,363,2.627]],["title/classes/CourseInfo.html",[0,0.142,364,2.535]],["body/classes/CourseInfo.html",[0,0.182,2,1.122,3,0.235,4,0.192,5,0.136,8,2.097,10,0.494,11,1.165,16,0.658,19,1.727,22,0.917,24,1.21,25,0.01,26,1.404,27,0.886,30,3.019,32,1.259,39,0.407,43,0.235,45,2.348,55,0.006,56,0.008,57,0.006,102,2.01,202,1.711,215,1.87,233,3.331,235,2.926,236,1.845,237,2.348,238,2.584,240,2.584,242,3.188,243,2.03,244,2.278,280,2.673,281,2.673,360,3.236,361,3.384,364,4.032,365,6.804,366,3.963,367,4.032,368,4.424,369,5.271,370,2.981,371,4.565,372,4.565]],["title/classes/CourseNews.html",[0,0.142,373,2.651]],["body/classes/CourseNews.html",[0,0.182,2,0.516,3,0.108,4,0.209,5,0.063,8,1.831,10,0.227,11,0.673,15,2.552,16,0.653,17,1.065,22,0.97,24,0.556,25,0.01,26,0.851,27,1.137,30,3.627,32,1.28,37,0.681,39,0.394,43,0.236,45,1.08,55,0.003,56,0.004,57,0.003,81,0.585,82,1.614,102,2.209,155,0.837,193,2.555,194,3.015,195,3.194,197,2.544,202,1.494,215,0.86,216,1.371,219,1.72,233,2.479,235,2.931,236,1.943,237,2.354,238,2.59,240,2.59,242,3.368,243,0.933,244,1.047,248,3.084,255,2.369,260,1.96,268,2.775,269,2.591,271,2.775,273,1.611,274,2.272,277,2.232,278,1.859,280,1.229,281,1.229,283,2.232,304,1.632,340,1.047,352,3.012,354,1.488,355,1.488,356,1.488,357,1.488,358,3.244,362,1.632,363,2.749,364,2.867,367,1.488,370,2.642,373,2.434,374,1.72,375,3.433,376,3.511,377,3.084,378,3.376,379,2.877,380,3.973,381,2.71,382,3.973,383,3.559,384,2.544,385,3.043,386,4.246,387,2.617,388,2.099,389,2.691,390,3.146,391,2.691,392,2.099,393,2.099,394,2.851,395,3.75,396,2.851,397,2.691,398,2.065,399,2.554,400,2.851,401,2.099,402,2.099,403,3.11,404,2.065,405,2.099,406,2.749,407,2.999,408,2.099,409,2.099,410,2.099,411,2.691,412,2.099,413,2.554,414,2.099,415,2.851,416,2.099,417,2.099,418,2.099,419,2.099,420,2.099,421,2.099,422,2.099,423,2.851,424,3.863,425,2.099,426,3.75,427,1.822,428,2.328,429,1.426,430,0.585,431,1.822,432,1.426,433,1.822,434,1.822,435,1.822,436,1.822,437,1.822,438,1.822,439,1.822,440,1.822,441,2.851,442,2.749,443,2.749,444,2.642,445,2.642,446,2.642,447,3.146,448,2.749,449,1.822,450,2.851,451,1.822,452,1.822,453,3.512,454,1.556,455,1.556]],["title/classes/CreateNewsParams.html",[0,0.142,456,2.782]],["body/classes/CreateNewsParams.html",[0,0.221,2,1.08,3,0.227,4,0.185,5,0.131,10,0.476,11,1.138,15,2.951,16,0.639,22,0.933,25,0.01,32,1.344,39,0.397,43,0.227,55,0.006,56,0.008,57,0.006,61,2.01,94,4.991,102,2.141,103,4.001,105,2.408,194,3.336,196,4.317,269,2.614,375,2.691,379,3.829,456,4.32,457,7.401,458,4.395,459,3.628,460,5.147,461,3.937,462,6.927,463,5.481,464,5.481,465,5.481,466,5.481,467,5.481,468,5.481,469,5.481,470,5.481,471,5.554,472,6.927,473,6.09,474,7.246,475,3.418]],["title/injectables/DurationLoggingInterceptor.html",[143,1.103,476,3.577]],["body/injectables/DurationLoggingInterceptor.html",[0,0.176,3,0.227,4,0.185,5,0.132,10,0.478,11,1.141,12,3.238,16,0.427,17,1.806,22,0.787,24,1.17,25,0.01,26,0.928,27,0.857,37,1.431,39,0.458,41,1.2,43,0.227,55,0.006,56,0.008,57,0.006,61,2.018,74,1.857,81,1.231,82,1.633,143,1.717,144,2.342,164,3.342,273,1.431,274,2.018,329,4.563,444,3.985,476,5.568,477,6.699,478,4.845,479,5.16,480,6.944,481,5.568,482,5.16,483,4.185,484,6.114,485,6.114,486,6.407,487,7.036,488,5.502,489,2.774,490,6.699,491,6.944,492,5.502,493,6.114,494,4.412,495,5.502,496,4.845,497,4.412,498,3.831,499,5.502,500,3.831,501,6.944,502,5.502,503,5.502,504,5.502]],["title/modules/ErrorModule.html",[106,1.319,316,3.105]],["body/modules/ErrorModule.html",[0,0.199,3,0.257,4,0.21,5,0.149,25,0.01,39,0.461,41,1.357,43,0.257,55,0.007,56,0.008,57,0.007,61,2.283,106,2.215,108,2.491,113,2.825,213,4.672,273,1.949,316,5.216,331,4.453,335,6.199,505,6.224,506,6.597,507,4.453,508,4.453,509,4.083,510,4.09,511,5.216,512,6.224,513,6.224,514,3.882,515,4.991]],["title/classes/ErrorResponse.html",[0,0.142,38,2.431]],["body/classes/ErrorResponse.html",[0,0.181,2,1.117,3,0.234,4,0.191,5,0.136,12,3.437,13,3.233,14,4.039,15,2.997,16,0.645,19,2.147,22,0.643,24,1.206,25,0.01,26,0.956,27,0.883,29,2.911,32,1.365,38,3.856,39,0.325,40,4.213,41,1.236,43,0.234,49,3.182,55,0.006,56,0.008,57,0.006,61,2.595,62,5.068,63,4.206,64,4.649,65,3.44,301,4.546,516,4.992,517,5.669,518,5.669,519,5.669,520,4.546,521,4.926,522,5.669,523,4.992,524,5.669,525,3.536,526,2.491,527,3.536,528,3.726,529,4.213]],["title/injectables/FeathersAuthProvider.html",[143,1.103,180,2.782]],["body/injectables/FeathersAuthProvider.html",[0,0.123,3,0.159,4,0.13,5,0.092,10,0.334,16,0.588,17,1.419,19,1.166,22,0.859,24,1.611,25,0.01,26,1.278,27,1.18,32,1.136,37,1.898,39,0.419,41,0.838,43,0.159,55,0.004,56,0.006,57,0.004,74,2.774,81,1.695,82,0.903,98,1.868,143,1.349,144,1.635,146,3.54,155,2.548,156,3.497,164,2.787,165,3.975,171,2.855,172,2.283,180,3.402,193,3.652,194,3.329,195,3.79,196,3.926,197,3.678,203,4.082,204,3.798,215,1.262,217,2.674,233,2.184,235,1.585,237,2.617,243,1.37,245,2.524,381,1.585,404,3.482,430,0.859,530,6.864,531,3.08,532,5.456,533,5.586,534,5.456,535,5.456,536,5.586,537,3.842,538,4.505,539,3.842,540,5.456,541,3.842,542,3.383,543,3.842,544,5.456,545,3.842,546,5.456,547,3.842,548,3.842,549,3.842,550,4.804,551,3.842,552,3.383,553,5.456,554,2.012,555,3.383,556,5.456,557,3.842,558,3.842,559,3.842,560,2.979,561,3.842,562,5.456,563,5.456,564,3.798,565,5.456,566,3.842,567,2.855,568,3.842,569,3.842,570,1.937,571,3.842,572,2.396,573,4.375,574,3.383,575,3.842,576,3.842,577,3.842]],["title/interfaces/FeathersError.html",[430,0.998,578,3.105]],["body/interfaces/FeathersError.html",[3,0.264,4,0.215,5,0.153,8,2.248,10,0.554,11,1.249,13,3.366,16,0.684,25,0.01,29,3.066,32,1.357,43,0.264,49,3.137,55,0.007,56,0.008,57,0.007,430,1.427,578,5.294,579,2.554,580,5.618,581,5.618,582,7.406]],["title/modules/FeathersModule.html",[106,1.319,178,2.931]],["body/modules/FeathersModule.html",[0,0.183,3,0.237,4,0.193,5,0.137,25,0.01,39,0.409,41,1.249,43,0.237,55,0.006,56,0.008,57,0.006,61,2.101,93,3.232,106,2.465,108,3.101,109,2.6,110,3.121,111,3.121,112,2.888,113,3.517,114,3.638,121,3.881,122,3,123,2.6,178,5.663,184,3.768,538,5.308,552,5.043,560,3.343,583,5.043,584,5.043,585,5.043,586,5.727,587,4.679,588,3.881,589,4.047,590,3.881,591,4.232,592,4.679,593,4.679,594,4.679,595,4.957,596,5.71,597,3.462]],["title/interfaces/FeathersService.html",[430,0.998,598,3.315]],["body/interfaces/FeathersService.html",[0,0.153,3,0.198,4,0.161,5,0.114,10,0.415,16,0.588,17,1.649,22,0.719,24,1.348,25,0.01,26,1.069,27,0.987,32,0.744,37,1.649,39,0.452,41,1.042,43,0.313,55,0.005,56,0.007,57,0.005,74,1.613,81,1.069,93,3.578,108,1.913,143,1.568,156,3.223,164,2.1,184,2.324,193,3.125,215,1.57,218,4.043,236,1.649,290,2.169,430,1.069,442,3.455,443,3.455,444,3.32,445,3.32,446,3.32,447,3.953,510,3.141,538,2.841,560,3.803,579,1.913,587,3.141,588,3.876,589,4.043,590,2.605,591,2.841,592,3.141,593,3.141,594,3.141,595,3.327,596,3.832,597,2.324,598,5.629,599,5.285,600,3.327,601,3.458,602,5.582,603,6.627,604,4.779,605,4.815,606,4.413,607,5.582,608,4.779,609,3.455,610,3.551,611,2.981,612,3.832,613,5.083,614,5.582,615,4.165,616,5.582,617,5.083,618,3.832,619,3.551,620,4.208,621,4.208,622,4.208,623,4.208,624,4.208]],["title/injectables/FeathersServiceProvider.html",[143,1.103,538,2.651]],["body/injectables/FeathersServiceProvider.html",[0,0.15,3,0.194,4,0.158,5,0.112,10,0.408,16,0.584,17,1.631,19,1.426,22,0.711,24,1.333,25,0.01,26,1.057,27,0.976,32,1.098,37,1.222,39,0.45,41,1.025,43,0.311,55,0.005,56,0.007,57,0.005,61,1.724,74,1.586,81,1.051,93,3.843,108,2.509,143,1.55,144,2,156,2.667,164,2.064,184,3.048,193,2.586,215,1.544,218,4.009,236,1.222,290,2.133,430,1.051,442,3.416,443,3.416,444,3.283,445,3.283,446,3.283,447,3.909,510,3.088,538,3.726,560,3.926,587,4.119,588,4.1,589,4.276,590,3.416,591,3.726,592,4.119,593,4.119,594,4.119,595,4.364,596,5.026,597,3.048,598,5.591,599,5.241,600,3.271,601,2.285,602,4.138,603,5.655,605,4.192,607,4.138,609,3.416,610,3.492,611,2.931,612,3.768,613,5.026,614,5.519,615,4.119,616,5.519,617,5.026,618,3.768,619,4.658,620,4.138,621,4.138,622,5.519,623,4.138,624,4.138,625,6.268,626,4.699,627,4.699,628,4.699,629,3.492]],["title/classes/GlobalErrorFilter.html",[0,0.142,511,3.105]],["body/classes/GlobalErrorFilter.html",[0,0.155,2,0.642,3,0.135,4,0.11,5,0.078,9,3.988,10,0.283,11,0.795,12,2.458,13,2.559,14,2.536,15,2.245,16,0.53,17,1.503,22,0.655,24,1.03,25,0.01,26,0.974,27,0.754,37,1.663,38,4.377,39,0.425,41,0.711,43,0.135,49,3.693,55,0.004,56,0.005,57,0.004,62,2.142,63,4.705,65,1.585,74,2.914,81,1.854,82,1.607,164,2.538,184,2.809,218,2.752,260,1.267,273,0.848,274,1.196,278,1.48,285,2.639,291,4.751,384,2.913,430,0.729,442,1.777,443,1.777,444,1.707,445,1.707,483,3.987,498,3.371,507,4.061,509,2.639,511,3.371,572,2.033,578,4.451,582,2.871,590,1.777,597,1.585,611,2.033,630,4.751,631,2.27,632,5.777,633,5.478,634,4.632,635,4.842,636,3.26,637,4.842,638,4.984,639,5.777,640,6.394,641,3.26,642,4.293,643,5.777,644,3.26,645,3.26,646,2.871,647,2.871,648,3.26,649,3.26,650,3.26,651,2.614,652,2.871,653,2.614,654,5.478,655,2.614,656,2.614,657,2.871,658,3.182,659,2.614,660,2.27,661,3.603,662,2.033,663,2.614,664,2.871,665,4.264,666,2.871,667,2.614,668,2.871,669,2.871,670,2.871,671,2.871,672,2.871,673,4.293,674,3.883,675,3.26,676,3.883,677,3.26,678,3.26,679,3.26,680,3.883,681,3.26,682,3.26,683,4.842,684,3.26,685,3.26,686,2.142,687,4.264,688,2.423,689,2.871,690,2.27,691,2.27,692,4.264,693,3.148,694,2.614,695,4.264,696,2.871,697,3.883,698,3.883,699,2.871,700,2.871,701,2.423,702,2.614,703,6.016,704,5.63,705,2.614,706,2.871,707,3.26,708,3.26,709,3.26,710,4.842,711,3.26,712,3.26]],["title/classes/GlobalValidationPipe.html",[0,0.142,713,3.315]],["body/classes/GlobalValidationPipe.html",[0,0.239,1,3.707,2,1.049,3,0.22,4,0.179,5,0.127,8,2.011,11,0.875,16,0.581,19,2.274,21,5.453,22,0.604,25,0.01,39,0.39,41,1.161,43,0.22,45,2.197,48,4.487,55,0.006,56,0.007,57,0.006,61,1.953,65,2.589,70,4.688,71,4.688,81,1.191,82,1.252,102,1.769,103,2.589,260,2.642,273,1.769,284,4.734,331,4.042,432,4.084,459,3.924,475,4.241,526,2.339,570,2.685,572,3.321,605,3.165,713,5.054,714,5.988,715,4.688,716,5.453,717,4.241,718,5.054,719,5.988,720,5.453,721,4.469,722,7.493,723,5.324,724,5.453,725,3.957,726,4.688,727,5.324,728,2.789,729,3.707,730,5.324,731,5.324,732,3.957,733,5.324,734,5.324,735,5.324,736,3.957,737,4.27,738,5.324,739,3.026,740,3.957,741,5.324,742,3.707,743,3.499,744,5.324,745,3.957,746,3.026,747,5.324,748,5.324]],["title/interfaces/ICreateNews.html",[430,0.998,749,2.931]],["body/interfaces/ICreateNews.html",[3,0.212,4,0.173,5,0.123,10,0.445,11,1.091,15,3.025,16,0.668,25,0.01,32,1.286,39,0.294,43,0.348,55,0.006,56,0.007,57,0.006,61,1.881,74,2.241,193,3.037,194,2.917,195,3.579,196,3.774,201,2.686,202,1.237,215,1.685,216,2.686,255,3.117,258,2.053,269,2.778,340,2.053,345,3.199,361,3.049,375,3.374,376,3.816,377,3.655,379,3.925,381,2.116,429,2.795,430,1.847,579,2.053,601,2.494,638,3.571,749,4.363,750,3.571,751,5.846,752,6.243,753,3.371,754,3.371,755,3.199,756,3.199,757,3.371,758,5.324,759,4.517,760,5.324,761,3.571,762,3.571,763,4.517,764,3.371,765,3.199,766,2.916]],["title/interfaces/ICurrentUser.html",[430,0.998,767,2.651]],["body/interfaces/ICurrentUser.html",[3,0.225,4,0.184,5,0.13,8,1.611,10,0.473,11,1.134,16,0.618,25,0.01,29,2.605,32,1.418,43,0.285,55,0.006,56,0.007,57,0.006,203,4.17,211,5.128,236,2.071,258,2.762,404,4.232,430,1.543,579,2.181,767,4.502,768,4.369,769,4.369,770,7.011,771,5.543,772,5.534,773,4.574,774,5.128,775,4.535,776,3.398,777,4.049,778,4.798,779,4.798,780,4.798,781,4.798,782,4.369,783,4.798,784,4.798,785,3.793]],["title/interfaces/IErrorType.html",[293,2.931,430,0.998]],["body/interfaces/IErrorType.html",[3,0.264,4,0.216,5,0.153,10,0.555,11,1.251,12,3.46,15,3.27,16,0.684,25,0.01,32,1.392,43,0.264,50,5.86,55,0.007,56,0.008,57,0.007,293,5.003,430,1.43,579,2.559,786,5.631,787,5.631]],["title/interfaces/ILogger.html",[430,0.998,788,3.315]],["body/interfaces/ILogger.html",[3,0.221,4,0.181,5,0.128,10,0.465,14,4.28,16,0.634,17,1.776,22,0.927,24,1.738,25,0.01,26,1.378,27,1.351,32,1.406,37,2.126,43,0.221,49,2.816,55,0.006,56,0.007,57,0.006,430,1.198,489,4.516,579,2.143,606,5.816,788,5.072,789,4.715,790,6.01,791,4.485,792,6.825,793,6.825,794,5.355,795,5.355,796,6.01,797,6.024,798,5.355,799,6.01,800,5.355,801,5.355,802,5.355,803,6.01,804,5.355,805,4.715,806,4.715]],["title/interfaces/INewsProperties.html",[424,2.782,430,0.998]],["body/interfaces/INewsProperties.html",[0,0.214,3,0.148,4,0.25,5,0.086,8,1.98,10,0.312,11,0.854,15,2.878,16,0.628,25,0.01,26,0.606,27,1.218,32,1.337,39,0.438,43,0.277,45,1.481,55,0.004,56,0.006,57,0.004,81,0.803,82,1.437,155,1.148,193,3.451,194,2.942,195,2.97,197,1.81,202,1.714,215,1.18,216,1.88,219,2.359,233,2.08,236,0.934,242,3.228,243,1.28,244,1.437,248,2.44,255,2.868,260,2.374,269,2.527,283,2.833,304,2.239,340,1.437,352,2.97,358,2.954,362,2.239,363,3.329,364,2.954,367,2.041,370,1.88,373,2.134,374,2.359,375,3.299,376,3.675,377,3.478,378,4.037,379,3.583,380,4.947,381,3.152,382,4.947,383,4.432,384,1.81,386,4.447,389,2.359,391,2.359,394,2.5,395,3.415,396,2.5,397,2.359,398,1.81,399,2.239,400,2.5,403,3.329,404,1.81,406,3.649,407,3.98,411,2.359,413,2.239,415,2.5,423,2.5,424,4.176,426,4.4,427,2.5,428,2.954,429,1.957,430,0.803,431,2.5,432,1.957,433,2.5,434,2.5,435,2.5,436,2.5,437,2.5,438,2.5,439,2.5,440,2.5,441,3.618,442,3.329,443,3.329,444,3.199,445,3.199,446,3.199,447,3.81,448,3.329,449,2.5,450,3.618,451,2.5,452,2.5,453,4.253,454,2.134,455,2.134,579,1.437]],["title/interfaces/INewsScope.html",[430,0.998,764,2.931]],["body/interfaces/INewsScope.html",[3,0.216,4,0.176,5,0.125,10,0.454,11,1.104,15,2.03,16,0.655,25,0.01,27,1.22,32,1.046,39,0.3,43,0.349,55,0.006,56,0.007,57,0.006,61,1.916,74,2.268,193,3.064,194,2.952,195,3.611,196,3.819,201,2.736,202,1.26,215,1.717,216,2.736,255,3.155,258,2.091,269,1.972,340,2.091,345,3.259,361,3.106,375,3.385,376,3.832,377,2.453,379,2.635,381,2.156,429,2.848,430,1.856,579,2.091,601,2.541,638,3.638,749,3.434,750,3.638,751,4.601,752,5.388,753,3.434,754,3.434,755,3.259,756,3.259,757,3.434,758,5.388,759,4.601,760,6.286,761,3.638,762,3.638,763,5.916,764,4.415,765,4.889,766,4.221]],["title/interfaces/IPagination.html",[430,0.998,807,3.315]],["body/interfaces/IPagination.html",[3,0.27,4,0.22,5,0.156,10,0.567,11,1.266,16,0.598,25,0.01,27,1.319,29,3.308,43,0.27,55,0.007,56,0.008,57,0.007,430,1.46,579,2.613,807,5.728,808,5.749,809,5.285,810,5.285]],["title/classes/ITaskMetadata.html",[0,0.142,811,2.931]],["body/classes/ITaskMetadata.html",[0,0.203,2,0.947,3,0.199,4,0.162,5,0.115,8,2.108,10,0.417,11,1.045,16,0.652,19,1.458,22,0.974,25,0.01,26,1.28,30,3.452,32,1.324,39,0.435,43,0.263,45,1.982,55,0.005,56,0.007,57,0.005,82,1.496,102,2.111,164,2.11,202,1.534,215,1.578,233,2.546,235,3.131,236,1.975,237,2.624,238,2.887,240,2.887,242,3.257,243,1.713,244,1.923,248,3.945,268,3.093,269,2.98,271,3.093,273,1.655,274,2.333,277,2.618,278,2.181,280,2.255,281,2.255,340,2.854,354,2.73,355,2.73,356,2.73,357,2.73,360,2.73,363,3.466,386,4.053,766,2.73,811,4.179,812,3.852,813,5.299,814,5.299,815,5.64,816,4.804,817,4.804,818,4.804,819,4.804,820,3.852,821,4.238,822,4.23,823,3.852,824,2.422,825,3.852,826,4.23]],["title/modules/InterceptorModule.html",[106,1.319,317,3.105]],["body/modules/InterceptorModule.html",[0,0.187,3,0.242,4,0.198,5,0.14,25,0.01,39,0.449,41,1.278,43,0.242,55,0.006,56,0.008,57,0.006,61,2.149,106,2.135,108,2.345,113,2.66,257,4.504,317,5.027,331,4.292,332,6.277,479,5.366,510,3.85,514,4.504,515,5.791,597,3.973,717,4.504,728,3.782,827,5.859,828,6.359,829,5.366,830,5.027,831,4.745,832,8.171,833,4.105,834,5.366,835,5.791,836,6.072,837,5.859]],["title/injectables/JwtAuthGuard.html",[143,1.103,838,3.315]],["body/injectables/JwtAuthGuard.html",[0,0.214,3,0.278,4,0.226,5,0.161,8,1.986,25,0.01,39,0.45,41,1.465,43,0.278,55,0.007,56,0.009,57,0.007,127,4.991,143,1.939,144,2.858,838,5.824,839,5.914,840,5.914,841,6.717,842,6.717]],["title/interfaces/JwtConstants.html",[130,2.931,430,0.998]],["body/interfaces/JwtConstants.html",[3,0.25,4,0.204,5,0.145,10,0.525,11,1.21,16,0.641,25,0.01,32,1.38,39,0.347,43,0.304,55,0.007,56,0.008,57,0.007,74,2.485,130,5.429,138,5.895,141,4.851,368,4.593,430,1.353,579,2.421,777,4.495,782,4.851,843,4.851,844,7.457,845,6.484,846,6.049,847,6.049,848,4.851,849,6.049,850,6.049,851,5.327,852,5.327]],["title/interfaces/JwtPayload.html",[430,0.998,776,2.782]],["body/interfaces/JwtPayload.html",[3,0.221,4,0.18,5,0.128,8,2.015,10,0.464,11,1.12,16,0.648,25,0.01,29,3.152,32,1.408,43,0.282,55,0.006,56,0.007,57,0.006,203,2.799,211,3.972,236,1.773,258,3.164,404,3.437,430,1.525,579,2.139,767,4.462,768,4.286,769,4.286,770,4.706,771,3.721,772,4.286,773,4.091,774,3.972,775,3.512,776,4.252,777,5.066,778,6.962,779,6.003,780,6.962,781,6.962,782,5.466,783,6.962,784,6.962,785,5.504]],["title/injectables/JwtStrategy.html",[120,3.105,143,1.103]],["body/injectables/JwtStrategy.html",[0,0.182,3,0.236,4,0.193,5,0.137,8,1.69,10,0.496,16,0.444,17,1.85,19,2.349,22,0.806,24,1.215,25,0.01,26,0.964,27,0.89,37,1.487,39,0.478,41,1.246,43,0.236,45,2.358,55,0.006,56,0.008,57,0.006,81,1.278,120,4.951,127,4.247,130,3.756,131,5.033,139,4.583,143,1.759,144,2.432,146,3.194,155,1.828,168,4.583,258,2.846,259,3.876,572,3.565,776,5.052,830,4.951,853,5.033,854,5.716,855,7.111,856,5.716,857,5.087,858,5.716,859,5.033,860,4.951,861,5.716,862,5.716,863,5.716,864,5.716,865,5.716,866,5.716,867,5.716,868,5.716,869,5.716,870,5.716,871,5.716]],["title/classes/Lesson.html",[0,0.142,821,2.651]],["body/classes/Lesson.html",[0,0.163,2,1.009,3,0.212,4,0.173,5,0.122,8,1.961,10,0.445,11,1.089,16,0.641,22,0.966,25,0.01,30,3.513,32,1.032,39,0.446,43,0.212,55,0.006,56,0.007,57,0.006,82,1.56,102,2.216,202,1.599,215,1.682,217,3.565,233,2.654,235,3.209,236,2.024,237,2.736,238,3.01,240,3.01,242,3.209,243,1.826,244,2.049,248,3.945,268,3.224,269,2.503,271,3.224,273,1.725,274,2.432,277,2.79,278,2.324,280,2.404,281,2.404,340,3.304,352,2.489,354,2.91,355,2.91,356,2.91,357,2.91,358,2.91,359,4.508,360,2.91,363,2.79,386,3.769,390,3.193,766,3.769,820,4.106,821,3.942,825,5.318,872,4.508,873,5.466,874,5.12,875,5.12,876,4.508]],["title/injectables/Logger.html",[143,1.103,483,2.336]],["body/injectables/Logger.html",[0,0.184,3,0.238,4,0.194,5,0.138,8,2.111,17,1.496,25,0.01,39,0.41,41,1.254,43,0.238,55,0.006,56,0.008,57,0.006,143,1.766,144,2.447,213,3.587,218,4.058,260,2.235,273,1.496,290,2.611,483,4.455,489,3.914,498,4.97,527,3.587,560,2.7,592,3.779,609,3.89,721,3.779,725,4.274,728,3.739,788,6.033,791,5.101,877,5.064,878,8.118,879,5.751,880,5.751,881,3.418,882,4.004,883,4.004,884,5.064,885,4.612,886,5.751,887,4.004,888,4.004,889,6.286,890,3.269,891,4.612,892,5.751,893,5.751,894,5.064,895,4.274,896,5.064,897,4.004,898,5.751,899,5.751,900,5.751]],["title/modules/LoggerModule.html",[106,1.319,318,2.782]],["body/modules/LoggerModule.html",[0,0.198,3,0.257,4,0.209,5,0.149,25,0.01,39,0.429,41,1.354,43,0.257,55,0.007,56,0.008,57,0.007,106,2.374,108,2.486,109,2.819,110,3.384,111,3.384,112,3.131,113,3.645,114,3.77,121,4.078,122,3.252,123,2.819,318,5.466,483,4.725,901,5.468,902,5.468,903,5.468,904,6.21,905,6.21]],["title/classes/News.html",[0,0.142,375,1.733]],["body/classes/News.html",[0,0.192,2,0.569,3,0.119,4,0.219,5,0.069,8,1.917,10,0.251,11,0.726,15,2.657,16,0.649,17,1.15,19,0.877,22,0.959,24,0.94,25,0.01,26,1.015,27,1.195,30,2.91,32,1.284,37,0.752,39,0.408,43,0.249,45,1.192,55,0.003,56,0.005,57,0.003,81,0.646,82,1.525,102,2.161,155,0.924,193,2.675,194,3.126,195,3.325,197,2.708,202,1.564,215,0.949,216,1.514,219,1.899,233,2.595,235,2.482,236,1.779,237,1.824,238,2.007,240,2.007,242,3.402,243,1.031,244,1.157,248,3.341,255,2.522,260,2.087,268,2.15,269,2.447,271,2.15,273,1.397,274,1.97,277,1.575,278,1.312,280,1.357,281,1.357,283,2.41,304,1.802,340,1.157,352,3.153,354,1.643,355,1.643,356,1.643,357,1.643,358,3.42,362,1.802,363,2.927,364,2.513,367,2.513,370,3.151,373,1.718,374,1.899,375,3.301,376,3.485,377,3.211,378,3.534,379,3.033,380,4.188,381,2.821,382,4.188,383,3.752,384,2.708,385,3.286,386,4.276,389,2.906,390,3.349,391,2.906,394,3.078,395,3.953,396,3.078,397,2.906,398,2.23,399,2.758,400,3.078,403,3.279,404,2.23,406,2.927,407,3.192,411,2.906,413,2.758,415,3.078,423,3.078,424,4.438,426,3.953,427,2.012,428,2.513,429,1.575,430,0.646,431,2.012,432,1.575,433,2.012,434,2.012,435,2.012,436,2.012,437,2.012,438,2.012,439,2.012,440,2.012,441,3.078,442,2.927,443,2.927,444,2.813,445,2.813,446,2.813,447,3.349,448,2.927,449,2.012,450,3.078,451,2.012,452,2.012,453,3.739,454,1.718,455,1.718,906,4.422,907,2.89,908,2.89,909,2.89,910,2.89,911,2.89,912,2.89,913,2.89,914,2.89,915,2.89,916,2.89,917,2.89,918,2.89]],["title/controllers/NewsController.html",[85,2.094,919,3.315]],["body/controllers/NewsController.html",[0,0.113,3,0.146,4,0.119,5,0.084,10,0.307,12,1.503,16,0.548,17,1.336,22,0.8,24,1.501,25,0.01,26,1.191,27,1.099,32,1.236,37,1.836,39,0.463,41,0.77,43,0.146,55,0.004,56,0.006,57,0.004,74,2.68,81,1.579,82,0.831,85,1.658,87,1.781,89,2.624,91,4.213,94,3.977,98,1.717,102,1.836,105,1.551,146,3.494,155,2.125,156,3.433,165,3.847,201,2.69,202,1.239,218,2.919,236,1.336,375,3.134,381,2.119,398,2.589,456,4.144,459,3.981,570,3.051,587,2.321,605,4.378,609,3.298,693,2.799,716,2.832,767,5.066,857,2.321,919,3.816,920,3.11,921,4.937,922,4.853,923,5.329,924,4.853,925,3.531,926,3.531,927,5.659,928,3.531,929,5.135,930,3.531,931,7.366,932,3.11,933,4.626,934,4.366,935,4.626,936,3.531,937,3.531,938,5.135,939,3.531,940,4.522,941,5.135,942,4.366,943,5.135,944,3.375,945,4.522,946,3.531,947,4.626,948,5.135,949,3.531,950,3.11,951,3.11,952,4.914,953,3.531,954,3.531,955,2.624,956,3.531,957,3.977,958,3.11,959,2.459,960,2.832,961,2.624,962,2.459,963,2.624,964,3.531,965,3.531,966,2.832,967,3.531,968,3.11,969,3.11,970,6.216,971,3.11,972,3.11,973,5.851,974,2.832,975,4.522,976,3.531,977,3.531,978,3.531,979,3.531,980,3.531,981,2.624,982,2.832,983,3.531,984,6.052,985,3.531,986,3.531,987,3.531,988,5.135,989,3.531]],["title/classes/NewsFilterQuery.html",[0,0.142,933,3.105]],["body/classes/NewsFilterQuery.html",[0,0.227,2,1.126,3,0.236,4,0.193,5,0.137,10,0.496,11,1.168,16,0.601,22,0.878,25,0.01,27,1.322,32,1.261,39,0.444,43,0.236,55,0.006,56,0.008,57,0.006,102,2.014,103,3.764,105,2.511,194,3.401,196,4.4,258,2.288,361,3.397,471,5.702,473,6.495,474,6.262,475,3.565,754,3.756,765,4.828,766,4.042,830,3.979,933,4.951,990,7.133,991,5.033,992,5.716,993,5.716,994,5.716,995,5.716,996,5.716,997,5.716,998,7.111,999,5.716,1000,7.111,1001,5.702,1002,5.716,1003,5.716]],["title/classes/NewsMapper.html",[0,0.142,963,3.315]],["body/classes/NewsMapper.html",[0,0.139,2,0.861,3,0.181,4,0.147,5,0.104,10,0.379,15,2.319,16,0.567,17,1.552,22,0.828,24,1.553,25,0.01,26,1.232,27,1.137,37,1.9,39,0.419,43,0.181,55,0.005,56,0.006,57,0.005,74,2.465,81,1.633,82,1.028,155,1.397,194,2.621,195,3.304,196,3.392,202,1.054,375,2.97,376,1.983,377,2.802,379,3.009,381,1.802,384,4.328,456,4.555,459,4.307,570,3.009,605,3.547,749,4.466,762,4.731,764,4.799,765,2.725,933,5.084,947,5.084,962,5.084,963,4.434,1004,3.847,1005,5.967,1006,5.967,1007,4.785,1008,5.967,1009,5.967,1010,4.369,1011,5.967,1012,4.369,1013,5.967,1014,4.369,1015,5.967,1016,4.369,1017,3.247,1018,3.247,1019,5.967,1020,3.247,1021,3.503,1022,3.847,1023,4.369,1024,3.847,1025,4.369,1026,4.369,1027,4.369,1028,3.847,1029,4.369,1030,4.369,1031,4.369,1032,4.369,1033,4.369,1034,3.847,1035,4.369,1036,4.369,1037,4.369,1038,4.369,1039,4.369,1040,4.369,1041,4.369,1042,4.369,1043,4.369,1044,4.369,1045,4.369,1046,4.369,1047,3.847,1048,5.967,1049,4.369,1050,4.369,1051,4.369,1052,4.369,1053,5.254,1054,5.967,1055,5.967,1056,4.369,1057,4.369]],["title/modules/NewsModule.html",[106,1.319,1058,3.105]],["body/modules/NewsModule.html",[0,0.178,3,0.231,4,0.188,5,0.133,25,0.01,39,0.484,41,1.217,43,0.231,55,0.006,56,0.008,57,0.006,87,3.532,106,2.264,108,2.233,109,2.532,110,3.041,111,3.041,112,2.813,113,3.476,114,3.595,121,3.817,122,2.922,123,2.532,125,3.981,173,5.548,318,5.266,919,5.69,957,5.848,958,4.913,1058,6.222,1059,4.913,1060,5.579,1061,4.913,1062,4.913,1063,5.548,1064,5.579,1065,4.913,1066,5.579,1067,5.579,1068,4.913]],["title/injectables/NewsRepo.html",[143,1.103,1063,2.931]],["body/injectables/NewsRepo.html",[0,0.127,3,0.165,4,0.134,5,0.095,10,0.346,12,1.695,16,0.595,17,1.456,19,1.209,22,0.869,24,1.631,25,0.01,26,1.293,27,1.194,37,1.924,39,0.461,41,0.869,43,0.165,55,0.004,56,0.006,57,0.004,74,2.496,81,1.57,82,0.937,98,1.937,143,1.384,144,1.695,146,3.559,156,3.524,164,2.843,165,4.179,193,2.896,202,0.961,215,1.309,218,3.678,236,1.456,243,1.421,245,2.618,273,1.036,274,1.461,375,3.399,376,1.808,378,3.051,381,2.896,383,3.491,461,3.182,508,2.368,567,4.809,570,2.822,601,2.722,609,3.051,765,4.378,766,3.678,921,4.159,922,5.189,934,5.37,944,3.678,945,4.929,974,4.488,975,4.929,1063,3.678,1069,3.508,1070,5.597,1071,5.597,1072,4.929,1073,3.508,1074,6.181,1075,3.984,1076,4.488,1077,5.597,1078,3.984,1079,3.984,1080,4.612,1081,5.853,1082,3.984,1083,5.597,1084,3.984,1085,5.597,1086,3.984,1087,5.597,1088,4.159,1089,5.597,1090,3.897,1091,5.597,1092,3.984,1093,3.984,1094,3.194,1095,3.508,1096,4.159,1097,3.984,1098,3.984,1099,3.984,1100,5.597,1101,3.984,1102,3.984,1103,3.984,1104,3.984,1105,3.984,1106,3.984]],["title/classes/NewsResponse.html",[0,0.142,962,3.105]],["body/classes/NewsResponse.html",[0,0.192,2,0.869,3,0.182,4,0.247,5,0.105,10,0.383,11,0.986,15,2.653,16,0.682,22,0.981,25,0.01,27,1.283,32,1.355,39,0.421,43,0.182,55,0.005,56,0.007,57,0.005,74,2.027,102,2.251,103,4.304,105,1.937,155,1.411,194,3,196,3.882,197,3.443,236,1.777,268,3.32,269,2.987,271,3.32,377,3.206,378,3.722,379,3.443,381,3.025,383,4.259,406,2.404,407,2.622,471,6.608,962,4.181,1107,3.277,1108,4.41,1109,4.41,1110,5.34,1111,4.41,1112,4.41,1113,3.537,1114,4.816,1115,4.816,1116,4.41,1117,4.41,1118,4.754,1119,4.41,1120,6.013,1121,4.41,1122,6.006,1123,5.476,1124,4.41,1125,4.41,1126,4.41,1127,4.41,1128,4.41,1129,4.41,1130,4.41,1131,3.277,1132,3.537,1133,6.006,1134,4.41,1135,4.41,1136,3.277]],["title/classes/NewsScope.html",[0,0.142,1096,3.315]],["body/classes/NewsScope.html",[0,0.146,2,0.902,3,0.189,4,0.154,5,0.109,10,0.397,11,1.011,16,0.578,17,1.602,22,0.881,24,1.48,25,0.01,26,1.174,27,1.083,37,1.81,39,0.427,43,0.189,55,0.007,56,0.007,57,0.005,74,2.349,81,1.665,82,1.076,164,3.515,194,2.01,199,2.72,202,1.104,243,1.632,244,1.832,269,1.727,273,1.19,274,1.678,375,2.392,376,2.077,379,2.307,500,4.845,508,2.72,567,3.401,570,4.191,574,4.03,642,3.401,765,3.84,766,3.955,1080,4.891,1096,5.945,1137,6.415,1138,4.03,1139,6.959,1140,6.157,1141,6.157,1142,6.157,1143,6.157,1144,8.312,1145,4.576,1146,6.157,1147,4.576,1148,6.157,1149,4.576,1150,6.157,1151,4.576,1152,4.576,1153,4.576,1154,3.669,1155,4.576,1156,4.576,1157,3.66,1158,4.576,1159,4.576,1160,4.576,1161,4.576,1162,4.576,1163,4.576,1164,6.157,1165,3.007,1166,4.576,1167,4.576,1168,3.186,1169,4.576,1170,4.576,1171,6.157,1172,4.576,1173,4.576,1174,4.576]],["title/interfaces/NewsTargetFilter.html",[430,0.998,1080,2.931]],["body/interfaces/NewsTargetFilter.html",[3,0.265,4,0.216,5,0.153,10,0.556,11,1.252,16,0.592,25,0.01,39,0.437,43,0.265,55,0.007,56,0.008,57,0.007,193,3.475,194,3.7,195,4.096,202,1.546,215,2.106,376,2.909,430,1.433,573,6.754,579,2.565,1080,5.01,1137,5.139,1175,5.644]],["title/injectables/NewsUc.html",[143,1.103,957,2.931]],["body/injectables/NewsUc.html",[0,0.075,3,0.097,4,0.079,5,0.056,10,0.205,16,0.574,17,0.981,19,0.715,22,0.821,24,1.54,25,0.01,26,1.221,27,1.127,32,0.733,37,2.017,39,0.405,41,0.514,43,0.097,55,0.003,56,0.004,57,0.003,61,0.865,74,2.675,81,1.62,82,0.554,98,1.146,143,0.932,144,1.003,146,3.451,155,1.722,156,3.299,164,3.406,165,4.488,171,1.752,179,4.111,193,3.591,194,3.182,195,2.617,196,3.747,197,3.857,201,1.234,202,0.909,203,4.419,215,0.774,216,1.234,218,4.406,236,1.884,258,0.943,269,1.778,278,2.138,370,1.974,375,3.291,376,2.85,378,1.285,379,1.901,381,0.972,384,2.375,398,3.453,399,2.351,404,2.968,483,3.452,497,1.89,508,1.401,533,3.32,542,3.32,567,4.898,573,3.023,601,2.291,605,4.197,606,2.625,609,3.732,693,2.055,739,1.34,746,1.34,749,3.537,762,3.748,764,4.332,765,3.671,766,2.678,773,2.055,807,4,833,2.143,888,1.641,921,2.801,924,4.316,934,3.868,957,2.477,974,3.023,1022,2.076,1024,2.076,1028,2.076,1034,4.74,1047,3.32,1053,3.32,1063,4.126,1065,2.076,1080,2.477,1094,1.89,1095,2.076,1165,1.549,1176,1.89,1177,3.77,1178,3.77,1179,3.77,1180,3.77,1181,4.711,1182,2.357,1183,2.357,1184,3.77,1185,2.357,1186,3.77,1187,2.357,1188,3.77,1189,2.357,1190,3.77,1191,2.357,1192,3.77,1193,2.357,1194,2.357,1195,3.77,1196,2.357,1197,3.023,1198,2.625,1199,2.357,1200,4.711,1201,2.357,1202,3.77,1203,2.357,1204,2.357,1205,2.357,1206,2.357,1207,3.32,1208,4.74,1209,2.357,1210,2.076,1211,2.357,1212,5.383,1213,2.357,1214,2.357,1215,3.77,1216,2.357,1217,4.74,1218,2.357,1219,2.357,1220,2.357,1221,3.77,1222,2.357,1223,3.77,1224,2.357,1225,3.77,1226,2.357,1227,2.357,1228,1.34,1229,4.711,1230,2.357,1231,3.77,1232,2.357,1233,2.357,1234,5.383,1235,1.641,1236,1.752,1237,2.357,1238,2.357,1239,2.076,1240,3.77,1241,2.357,1242,2.357,1243,1.549,1244,2.357,1245,2.357,1246,3.77,1247,2.357,1248,2.357,1249,2.357,1250,2.357,1251,2.357]],["title/interfaces/PaginationModel.html",[430,0.998,1081,3.315]],["body/interfaces/PaginationModel.html",[3,0.269,4,0.219,5,0.155,10,0.564,11,1.263,12,3.271,16,0.597,25,0.009,27,1.317,29,3.304,43,0.269,55,0.007,56,0.008,57,0.007,430,1.453,579,2.601,809,5.277,810,5.277,1081,5.713,1252,5.722]],["title/classes/PaginationQuery.html",[0,0.142,935,3.105]],["body/classes/PaginationQuery.html",[0,0.226,2,1.115,3,0.234,4,0.191,5,0.135,10,0.491,11,1.161,16,0.548,22,0.801,25,0.01,27,1.256,29,3.198,39,0.405,43,0.234,55,0.006,56,0.008,57,0.006,61,2.592,102,1.838,103,3.747,105,2.486,273,1.838,274,2.592,475,3.529,742,4.92,809,5.181,810,4.806,935,4.92,1088,5.251,1157,4.2,1165,4.644,1253,4.982,1254,5.619,1255,5.658,1256,3.436,1257,5.251,1258,5.666,1259,5.666,1260,5.666,1261,5.658,1262,5.658,1263,5.666,1264,5.658,1265,6.785,1266,4.537,1267,4.982,1268,4.982,1269,4.982,1270,4.982]],["title/classes/PaginationResponse.html",[0,0.142,955,3.315]],["body/classes/PaginationResponse.html",[0,0.192,2,1.184,3,0.248,4,0.203,5,0.144,10,0.522,11,1.205,16,0.614,19,1.824,22,0.898,24,1.278,25,0.01,26,1.014,27,0.936,29,3.19,39,0.345,43,0.248,55,0.007,56,0.008,57,0.007,102,1.908,103,4.11,105,2.64,638,5.885,728,4.427,955,5.451,1271,5.292,1272,6.981,1273,7.335,1274,6.01,1275,6.01,1276,6.01,1277,6.01,1278,6.01]],["title/injectables/ParseObjectIdPipe.html",[143,1.103,952,3.105]],["body/injectables/ParseObjectIdPipe.html",[0,0.196,3,0.253,4,0.207,5,0.147,10,0.532,16,0.476,17,1.931,22,0.695,24,1.303,25,0.01,26,1.034,27,0.954,37,1.594,39,0.426,41,1.336,43,0.253,55,0.007,56,0.008,57,0.007,74,2.069,81,1.371,82,1.441,143,1.836,144,2.608,172,3.643,237,2.528,274,2.722,498,4.267,729,5.167,757,4.027,952,5.167,1279,6.536,1280,4.412,1281,4.914,1282,7.422,1283,6.129,1284,7.422,1285,7.422,1286,6.129,1287,3.822,1288,7.422,1289,6.129,1290,6.129]],["title/classes/SampleError.html",[0,0.142,309,3.315]],["body/classes/SampleError.html",[0,0.223,2,0.911,3,0.191,4,0.156,5,0.111,8,2.068,9,5.195,10,0.401,11,1.018,12,3.686,13,3.28,14,4.292,15,3.185,16,0.672,17,1.613,18,5.993,19,1.881,22,0.91,24,0.983,25,0.01,26,0.779,27,0.719,29,2.339,30,3.317,31,4.069,32,1.313,33,4.069,34,4.069,35,4.069,36,4.069,37,1.202,38,3.812,39,0.401,40,4.606,41,1.008,43,0.256,45,2.557,49,3.083,50,5.203,55,0.005,56,0.007,57,0.005,61,1.695,65,3.014,81,1.034,82,1.087,273,1.202,282,3.706,283,3.378,284,3.217,285,3.812,286,3.037,287,2.627,288,2.747,289,3.037,290,2.098,291,4.606,293,4.073,299,4.069,300,4.069,301,3.706,302,5.458,303,4.069,304,3.866,305,5.458,306,4.069,307,5.203,308,3.866,309,4.606,310,5.458,311,4.069,312,4.069,606,3.217,1291,4.621]],["title/classes/SchoolInfo.html",[0,0.142,403,2.431]],["body/classes/SchoolInfo.html",[0,0.182,2,1.122,3,0.235,4,0.192,5,0.136,8,2.097,10,0.494,11,1.165,16,0.658,19,1.727,22,0.917,24,1.21,25,0.01,26,1.404,27,0.886,30,3.019,32,1.259,39,0.407,43,0.235,45,2.348,55,0.006,56,0.008,57,0.006,102,2.01,202,1.711,215,1.87,233,3.331,235,2.926,236,1.845,237,2.348,238,2.584,240,2.584,242,3.188,243,2.03,244,2.278,280,2.673,281,2.673,360,3.236,366,3.963,367,4.032,368,4.424,369,5.271,370,2.981,371,4.565,372,4.565,403,3.866,753,3.741,1292,6.804]],["title/classes/SchoolInfoMapper.html",[0,0.142,1018,3.315]],["body/classes/SchoolInfoMapper.html",[0,0.196,2,1.21,3,0.254,4,0.207,5,0.147,10,0.533,16,0.477,17,1.934,22,0.696,24,1.306,25,0.01,26,1.036,27,0.956,37,1.598,39,0.426,43,0.254,55,0.007,56,0.008,57,0.007,74,2.073,81,1.374,82,1.445,202,1.481,384,4.03,403,4.635,459,3.892,1007,5.96,1017,4.564,1018,5.523,1021,4.925,1118,5.782,1293,6.544,1294,4.925,1295,7.432,1296,5.408,1297,6.142,1298,6.142,1299,6.142]],["title/classes/SchoolInfoResponse.html",[0,0.142,1118,3.105]],["body/classes/SchoolInfoResponse.html",[0,0.238,2,1.218,3,0.256,4,0.208,5,0.148,10,0.537,11,1.226,16,0.579,22,0.846,25,0.01,26,1.352,32,1.296,39,0.428,43,0.256,55,0.007,56,0.008,57,0.007,102,1.941,103,4.047,105,2.716,236,2.085,1113,4.958,1114,5.984,1115,5.984,1118,5.195,1131,4.594,1132,4.958,1136,4.594,1300,7.057,1301,4.958,1302,6.183,1303,6.183]],["title/classes/SchoolNews.html",[0,0.142,454,2.651]],["body/classes/SchoolNews.html",[0,0.182,2,0.516,3,0.108,4,0.209,5,0.063,8,1.831,10,0.227,11,0.673,15,2.552,16,0.653,17,1.065,22,0.97,24,0.556,25,0.01,26,0.851,27,1.137,30,3.627,32,1.28,37,0.681,39,0.394,43,0.236,45,1.08,55,0.003,56,0.004,57,0.003,81,0.585,82,1.614,102,2.209,155,0.837,193,2.555,194,3.015,195,3.194,197,2.544,202,1.494,215,0.86,216,1.371,219,1.72,233,2.479,235,2.931,236,1.943,237,2.354,238,2.59,240,2.59,242,3.368,243,0.933,244,1.047,248,3.084,255,2.369,260,1.96,268,2.775,269,2.591,271,2.775,273,1.611,274,2.272,277,2.232,278,1.859,280,1.229,281,1.229,283,2.232,304,1.632,340,1.047,352,3.012,354,1.488,355,1.488,356,1.488,357,1.488,358,3.244,362,1.632,363,2.749,364,2.328,367,1.488,370,2.642,373,1.556,374,1.72,375,3.433,376,3.511,377,3.084,378,3.376,379,2.877,380,3.973,381,2.71,382,3.973,383,3.559,384,2.544,385,3.043,386,4.246,388,2.099,389,2.691,390,3.146,391,2.691,392,2.099,393,2.099,394,2.851,395,3.75,396,2.851,397,2.691,398,2.065,399,2.554,400,2.851,401,2.099,402,2.099,403,3.376,404,2.065,405,2.099,406,2.749,407,2.999,408,2.099,409,2.099,410,2.099,411,2.691,412,2.099,413,2.554,414,2.099,415,2.851,416,2.099,417,2.099,418,2.099,419,2.099,420,2.099,421,2.099,422,2.099,423,2.851,424,3.863,425,2.099,426,3.75,427,1.822,428,2.328,429,1.426,430,0.585,431,1.822,432,1.426,433,1.822,434,1.822,435,1.822,436,1.822,437,1.822,438,1.822,439,1.822,440,1.822,441,2.851,442,2.749,443,2.749,444,2.642,445,2.642,446,2.642,447,3.146,448,2.749,449,1.822,450,2.851,451,1.822,452,1.822,453,3.512,454,2.434,455,1.556,1304,2.617]],["title/controllers/ServerController.html",[85,2.094,1305,3.315]],["body/controllers/ServerController.html",[0,0.197,3,0.255,4,0.208,5,0.148,10,0.536,12,2.625,17,1.939,22,0.7,25,0.01,32,1.16,37,1.605,39,0.428,41,1.345,43,0.255,55,0.007,56,0.008,57,0.007,81,1.38,85,3.499,87,3.111,91,4.295,92,4.947,93,2.8,98,3,102,1.605,273,1.939,554,3.903,564,5.188,588,4.061,1305,5.538,1306,5.432,1307,7.323,1308,6.169,1309,5.538,1310,5.262,1311,5.432,1312,6.169]],["title/modules/ServerModule.html",[106,1.319,1313,3.315]],["body/modules/ServerModule.html",[0,0.146,3,0.189,4,0.154,5,0.109,16,0.355,25,0.01,32,0.711,39,0.504,41,0.996,43,0.189,52,2.597,55,0.005,56,0.007,57,0.005,81,1.022,82,1.074,87,3.101,106,2.056,107,5.567,108,1.829,109,2.074,110,2.49,111,2.49,112,2.304,113,3.156,114,2.145,119,5.255,121,3.352,122,2.393,123,2.074,125,3.496,169,2.597,210,2.716,243,2.193,244,1.829,258,1.829,313,5.567,340,2.462,352,2.991,364,3.496,373,3.656,375,2.39,403,3.352,426,4.042,428,3.496,454,3.656,455,3.656,550,4.023,821,3.656,824,3.101,1058,5.567,1287,2.849,1305,5.167,1310,5.255,1311,4.023,1313,6.558,1314,4.023,1315,4.023,1316,4.023,1317,5.567,1318,4.569,1319,4.569,1320,4.023,1321,6.151,1322,6.151,1323,4.569,1324,4.569,1325,4.569,1326,4.569,1327,6.151,1328,3.002,1329,4.569,1330,4.569,1331,4.042,1332,4.569,1333,4.569,1334,4.569,1335,4.569,1336,4.569,1337,4.932,1338,4.571,1339,4.569,1340,4.569,1341,4.569,1342,6.151,1343,4.569,1344,3.181,1345,3.181]],["title/injectables/ServerService.html",[143,1.103,1310,2.931]],["body/injectables/ServerService.html",[0,0.209,3,0.271,4,0.221,5,0.157,10,0.568,17,2.008,22,0.742,25,0.01,32,1.202,37,1.702,39,0.375,41,1.427,43,0.271,55,0.007,56,0.008,57,0.007,81,1.463,143,1.909,144,2.785,1307,7.468,1310,5.072,1346,5.762,1347,6.544,1348,6.544,1349,5.247]],["title/classes/Submission.html",[0,0.142,1331,2.931]],["body/classes/Submission.html",[0,0.163,2,1.005,3,0.211,4,0.172,5,0.122,8,1.956,10,0.443,11,1.087,16,0.64,22,0.965,25,0.01,30,3.51,32,1.03,39,0.446,43,0.211,55,0.006,56,0.007,57,0.006,82,1.556,102,2.214,202,1.596,215,1.676,217,3.552,233,2.648,235,3.205,236,2.021,237,2.729,238,3.003,240,3.003,242,2.729,243,1.819,244,2.042,248,3.942,268,3.217,269,2.497,271,3.217,273,1.721,274,2.427,277,2.78,278,2.316,280,2.395,281,2.395,352,3.57,354,2.9,355,2.9,356,2.9,357,2.9,360,2.9,363,3.606,386,4.173,390,4.126,824,3.702,1331,4.347,1350,4.492,1351,5.888,1352,5.456,1353,6.616,1354,5.101,1355,6.616,1356,5.101,1357,5.101,1358,4.492]],["title/classes/Task.html",[0,0.142,824,2.249]],["body/classes/Task.html",[0,0.195,2,0.894,3,0.188,4,0.153,5,0.109,8,2.049,10,0.394,11,1.006,16,0.652,19,2.103,22,0.979,25,0.01,26,1.251,27,1.242,30,3.397,32,1.27,39,0.426,43,0.253,45,1.873,55,0.005,56,0.007,57,0.005,82,1.44,102,2.23,164,3.045,202,1.477,215,1.491,233,2.451,235,3.061,236,1.93,237,2.526,238,2.78,240,2.78,242,3.423,243,1.619,244,1.817,248,3.895,268,2.978,269,2.924,271,2.978,273,1.593,274,2.246,277,2.474,278,2.06,280,2.131,281,2.131,340,3.195,354,2.58,355,2.58,356,2.58,357,2.58,360,2.58,363,3.337,386,3.939,390,3.819,766,3.481,811,2.983,812,3.64,813,3.373,814,3.373,815,5.513,820,3.64,821,4.744,822,3.997,823,3.64,824,3.088,825,4.911,826,5.392,1359,6.124,1360,4.539,1361,4.539,1362,4.539,1363,4.539]],["title/controllers/TaskController.html",[85,2.094,1364,3.315]],["body/controllers/TaskController.html",[0,0.175,3,0.227,4,0.185,5,0.131,10,0.476,12,2.332,16,0.425,17,1.802,22,0.621,24,1.165,25,0.01,26,0.924,27,1.078,37,1.426,39,0.482,41,1.195,43,0.227,55,0.006,56,0.008,57,0.006,63,4.117,74,1.85,81,1.226,85,2.573,87,2.764,89,4.073,98,2.665,102,1.426,105,2.408,146,3.133,156,2.948,258,2.194,459,2.87,570,4.354,743,3.602,746,3.115,767,4.743,824,2.764,857,3.602,922,5.554,927,4.991,932,4.826,942,3.602,951,4.826,959,3.816,960,4.395,961,4.073,966,4.395,981,4.073,1280,3.258,1364,5.147,1365,4.826,1366,5.555,1367,6.927,1368,5.481,1369,4.991,1370,4.826,1371,4.073,1372,4.073,1373,5.481,1374,4.826,1375,5.481,1376,3.602,1377,6.927,1378,5.481,1379,5.481,1380,5.481,1381,5.481]],["title/modules/TaskModule.html",[106,1.319,1317,3.105]],["body/modules/TaskModule.html",[0,0.193,3,0.251,4,0.204,5,0.145,25,0.01,39,0.474,41,1.322,43,0.251,55,0.007,56,0.008,57,0.007,87,3.718,106,2.349,108,2.426,109,2.752,110,3.304,111,3.304,112,3.057,113,3.607,114,2.846,121,4.019,122,3.175,123,2.752,1317,6.127,1364,5.905,1369,5.662,1370,5.338,1382,5.338,1383,5.338,1384,5.662,1385,6.062,1386,6.062,1387,5.338]],["title/classes/TaskOptionsEntry.html",[0,0.142,1388,3.315]],["body/classes/TaskOptionsEntry.html",[0,0.189,2,1.167,3,0.245,4,0.2,5,0.142,8,2.149,10,0.514,11,1.194,16,0.459,22,0.892,25,0.01,27,1.334,29,2.235,30,3.347,39,0.34,43,0.245,55,0.006,56,0.008,57,0.006,102,2.046,273,1.54,742,4.122,809,4.905,810,4.533,1017,4.4,1088,4.4,1157,3.52,1254,4.122,1256,2.879,1257,4.4,1258,5.828,1259,5.828,1260,4.748,1263,4.748,1344,4.122,1366,5.965,1388,5.844,1389,4.748,1390,5.844,1391,5.214,1392,5.921,1393,5.214,1394,5.921,1395,5.214,1396,4.122,1397,3.101,1398,5.214,1399,5.214,1400,5.921,1401,4.4]],["title/classes/TaskQueryDto.html",[0,0.142,1366,3.105]],["body/classes/TaskQueryDto.html",[0,0.219,2,1.067,3,0.224,4,0.183,5,0.13,10,0.47,11,1.129,22,0.856,25,0.01,27,1.304,29,2.595,39,0.394,43,0.224,55,0.006,56,0.007,57,0.006,61,2.77,102,1.965,103,3.863,105,2.38,273,1.789,473,6.371,475,3.379,742,4.787,809,5.114,810,4.711,1088,5.109,1157,4.087,1254,4.787,1256,3.343,1257,5.109,1258,6.371,1259,6.371,1260,5.513,1263,5.513,1265,6.996,1266,4.344,1267,4.77,1268,4.77,1269,4.77,1270,4.77,1344,4.787,1366,4.787,1390,6.094,1391,4.77,1393,4.77,1395,4.77,1396,4.787,1397,3.601,1398,6.054,1399,6.054,1402,6.371,1403,4.77,1404,5.417,1405,5.417,1406,5.417,1407,5.417,1408,5.417]],["title/injectables/TaskRepo.html",[143,1.103,1384,2.931]],["body/injectables/TaskRepo.html",[0,0.143,3,0.186,4,0.151,5,0.107,10,0.39,12,1.91,16,0.472,17,1.581,19,1.362,22,0.689,24,1.292,25,0.01,26,1.162,27,0.946,37,1.168,39,0.424,41,0.979,43,0.186,55,0.005,56,0.007,57,0.005,74,2.685,81,1.359,98,2.182,143,1.503,144,1.91,146,2.843,156,2.586,164,1.972,165,4.025,171,3.335,193,3.047,202,1.082,203,3.609,215,1.474,235,1.852,236,1.581,237,1.852,243,1.601,245,2.949,258,2.758,268,2.182,271,2.182,273,1.168,274,1.646,278,2.037,340,2.956,343,3.335,432,2.446,529,3.335,572,2.799,739,2.551,809,2.799,810,2.799,811,4.528,813,3.335,814,3.335,815,3.335,821,4.096,824,3.064,873,3.335,883,3.125,934,2.949,1073,3.952,1074,6.503,1076,4.873,1272,3.599,1331,2.949,1352,3.335,1384,3.994,1390,3.335,1397,2.351,1401,5.488,1409,3.952,1410,6.077,1411,4.488,1412,6.077,1413,4.488,1414,3.952,1415,4.488,1416,3.599,1417,3.952,1418,3.599,1419,4.488,1420,3.125,1421,4.488,1422,6.89,1423,4.488,1424,6.077,1425,4.488,1426,4.488,1427,4.488,1428,6.077,1429,4.488,1430,4.488,1431,4.488,1432,4.488,1433,4.488,1434,4.488,1435,6.077,1436,4.488,1437,4.488,1438,4.488,1439,4.488,1440,4.488,1441,4.488,1442,4.488,1443,4.488,1444,4.488,1445,3.599]],["title/classes/TaskResponseDto.html",[0,0.142,1371,3.315]],["body/classes/TaskResponseDto.html",[0,0.172,2,1.059,3,0.222,4,0.181,5,0.129,10,0.467,11,1.124,16,0.649,19,1.631,22,0.948,24,1.143,25,0.01,26,1.336,27,0.837,32,1.352,39,0.308,43,0.222,47,3.729,55,0.006,56,0.007,57,0.006,61,1.972,102,2.128,103,4.283,105,2.362,236,1.958,269,2.582,344,6.025,345,5.102,362,3.353,459,3.583,461,3.889,813,5.593,814,5.593,815,5.593,824,3.45,1371,5.084,1402,6.814,1446,4.733,1447,6.025,1448,4.496,1449,5.376,1450,5.376,1451,5.376,1452,5.376,1453,5.376,1454,5.376,1455,4.311]],["title/injectables/TaskUC.html",[143,1.103,1369,2.931]],["body/injectables/TaskUC.html",[0,0.182,3,0.235,4,0.192,5,0.136,10,0.494,16,0.55,17,1.845,19,1.727,22,0.804,24,1.508,25,0.01,26,1.196,27,1.104,37,1.481,39,0.464,41,1.241,43,0.235,55,0.006,56,0.008,57,0.006,81,1.273,98,2.768,143,1.754,144,2.422,146,3.188,156,3.019,193,3.337,202,1.373,203,2.981,215,1.87,258,2.278,508,3.384,718,4.23,811,3.741,1228,3.236,1369,4.661,1384,5.576,1387,5.013,1401,6.011,1456,5.013,1457,7.093,1458,5.692,1459,5.692,1460,7.093,1461,6.486,1462,5.692,1463,4.23,1464,4.565,1465,4.23,1466,5.692,1467,4.565,1468,3.963,1469,4.23,1470,4.565,1471,5.692]],["title/classes/TeamInfo.html",[0,0.142,428,2.535]],["body/classes/TeamInfo.html",[0,0.182,2,1.122,3,0.235,4,0.192,5,0.136,8,2.097,10,0.494,11,1.165,16,0.658,19,1.727,22,0.917,24,1.21,25,0.01,26,1.404,27,0.886,30,3.019,32,1.259,39,0.407,43,0.235,45,2.348,55,0.006,56,0.008,57,0.006,102,2.01,202,1.711,215,1.87,233,3.331,235,2.926,236,1.845,237,2.348,238,2.584,240,2.584,242,3.188,243,2.03,244,2.278,280,2.673,281,2.673,360,3.236,366,3.963,367,4.032,368,4.424,369,5.271,370,2.981,371,4.565,372,4.565,428,4.032,754,3.741,1472,6.804]],["title/classes/TeamNews.html",[0,0.142,455,2.651]],["body/classes/TeamNews.html",[0,0.182,2,0.516,3,0.108,4,0.209,5,0.063,8,1.831,10,0.227,11,0.673,15,2.552,16,0.653,17,1.065,22,0.97,24,0.556,25,0.01,26,0.851,27,1.137,30,3.627,32,1.28,37,0.681,39,0.394,43,0.236,45,1.08,55,0.003,56,0.004,57,0.003,81,0.585,82,1.614,102,2.209,155,0.837,193,2.555,194,3.015,195,3.194,197,2.544,202,1.494,215,0.86,216,1.371,219,1.72,233,2.479,235,2.931,236,1.943,237,2.354,238,2.59,240,2.59,242,3.368,243,0.933,244,1.047,248,3.084,255,2.369,260,1.96,268,2.775,269,2.591,271,2.775,273,1.611,274,2.272,277,2.232,278,1.859,280,1.229,281,1.229,283,2.232,304,1.632,340,1.047,352,3.012,354,1.488,355,1.488,356,1.488,357,1.488,358,3.244,362,1.632,363,2.749,364,2.328,367,1.488,370,2.642,373,1.556,374,1.72,375,3.433,376,3.511,377,3.084,378,3.376,379,2.877,380,3.973,381,2.71,382,3.973,383,3.559,384,2.544,385,3.043,386,4.246,388,2.099,389,2.691,390,3.146,391,2.691,392,2.099,393,2.099,394,2.851,395,3.75,396,2.851,397,2.691,398,2.065,399,2.554,400,2.851,401,2.099,402,2.099,403,3.11,404,2.065,405,2.099,406,2.749,407,2.999,408,2.099,409,2.099,410,2.099,411,2.691,412,2.099,413,2.554,414,2.099,415,2.851,416,2.099,417,2.099,418,2.099,419,2.099,420,2.099,421,2.099,422,2.099,423,2.851,424,3.863,425,2.099,426,3.75,427,1.822,428,2.867,429,1.426,430,0.585,431,1.822,432,1.426,433,1.822,434,1.822,435,1.822,436,1.822,437,1.822,438,1.822,439,1.822,440,1.822,441,2.851,442,2.749,443,2.749,444,2.642,445,2.642,446,2.642,447,3.146,448,2.749,449,1.822,450,2.851,451,1.822,452,1.822,453,3.512,454,1.556,455,2.434,1473,2.617]],["title/injectables/TimeoutInterceptor.html",[143,1.103,836,3.315]],["body/injectables/TimeoutInterceptor.html",[0,0.166,3,0.215,4,0.175,5,0.124,10,0.451,11,1.1,12,3.329,16,0.519,17,1.742,22,0.759,24,1.105,25,0.01,26,0.876,27,0.809,29,2.527,37,1.352,39,0.425,41,1.133,43,0.215,55,0.006,56,0.007,57,0.006,61,1.906,81,1.656,85,3.143,93,3.039,98,2.526,143,1.656,144,2.211,273,1.352,274,1.906,384,3.735,444,3.879,479,4.975,484,5.895,485,5.895,486,6.273,487,6.889,489,2.62,490,6.522,493,5.895,494,4.167,496,4.575,498,3.617,590,3.649,654,4.167,834,5.504,836,4.975,1474,4.575,1475,6.695,1476,4.975,1477,4.975,1478,6.695,1479,4.975,1480,4.661,1481,5.368,1482,7.407,1483,7.407,1484,5.196,1485,7.407,1486,5.196,1487,6.695,1488,5.196,1489,6.695,1490,5.196,1491,5.196,1492,5.196,1493,5.196,1494,5.196,1495,5.196,1496,5.196,1497,5.196]],["title/classes/UpdateNewsParams.html",[0,0.142,947,3.105]],["body/classes/UpdateNewsParams.html",[0,0.257,2,1.232,3,0.258,4,0.211,5,0.15,8,1.848,11,1.234,25,0.01,27,1.169,39,0.431,43,0.258,55,0.007,56,0.008,57,0.007,61,2.293,105,2.746,375,2.919,456,3.899,458,5.013,459,3.934,461,4.27,693,3.407,721,4.936,761,5.23,947,5.23,1498,5.505,1499,8.053,1500,7.512,1501,5.582,1502,5.23,1503,6.615,1504,6.252,1505,6.252]],["title/classes/User.html",[0,0.142,155,1.427]],["body/classes/User.html",[0,0.228,2,1.131,3,0.237,4,0.193,5,0.137,10,0.498,11,1.171,12,2.442,16,0.602,22,0.879,25,0.01,27,1.11,32,1.342,39,0.329,41,1.252,43,0.295,55,0.006,56,0.008,57,0.006,81,1.284,143,1.763,146,2.368,150,3.579,155,2.595,156,2.442,158,5.482,160,5.919,164,2.521,202,1.384,203,4.369,773,3.128,1157,3.411,1506,4.602,1507,5.739,1508,5.739,1509,5.739,1510,5.054,1511,5.054,1512,5.054,1513,4.602,1514,4.602,1515,4.265,1516,5.054,1517,5.054,1518,5.054,1519,5.054,1520,5.054]],["title/classes/UserDTO.html",[0,0.142,1521,3.577]],["body/classes/UserDTO.html",[0,0.195,2,1.205,3,0.253,4,0.206,5,0.146,10,0.531,11,1.218,16,0.575,22,0.841,25,0.01,32,1.291,39,0.351,43,0.253,55,0.007,56,0.008,57,0.007,61,2.719,102,1.928,103,3.878,105,2.686,155,2.652,158,5.582,160,5.913,1513,5.944,1514,5.944,1521,5.944,1522,5.385,1523,7.413,1524,6.649,1525,6.115,1526,6.115]],["title/classes/UserEntity.html",[0,0.142,1527,3.315]],["body/classes/UserEntity.html",[0,0.184,2,1.138,3,0.239,4,0.195,5,0.138,10,0.501,11,1.176,16,0.631,19,1.752,22,0.922,24,1.228,25,0.01,26,0.974,27,0.899,32,1.326,39,0.411,43,0.239,55,0.006,56,0.008,57,0.006,102,2.023,103,4.197,105,2.537,203,4.073,258,2.311,404,3.921,771,5.414,776,5.07,857,4.703,961,4.291,1527,5.318,1528,5.085,1529,7.157,1530,5.775,1531,5.775,1532,5.775,1533,5.775,1534,5.775,1535,5.775,1536,5.775,1537,5.775,1538,5.775,1539,5.775,1540,5.775]],["title/classes/UserInfo.html",[0,0.142,352,2.169]],["body/classes/UserInfo.html",[0,0.175,2,1.08,3,0.227,4,0.185,5,0.131,8,2.048,10,0.476,11,1.138,16,0.662,19,1.663,22,0.933,24,1.165,25,0.01,26,0.924,27,0.853,30,2.948,32,1.329,39,0.397,43,0.227,45,2.261,55,0.006,56,0.008,57,0.006,102,2.076,202,1.671,215,1.801,233,3.294,235,2.858,236,1.802,237,2.261,238,2.488,240,2.488,242,3.395,243,1.955,244,2.194,280,2.573,281,2.573,352,3.368,360,3.115,366,3.816,367,3.937,368,4.32,369,4.073,370,2.87,773,2.987,1541,7.026,1542,7.026,1543,7.026,1544,6.927,1545,5.481,1546,5.481,1547,5.481,1548,5.481]],["title/classes/UserInfoMapper.html",[0,0.142,1020,3.315]],["body/classes/UserInfoMapper.html",[0,0.195,2,1.202,3,0.252,4,0.206,5,0.146,10,0.53,16,0.473,17,1.926,22,0.692,24,1.297,25,0.01,26,1.029,27,0.95,37,1.587,39,0.425,43,0.252,55,0.007,56,0.008,57,0.007,74,2.059,81,1.365,82,1.435,202,1.472,352,4.127,384,4.018,459,3.877,1007,5.936,1017,4.534,1020,5.501,1021,4.893,1110,5.769,1294,4.893,1296,5.373,1549,6.519,1550,7.403,1551,6.102,1552,6.102,1553,6.102,1554,6.102,1555,6.102]],["title/classes/UserInfoResponse.html",[0,0.142,1110,3.105]],["body/classes/UserInfoResponse.html",[0,0.194,2,1.197,3,0.251,4,0.205,5,0.145,10,0.528,11,1.213,16,0.617,22,0.902,25,0.01,32,1.342,39,0.349,43,0.251,55,0.007,56,0.008,57,0.007,102,2.069,103,4.191,105,2.669,236,2.069,1110,5.14,1113,4.872,1114,5.92,1115,5.92,1136,4.515,1301,4.872,1542,7.004,1543,7.004,1556,7.286,1557,6.075,1558,6.075,1559,6.075]],["title/controllers/UsersController.html",[85,2.094,1560,3.315]],["body/controllers/UsersController.html",[0,0.188,3,0.243,4,0.198,5,0.141,10,0.511,16,0.457,17,1.884,22,0.667,24,1.251,25,0.01,26,0.992,27,0.916,37,1.531,39,0.47,41,1.283,43,0.243,55,0.006,56,0.008,57,0.006,81,1.316,82,1.384,85,2.763,87,2.967,89,4.372,92,4.718,93,2.671,102,1.531,155,2.316,273,1.884,554,3.792,564,5.04,588,3.946,773,3.207,775,4.758,776,5.104,857,3.866,927,3.866,959,4.096,960,4.718,961,4.372,966,4.718,1527,5.828,1560,5.38,1561,5.181,1562,7.24,1563,5.884,1564,7.24,1565,5.884,1566,5.884,1567,5.884,1568,5.884,1569,5.884]],["title/modules/UsersModule.html",[106,1.319,119,2.931]],["body/modules/UsersModule.html",[0,0.193,3,0.251,4,0.204,5,0.145,25,0.01,39,0.456,41,1.322,43,0.251,55,0.007,56,0.008,57,0.007,87,3.057,106,2.349,108,2.426,109,2.752,110,3.304,111,3.304,112,3.057,113,3.607,114,3.731,119,5.731,121,4.019,122,3.175,123,2.752,150,5.61,1560,5.479,1570,5.338,1571,5.338,1572,5.338,1573,6.062,1574,6.062,1575,6.062]],["title/injectables/UsersService.html",[143,1.103,150,2.782]],["body/injectables/UsersService.html",[0,0.219,3,0.224,4,0.183,5,0.13,10,0.47,11,1.129,12,3.214,16,0.534,17,1.789,22,0.78,24,1.152,25,0.01,26,0.914,27,0.843,32,1.304,37,1.409,39,0.311,41,1.181,43,0.284,55,0.006,56,0.007,57,0.006,81,1.211,143,1.701,144,2.305,146,3.116,150,4.288,155,2.541,156,2.926,158,5.389,160,5.926,164,3.318,202,1.307,203,4.295,273,1.409,274,1.987,773,4.117,923,6.054,1157,4.087,1506,4.344,1510,4.77,1511,4.77,1512,4.77,1513,5.513,1514,5.513,1515,5.109,1516,6.054,1517,6.054,1518,6.054,1519,4.77,1520,4.77,1576,5.417,1577,5.417]],["title/classes/ValidationErrorDetailResponse.html",[0,0.142,68,3.315]],["body/classes/ValidationErrorDetailResponse.html",[0,0.207,2,1.28,3,0.269,4,0.219,5,0.155,12,2.765,16,0.504,19,1.972,22,0.737,24,1.382,25,0.009,26,1.096,27,1.012,32,1.363,43,0.269,44,5.722,49,3.171,55,0.007,56,0.008,57,0.007,65,3.981,68,5.713,1578,6.769,1579,5.722,1580,6.498,1581,6.498,1582,6.164]],["title/modules/ValidationModule.html",[106,1.319,319,3.105]],["body/modules/ValidationModule.html",[0,0.208,3,0.269,4,0.22,5,0.156,25,0.01,39,0.47,41,1.42,43,0.269,55,0.007,56,0.008,57,0.007,106,2.276,108,2.607,113,2.957,319,5.359,333,6.778,510,4.28,514,4.062,515,5.223,713,5.72,1583,6.513,1584,6.513,1585,6.513]],["title/changelog.html",[1586,2.781,1587,2.781,1588,3.296]],["body/changelog.html",[0,0.068,2,0.78,3,0.026,4,0.021,5,0.105,10,0.055,13,1.142,14,0.333,22,0.24,25,0.003,26,0.284,27,0.262,29,0.45,37,0.438,39,0.097,47,2.904,48,1.801,49,2.25,51,1.25,53,0.397,55,0.001,56,0.003,57,0.002,65,1.924,81,0.142,82,1.283,93,1.569,106,0.353,109,0.289,114,0.299,122,0.624,123,0.541,138,0.443,146,0.263,147,1.349,155,2.159,156,0.507,158,0.784,160,0.83,165,0.347,169,4.003,172,0.378,184,0.818,197,1.439,199,0.378,201,0.333,203,0.624,204,0.443,207,0.51,210,1,211,1.25,218,0.362,236,0.551,247,0.473,252,0.418,253,2.294,256,0.51,259,1.883,260,1.702,262,2.771,264,0.886,265,0.418,269,0.945,273,0.551,274,0.437,285,0.347,286,0.418,287,0.678,288,1.489,289,0.784,290,0.289,325,0.561,327,2.6,329,2.083,340,1.142,343,2.568,345,0.397,358,1.203,361,1.258,377,0.56,378,0.917,381,2.687,397,0.418,398,1.742,404,0.321,406,0.917,413,0.397,429,1.365,430,0.142,432,0.347,442,0.917,443,0.65,446,0.624,448,0.347,460,1.25,461,0.678,482,0.473,489,0.321,500,4.578,508,1,514,0.744,521,0.83,523,0.561,525,1.32,526,0.524,527,0.744,528,0.418,554,2.187,555,1.05,560,3.364,564,3.301,570,1.263,572,0.744,588,1.555,589,0.362,590,0.347,591,1.884,593,1.875,597,1.218,601,1.029,605,0.378,609,0.347,611,0.397,613,0.51,615,2.271,629,0.473,633,0.51,655,0.51,656,0.956,658,0.418,660,0.443,662,0.744,673,0.473,686,1.391,688,0.886,693,2.026,697,0.956,705,0.51,717,1.78,719,0.561,720,1.697,721,1.646,724,2.541,725,1.25,726,2.791,728,2.072,737,2.288,739,2.113,742,0.443,743,1.105,745,1.861,746,0.362,753,3.001,754,1.391,755,0.397,756,0.744,757,0.784,761,0.443,771,1.474,772,2.771,773,3.763,774,0.886,775,0.784,777,0.473,785,1.171,791,1.105,821,0.709,823,1.349,824,0.601,831,0.418,833,1.622,835,2.981,848,0.51,857,1.105,859,2.791,860,1.171,876,1.481,881,2.209,883,5.218,885,0.51,888,0.83,890,4.489,894,0.561,897,2.206,921,1.573,924,2.288,934,0.784,942,1.105,944,1.105,950,2.513,981,0.473,1090,0.443,1157,1,1160,0.886,1165,0.784,1168,1.171,1198,0.443,1228,0.956,1243,1.391,1254,3.955,1256,1.029,1257,0.473,1266,0.51,1280,1.258,1287,1.562,1309,0.473,1328,1.875,1331,0.784,1338,0.473,1344,1.171,1345,0.443,1351,2.981,1352,0.473,1358,1.481,1372,0.886,1376,0.784,1390,0.886,1396,0.443,1397,1.312,1414,0.561,1416,1.349,1418,0.51,1420,0.83,1445,1.697,1447,0.561,1448,1.391,1455,0.956,1461,0.51,1463,0.886,1464,0.51,1465,0.473,1467,2.288,1469,0.473,1476,0.886,1477,0.886,1479,0.473,1501,2.121,1502,0.83,1515,0.473,1582,0.956,1588,2.513,1589,0.637,1590,1.171,1591,0.956,1592,0.561,1593,1.474,1594,0.637,1595,0.637,1596,1.682,1597,2.94,1598,5.453,1599,7.347,1600,4.053,1601,0.637,1602,7.924,1603,0.637,1604,6.637,1605,1.05,1606,1.987,1607,0.886,1608,1.05,1609,0.561,1610,0.637,1611,0.637,1612,1.864,1613,4.379,1614,0.637,1615,0.637,1616,1.682,1617,0.637,1618,1.864,1619,0.637,1620,1.861,1621,1.864,1622,0.637,1623,1.682,1624,2.981,1625,1.05,1626,1.05,1627,1.192,1628,1.192,1629,1.864,1630,3.169,1631,1.192,1632,0.637,1633,0.561,1634,0.637,1635,2.791,1636,0.637,1637,3.394,1638,0.637,1639,1.192,1640,0.637,1641,0.637,1642,1.192,1643,1.864,1644,0.637,1645,1.192,1646,0.637,1647,1.474,1648,2.505,1649,3.484,1650,0.637,1651,0.561,1652,0.637,1653,4.904,1654,2.791,1655,2.854,1656,1.192,1657,1.192,1658,0.637,1659,0.51,1660,0.637,1661,0.637,1662,0.637,1663,0.637,1664,0.561,1665,0.637,1666,1.682,1667,0.637,1668,0.561,1669,2.505,1670,2.206,1671,0.561,1672,0.637,1673,0.637,1674,0.637,1675,0.637,1676,1.682,1677,0.637,1678,1.987,1679,0.637,1680,1.192,1681,0.637,1682,1.192,1683,0.637,1684,0.561,1685,0.561,1686,1.192,1687,0.637,1688,1.481,1689,0.956,1690,0.637,1691,0.637,1692,1.192,1693,1.192,1694,0.637,1695,5.056,1696,2.355,1697,0.637,1698,1.25,1699,0.637,1700,0.637,1701,2.513,1702,0.637,1703,0.637,1704,2.117,1705,3.717,1706,0.637,1707,3.484,1708,0.637,1709,0.637,1710,1.682,1711,1.05,1712,0.51,1713,0.637,1714,0.637,1715,0.637,1716,6.637,1717,3.717,1718,2.771,1719,1.192,1720,1.192,1721,1.192,1722,1.05,1723,1.192,1724,0.637,1725,1.481,1726,0.637,1727,0.637,1728,1.171,1729,0.637,1730,2.155,1731,0.637,1732,1.192,1733,0.83,1734,0.637,1735,2.791,1736,0.637,1737,1.192,1738,0.637,1739,0.956,1740,0.637,1741,1.481,1742,1.864,1743,0.637,1744,0.637,1745,1.05,1746,0.637,1747,4.567,1748,0.637,1749,7.551,1750,0.637,1751,0.637,1752,3.956,1753,0.637,1754,4.904,1755,2.854,1756,1.192,1757,0.637,1758,0.637,1759,0.637,1760,0.637,1761,0.637,1762,0.637,1763,1.05,1764,0.637,1765,3.956,1766,0.637,1767,1.682,1768,2.513,1769,0.637,1770,1.682,1771,0.637,1772,0.637,1773,1.05,1774,0.637,1775,0.637,1776,2.505,1777,1.192,1778,0.637,1779,1.682,1780,1.171,1781,0.637,1782,0.561,1783,0.637,1784,3.169,1785,0.637,1786,1.192,1787,1.697,1788,0.637,1789,0.637,1790,1.05,1791,0.637,1792,0.637,1793,0.561,1794,0.956,1795,1.192,1796,1.861,1797,2.854,1798,0.637,1799,0.637,1800,0.637,1801,0.51,1802,1.192,1803,0.637,1804,1.192,1805,4.567,1806,1.697,1807,1.192,1808,0.637,1809,0.637,1810,0.637,1811,0.637,1812,2.505,1813,0.637,1814,0.637,1815,4.567,1816,1.192,1817,0.637,1818,0.561,1819,2.117,1820,1.05,1821,0.637,1822,1.192,1823,1.682,1824,1.987,1825,0.637,1826,0.637,1827,0.443,1828,0.637,1829,0.637,1830,1.192,1831,0.637,1832,1.349,1833,1.646,1834,0.561,1835,0.637,1836,1.481,1837,0.637,1838,0.637,1839,1.682,1840,0.637,1841,0.637,1842,1.192,1843,1.682,1844,0.637,1845,0.637,1846,0.637,1847,0.637,1848,1.192,1849,0.637,1850,1.682,1851,1.05,1852,1.864,1853,0.637,1854,3.484,1855,0.637,1856,1.171,1857,1.192,1858,1.697,1859,0.637,1860,0.637,1861,0.637,1862,0.637,1863,1.682,1864,1.864,1865,0.637,1866,1.682,1867,2.854,1868,0.561,1869,0.637,1870,1.682,1871,1.682,1872,2.513,1873,0.637,1874,0.637,1875,0.637,1876,1.682,1877,0.637,1878,0.637,1879,0.637,1880,1.192,1881,0.637,1882,1.481,1883,1.192,1884,0.637,1885,0.637,1886,0.637,1887,0.637,1888,0.637,1889,0.956,1890,0.473,1891,0.886,1892,0.51,1893,0.637,1894,0.637,1895,0.561,1896,1.05,1897,0.637,1898,0.637,1899,0.637,1900,4.741,1901,0.637,1902,1.682,1903,0.637,1904,0.637,1905,0.637,1906,2.117,1907,0.637,1908,1.192,1909,0.886,1910,1.192,1911,0.637,1912,0.637,1913,0.637,1914,1.192,1915,0.956,1916,0.637,1917,0.637,1918,0.637,1919,0.561,1920,0.637,1921,0.637,1922,0.637,1923,0.561,1924,0.637,1925,1.192,1926,0.561,1927,0.637,1928,0.637,1929,0.637,1930,0.637,1931,0.637,1932,0.637,1933,0.637,1934,2.541,1935,0.637,1936,0.886,1937,2.854,1938,0.637,1939,0.637,1940,0.637,1941,0.637,1942,0.637,1943,0.637,1944,0.637,1945,1.192,1946,0.637,1947,0.637,1948,1.682,1949,0.637,1950,1.192,1951,0.637,1952,1.391,1953,0.637,1954,1.192,1955,0.561,1956,0.637,1957,0.561,1958,0.637,1959,1.192,1960,0.637,1961,0.637,1962,0.637,1963,2.505,1964,0.637,1965,0.637,1966,0.51,1967,0.637,1968,0.637,1969,0.637,1970,2.513,1971,0.637,1972,0.637,1973,0.637,1974,0.637,1975,0.637,1976,0.473,1977,0.637,1978,1.682,1979,0.637,1980,0.473,1981,0.637,1982,0.637,1983,0.637,1984,0.637,1985,1,1986,0.744,1987,1.682,1988,1.192,1989,0.637,1990,1.682,1991,0.637,1992,1.864,1993,0.637,1994,0.637,1995,2.505,1996,2.854,1997,0.637,1998,0.637,1999,0.637,2000,2.854,2001,0.637,2002,1.192,2003,0.637,2004,0.637,2005,1.192,2006,0.51,2007,1.192,2008,0.561,2009,1.481,2010,0.637,2011,0.637,2012,0.51,2013,1.32,2014,0.637,2015,7.742,2016,2.791,2017,0.637,2018,0.637,2019,0.51,2020,0.637,2021,0.637,2022,0.637,2023,0.637,2024,0.637,2025,2.854,2026,0.637,2027,1.349,2028,0.637,2029,0.637,2030,0.637,2031,0.637,2032,0.637,2033,2.117,2034,2.117,2035,2.206,2036,0.956,2037,1.573,2038,1.682,2039,2.505,2040,1.192,2041,1.192,2042,3.456,2043,1.573,2044,3.169,2045,1.192,2046,1.192,2047,1.25,2048,1.192,2049,1.05,2050,0.956,2051,1.192,2052,0.637,2053,0.637,2054,2.791,2055,0.561,2056,0.443,2057,2.505,2058,1.05,2059,0.637,2060,0.51,2061,0.473,2062,0.473,2063,0.637,2064,0.637,2065,0.561,2066,1.05,2067,0.637,2068,1.192,2069,0.637,2070,0.637,2071,1.192,2072,0.637,2073,0.637,2074,1.192,2075,0.637,2076,0.637,2077,1.192,2078,0.637,2079,0.637,2080,0.637,2081,0.561,2082,1.573,2083,0.637,2084,0.637,2085,1.05,2086,0.473,2087,0.637,2088,1.682,2089,2.009,2090,0.637,2091,0.561,2092,1.192,2093,0.637,2094,0.637,2095,0.561,2096,0.637,2097,3.273,2098,1.192,2099,0.637,2100,0.637,2101,0.637,2102,0.637,2103,0.637,2104,1.05,2105,1.05,2106,2.117,2107,1.697,2108,0.637,2109,1.682,2110,0.637,2111,0.637,2112,1.481,2113,0.637,2114,0.637,2115,0.637,2116,1.192,2117,1.682,2118,0.51,2119,1.987,2120,1.682,2121,0.637,2122,0.637,2123,0.637,2124,0.637,2125,1.192,2126,0.637,2127,0.956,2128,0.561,2129,1.192,2130,0.637,2131,0.561,2132,0.637,2133,0.637,2134,0.637,2135,1.192,2136,0.561,2137,1.192,2138,0.637,2139,1.192,2140,0.637,2141,0.637,2142,0.637,2143,0.637,2144,0.637,2145,1.744,2146,1.682,2147,1.682,2148,1.573,2149,0.443,2150,2.206,2151,0.637,2152,1.682,2153,1.192,2154,0.443,2155,0.418,2156,0.561,2157,0.637,2158,0.637,2159,0.561,2160,0.473,2161,1.192,2162,1.25,2163,1.682,2164,1.05,2165,0.637,2166,0.637,2167,0.561,2168,0.637,2169,0.561,2170,0.637,2171,0.637,2172,0.637,2173,1.744,2174,0.637,2175,0.637,2176,0.637,2177,0.51,2178,0.637,2179,0.956,2180,0.637,2181,0.637,2182,0.637,2183,0.886,2184,0.637,2185,0.637,2186,0.637,2187,1.192,2188,0.561,2189,0.51,2190,0.561,2191,0.637,2192,0.561,2193,0.637,2194,0.51,2195,1.05,2196,0.637,2197,1.349,2198,0.637,2199,0.637,2200,0.637,2201,1.192,2202,0.637,2203,0.637,2204,0.637,2205,0.637,2206,0.637,2207,0.956,2208,0.637,2209,0.637,2210,1.192,2211,0.637,2212,0.637,2213,0.637,2214,2.117,2215,0.561,2216,0.637,2217,1.192,2218,0.637,2219,0.637,2220,1.192,2221,1.192,2222,1.192,2223,1.682,2224,1.682,2225,1.864,2226,1.192,2227,1.481,2228,0.956,2229,0.637,2230,0.473,2231,0.637,2232,0.561,2233,0.561,2234,0.637,2235,0.886,2236,0.637,2237,1.682,2238,0.637,2239,0.637,2240,0.637,2241,0.637,2242,1.744,2243,0.561,2244,1.481,2245,0.637,2246,1.192,2247,0.956,2248,1.682,2249,1.05,2250,0.637,2251,0.637,2252,0.637,2253,1.192,2254,1.349,2255,1.05,2256,1.192,2257,0.637,2258,0.637,2259,0.637,2260,0.637,2261,0.637,2262,0.637,2263,0.637,2264,0.637,2265,0.637,2266,0.561,2267,0.561,2268,0.637,2269,0.637,2270,1.682,2271,0.637,2272,1.192,2273,0.637,2274,1.05,2275,0.637,2276,1.192,2277,0.637,2278,1.192,2279,0.473,2280,0.637,2281,0.956,2282,0.637,2283,0.637,2284,0.561,2285,0.637,2286,0.637,2287,0.561,2288,1.682,2289,2.117,2290,1.192,2291,0.784,2292,1.05,2293,1.192,2294,1.05,2295,1.192,2296,0.886,2297,0.637,2298,1.192,2299,0.637,2300,0.561,2301,0.637,2302,1.192,2303,1.05,2304,0.637,2305,0.637,2306,0.637,2307,0.561,2308,0.637,2309,0.637,2310,1.192,2311,0.637,2312,0.637,2313,2.513,2314,1.192,2315,0.637,2316,3.456,2317,0.637,2318,1.05,2319,0.561,2320,0.561,2321,0.637,2322,0.637,2323,0.637,2324,0.637,2325,2.117,2326,0.637,2327,0.637,2328,1.349,2329,0.637,2330,0.637,2331,0.637,2332,0.637,2333,0.561,2334,1.05,2335,0.637,2336,0.637,2337,0.637,2338,0.637,2339,0.956,2340,0.637,2341,0.637,2342,0.637,2343,0.637,2344,0.637,2345,0.637,2346,0.637,2347,0.637,2348,1.864,2349,0.637,2350,0.637,2351,0.51,2352,0.637,2353,0.51,2354,0.637,2355,0.637,2356,0.561,2357,0.637,2358,0.473,2359,0.637,2360,0.637,2361,0.886,2362,0.561,2363,0.637,2364,0.637,2365,0.637,2366,0.637,2367,0.637,2368,0.637,2369,0.637,2370,1.682,2371,0.561,2372,2.206,2373,0.637,2374,0.51,2375,0.637,2376,0.637,2377,0.637,2378,0.637,2379,0.637,2380,1.682,2381,0.637,2382,1.192,2383,1.682,2384,1.192,2385,1.192,2386,4.379,2387,1.192,2388,1.192,2389,0.637,2390,1.192,2391,1.192,2392,0.637,2393,0.637,2394,0.637,2395,0.637,2396,0.637,2397,0.561,2398,0.637,2399,1.192,2400,0.637,2401,0.637,2402,0.473,2403,0.637,2404,0.561,2405,0.637,2406,2.117,2407,1.192,2408,0.637,2409,0.561,2410,0.637,2411,0.637,2412,0.637,2413,0.637,2414,0.51,2415,0.637,2416,0.637,2417,1.682,2418,1.682,2419,0.637,2420,0.561,2421,0.637,2422,0.637,2423,1.05,2424,0.637,2425,0.637,2426,0.637,2427,1.192,2428,0.637,2429,0.637,2430,0.637,2431,0.637,2432,1.192,2433,0.561,2434,0.637,2435,0.561,2436,0.637,2437,0.637,2438,0.637,2439,0.637,2440,0.637,2441,0.637,2442,0.637,2443,0.637,2444,0.637,2445,1.192,2446,1.192,2447,0.637,2448,0.561,2449,0.637,2450,0.637,2451,0.637,2452,1.192,2453,0.637,2454,0.637,2455,1.192,2456,0.637,2457,1.192,2458,0.637,2459,0.637,2460,1.192,2461,0.418,2462,2.117,2463,0.637,2464,0.637,2465,0.637,2466,0.637,2467,0.51,2468,0.637,2469,1.05,2470,0.561,2471,0.561,2472,1.192,2473,0.637,2474,0.637,2475,1.192,2476,0.637,2477,0.637,2478,0.637,2479,0.637,2480,0.637,2481,1.192,2482,0.637,2483,0.637,2484,0.637,2485,0.637,2486,0.637,2487,0.637,2488,0.637,2489,1.682,2490,0.637,2491,0.637,2492,0.637,2493,0.637,2494,0.637,2495,0.637,2496,0.637,2497,0.637,2498,1.192,2499,1.192,2500,0.637,2501,0.637,2502,0.637,2503,2.117,2504,4.379,2505,1.192,2506,1.05,2507,1.05,2508,1.192,2509,2.117,2510,1.192,2511,1.192,2512,0.637,2513,1.192,2514,1.05,2515,1.192,2516,1.192,2517,1.192,2518,1.05,2519,1.192,2520,2.117,2521,1.192,2522,2.117,2523,1.192,2524,1.192,2525,1.05,2526,1.05,2527,1.682,2528,1.192,2529,0.637,2530,0.637,2531,0.886,2532,0.51,2533,1.192,2534,0.637,2535,2.505,2536,1.192,2537,0.637,2538,0.561,2539,0.637,2540,2.117,2541,0.637,2542,0.637,2543,0.637,2544,0.637,2545,0.637,2546,0.443,2547,0.561,2548,0.637,2549,0.561,2550,0.637,2551,0.637,2552,1.192,2553,1.192,2554,1.192,2555,0.637,2556,0.637,2557,0.473,2558,0.637,2559,0.561,2560,0.51,2561,0.637,2562,0.637,2563,1.192,2564,1.192,2565,0.637,2566,0.637,2567,0.637,2568,1.192,2569,0.637,2570,0.637,2571,0.637,2572,1.192,2573,0.637,2574,1.682,2575,1.481,2576,0.637,2577,0.637,2578,0.51,2579,1.192,2580,1.192,2581,0.637,2582,0.51,2583,0.637,2584,0.637,2585,1.682,2586,1.192,2587,0.637,2588,1.192,2589,0.51,2590,0.637,2591,1.192,2592,0.637,2593,0.637,2594,0.637,2595,2.117,2596,0.637,2597,0.637,2598,0.637,2599,0.637,2600,0.637,2601,0.637,2602,0.637,2603,1.192,2604,0.637,2605,0.637,2606,0.637,2607,0.561,2608,1.192,2609,0.637,2610,1.192,2611,0.637,2612,0.637,2613,0.51,2614,0.637,2615,1.192,2616,2.117,2617,0.637,2618,0.561,2619,0.637,2620,1.192,2621,1.192,2622,0.637,2623,0.637,2624,0.561,2625,1.192,2626,0.637,2627,0.637,2628,1.192,2629,0.51,2630,0.51,2631,1.192,2632,0.637,2633,0.637,2634,0.637,2635,1.192,2636,1.192,2637,0.637,2638,0.637,2639,1.192,2640,0.637,2641,0.637,2642,0.637,2643,0.637,2644,1.192,2645,0.637,2646,0.637,2647,0.51,2648,0.637,2649,2.117,2650,0.51,2651,0.637,2652,0.637,2653,1.192,2654,0.561,2655,0.473,2656,1.192,2657,0.637,2658,2.505,2659,1.192,2660,0.51,2661,1.192,2662,0.51,2663,0.637,2664,0.637,2665,0.51,2666,0.637,2667,0.637,2668,0.637,2669,0.637,2670,0.637,2671,0.637,2672,0.637,2673,0.637,2674,0.637,2675,0.637,2676,0.637,2677,0.637,2678,1.05,2679,0.637,2680,0.637,2681,0.637,2682,0.637,2683,0.637,2684,0.51,2685,0.637,2686,0.637,2687,0.637,2688,0.637,2689,0.637,2690,0.637,2691,0.637,2692,0.561,2693,0.443,2694,0.637,2695,0.637,2696,0.637,2697,1.682,2698,0.637,2699,0.561,2700,0.561,2701,0.637,2702,0.561,2703,0.637,2704,0.637,2705,0.637,2706,0.637,2707,0.637,2708,2.117,2709,0.637,2710,0.637,2711,0.561,2712,0.637,2713,1.481,2714,0.637,2715,0.637,2716,0.637,2717,1.192,2718,0.637,2719,0.637,2720,0.637,2721,1.192,2722,0.637,2723,0.637,2724,0.637,2725,0.51,2726,1.192,2727,0.637,2728,0.637,2729,0.637,2730,0.637,2731,0.637,2732,1.682,2733,1.192,2734,1.192,2735,0.637,2736,0.561,2737,0.637,2738,1.192,2739,0.561,2740,1.682,2741,0.637,2742,0.637,2743,0.637,2744,0.637,2745,0.637,2746,1.192,2747,1.192,2748,1.192,2749,1.192,2750,1.481,2751,1.192,2752,0.637,2753,1.192,2754,0.637,2755,1.192,2756,0.561,2757,1.682,2758,0.637,2759,0.561,2760,0.637,2761,0.637,2762,0.637,2763,2.505,2764,0.637,2765,0.561,2766,0.637,2767,0.637,2768,0.637,2769,0.561,2770,0.637,2771,1.192,2772,1.192,2773,0.637,2774,0.561,2775,0.473,2776,0.637,2777,0.637,2778,0.637,2779,0.637,2780,1.192,2781,0.637,2782,0.637,2783,0.637,2784,0.637,2785,0.561,2786,0.637,2787,0.637,2788,0.51,2789,0.637,2790,0.637,2791,0.561,2792,0.473,2793,0.637,2794,0.637,2795,0.637,2796,1.192,2797,0.561,2798,0.561]],["title/coverage.html",[1986,3.774]],["body/coverage.html",[0,0.281,1,1.722,5,0.059,6,2.178,7,2.178,9,1.543,16,0.192,25,0.01,38,1.348,48,1.406,49,2.282,55,0.003,56,0.004,57,0.003,58,1.984,59,2.178,60,2.178,68,1.838,82,0.582,85,2.831,86,1.838,88,2.178,95,1.626,99,1.838,100,2.178,112,1.247,120,1.722,130,2.574,143,1.98,145,2.178,150,1.543,155,1.253,179,1.543,180,1.543,186,2.178,216,1.296,233,0.99,234,3.141,248,1.161,282,3.141,293,1.626,309,1.838,340,0.99,341,2.178,352,1.203,364,1.406,365,2.178,366,3.851,373,1.47,374,3.962,375,0.961,376,1.123,403,1.348,424,1.543,428,1.406,430,1.753,454,1.47,455,1.47,456,1.543,457,2.178,458,3.141,476,1.984,477,2.178,478,2.178,483,1.296,511,1.722,516,2.178,520,1.984,530,3.45,531,3.141,538,1.47,578,1.722,580,2.178,581,2.178,598,1.838,599,2.911,600,2.727,630,5.461,631,5.116,634,1.984,651,1.984,653,1.984,659,1.984,663,1.984,673,4.765,701,1.838,702,1.984,713,1.838,714,2.178,715,2.178,749,1.626,750,3.386,764,1.626,767,1.47,768,3.141,769,3.141,776,1.543,786,2.178,787,2.178,788,1.838,789,2.178,807,1.838,808,2.178,811,1.626,812,3.141,821,1.47,824,1.247,836,1.838,838,1.838,839,2.178,840,2.178,843,3.9,853,2.178,872,2.178,877,2.178,919,1.838,920,2.178,927,1.626,933,1.722,935,1.722,947,1.722,952,1.722,955,1.838,957,1.626,959,1.722,962,1.722,963,1.838,990,2.178,991,2.178,1001,1.984,1004,2.178,1018,1.838,1020,1.838,1063,1.626,1069,2.178,1080,1.626,1081,1.838,1096,1.838,1107,2.911,1110,1.722,1118,1.722,1123,1.984,1137,3.141,1138,2.178,1154,1.984,1165,5.983,1175,2.178,1176,1.984,1252,2.178,1253,2.178,1271,2.178,1279,2.178,1280,1.47,1281,1.984,1292,2.178,1293,2.178,1294,3.141,1300,2.178,1301,3.141,1305,1.838,1306,2.178,1310,1.626,1328,1.626,1331,1.626,1346,2.178,1350,2.178,1364,1.838,1365,2.178,1366,1.722,1369,1.626,1371,1.838,1384,1.626,1388,1.838,1389,1.984,1402,3.141,1403,2.178,1409,2.178,1446,2.178,1456,2.178,1472,2.178,1474,2.178,1498,2.178,1506,3.141,1521,1.984,1522,2.178,1527,1.838,1528,2.178,1541,2.178,1549,2.178,1556,2.178,1560,1.838,1561,2.178,1578,2.178,1579,2.178,1718,1.984,1728,2.727,1739,3.9,1790,2.178,1836,4.283,1952,1.626,1986,1.543,2328,1.984,2333,2.178,2647,6.919,2799,2.178,2800,2.178,2801,5.916,2802,6.718,2803,6.029,2804,6.029,2805,5.532,2806,5.532,2807,6.718,2808,7.498,2809,2.178,2810,8.692,2811,2.178,2812,4.283,2813,4.283,2814,2.178,2815,2.178,2816,3.918,2817,4.436,2818,2.178,2819,1.984,2820,2.178,2821,7.74,2822,3.141,2823,2.474,2824,2.474,2825,2.474,2826,2.474,2827,2.178,2828,2.178,2829,2.178,2830,2.178,2831,2.474,2832,4.864,2833,3.918,2834,2.474,2835,6.413,2836,4.864,2837,2.474,2838,5.532,2839,2.474,2840,2.474,2841,4.864,2842,3.918,2843,2.474,2844,5.916,2845,2.178,2846,2.178,2847,2.178,2848,2.178,2849,2.178,2850,2.178,2851,2.178,2852,2.178,2853,2.178,2854,2.178,2855,2.178,2856,4.283,2857,2.474]],["title/dependencies.html",[109,2.431,2351,3.001]],["body/dependencies.html",[0,0.172,4,0.127,5,0.129,16,0.292,25,0.01,41,0.821,47,2.051,55,0.004,56,0.006,57,0.004,93,2.441,94,2.473,105,1.654,109,1.709,127,2.797,129,3.018,146,2.218,156,2.912,168,5.03,184,3.05,210,2.237,236,0.979,243,2.237,244,1.507,245,2.473,288,3.729,321,2.473,323,2.348,389,3.533,407,2.237,475,3.912,494,3.018,510,2.473,560,1.767,611,4.268,612,3.018,647,3.314,860,2.621,942,2.473,1132,3.018,1287,4.942,1320,3.314,1372,3.996,1605,3.314,1689,4.312,1722,3.314,1733,2.621,1827,2.621,1895,3.314,1896,3.314,1955,3.314,2081,3.314,2104,3.314,2105,3.314,2145,2.621,2154,2.621,2155,3.533,2156,3.314,2159,3.314,2169,3.314,2215,3.314,2230,2.797,2235,2.797,2249,3.314,2254,3.018,2471,3.314,2736,3.314,2774,3.314,2858,5.377,2859,7.749,2860,3.764,2861,3.764,2862,3.764,2863,3.764,2864,3.764,2865,5.377,2866,3.764,2867,3.764,2868,5.377,2869,3.764,2870,3.764,2871,3.764,2872,3.764,2873,3.764,2874,3.764,2875,3.764,2876,3.764,2877,3.764,2878,5.377,2879,3.764,2880,3.764,2881,3.764,2882,3.764,2883,3.764,2884,3.764,2885,5.377,2886,3.764,2887,3.764,2888,5.377,2889,3.764,2890,3.764,2891,7.238,2892,3.764,2893,3.764,2894,3.764,2895,3.764,2896,3.764,2897,3.764,2898,3.764,2899,3.764,2900,3.764,2901,3.764,2902,3.764,2903,3.018,2904,3.764,2905,3.764,2906,5.377,2907,3.764,2908,3.764,2909,3.764,2910,3.764,2911,3.018,2912,3.764,2913,3.764,2914,3.764,2915,3.764,2916,3.764,2917,5.377,2918,3.764,2919,3.764,2920,3.764,2921,3.764,2922,3.764,2923,3.764,2924,3.764,2925,3.764,2926,3.764,2927,3.764,2928,3.764,2929,3.764,2930,3.764,2931,3.764,2932,3.764,2933,3.764,2934,3.764,2935,5.377,2936,5.377,2937,3.764,2938,3.764,2939,3.764,2940,3.764,2941,3.764,2942,3.764,2943,3.764,2944,5.377,2945,3.764,2946,3.764,2947,3.764,2948,3.764,2949,3.764,2950,3.764,2951,3.764,2952,3.764,2953,3.764,2954,3.764,2955,3.764,2956,3.764,2957,5.377,2958,3.764,2959,3.764,2960,3.764,2961,3.764,2962,3.764,2963,5.377,2964,3.764,2965,3.314,2966,3.314,2967,3.764,2968,3.764,2969,3.764,2970,3.764,2971,3.764,2972,3.764,2973,3.764,2974,3.764,2975,3.764,2976,3.764,2977,3.764,2978,3.764,2979,3.764,2980,3.764,2981,3.764,2982,3.764,2983,3.764,2984,3.764,2985,3.018,2986,3.764,2987,3.764,2988,3.764,2989,3.764,2990,3.764,2991,3.764,2992,3.764,2993,3.764,2994,3.764,2995,3.764,2996,3.764,2997,3.764,2998,3.764]],["title/miscellaneous/functions.html",[2999,2.459,3000,4.294]],["body/miscellaneous/functions.html",[10,0.511,24,1.74,25,0.01,26,1.38,27,1.274,37,2.04,38,3.946,49,3.236,55,0.006,56,0.008,57,0.006,112,3.954,155,1.882,278,2.671,489,2.967,606,4.096,630,4.372,631,5.697,674,4.718,676,4.718,680,4.718,701,5.38,848,4.718,959,5.04,1001,6.289,1824,4.096,1891,4.372,2056,4.096,2189,4.718,2230,4.372,2242,5.04,2809,6.375,2811,6.375,2817,4.718,2822,4.718,2851,5.181,2852,6.375,2999,3.866,3000,4.718,3001,5.181,3002,5.181,3003,6.906,3004,5.884,3005,5.884,3006,5.181,3007,5.884,3008,5.884,3009,5.884,3010,5.884,3011,5.884,3012,5.884]],["title/index.html",[10,0.325,1586,2.781,1587,2.781]],["body/index.html",[5,0.142,13,2.716,14,2.281,15,1.692,17,1.133,25,0.008,26,1.004,29,2.753,52,3.856,53,2.716,55,0.005,56,0.006,57,0.005,61,1.598,64,2.862,82,1.024,93,2.703,184,2.118,236,1.133,252,4.793,253,4.129,257,3.714,259,3.245,260,1.692,273,1.133,288,2.589,340,1.743,448,2.374,461,2.476,528,2.862,554,3.999,560,2.045,591,2.589,615,2.862,686,2.862,693,4.399,717,4.231,736,3.237,739,2.476,746,3.384,833,2.476,881,3.539,890,3.384,942,2.862,1228,2.476,1372,3.237,1468,5.077,1480,3.032,1590,3.032,1591,5.441,1593,4.145,1602,3.835,1608,3.835,1609,3.835,1637,4.425,1647,5.973,1696,3.237,1730,4.231,1733,3.032,1741,3.835,1782,7.107,1787,3.493,1796,3.237,1824,3.032,1923,3.835,1936,3.237,1952,2.862,1985,2.589,1986,2.716,2006,4.775,2037,3.237,2086,3.237,2119,3.032,2149,3.032,2154,3.032,2155,3.913,2192,5.974,2194,4.775,2197,3.493,2233,3.835,2279,3.237,2435,3.835,2470,3.835,2531,4.425,2532,3.493,2578,3.493,2692,3.835,2693,3.032,2769,3.835,2792,3.237,2801,3.835,2985,3.493,3013,3.493,3014,5.954,3015,6.322,3016,4.355,3017,3.835,3018,4.355,3019,3.032,3020,4.355,3021,4.355,3022,3.032,3023,3.237,3024,4.355,3025,3.835,3026,4.145,3027,3.835,3028,4.355,3029,3.493,3030,4.355,3031,5.974,3032,4.355,3033,5.848,3034,3.714,3035,3.835,3036,5.954,3037,5.954,3038,7.637,3039,7.293,3040,4.355,3041,4.355,3042,5.954,3043,3.835,3044,4.355,3045,3.835,3046,5.954,3047,4.355,3048,3.835,3049,5.954,3050,5.954,3051,3.237,3052,3.835,3053,4.355,3054,4.355,3055,3.237,3056,3.237,3057,4.355,3058,4.355,3059,4.355,3060,2.862,3061,4.355,3062,4.355,3063,3.493,3064,4.355,3065,3.493,3066,3.835,3067,4.355,3068,4.355,3069,4.355,3070,3.493,3071,3.835,3072,4.145,3073,4.355,3074,4.355,3075,3.835,3076,4.355,3077,3.835]],["title/license.html",[1586,2.781,1587,2.781,3078,3.296]],["body/license.html",[0,0.027,4,0.265,5,0.037,13,2.968,17,0.218,22,0.095,25,0.002,29,0.582,39,0.048,52,1.505,53,0.523,55,0.002,56,0.002,57,0.002,64,1.013,81,0.188,82,0.972,94,0.552,123,0.381,155,1.791,158,0.552,164,0.369,169,1.505,197,2.347,199,1.574,201,1.387,202,0.372,207,1.236,212,1.882,213,3.287,242,0.346,247,2.844,260,2.46,265,5.588,269,0.317,285,0.457,287,0.876,290,0.381,308,0.961,323,0.523,328,0.624,377,0.394,381,0.346,395,0.552,398,2.347,399,0.523,430,0.856,444,0.44,445,0.44,461,1.215,489,0.423,514,2.172,521,0.584,525,1.652,526,2.39,528,2.716,560,0.724,579,0.855,587,1.404,588,2.253,591,2.07,597,1.288,601,0.749,609,0.457,611,0.961,642,0.624,662,0.961,721,0.552,724,0.673,728,1.119,732,0.624,737,2.124,739,0.876,740,1.145,743,1.74,746,0.876,756,0.523,773,2.659,809,0.961,829,3.778,881,2.901,882,0.584,887,0.584,890,1.215,891,0.673,944,1.013,982,0.673,1090,0.584,1157,1.839,1197,2.124,1198,0.584,1228,1.98,1235,0.584,1236,2.844,1243,0.552,1254,1.488,1280,3.763,1309,5.217,1338,0.624,1345,0.584,1374,1.882,1376,1.404,1396,2.425,1397,2.662,1455,0.673,1461,1.713,1464,0.673,1465,2.844,1477,1.588,1480,1.844,1503,3.882,1515,2.299,1524,2.48,1592,0.739,1593,1.488,1597,1.968,1599,1.357,1607,0.624,1625,1.357,1637,0.624,1643,0.739,1647,2.664,1659,0.673,1664,0.739,1678,1.844,1684,1.357,1685,1.357,1689,1.236,1698,0.624,1718,0.673,1725,0.739,1728,1.073,1730,2.172,1735,1.357,1742,0.739,1745,0.739,1763,0.739,1780,1.844,1787,5.841,1794,2.48,1796,1.145,1806,0.673,1818,1.357,1820,0.739,1834,1.357,1854,1.357,1856,0.584,1864,0.739,1868,0.739,1872,0.739,1890,0.624,1891,2.299,1915,1.236,1919,0.739,1934,2.124,1936,0.624,1957,0.739,1976,0.624,1986,0.961,2008,1.357,2012,1.236,2019,0.673,2036,4.076,2037,0.624,2043,2.844,2050,2.124,2058,0.739,2060,5.675,2061,3.46,2062,1.588,2065,5.883,2082,2.299,2086,1.145,2119,1.844,2128,0.739,2145,1.488,2148,3.072,2162,4.842,2173,2.878,2179,0.673,2189,0.673,2207,0.673,2225,0.739,2227,1.357,2228,1.236,2232,3.64,2266,0.739,2291,1.74,2292,0.739,2294,0.739,2328,0.673,2334,0.739,2339,0.673,2358,1.145,2362,0.739,2372,0.739,2374,0.673,2402,1.145,2423,0.739,2461,2.289,2467,1.236,2506,1.357,2531,1.968,2532,1.713,2538,1.357,2546,1.844,2549,1.357,2557,0.624,2560,0.673,2578,1.236,2582,1.713,2618,1.357,2629,0.673,2655,1.588,2662,0.673,2665,2.793,2684,3.913,2693,0.584,2699,5.176,2700,1.357,2702,1.357,2711,0.739,2750,0.739,2756,1.357,2759,0.739,2775,3.626,2785,1.882,2791,4.476,2830,0.739,2911,0.673,3015,0.673,3019,2.153,3022,1.844,3023,0.624,3026,0.584,3027,2.332,3029,1.713,3034,0.523,3048,0.739,3051,1.588,3060,3.207,3072,1.488,3078,7.544,3079,5.878,3080,5.744,3081,0.839,3082,2.137,3083,6.959,3084,3.093,3085,4.606,3086,5.293,3087,3.093,3088,0.839,3089,0.839,3090,1.541,3091,3.093,3092,2.137,3093,2.137,3094,5.084,3095,0.839,3096,0.839,3097,1.357,3098,3.093,3099,3.37,3100,1.541,3101,1.541,3102,4.791,3103,4.134,3104,0.839,3105,0.839,3106,3.483,3107,1.357,3108,0.839,3109,0.739,3110,4.297,3111,7.603,3112,2.137,3113,1.882,3114,0.839,3115,0.839,3116,2.649,3117,4.408,3118,0.839,3119,4.408,3120,1.236,3121,0.839,3122,2.649,3123,0.673,3124,2.649,3125,0.673,3126,4.93,3127,0.739,3128,0.839,3129,4.656,3130,4.88,3131,3.093,3132,5.084,3133,0.839,3134,1.541,3135,0.839,3136,0.839,3137,1.882,3138,0.839,3139,0.839,3140,0.839,3141,0.839,3142,0.839,3143,0.839,3144,2.649,3145,0.839,3146,2.137,3147,0.839,3148,0.839,3149,5.389,3150,1.588,3151,0.839,3152,0.839,3153,1.882,3154,2.137,3155,0.839,3156,0.624,3157,1.541,3158,1.541,3159,2.137,3160,7.637,3161,0.839,3162,4.641,3163,3.093,3164,3.093,3165,3.483,3166,0.673,3167,2.137,3168,4.548,3169,1.541,3170,0.839,3171,0.839,3172,0.839,3173,2.137,3174,0.839,3175,0.839,3176,1.541,3177,3.483,3178,0.839,3179,1.541,3180,0.839,3181,3.46,3182,0.839,3183,2.649,3184,0.739,3185,1.541,3186,7.569,3187,2.137,3188,4.408,3189,2.332,3190,1.236,3191,0.839,3192,1.541,3193,2.137,3194,4.408,3195,4.656,3196,0.839,3197,2.649,3198,1.541,3199,2.649,3200,2.649,3201,0.839,3202,2.137,3203,6.756,3204,1.357,3205,0.839,3206,4.134,3207,0.839,3208,2.137,3209,2.588,3210,0.839,3211,5.598,3212,1.882,3213,1.541,3214,3.37,3215,4.88,3216,3.483,3217,0.839,3218,1.541,3219,3.827,3220,0.839,3221,5.27,3222,1.541,3223,0.839,3224,0.839,3225,0.839,3226,2.137,3227,0.839,3228,0.839,3229,0.839,3230,0.673,3231,2.137,3232,2.332,3233,0.839,3234,0.839,3235,0.839,3236,1.357,3237,4.656,3238,0.739,3239,0.739,3240,1.882,3241,2.137,3242,1.882,3243,2.137,3244,0.839,3245,2.724,3246,3.067,3247,0.739,3248,2.137,3249,0.839,3250,0.839,3251,0.839,3252,0.839,3253,1.357,3254,0.839,3255,6.012,3256,1.357,3257,1.882,3258,0.624,3259,1.541,3260,2.649,3261,0.739,3262,0.839,3263,1.541,3264,0.839,3265,0.839,3266,0.839,3267,1.541,3268,0.839,3269,1.236,3270,0.839,3271,2.724,3272,0.839,3273,0.739,3274,3.827,3275,2.124,3276,0.839,3277,2.724,3278,0.839,3279,1.541,3280,0.839,3281,0.839,3282,0.839,3283,0.839,3284,0.839,3285,2.137,3286,0.839,3287,1.541,3288,1.541,3289,1.541,3290,0.839,3291,5.27,3292,1.541,3293,0.839,3294,0.839,3295,0.739,3296,0.839,3297,0.624,3298,0.839,3299,0.839,3300,2.137,3301,0.739,3302,0.839,3303,4.93,3304,0.673,3305,0.839,3306,0.839,3307,3.093,3308,3.067,3309,0.839,3310,0.839,3311,2.137,3312,0.839,3313,0.839,3314,2.649,3315,0.839,3316,0.839,3317,0.839,3318,0.839,3319,0.839,3320,0.839,3321,1.541,3322,0.839,3323,2.137,3324,0.839,3325,0.839,3326,1.541,3327,0.839,3328,0.839,3329,0.839,3330,0.839,3331,0.839,3332,1.541,3333,1.145,3334,3.882,3335,0.839,3336,3.483,3337,0.839,3338,0.839,3339,1.357,3340,2.137,3341,2.649,3342,2.649,3343,2.649,3344,0.839,3345,2.724,3346,3.093,3347,0.839,3348,2.137,3349,0.839,3350,1.541,3351,0.839,3352,1.357,3353,3.093,3354,1.541,3355,2.649,3356,2.649,3357,0.839,3358,2.137,3359,3.093,3360,0.839,3361,0.839,3362,3.37,3363,2.137,3364,2.137,3365,1.541,3366,0.624,3367,0.839,3368,0.739,3369,0.839,3370,0.839,3371,2.137,3372,0.839,3373,0.839,3374,0.839,3375,0.839,3376,0.839,3377,2.137,3378,0.839,3379,0.739,3380,1.882,3381,1.541,3382,3.483,3383,5.575,3384,2.137,3385,1.541,3386,1.541,3387,1.541,3388,0.739,3389,0.839,3390,0.839,3391,0.839,3392,3.067,3393,1.541,3394,0.839,3395,0.839,3396,0.839,3397,0.839,3398,1.541,3399,0.839,3400,1.541,3401,0.839,3402,3.093,3403,0.839,3404,2.878,3405,0.839,3406,4.297,3407,0.839,3408,0.839,3409,0.839,3410,0.839,3411,1.541,3412,0.839,3413,2.649,3414,1.541,3415,0.739,3416,0.839,3417,0.839,3418,0.839,3419,0.839,3420,1.541,3421,0.839,3422,0.839,3423,0.739,3424,2.332,3425,0.839,3426,1.541,3427,0.839,3428,0.839,3429,2.137,3430,0.839,3431,0.839,3432,0.839,3433,0.839,3434,2.649,3435,0.839,3436,0.839,3437,0.839,3438,0.739,3439,0.739,3440,0.739,3441,0.839,3442,0.839,3443,0.839,3444,3.093,3445,0.839,3446,0.839,3447,2.649,3448,0.839,3449,0.739,3450,0.739,3451,0.839,3452,0.839,3453,0.839,3454,0.839,3455,0.839,3456,2.649,3457,0.839,3458,0.839,3459,2.137,3460,0.839,3461,0.673,3462,2.137,3463,0.839,3464,0.839,3465,0.839,3466,0.839,3467,0.839,3468,0.839,3469,0.839,3470,0.739,3471,1.357,3472,0.839,3473,0.584,3474,1.541,3475,0.739,3476,0.839,3477,2.649,3478,0.839,3479,0.839,3480,1.541,3481,2.137,3482,2.137,3483,0.739,3484,1.541,3485,0.839,3486,2.137,3487,3.827,3488,0.839,3489,0.839,3490,1.541,3491,0.839,3492,0.839,3493,0.839,3494,0.839,3495,0.839,3496,2.649,3497,2.137,3498,0.839,3499,3.093,3500,0.839,3501,0.839,3502,0.839,3503,0.839,3504,0.739,3505,0.839,3506,1.541,3507,1.541,3508,1.357,3509,2.137,3510,0.739,3511,0.839,3512,1.236,3513,2.137,3514,0.839,3515,1.357,3516,0.839,3517,1.541,3518,0.839,3519,0.839,3520,1.541,3521,6.516,3522,2.137,3523,0.839,3524,3.093,3525,4.656,3526,2.137,3527,0.839,3528,0.739,3529,0.839,3530,0.839,3531,2.649,3532,0.839,3533,2.137,3534,0.839,3535,0.839,3536,0.839,3537,0.839,3538,0.839,3539,0.839,3540,0.839,3541,2.649,3542,1.541,3543,0.839,3544,0.839,3545,2.137,3546,0.839,3547,1.541,3548,2.137,3549,1.541,3550,0.839,3551,0.839,3552,0.839,3553,1.541,3554,2.137,3555,0.839,3556,0.739,3557,0.839,3558,0.839,3559,1.541,3560,0.839,3561,0.739,3562,0.839,3563,0.839,3564,0.839,3565,0.839,3566,2.137,3567,1.541,3568,0.739,3569,0.839,3570,0.839,3571,2.649,3572,0.839,3573,2.137,3574,0.839,3575,0.839,3576,1.541,3577,0.839,3578,0.839,3579,0.839,3580,2.137,3581,1.541,3582,1.541,3583,0.839,3584,1.541,3585,3.827,3586,1.357,3587,2.137,3588,2.649,3589,0.739,3590,0.839,3591,1.541,3592,0.839,3593,2.137,3594,0.839,3595,0.839,3596,0.839,3597,0.839,3598,0.839,3599,0.839,3600,2.137,3601,1.541,3602,0.839,3603,1.541,3604,0.739,3605,0.839,3606,0.839,3607,1.541,3608,1.541,3609,0.839,3610,1.541,3611,0.839,3612,0.839,3613,0.673,3614,0.839,3615,2.137,3616,0.839,3617,0.839,3618,0.839,3619,0.839,3620,1.541,3621,2.137,3622,0.839,3623,0.839,3624,0.839,3625,0.839,3626,0.673,3627,1.541,3628,0.839,3629,0.839,3630,0.839,3631,0.839,3632,0.839,3633,0.839,3634,0.839,3635,0.839,3636,0.624,3637,0.839,3638,0.839,3639,0.839,3640,2.649,3641,0.839,3642,0.839,3643,1.541,3644,0.839,3645,0.839,3646,0.839,3647,0.839,3648,0.839,3649,0.839,3650,0.839,3651,0.673,3652,0.839,3653,0.839,3654,0.839,3655,0.739,3656,1.541,3657,0.839,3658,0.839,3659,0.839,3660,0.839,3661,0.739,3662,1.541,3663,0.839,3664,0.839,3665,0.739,3666,0.739,3667,0.552,3668,0.839,3669,1.541,3670,1.541,3671,2.724,3672,0.839,3673,0.839,3674,0.839,3675,0.739,3676,0.839,3677,0.839,3678,2.137,3679,1.357,3680,0.839,3681,1.541,3682,1.541,3683,1.541,3684,0.839,3685,0.839,3686,0.839,3687,0.839,3688,0.739,3689,0.839,3690,0.839,3691,1.541,3692,0.839,3693,2.137,3694,0.839,3695,0.839,3696,0.839,3697,0.839,3698,0.839,3699,0.839,3700,0.839,3701,0.839,3702,0.839,3703,0.839,3704,0.839,3705,0.839,3706,0.673,3707,0.839,3708,0.839,3709,0.739,3710,0.839,3711,0.839,3712,0.839,3713,0.839,3714,0.839,3715,0.839,3716,0.839,3717,0.839,3718,0.839,3719,0.839,3720,0.839,3721,0.673,3722,0.739,3723,1.541,3724,1.357,3725,0.839,3726,0.839,3727,0.839,3728,0.839,3729,0.839,3730,0.839,3731,1.541,3732,0.839,3733,0.839,3734,0.739,3735,0.673,3736,0.839,3737,0.839,3738,0.673,3739,0.839,3740,0.839,3741,0.839,3742,0.839]],["title/modules.html",[108,2.422]],["body/modules.html",[25,0.008,55,0.007,56,0.008,57,0.007,107,4.323,108,2.486,119,4.081,173,4.081,178,4.081,313,4.323,316,4.323,317,4.323,318,3.873,319,4.323,1058,4.323,1313,4.615,1317,4.323,2145,6.196,3060,5.277,3743,8.899,3744,8.899,3745,7.944,3746,8.03]],["title/overview.html",[3747,4.853]],["body/overview.html",[2,0.882,25,0.01,55,0.005,56,0.007,57,0.005,87,2.256,95,5.341,106,1.323,107,5.899,108,1.791,109,2.031,110,2.438,111,2.438,112,2.256,113,2.031,114,2.101,115,3.939,116,3.939,117,3.939,118,3.939,119,5.341,120,4.789,121,3.305,122,2.343,123,2.031,144,1.904,150,5.069,173,5.568,174,3.939,175,3.939,176,3.939,177,3.939,178,5.223,179,5.069,180,4.29,313,5.953,314,3.939,315,3.939,316,4.789,317,4.789,318,5.069,319,4.789,483,4.257,538,4.831,579,1.791,583,3.939,584,3.939,585,3.939,901,3.939,902,3.939,903,3.939,957,5.341,1058,5.999,1059,3.939,1061,3.939,1062,3.939,1063,4.521,1310,4.521,1313,6.481,1314,3.939,1315,3.939,1316,3.939,1317,5.659,1369,4.521,1382,3.939,1383,3.939,1384,4.521,1570,3.939,1571,3.939,1572,3.939,1659,3.587,1728,3.115,1739,3.587,2016,3.939,3747,3.587,3748,4.474]],["title/todo.html",[258,1.498,1586,2.781,1587,2.781]],["body/todo.html",[0,0.137,5,0.103,11,0.704,16,0.457,25,0.009,26,0.994,32,0.668,47,3.211,48,2.438,49,2.431,52,4.317,55,0.006,56,0.006,57,0.005,65,2.085,85,2.014,93,2.674,106,1.268,114,2.014,123,2.674,125,2.438,146,2.431,155,1.372,184,2.865,201,2.246,202,1.832,215,1.409,236,1.533,249,4.725,252,3.872,253,4.11,258,1.717,259,3.668,260,2.815,273,1.533,284,4.102,321,2.818,327,3.872,331,2.549,332,3.439,335,3.187,375,1.666,443,3.211,448,2.337,459,3.086,461,3.349,483,2.246,489,2.971,507,2.549,508,2.549,527,2.675,554,3.086,579,1.717,589,3.826,597,2.085,601,3.273,610,3.187,629,3.187,631,2.986,658,2.818,661,2.675,690,4.686,691,4.102,717,2.675,718,5.644,739,4.119,755,3.675,791,2.818,834,3.187,882,2.986,897,2.986,944,2.818,1076,3.439,1131,4.378,1235,2.986,1236,3.187,1287,3.675,1337,3.439,1338,5.001,1593,2.986,1597,3.187,1635,3.776,1649,3.776,1678,5.045,1695,5.81,1696,3.187,1701,3.776,1832,5.397,1833,2.818,1889,3.439,1934,3.439,1952,2.818,1966,3.439,1970,3.776,2013,2.675,2050,3.439,2089,3.439,2127,3.439,2145,2.986,2148,3.187,2149,2.986,2155,2.818,2177,3.439,2247,4.725,2279,3.187,2339,3.439,2351,3.439,2353,3.439,2461,2.818,2557,3.187,2693,2.986,2725,3.439,2788,3.439,2792,3.187,2965,3.776,2966,3.776,3034,2.675,3045,3.776,3055,3.187,3065,3.439,3120,3.439,3123,3.439,3258,3.187,3295,3.776,3339,3.776,3423,3.776,3675,5.188,3721,4.725,3749,3.439,3750,4.289,3751,3.776,3752,3.776,3753,6.73,3754,3.439,3755,3.776,3756,4.289,3757,4.289,3758,4.289,3759,4.289,3760,3.439,3761,5.001,3762,4.289,3763,4.289,3764,4.289,3765,4.289,3766,3.439,3767,4.289,3768,4.289,3769,4.289,3770,3.776,3771,4.289,3772,4.289,3773,4.289,3774,4.289,3775,3.187,3776,3.776,3777,4.289,3778,4.289,3779,4.289,3780,3.776,3781,3.776,3782,4.289,3783,3.776,3784,4.289,3785,4.289,3786,4.289,3787,4.289,3788,4.289,3789,4.289,3790,5.926,3791,4.289,3792,4.289,3793,4.289,3794,4.289,3795,4.289,3796,4.289,3797,3.776,3798,4.289,3799,4.289,3800,5.892,3801,3.776,3802,4.289]],["title/miscellaneous/typealiases.html",[2999,2.459,3803,5.355]],["body/miscellaneous/typealiases.html",[10,0.503,16,0.605,25,0.009,29,2.188,32,0.903,55,0.006,56,0.008,57,0.006,193,2.96,195,3.489,201,3.037,202,1.399,255,3.369,345,3.616,368,4.475,375,3.163,376,3.257,398,3.618,430,1.297,599,4.309,600,5.425,601,2.819,603,5.754,617,5.754,618,5.754,638,4.995,750,4.037,752,5.754,758,6.248,760,5.754,761,4.037,762,4.995,1094,6.248,1107,4.309,1120,6.318,1176,4.65,1207,5.106,1208,5.106,1272,4.65,1388,4.309,1389,4.65,1401,5.332,1671,5.106,1712,4.65,2999,3.81,3415,5.106,3804,5.799,3805,5.799,3806,5.799,3807,7.175,3808,7.175,3809,7.367,3810,5.799,3811,5.799,3812,5.106,3813,5.799,3814,5.799,3815,5.799,3816,4.037,3817,5.799]],["title/miscellaneous/variables.html",[1606,3.728,2999,2.459]],["body/miscellaneous/variables.html",[9,2.669,10,0.241,13,1.713,15,2.032,16,0.623,25,0.01,29,1.045,32,0.814,37,0.721,38,2.85,47,1.51,49,3.639,50,1.928,55,0.005,56,0.005,57,0.003,62,1.82,63,3.497,65,1.347,74,2.508,81,1.728,82,1.007,93,1.257,130,3.437,138,2.98,139,2.221,140,2.439,141,2.221,142,2.439,155,1.882,169,1.574,172,1.646,184,2.543,199,1.646,214,2.439,216,2.241,235,1.143,253,1.451,257,1.727,273,2.272,274,3.203,278,1.257,285,2.332,291,3.887,293,1.82,340,1.109,361,1.646,368,1.727,381,1.143,406,1.51,407,1.646,429,1.51,432,2.332,483,3.081,486,2.221,489,1.397,507,3.497,509,2.332,514,1.727,554,1.451,564,1.928,570,2.158,572,2.669,578,2.98,589,1.574,590,1.51,597,1.347,630,2.058,631,4.88,633,2.221,634,3.432,642,2.058,651,3.432,652,2.439,653,3.432,654,5.1,655,2.221,656,2.221,657,2.439,658,2.812,659,3.432,660,1.928,661,3.262,662,1.727,663,3.432,664,2.439,665,3.769,666,2.439,667,2.221,668,2.439,669,2.439,670,2.439,671,2.439,672,2.439,674,2.221,676,2.221,680,2.221,686,1.82,687,3.769,688,2.058,689,2.439,690,1.928,691,1.928,692,3.769,693,2.85,694,2.221,695,3.769,696,2.439,697,4.194,698,3.432,699,2.439,700,2.439,701,2.058,702,3.432,703,5.6,704,5.181,705,2.221,706,2.439,720,2.221,729,1.928,732,2.058,750,1.928,753,1.82,754,1.82,756,1.727,767,1.646,775,1.82,843,2.221,844,2.439,845,2.439,851,2.439,852,2.439,860,1.928,890,1.574,927,3.437,1107,2.058,1123,3.432,1154,3.432,1168,1.928,1280,2.544,1328,3.437,1344,1.928,1345,2.98,1416,2.221,1445,2.221,1502,1.928,1606,1.928,1633,2.439,1986,1.727,2013,1.727,2127,2.221,2167,2.439,2197,2.221,2242,1.928,2267,2.439,2279,2.058,2433,2.439,2788,2.221,2800,2.439,2812,2.439,2813,5.181,2814,3.769,2815,4.605,2817,2.221,2818,3.769,2819,3.432,2820,3.769,2822,2.221,2827,2.439,2828,3.769,2829,3.769,2844,2.439,2845,4.605,2846,4.605,2847,4.605,2848,4.605,2849,2.439,2850,3.769,2853,2.439,2854,3.769,2855,3.769,2856,5.181,2903,2.221,2999,1.82,3001,2.439,3002,4.605,3003,5.92,3766,4.194,3775,2.058,3790,2.439,3809,2.439,3812,2.439,3818,7.009,3819,2.77,3820,2.77,3821,4.28,3822,2.77,3823,5.23,3824,2.77,3825,2.77,3826,4.28,3827,2.77,3828,4.28,3829,4.28,3830,2.77,3831,2.77,3832,2.439,3833,4.28,3834,2.77,3835,2.77,3836,2.77,3837,2.77,3838,2.77,3839,2.77,3840,2.77,3841,2.77,3842,2.77,3843,2.77,3844,2.77,3845,2.77,3846,2.77,3847,2.77,3848,2.77,3849,2.77,3850,2.77,3851,2.77,3852,2.439,3853,2.77,3854,2.221,3855,2.221,3856,2.77,3857,2.77,3858,2.77,3859,2.77]],["title/additional-documentation/nestjs-application.html",[290,1.463,509,1.757,526,1.416,1256,1.568]],["body/additional-documentation/nestjs-application.html",[8,1.286,13,2.713,25,0.008,55,0.005,56,0.006,57,0.006,106,1.286,108,1.741,113,3.077,184,2.114,213,2.712,253,4.127,258,1.741,259,3.242,260,2.634,273,1.131,287,2.472,290,3.729,308,2.712,377,2.042,384,2.193,442,2.37,446,3.115,509,4.16,526,1.91,527,2.712,528,3.909,529,3.232,554,3.55,560,2.042,579,1.741,589,2.472,591,2.585,597,2.114,601,2.114,611,2.712,658,4.455,686,2.858,690,4.72,698,3.487,728,2.277,732,3.232,739,2.472,790,3.829,828,3.829,829,3.232,881,3.536,883,3.028,885,3.487,887,3.028,890,3.381,1072,3.829,1345,3.028,1468,4.72,1502,5.074,1647,5.486,1695,3.487,1698,3.232,1780,3.028,1806,3.487,1833,2.858,1909,4.42,1952,5.016,1966,3.487,1980,3.232,1985,3.536,1986,2.712,2009,3.829,2149,3.028,2154,3.028,2155,2.858,2173,3.028,2356,3.829,2361,3.232,2526,3.829,2557,3.232,2560,5.436,2799,3.829,2819,5.436,2903,3.487,3013,3.487,3015,3.487,3017,3.829,3033,5.436,3034,4.228,3056,3.232,3060,2.858,3072,3.028,3085,3.487,3247,3.829,3257,3.829,3258,5.038,3303,3.829,3333,3.232,3404,3.028,3473,3.028,3561,3.829,3568,3.829,3706,3.487,3745,3.829,3775,3.232,3776,3.829,3780,5.238,3781,5.238,3816,5.074,3854,4.77,3855,3.487,3860,4.349,3861,3.829,3862,4.349,3863,4.349,3864,3.487,3865,4.349,3866,6.779,3867,4.349,3868,3.232,3869,4.349,3870,3.829,3871,4.349,3872,4.349,3873,4.349,3874,4.349,3875,7.288,3876,4.349,3877,4.349,3878,4.349,3879,4.349,3880,4.349,3881,4.349,3882,4.349,3883,4.349,3884,5.948,3885,4.349,3886,4.349,3887,4.349,3888,4.349,3889,4.349,3890,4.349,3891,4.349,3892,4.349,3893,4.349,3894,4.349,3895,4.349,3896,3.829,3897,3.829,3898,4.349,3899,4.349,3900,4.349,3901,4.349,3902,5.948,3903,4.349,3904,4.349,3905,5.948,3906,4.349,3907,4.349,3908,4.77,3909,3.829,3910,4.349,3911,4.349,3912,6.779,3913,5.948,3914,4.349,3915,4.349,3916,4.349,3917,3.829,3918,4.349,3919,3.487,3920,3.829,3921,4.349,3922,4.349,3923,4.349,3924,4.349,3925,4.349,3926,4.349]],["title/additional-documentation/nestjs-application/software-architecture.html",[526,1.416,1256,1.568,3086,2.585,3927,2.118]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.551,4,0.07,5,0.067,13,2.657,14,0.609,22,0.489,24,0.595,25,0.004,26,0.349,29,0.439,45,0.854,47,3.618,48,2.212,49,2.36,51,0.864,52,1.59,53,1.745,55,0.002,56,0.002,57,0.001,62,1.36,63,1.23,65,1.65,81,0.26,82,0.658,93,3.476,109,1.766,114,0.546,123,0.94,125,0.661,138,0.81,155,2.043,169,1.177,172,0.691,197,1.044,199,1.663,201,3.872,202,0.675,204,0.81,210,0.691,213,2.116,222,0.932,236,1.216,252,4.773,253,0.609,255,0.546,258,0.465,259,1.128,260,2.662,264,0.864,265,1.838,273,0.303,274,1.026,283,0.634,285,4.512,286,0.764,287,1.929,288,3.619,290,3.064,308,1.745,323,3.111,324,1.66,327,3.071,328,0.864,329,3.618,331,0.691,340,0.465,343,1.538,361,1.663,376,0.94,377,0.972,398,1.044,406,1.524,411,0.764,429,0.634,430,1.231,432,0.634,445,0.609,448,1.128,460,0.864,481,4.414,482,3.706,489,3.403,500,0.81,507,0.691,514,3.282,525,2.915,526,1.229,528,3.618,554,1.465,560,3.302,570,1.711,579,0.828,588,3.833,589,1.59,590,2.547,591,2.313,593,1.36,597,1.65,609,0.634,615,1.838,619,2.079,660,0.81,661,3.568,662,0.725,667,0.932,688,0.864,691,0.81,693,1.849,717,1.291,728,4.056,729,0.81,739,0.661,743,1.36,745,3.706,746,1.177,753,0.764,755,0.725,756,0.725,757,0.764,771,1.441,773,2.547,774,0.864,775,0.764,785,0.81,791,1.838,797,3.458,810,0.725,830,0.81,831,2.23,833,1.929,834,0.864,835,4.22,873,0.864,882,1.947,883,0.81,887,1.441,888,0.81,890,0.661,891,2.721,895,1.538,934,0.764,940,1.823,942,0.764,1090,0.81,1131,0.864,1136,0.864,1160,0.864,1168,0.81,1198,0.81,1228,0.661,1235,0.81,1236,2.891,1243,1.36,1256,0.565,1280,0.691,1309,0.864,1349,0.932,1352,0.864,1376,2.23,1396,1.947,1397,2.612,1417,1.823,1418,3.12,1420,0.81,1448,2.834,1463,2.079,1468,0.81,1469,1.538,1476,0.864,1479,0.864,1480,0.81,1481,0.932,1501,1.538,1524,4.882,1590,1.441,1591,1.66,1597,2.079,1600,2.243,1606,0.81,1607,2.891,1612,1.024,1621,1.024,1624,1.66,1626,1.024,1629,1.024,1668,1.024,1670,2.463,1696,0.864,1698,0.864,1707,1.024,1711,1.024,1712,1.66,1728,0.81,1730,2.116,1733,0.81,1773,1.823,1780,3.254,1794,6.591,1796,0.864,1801,1.66,1824,1.441,1827,1.947,1832,3.12,1833,2.23,1851,1.024,1852,1.024,1856,2.362,1858,5.824,1882,1.024,1890,1.538,1909,0.864,1915,0.932,1926,1.823,1952,1.36,1976,1.538,1980,0.864,1985,0.691,1992,2.463,2006,0.932,2012,0.932,2013,3.282,2027,3.12,2035,1.024,2036,3.12,2037,2.079,2043,2.522,2047,0.864,2054,2.988,2061,3.205,2062,0.864,2066,1.024,2082,4.747,2085,1.024,2086,1.538,2089,0.932,2091,1.024,2097,1.024,2107,1.66,2112,2.463,2119,1.441,2131,4.848,2148,2.079,2149,0.81,2150,1.024,2154,1.947,2155,1.838,2160,3.205,2162,3.205,2173,1.441,2183,6.092,2194,0.932,2228,0.932,2235,0.864,2242,0.81,2243,3.426,2244,1.024,2255,1.823,2287,2.463,2291,2.557,2296,0.864,2307,1.823,2313,2.463,2348,1.024,2353,0.932,2358,0.864,2361,3.205,2371,2.463,2374,0.932,2402,2.522,2404,1.024,2414,0.932,2461,2.834,2467,0.932,2469,1.024,2507,1.024,2514,1.024,2525,1.823,2546,1.947,2547,3.426,2559,1.823,2582,1.66,2613,0.932,2647,0.932,2650,0.932,2654,2.988,2655,0.864,2662,2.243,2665,0.932,2678,1.024,2684,1.66,2713,1.024,2725,3.748,2739,1.024,2765,1.024,2775,1.538,2797,1.823,2798,1.823,2985,1.66,3013,2.243,3019,1.947,3022,3.254,3023,2.522,3026,0.81,3029,1.66,3031,1.024,3051,0.864,3055,0.864,3056,0.864,3060,1.36,3072,1.441,3085,1.66,3086,0.932,3097,1.823,3099,1.024,3102,1.024,3107,1.024,3110,1.024,3113,1.024,3123,0.932,3126,1.024,3137,1.024,3149,1.823,3150,3.205,3153,3.797,3156,1.538,3168,2.522,3181,2.891,3184,1.024,3189,1.024,3190,4.414,3209,0.864,3212,1.024,3214,1.823,3230,0.932,3232,2.463,3236,1.024,3238,1.024,3245,1.024,3246,2.463,3255,1.024,3256,1.024,3269,0.932,3271,1.024,3273,1.823,3275,0.932,3277,1.024,3297,0.864,3304,2.721,3308,1.024,3333,0.864,3334,1.024,3352,1.024,3362,1.024,3366,0.864,3380,1.024,3383,1.024,3388,1.024,3392,1.823,3404,0.81,3406,1.024,3424,1.024,3438,1.823,3439,3.426,3449,2.463,3450,1.024,3461,0.932,3470,2.988,3471,1.024,3473,0.81,3475,1.024,3483,1.024,3504,1.024,3508,1.024,3510,1.024,3512,4.22,3515,1.024,3528,1.024,3556,3.797,3586,1.024,3604,1.024,3613,3.748,3636,4.395,3651,0.932,3665,1.024,3666,1.024,3667,3.618,3679,1.024,3709,1.823,3722,1.024,3738,0.932,3747,0.932,3749,1.66,3752,1.024,3754,3.458,3783,1.823,3801,1.024,3864,0.932,3868,1.538,3909,1.024,3927,4.858,3928,1.163,3929,1.163,3930,5.038,3931,5.262,3932,2.07,3933,2.797,3934,2.797,3935,4,3936,2.07,3937,2.463,3938,4.674,3939,1.163,3940,1.163,3941,2.522,3942,2.988,3943,1.163,3944,1.163,3945,1.163,3946,1.163,3947,1.163,3948,2.07,3949,2.07,3950,1.163,3951,1.163,3952,3.891,3953,1.163,3954,1.163,3955,2.797,3956,2.07,3957,1.163,3958,1.163,3959,1.163,3960,1.163,3961,6.889,3962,1.163,3963,1.163,3964,1.163,3965,1.163,3966,2.07,3967,4.312,3968,1.163,3969,1.163,3970,2.07,3971,2.07,3972,3.393,3973,2.797,3974,3.393,3975,1.163,3976,2.988,3977,2.988,3978,1.163,3979,1.163,3980,1.163,3981,1.163,3982,1.163,3983,1.163,3984,2.721,3985,2.07,3986,0.932,3987,2.797,3988,1.163,3989,1.163,3990,1.163,3991,6.639,3992,1.163,3993,6.803,3994,1.163,3995,1.823,3996,1.163,3997,1.163,3998,2.07,3999,1.024,4000,3.911,4001,5.262,4002,1.163,4003,2.797,4004,2.07,4005,2.07,4006,1.163,4007,1.163,4008,1.163,4009,1.163,4010,1.163,4011,1.163,4012,2.988,4013,2.07,4014,1.163,4015,0.932,4016,1.024,4017,1.163,4018,1.163,4019,1.163,4020,1.024,4021,1.163,4022,2.463,4023,1.163,4024,1.163,4025,1.163,4026,1.163,4027,1.163,4028,1.163,4029,1.163,4030,1.024,4031,1.163,4032,2.797,4033,1.163,4034,1.163,4035,1.163,4036,2.721,4037,2.07,4038,1.163,4039,2.07,4040,2.797,4041,1.163,4042,1.163,4043,1.163,4044,1.823,4045,2.07,4046,2.797,4047,1.163,4048,1.163,4049,1.163,4050,1.163,4051,1.163,4052,1.163,4053,1.024,4054,1.163,4055,2.07,4056,1.163,4057,1.66,4058,1.163,4059,5.262,4060,1.163,4061,1.024,4062,1.024,4063,1.163,4064,1.163,4065,1.163,4066,0.932,4067,1.163,4068,1.163,4069,1.163,4070,1.163,4071,2.797,4072,1.163,4073,2.07,4074,2.797,4075,1.163,4076,1.163,4077,1.163,4078,1.163,4079,2.07,4080,1.163,4081,1.163,4082,1.163,4083,1.823,4084,1.163,4085,1.024,4086,1.163,4087,1.163,4088,2.07,4089,1.163,4090,1.163,4091,2.07,4092,1.163,4093,1.163,4094,1.024,4095,1.163,4096,1.163,4097,1.024,4098,1.163,4099,1.163,4100,2.07,4101,1.163,4102,1.163,4103,1.163,4104,1.163,4105,1.163,4106,1.024,4107,1.163,4108,1.163,4109,1.163,4110,1.024,4111,1.024,4112,2.797,4113,1.163,4114,1.163,4115,1.163,4116,1.163,4117,1.163,4118,1.163,4119,2.07,4120,1.163,4121,1.024,4122,1.163,4123,2.797,4124,1.163,4125,1.163,4126,1.163,4127,2.07,4128,1.163,4129,2.07,4130,1.163,4131,1.163,4132,1.163,4133,1.163,4134,1.163,4135,1.163,4136,1.163,4137,2.07,4138,1.163,4139,1.163,4140,1.163,4141,1.163,4142,1.163,4143,1.163,4144,1.163,4145,1.163,4146,7.192,4147,1.163,4148,1.163,4149,3.891,4150,1.024,4151,1.163,4152,1.163,4153,2.07,4154,1.163,4155,1.163,4156,1.163,4157,1.163,4158,1.163,4159,1.163,4160,1.163,4161,1.024,4162,1.163,4163,1.163,4164,1.163,4165,1.024,4166,1.163,4167,1.163,4168,1.163,4169,1.163,4170,2.07,4171,1.163,4172,1.163,4173,2.243,4174,1.163,4175,1.163,4176,1.024,4177,1.163,4178,1.163,4179,1.163,4180,3.891,4181,1.163,4182,1.163,4183,1.163,4184,1.163,4185,1.163,4186,1.163,4187,1.163,4188,1.163,4189,1.163,4190,1.163,4191,1.163,4192,1.163,4193,1.163,4194,1.163,4195,2.07,4196,1.163,4197,1.163,4198,1.163,4199,2.07,4200,1.163,4201,1.163,4202,1.163,4203,2.07,4204,1.163,4205,1.163,4206,1.163,4207,1.163,4208,1.163,4209,1.024,4210,2.07,4211,1.163,4212,2.07,4213,1.163,4214,1.163,4215,1.163,4216,1.024,4217,2.07]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.133,526,1.244,1256,1.377,3927,1.861,4000,2.104]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.221,2,0.375,3,0.079,4,0.064,5,0.166,11,0.668,13,1.628,16,0.246,19,0.578,22,0.786,25,0.01,26,1.063,39,0.182,43,0.235,47,3.095,48,2.312,52,1.801,55,0.006,56,0.003,57,0.002,63,1.883,64,3.115,65,0.926,74,1.6,81,0.91,82,0.745,85,3.253,87,2.654,91,1.326,94,1.252,98,0.926,102,1.369,106,2.304,108,2.773,109,0.865,113,1.438,114,2.667,125,1.801,143,0.471,146,1.307,147,1.528,155,1.817,156,1.348,165,1.727,169,1.083,173,1.252,178,2.673,179,1.976,180,2.956,184,2.559,199,3.128,201,2.756,202,1.452,204,1.326,210,3.89,236,0.496,242,0.786,253,3.302,255,2.827,257,2.956,259,1.038,260,3.205,266,1.528,267,1.528,273,0.496,283,1.727,284,2.206,285,2.868,287,2.694,289,2.673,290,0.865,307,1.326,308,1.188,321,2.673,331,1.883,345,1.188,375,1.581,377,1.488,381,1.678,406,1.727,413,1.188,430,0.426,446,0.998,448,2.217,456,1.188,459,3.153,461,1.083,475,2.537,479,1.416,481,3.262,507,1.132,509,2.868,521,1.326,525,3.542,526,1.787,527,1.188,529,1.416,531,1.528,536,1.677,538,3.376,554,3.535,560,3.326,570,0.961,579,1.268,587,1.252,588,3.436,589,2.991,590,3.095,592,2.673,593,1.252,594,1.252,595,1.326,597,2.559,600,1.326,601,0.926,605,1.132,610,2.354,615,1.252,619,1.416,629,1.416,646,1.677,658,1.252,661,1.188,662,1.188,691,2.832,693,2.583,716,3.262,717,1.188,718,2.354,728,3.782,729,1.326,736,1.416,740,1.416,743,1.252,745,3.023,746,1.801,755,1.976,756,3.542,757,2.673,767,1.883,785,1.326,824,0.961,830,1.326,831,3.115,833,1.083,838,1.416,860,1.326,873,2.354,881,1.132,889,1.677,890,2.312,895,2.354,897,1.326,927,2.082,935,1.326,944,3.458,952,1.326,968,1.677,969,1.677,970,1.677,971,1.677,972,1.677,973,1.677,982,1.528,1160,2.354,1197,3.262,1228,1.801,1235,2.206,1243,1.252,1280,1.883,1281,1.528,1287,1.188,1328,1.252,1351,1.528,1376,2.082,1397,3.153,1420,1.326,1448,1.252,1467,1.528,1468,3.3,1469,1.416,1470,1.528,1476,3.523,1477,2.354,1479,1.416,1481,1.528,1600,1.528,1606,1.326,1607,3.023,1620,1.416,1624,3.801,1651,1.677,1678,2.832,1688,1.677,1730,1.976,1768,1.677,1793,1.677,1827,2.206,1833,2.673,1856,2.206,1858,1.528,1889,1.528,1891,1.416,1892,2.541,1936,1.416,1985,3.747,2013,2.956,2043,1.416,2047,2.354,2049,2.79,2055,1.677,2056,2.832,2061,1.416,2062,1.416,2082,1.416,2095,1.677,2107,3.262,2118,1.528,2160,1.416,2173,2.206,2177,3.262,2179,2.541,2183,5.366,2188,1.677,2190,1.677,2207,2.541,2230,3.911,2242,2.832,2247,1.528,2274,1.677,2281,1.528,2284,1.677,2291,1.252,2296,1.416,2300,1.677,2318,1.677,2319,1.677,2320,1.677,2361,2.354,2409,1.677,2448,1.677,2461,1.252,2531,1.416,2546,1.326,2575,3.582,2589,2.541,2624,1.677,2630,1.528,2650,1.528,2660,1.528,3006,1.677,3019,1.326,3022,1.326,3025,1.677,3026,1.326,3034,1.188,3043,1.677,3051,1.416,3052,1.677,3055,1.416,3056,3.523,3060,2.082,3063,1.528,3066,1.677,3071,1.677,3072,3.3,3075,1.677,3077,1.677,3109,1.677,3125,1.528,3127,1.677,3150,2.354,3156,1.416,3166,3.262,3168,1.416,3181,3.911,3190,1.528,3204,1.677,3209,2.354,3230,1.528,3239,1.677,3240,1.677,3242,1.677,3261,1.677,3269,1.528,3275,1.528,3297,1.416,3301,1.677,3304,1.528,3333,3.023,3345,1.677,3366,1.416,3404,1.326,3440,1.677,3461,1.528,3473,1.326,3512,2.541,3589,3.582,3626,2.541,3636,2.354,3661,1.677,3667,1.252,3688,1.677,3738,1.528,3754,3.801,3755,3.582,3761,4.863,3766,3.262,3770,1.677,3797,3.582,3816,3.3,3832,1.677,3852,1.677,3854,3.801,3864,1.528,3870,1.677,3896,1.677,3897,3.582,3908,2.541,3927,2.673,3930,1.677,3941,1.416,3961,3.582,3976,1.677,3977,1.677,3984,1.528,3993,6.614,3995,1.677,3999,2.79,4000,4.474,4015,3.262,4016,1.677,4020,1.677,4022,1.677,4030,1.677,4036,1.528,4044,1.677,4053,2.79,4057,5.413,4061,3.582,4066,3.801,4094,1.677,4097,2.79,4111,3.582,4121,2.79,4161,2.79,4165,1.677,4173,1.528,4216,1.677,4218,1.677,4219,1.905,4220,1.905,4221,5.302,4222,2.79,4223,1.905,4224,1.905,4225,3.168,4226,4.74,4227,1.905,4228,1.905,4229,1.905,4230,1.905,4231,1.905,4232,1.905,4233,1.905,4234,3.168,4235,1.905,4236,5.263,4237,1.905,4238,1.905,4239,1.677,4240,3.168,4241,4.068,4242,1.905,4243,1.905,4244,1.905,4245,1.905,4246,1.905,4247,1.905,4248,1.905,4249,1.905,4250,1.677,4251,3.168,4252,1.905,4253,1.677,4254,1.905,4255,1.905,4256,1.905,4257,1.905,4258,1.905,4259,1.905,4260,1.905,4261,1.905,4262,3.168,4263,3.168,4264,1.905,4265,1.905,4266,3.168,4267,1.905,4268,1.905,4269,1.905,4270,1.905,4271,1.905,4272,1.905,4273,1.905,4274,1.905,4275,1.905,4276,1.905,4277,1.905,4278,1.905,4279,1.905,4280,1.905,4281,1.905,4282,1.905,4283,1.905,4284,1.905,4285,1.905,4286,1.905,4287,1.905,4288,1.905,4289,1.528,4290,1.905,4291,1.905,4292,1.905,4293,1.905,4294,1.905,4295,1.677,4296,1.905,4297,1.905,4298,1.905,4299,1.905,4300,1.905,4301,1.905,4302,1.905,4303,1.677,4304,1.905,4305,1.905,4306,1.905,4307,1.905,4308,1.905,4309,1.905,4310,1.905,4311,1.905,4312,1.905,4313,3.168,4314,2.79,4315,1.905,4316,1.905,4317,1.905,4318,1.905,4319,1.905,4320,1.905,4321,1.905,4322,1.905,4323,1.905,4324,1.677,4325,1.905,4326,1.677,4327,1.905,4328,1.677,4329,1.528,4330,1.677,4331,1.905]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[526,1.244,1256,1.377,3761,2.104,3941,2.104,4332,2.493]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,2.004,22,0.387,25,0.01,32,0.531,46,2.735,49,1.407,52,3.372,53,3.123,55,0.004,56,0.005,57,0.004,64,2.241,74,1.69,81,1.12,82,1.537,91,2.375,102,0.887,123,1.548,146,1.407,155,2.559,156,1.452,165,3.794,172,2.028,193,2.066,202,1.208,210,4.325,222,4.015,255,2.351,258,1.365,259,2.729,260,3.152,285,4.098,286,3.898,287,1.939,288,2.028,289,2.241,290,3.303,307,2.375,308,3.123,321,2.241,324,4.015,327,2.241,328,2.535,329,2.241,370,1.786,378,1.859,381,2.447,391,3.29,398,1.72,404,2.525,430,0.763,460,4.408,482,2.535,489,1.72,500,2.375,507,2.028,509,2.729,525,4.811,560,1.602,570,2.525,588,1.859,590,4.29,594,2.241,595,2.375,597,2.434,660,2.375,661,2.127,673,2.535,686,2.241,693,2.729,728,3.646,736,2.535,740,2.535,755,3.123,824,1.72,829,2.535,833,1.939,888,4.13,890,2.846,1165,2.241,1168,2.375,1198,2.375,1210,3.004,1239,3.004,1243,4.295,1287,2.127,1349,2.735,1376,2.241,1397,3.107,1463,2.535,1465,2.535,1470,2.735,1502,2.375,1590,2.375,1593,2.375,1618,5.223,1620,2.535,1647,2.375,1654,3.004,1730,2.127,1833,3.29,1856,4.13,1890,2.535,1892,2.735,1909,2.535,2019,2.735,2027,2.735,2056,2.375,2060,4.015,2118,2.735,2162,2.535,2183,2.535,2195,3.004,2235,2.535,2254,4.015,2291,2.241,2296,5.173,2402,2.535,2414,2.735,2546,3.486,2589,4.015,2613,2.735,2630,4.015,2655,2.535,2775,2.535,2911,2.735,3000,2.735,3019,3.486,3022,2.375,3023,3.721,3026,2.375,3063,2.735,3065,2.735,3120,2.735,3125,4.015,3150,5.407,3156,2.535,3162,3.004,3168,2.535,3181,3.721,3209,2.535,3297,3.721,3366,2.535,3404,3.486,3473,2.375,3613,2.735,3636,2.535,3655,3.004,3667,2.241,3706,2.735,3721,2.735,3734,4.409,3735,2.735,3749,2.735,3760,2.735,3761,6.258,3816,2.375,3861,3.004,3908,2.735,3927,4.295,3937,3.004,3941,3.721,3942,3.004,3984,2.735,3986,2.735,3993,5.582,4015,2.735,4036,2.735,4057,2.735,4066,4.015,4085,3.004,4110,3.004,4150,3.004,4176,3.004,4218,3.004,4221,4.409,4239,4.409,4289,2.735,4303,3.004,4314,3.004,4326,3.004,4328,3.004,4329,2.735,4332,3.004,4333,3.411,4334,3.411,4335,3.411,4336,3.411,4337,3.411,4338,3.411,4339,3.411,4340,3.411,4341,5.007,4342,3.411,4343,3.411,4344,3.411,4345,3.411,4346,3.411,4347,3.411,4348,3.411,4349,3.411,4350,3.411,4351,3.411,4352,3.411,4353,3.411,4354,3.411,4355,3.411,4356,3.411,4357,3.411,4358,3.411,4359,3.411,4360,3.411,4361,3.411,4362,3.411,4363,3.411,4364,3.411,4365,3.411,4366,3.411,4367,3.411,4368,3.411,4369,5.007,4370,3.411,4371,3.411,4372,3.411,4373,3.411,4374,3.411,4375,3.411,4376,3.411,4377,3.411,4378,3.411,4379,3.411,4380,3.411,4381,3.411,4382,3.411,4383,3.411,4384,3.411,4385,3.411,4386,3.411,4387,3.411,4388,3.411,4389,3.411,4390,3.411,4391,3.411,4392,3.411,4393,3.411,4394,3.411,4395,3.411,4396,3.411,4397,3.411,4398,3.411,4399,3.411,4400,5.007,4401,3.411,4402,2.735,4403,3.411,4404,3.411,4405,3.411,4406,3.411,4407,3.411]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[323,1.766,526,1.244,1256,1.377,3667,1.861,3935,2.27]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.183,13,2.643,14,2.166,15,1.607,16,0.554,19,1.255,21,4.608,25,0.01,26,0.698,29,2.169,32,1.283,39,0.379,43,0.171,46,3.317,47,3.132,48,3.753,49,3.093,53,2.58,55,0.004,56,0.006,57,0.006,62,2.718,63,2.459,65,3.646,93,1.878,106,2.217,125,3.266,143,1.023,146,1.707,164,1.817,169,2.351,199,2.459,213,4.118,250,3.317,253,2.166,255,3.1,257,2.58,260,2.772,273,1.951,283,2.254,285,4.086,286,2.718,287,3.266,288,2.459,290,1.878,307,2.88,318,3.584,321,2.718,323,3.584,327,2.718,329,4.689,335,3.074,430,1.285,483,4.25,489,4.156,497,3.317,506,3.643,507,3.416,508,2.459,509,3.132,511,2.88,520,3.317,521,4.001,525,2.58,526,2.525,527,4.118,560,2.698,592,2.718,661,4.118,662,5.062,690,4.001,694,3.317,728,2.166,746,3.266,791,3.776,796,3.643,797,3.317,799,3.643,803,3.643,805,3.643,806,3.643,831,2.718,833,3.266,881,2.459,882,2.88,884,3.643,887,2.88,895,4.27,897,4.001,981,4.27,1068,3.643,1217,3.643,1228,2.351,1397,3.01,1420,2.88,1582,3.317,1637,3.074,1730,2.58,1824,2.88,1985,2.459,2013,2.58,2047,3.074,2119,4.001,2160,3.074,2303,3.643,2358,3.074,2518,5.06,3034,2.58,3253,3.643,3379,3.643,3626,3.317,3667,2.718,3671,3.643,3868,3.074,3935,4.608,4062,3.643,4106,3.643,4222,3.643,4250,3.643,4253,3.643,4289,3.317,4295,3.643,4324,3.643,4329,3.317,4330,3.643,4408,4.137,4409,7.135,4410,4.137,4411,7.135,4412,4.137,4413,4.137,4414,4.137,4415,6.603,4416,4.137,4417,4.137,4418,4.137,4419,4.137,4420,5.747,4421,4.137,4422,4.137,4423,4.137,4424,4.137,4425,4.137,4426,4.137,4427,5.747,4428,4.137,4429,4.137,4430,4.137,4431,4.137,4432,4.137,4433,4.137,4434,4.137,4435,4.137,4436,4.137,4437,4.137,4438,4.137,4439,4.137]],["title/additional-documentation/nestjs-application/decisions.html",[526,1.644,1256,1.82,4402,3.001]],["body/additional-documentation/nestjs-application/decisions.html",[25,0.009,55,0.007,56,0.008,57,0.007,93,2.746,202,1.459,210,3.596,236,1.574,243,2.157,260,2.861,265,3.975,358,3.438,446,3.168,509,3.297,594,3.975,609,3.297,721,3.975,725,4.495,881,3.596,896,5.327,1228,3.438,1337,4.851,1397,3.168,1448,3.975,1590,4.211,1733,4.211,1801,4.851,1827,4.211,1980,5.472,1985,3.596,2013,3.773,2136,5.327,2164,5.327,2291,3.975,2397,5.327,2420,5.327,2461,3.975,2607,5.327,2660,4.851,3651,4.851,3735,4.851,3760,4.851,3868,4.495,3927,3.975,3986,5.905,4000,4.495,4012,5.327,4173,4.851,4209,5.327,4402,5.905,4440,6.049,4441,6.049,4442,6.049,4443,7.364,4444,6.049,4445,6.049,4446,6.049,4447,6.049,4448,6.049,4449,6.049,4450,6.049,4451,6.049,4452,6.049,4453,6.049,4454,6.049,4455,6.049,4456,6.049,4457,6.049]],["title/additional-documentation/nestjs-application/vscode.html",[526,1.644,1256,1.82,3919,3.001]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.178,25,0.009,52,4.241,55,0.007,56,0.008,57,0.007,253,3.908,289,4.063,290,3.387,323,3.856,509,4.067,554,3.238,601,3.628,1090,4.304,1397,3.238,1448,4.063,1480,4.304,1501,4.594,1620,4.594,1678,5.195,1780,4.304,1976,4.594,1985,3.675,2056,4.304,2281,5.984,2629,4.958,3033,4.958,3034,3.856,3035,6.571,3166,4.958,3258,4.594,3368,5.444,3724,7.057,3751,5.444,3775,5.545,3816,4.304,3855,4.958,3917,5.444,3919,5.984,3920,5.444,4458,6.183,4459,6.183,4460,6.183,4461,6.183,4462,6.183,4463,6.183,4464,6.183,4465,6.183,4466,6.183,4467,6.183]],["title/additional-documentation/nestjs-application/git.html",[526,1.644,1256,1.82,3070,3.001]],["body/additional-documentation/nestjs-application/git.html",[25,0.009,55,0.007,56,0.009,57,0.007,169,3.873,331,4.051,445,3.569,831,4.478,833,3.873,1328,4.478,2693,4.744,2792,5.874,3070,6.695,4083,6.001,4468,6.815,4469,6.815,4470,6.815,4471,6.815,4472,6.815]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":1165,"title":{},"body":{"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2810,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2807,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2821,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2835,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2816,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2832,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1815,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1752,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1157,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["1.0.0",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2864,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2802,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2806,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2804,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2833,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1254,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"license.html":{}}}],["100",{"_index":2801,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1854,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["12",{"_index":2016,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.0",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1745,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1739,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1499",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1735,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":1672,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1728,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1836,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1725,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3320,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1515,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["2.0.3",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2917,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1718,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3082,"title":{},"body":{"license.html":{}}}],["2015",{"_index":1398,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["2020",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["2030",{"_index":1399,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["21",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2333,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["25.0.0",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2028,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":1910,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":1861,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":1859,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":1853,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":1849,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":1846,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":1844,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":1840,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":1835,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":1814,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1816,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1788,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1746,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1738,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1734,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1727,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1724,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":1769,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1753,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1610,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2328,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":1767,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3771,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1465,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["3.0.0",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2831,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1763,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":3825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":2803,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2532,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["4.0.0",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2866,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":2859,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2865,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3021,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":2824,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2826,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3783,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":3748,"title":{},"body":{"overview.html":{}}}],["4215",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":1894,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1659,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["5.0.1",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":2837,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":2836,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2805,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5000",{"_index":1485,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["5007",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":2825,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1660,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1722,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2830,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["60s",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["6122",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1657,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3399,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3418,"title":{},"body":{"license.html":{}}}],["7",{"_index":1684,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2870,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2869,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2868,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":2867,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2171,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":1883,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1623,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1619,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1667,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2823,"title":{},"body":{"coverage.html":{}}}],["8020",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":1875,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":3879,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":1893,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1611,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1615,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":1887,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":1865,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1617,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":1848,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":1912,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":1822,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":1873,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1679,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":1862,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":1795,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":1884,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1662,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":1845,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":1837,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":1841,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":1798,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":1817,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1706,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1692,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":1804,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":1764,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1627,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1713,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1736,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1740,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1729,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1631,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1603,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1652,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":3887,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1260,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["999",{"_index":3042,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":1115,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":646,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":3896,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":3894,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1139,"title":{},"body":{"classes/NewsScope.html":{}}}],["a.m",{"_index":3074,"title":{},"body":{"index.html":{}}}],["ability",{"_index":3461,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3072,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3344,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3714,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":283,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accept",{"_index":3542,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3541,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3764,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":588,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["access_token",{"_index":101,"title":{},"body":{"classes/AuthEntity.html":{}}}],["accessable",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":400,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2228,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2243,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1143,"title":{},"body":{"classes/NewsScope.html":{}}}],["accompanied",{"_index":3384,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3718,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3155,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3343,"title":{},"body":{"license.html":{}}}],["according",{"_index":3709,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":772,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["accountid",{"_index":770,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["accounts",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":3722,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3283,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3591,"title":{},"body":{"license.html":{}}}],["action",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2629,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3202,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3632,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3613,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3439,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3180,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":3991,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["added",{"_index":890,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1621,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":526,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":3876,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1140,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1146,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3666,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3175,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2255,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":1992,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1594,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2097,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1705,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3318,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3467,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3705,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3468,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3080,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3572,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3280,"title":{},"body":{"license.html":{}}}],["again",{"_index":2526,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3333,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["age",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3371,"title":{},"body":{"license.html":{}}}],["aggregated",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4011,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":3988,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3742,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3649,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3692,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3600,"title":{},"body":{"license.html":{}}}],["aims",{"_index":3928,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1743,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":850,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3804,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":3981,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3579,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1620,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1376,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["allows",{"_index":1501,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["along",{"_index":3346,"title":{},"body":{"license.html":{}}}],["already",{"_index":1090,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3138,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3395,"title":{},"body":{"license.html":{}}}],["always",{"_index":4012,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1712,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3543,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3131,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":3977,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3306,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3356,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3189,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["api_path",{"_index":2818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apiproperty",{"_index":103,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty()@isdate",{"_index":464,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["apiproperty()@isstring",{"_index":462,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["apiproperty({description",{"_index":1523,"title":{},"body":{"classes/UserDTO.html":{}}}],["apiproperty({pattern",{"_index":1113,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":471,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1121,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":3952,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":951,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":965,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1378,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apivalidationerror(errors",{"_index":748,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":58,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["app_filter",{"_index":335,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":334,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":332,"title":{},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"todo.html":{}}}],["app_pipe",{"_index":333,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":1905,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3802,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3194,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":3889,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":290,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":624,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3868,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3672,"title":{},"body":{"license.html":{}}}],["apply",{"_index":829,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["approach",{"_index":3967,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3214,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3338,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3713,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":3001,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":3821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../database.config.ts",{"_index":3824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":3820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3003,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jest",{"_index":3819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":3822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3002,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":3812,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3809,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":3811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":3823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.option.entity.ts",{"_index":3810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.schema.ts",{"_index":3818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../to",{"_index":3004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server",{"_index":3870,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":3911,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src",{"_index":3916,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":320,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":59,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":516,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":518,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1578,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":505,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":630,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":786,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":580,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":2812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":827,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":789,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":800,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":798,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":804,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":795,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":802,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":904,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":877,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":714,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1583,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":2817,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:10",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:20",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:7",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":843,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/controller/auth.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts",{"_index":1522,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts:5",{"_index":1526,"title":{},"body":{"classes/UserDTO.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts:8",{"_index":1525,"title":{},"body":{"classes/UserDTO.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":2822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/entity/auth.entity.ts",{"_index":100,"title":{},"body":{"classes/AuthEntity.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/entity/auth.entity.ts:5",{"_index":104,"title":{},"body":{"classes/AuthEntity.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":839,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":768,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/jwt",{"_index":2827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":853,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":856,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":854,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":181,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":206,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":209,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":530,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":599,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":586,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":457,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":990,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1107,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:10",{"_index":1116,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:13",{"_index":1127,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":1108,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:19",{"_index":1112,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:22",{"_index":1124,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1125,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:28",{"_index":1126,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":1119,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:34",{"_index":1111,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1129,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:40",{"_index":1109,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":1128,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:46",{"_index":1117,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1300,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1498,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1556,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":920,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":926,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":936,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":939,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":949,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":930,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":365,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":374,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1473,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":916,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":907,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":909,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":910,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":912,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":913,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":914,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":915,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":911,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":908,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":917,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":906,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":918,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1304,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":750,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1292,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1472,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1541,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1004,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:27",{"_index":1012,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:41",{"_index":1010,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:54",{"_index":1016,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1014,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1293,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1549,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1064,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1137,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1069,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":1075,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:14",{"_index":1092,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:25",{"_index":1082,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":1086,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:44",{"_index":1078,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:48",{"_index":1084,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1176,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:103",{"_index":1203,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:125",{"_index":1187,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:136",{"_index":1194,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:14",{"_index":1183,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:156",{"_index":1201,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:174",{"_index":1193,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:184",{"_index":1196,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:26",{"_index":1185,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:53",{"_index":1189,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:79",{"_index":1191,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task",{"_index":1402,"title":{},"body":{"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1365,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:17",{"_index":1368,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts",{"_index":341,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:13",{"_index":348,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:16",{"_index":347,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:19",{"_index":353,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:6",{"_index":346,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts",{"_index":872,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:12",{"_index":874,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:9",{"_index":875,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1350,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:12",{"_index":1356,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":1354,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":812,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:12",{"_index":1361,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:15",{"_index":1363,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1360,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1359,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:29",{"_index":819,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:31",{"_index":818,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:33",{"_index":816,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:35",{"_index":817,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:9",{"_index":1362,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.option.entity.ts",{"_index":1389,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1409,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:12",{"_index":1413,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:7",{"_index":1411,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":2844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1385,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1456,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":1462,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1459,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/users.controller.ts",{"_index":1561,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/users.controller.ts:11",{"_index":1565,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1528,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:13",{"_index":1533,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:16",{"_index":1532,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:19",{"_index":1531,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:4",{"_index":1530,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/users.module.ts",{"_index":1573,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/server/src/modules/user/users.service.ts",{"_index":1506,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/users.service.ts:14",{"_index":1577,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/server/src/modules/user/users.service.ts:27",{"_index":1576,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/server/src/modules/user/users.service.ts:5",{"_index":1508,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/users.service.ts:7",{"_index":1509,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/users.service.ts:9",{"_index":1507,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1306,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:10",{"_index":1308,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1318,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/server.service.ts",{"_index":1346,"title":{},"body":{"injectables/ServerService.html":{},"coverage.html":{}}}],["apps/server/src/server.service.ts:5",{"_index":1347,"title":{},"body":{"injectables/ServerService.html":{}}}],["apps/server/src/shared/$1",{"_index":3843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1253,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1261,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1264,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1271,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:10",{"_index":1275,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:13",{"_index":1276,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1274,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/domain/entity",{"_index":3817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":272,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":276,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":275,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":279,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":808,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/business.error.ts",{"_index":282,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/business.error.ts:10",{"_index":295,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:12",{"_index":297,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:14",{"_index":296,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:16",{"_index":294,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:26",{"_index":298,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:34",{"_index":1291,"title":{},"body":{"classes/SampleError.html":{}}}],["apps/server/src/shared/interceptor/duration",{"_index":477,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts",{"_index":1474,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts:11",{"_index":1486,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts:14",{"_index":1484,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/pipe/parse",{"_index":1279,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/interface/pagination.interface.ts",{"_index":1252,"title":{},"body":{"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":2849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/transformer/to",{"_index":2851,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/types/counted.ts",{"_index":3813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/test/jest",{"_index":2853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":3927,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3737,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["aren't",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["argumentshost",{"_index":640,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":3960,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3696,"title":{},"body":{"license.html":{}}}],["around",{"_index":3749,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3610,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3621,"title":{},"body":{"license.html":{}}}],["array",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["array.isarray(constraint",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":558,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3315,"title":{},"body":{"license.html":{}}}],["asking",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":3974,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3128,"title":{},"body":{"license.html":{}}}],["assets",{"_index":3561,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":1871,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3264,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3688,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3717,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3508,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["asynchronous",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3724,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3519,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1839,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3491,"title":{},"body":{"license.html":{}}}],["aud",{"_index":778,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":777,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":840,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":185,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":531,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":539,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":547,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":549,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":543,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":541,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":545,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.service",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authconfig",{"_index":847,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":852,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":851,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":959,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticate('jwt",{"_index":966,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["authenticate(...strategies",{"_index":3005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authenticated",{"_index":775,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/UsersController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2242,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authentication/decorator/auth.decorator",{"_index":960,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["authentication/interface/jwt",{"_index":961,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{}}}],["authentity",{"_index":99,"title":{"classes/AuthEntity.html":{}},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authguard",{"_index":841,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":842,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":107,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3490,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3449,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorization.service",{"_index":183,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1067,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1204,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":173,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":179,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorized",{"_index":3483,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizes",{"_index":3586,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3625,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3497,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":95,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatic",{"_index":1643,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2531,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1731,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":3060,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["avoid",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["avoiding",{"_index":3944,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["away",{"_index":3105,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2774,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2159,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":3246,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":1608,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":3990,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["bad_request",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1286,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1290,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":284,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"classes/SampleError.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["base64",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":591,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":233,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":281,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentity:7",{"_index":280,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentitywithtimestamps",{"_index":248,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":354,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:22",{"_index":356,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:25",{"_index":355,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:28",{"_index":357,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["basic",{"_index":3273,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["basically",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":1896,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["become",{"_index":3140,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3151,"title":{},"body":{"license.html":{}}}],["before",{"_index":448,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["beforehand",{"_index":3890,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3043,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3293,"title":{},"body":{"license.html":{}}}],["behaviour",{"_index":325,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{}}}],["behind",{"_index":1481,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["being",{"_index":2227,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["believe",{"_index":3619,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":3970,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4058,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3301,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["benefit",{"_index":3134,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":3816,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3721,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["better",{"_index":1235,"title":{},"body":{"injectables/NewsUc.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1607,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["beyond",{"_index":3373,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bob",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":766,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{}}}],["boolean.transformer.ts",{"_index":2852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":2294,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["branch",{"_index":1782,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1642,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3745,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3743,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":267,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4039,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1534,"title":{},"body":{"classes/UserEntity.html":{}}}],["building",{"_index":1700,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":3878,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["bulk",{"_index":1612,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3756,"title":{},"body":{"todo.html":{}}}],["business",{"_index":285,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["business.error",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:12",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:14",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:16",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:26",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businessexception",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1141,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1148,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1142,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1150,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3084,"title":{},"body":{"license.html":{}}}],["caches",{"_index":4037,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2397,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3062,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":482,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["called",{"_index":2546,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["caller",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":487,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2027,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["camelcase",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4025,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cant",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2056,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["cares",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3350,"title":{},"body":{"license.html":{}}}],["case",{"_index":525,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cases",{"_index":3150,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["catch",{"_index":633,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":637,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1490,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1494,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":3968,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":3994,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":1818,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":892,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3523,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":751,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3480,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3534,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1597,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changed",{"_index":883,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1588,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changeme",{"_index":1514,"title":{},"body":{"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{}}}],["changes",{"_index":1590,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":1806,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3458,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3117,"title":{},"body":{"license.html":{}}}],["chat",{"_index":1773,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4048,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":259,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["checked",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checkentitypermissions(userid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":719,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{}}}],["checklist",{"_index":3053,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3068,"title":{},"body":{"index.html":{}}}],["checks",{"_index":2469,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkusernotexistbyemail(email",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2538,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["choosing",{"_index":3677,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1638,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3299,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3307,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3716,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3576,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3588,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["class/interface",{"_index":1511,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["classname",{"_index":582,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":832,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2296,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["cleanup",{"_index":2247,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["clear",{"_index":3407,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cli",{"_index":3912,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":1923,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":288,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["clients",{"_index":4062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["clienturl",{"_index":1340,"title":{},"body":{"modules/ServerModule.html":{}}}],["clipboard",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3069,"title":{},"body":{"index.html":{}}}],["close",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["closely",{"_index":3712,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3013,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3786,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":2769,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2156,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":174,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":176,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":177,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":175,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":314,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":315,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":583,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":585,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":584,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":901,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":902,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":903,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1059,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1061,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1060,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1062,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1314,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1316,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_providers",{"_index":1315,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1382,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1383,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1570,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1572,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1571,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2435,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["codes",{"_index":2448,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["coersion",{"_index":731,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":3956,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3651,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":3834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":358,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":349,"title":{},"body":{"classes/Course.html":{}}}],["collections",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":342,"title":{},"body":{"classes/Course.html":{}}}],["columnnames",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":3661,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1374,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3145,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3357,"title":{},"body":{"license.html":{}}}],["command",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3224,"title":{},"body":{"license.html":{}}}],["commentschema",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3442,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2194,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3601,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3067,"title":{},"body":{"index.html":{}}}],["common",{"_index":2911,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4002,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3269,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3101,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":655,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3365,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3372,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3635,"title":{},"body":{"license.html":{}}}],["compile",{"_index":3867,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["compiler",{"_index":3252,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3052,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":895,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["compliance",{"_index":3557,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":3978,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3290,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":3905,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":1794,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["component(s",{"_index":4043,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":3961,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compose",{"_index":1677,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":3197,"title":{},"body":{"license.html":{}}}],["concept",{"_index":1624,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3667,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["conditioned",{"_index":3629,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3162,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["conditons",{"_index":4050,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1328,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":3826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1696,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configurations",{"_index":3918,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":322,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2525,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":1934,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1626,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2348,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3545,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3695,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3510,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2012,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":3909,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3337,"title":{},"body":{"license.html":{}}}],["const",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["constants",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constitutes",{"_index":3282,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4041,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":621,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1273,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1073,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":537,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1580,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(message",{"_index":310,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["constructor(newsrepo",{"_index":1182,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":344,"title":{},"body":{"classes/Course.html":{},"classes/TaskResponseDto.html":{}}}],["constructor(payload",{"_index":1529,"title":{},"body":{"classes/UserEntity.html":{}}}],["constructor(private",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":367,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":626,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1458,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":517,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":292,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(usersservice",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(validationerrors",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3639,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3424,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1664,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3636,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":3949,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3048,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3512,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3598,"title":{},"body":{"license.html":{}}}],["context",{"_index":489,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["continue",{"_index":2008,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3452,"title":{},"body":{"license.html":{}}}],["contract",{"_index":3948,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3507,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3645,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3108,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3585,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3587,"title":{},"body":{"license.html":{}}}],["control",{"_index":2665,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3590,"title":{},"body":{"license.html":{}}}],["controller",{"_index":85,"title":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller('auth",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('news",{"_index":967,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1379,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('users",{"_index":1567,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller.ts",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1017,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskOptionsEntry.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1066,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1386,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/users.controller",{"_index":1574,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllers",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["convenient",{"_index":3217,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":3999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["converted",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3203,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3623,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3459,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3211,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3506,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3100,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3094,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2065,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3163,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3096,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3083,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3172,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3296,"title":{},"body":{"license.html":{}}}],["core",{"_index":321,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1333,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/error/dto/error.response",{"_index":300,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["core/error/interface",{"_index":299,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["core/logger/logger.module",{"_index":1068,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":497,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":313,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2047,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["correction",{"_index":3690,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2575,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["corresponding",{"_index":3255,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3393,"title":{},"body":{"license.html":{}}}],["count",{"_index":975,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["counted",{"_index":1094,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1100,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3577,"title":{},"body":{"license.html":{}}}],["counties",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3201,"title":{},"body":{"license.html":{}}}],["country",{"_index":3615,"title":{},"body":{"license.html":{}}}],["counts",{"_index":3815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":3958,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":340,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course.entity",{"_index":820,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["coursegroups",{"_index":1421,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["courseid",{"_index":825,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":364,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":3848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":813,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["coursenews",{"_index":373,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursenews(props",{"_index":449,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":361,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":2845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofstudent",{"_index":1422,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["court",{"_index":3644,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3711,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3605,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3063,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["coverage",{"_index":1986,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":3835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3186,"title":{},"body":{"license.html":{}}}],["cpu",{"_index":1674,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["create(@currentuser",{"_index":968,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":925,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1184,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":888,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createdat",{"_index":268,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{}}}],["createerrorresponse",{"_index":634,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":643,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":2809,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":2811,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":423,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createnewsparam",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":456,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":3850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating",{"_index":460,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":1828,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":726,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{}}}],["creator",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3229,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":323,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2313,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":706,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":708,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":251,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3537,"title":{},"body":{"license.html":{}}}],["current",{"_index":1416,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":3874,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["currentschoolyear",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":927,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":971,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":970,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":527,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["custom_error_type",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3386,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3658,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3390,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":326,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":899,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":3935,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":3975,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3363,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3693,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2233,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":728,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["data/rules",{"_index":4067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4059,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":2013,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1339,"title":{},"body":{"modules/ServerModule.html":{}}}],["databases",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4017,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1417,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":269,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponseDto.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":501,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1685,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1832,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_url",{"_index":1327,"title":{},"body":{"modules/ServerModule.html":{}}}],["dbs",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1415,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":790,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":794,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":805,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3035,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3902,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3319,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3675,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4402,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3498,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":738,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3006,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["decouple",{"_index":3929,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4024,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3309,"title":{},"body":{"license.html":{}}}],["default",{"_index":273,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["defaultmessage",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/SampleError.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1257,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1483,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3687,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3135,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3641,"title":{},"body":{"license.html":{}}}],["define",{"_index":255,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["defines",{"_index":3864,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":266,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["definition",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3166,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delete",{"_index":921,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["delete(':id",{"_index":929,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1186,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1077,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":928,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["deletedid",{"_index":988,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":1882,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1613,"title":{},"body":{"changelog.html":{}}}],["demands",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3464,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3602,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dependecy",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dependency",{"_index":3861,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deploy",{"_index":1644,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1641,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":613,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3611,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["describe",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["described",{"_index":3969,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SampleError.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"index.html":{}}}],["descriptive",{"_index":3950,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":3941,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3401,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3099,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designing",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":3939,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3665,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1579,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1581,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3024,"title":{},"body":{"index.html":{}}}],["details",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":3838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":3837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2085,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3433,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":3884,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3015,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developers",{"_index":3124,"title":{},"body":{"license.html":{}}}],["development",{"_index":2149,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["device",{"_index":1693,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3076,"title":{},"body":{"index.html":{}}}],["di",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1321,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3792,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3664,"title":{},"body":{"license.html":{}}}],["different",{"_index":2461,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3488,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1661,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3294,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3408,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3190,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["directory",{"_index":3762,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":443,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{}}}],["disabled",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3330,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3678,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3485,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":249,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":431,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":453,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3627,"title":{},"body":{"license.html":{}}}],["display",{"_index":3364,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["displaycolor",{"_index":814,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["displayed",{"_index":3492,"title":{},"body":{"license.html":{}}}],["displays",{"_index":3213,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2471,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":3871,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguishing",{"_index":3668,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3092,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3728,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3630,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3164,"title":{},"body":{"license.html":{}}}],["divide",{"_index":3998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":3971,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1676,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3779,"title":{},"body":{"todo.html":{}}}],["docu",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":461,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":1952,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documented",{"_index":1592,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":4032,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1373,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3761,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["domains",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":264,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["done",{"_index":3055,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dos",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3435,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3553,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4332,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dropdown",{"_index":1665,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dto",{"_index":459,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto's",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1025,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.createdat",{"_index":1042,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.creator",{"_index":1037,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1027,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.firstname",{"_index":1552,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1021,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1554,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1298,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["dto.permissions",{"_index":1046,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1035,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1029,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.target",{"_index":1049,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1031,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1033,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1023,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1051,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1044,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updater",{"_index":1040,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":650,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":978,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":718,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["due",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":815,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["duplicate",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":263,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3385,"title":{},"body":{"license.html":{}}}],["duration",{"_index":480,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":476,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2089,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3432,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3265,"title":{},"body":{"license.html":{}}}],["e",{"_index":2549,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["e.g",{"_index":252,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["e2e",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["e2e.config.ts",{"_index":2854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2econfig",{"_index":2855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":2061,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["earlier",{"_index":3185,"title":{},"body":{"license.html":{}}}],["easier",{"_index":3933,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":614,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3708,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3327,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3310,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3726,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4034,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["efforts",{"_index":3570,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3732,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1088,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["eligible",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1076,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{}}}],["em.flush",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["email",{"_index":2254,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1656,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3381,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3739,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1168,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["emptyresultquery",{"_index":1154,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":724,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["enabled",{"_index":720,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":734,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enables",{"_index":3205,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4005,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4045,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":3973,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4019,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3143,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2179,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["end2end",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoints",{"_index":2112,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enforce",{"_index":3603,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3332,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4068,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ensures",{"_index":4094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3637,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3355,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3653,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":210,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UsersService.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/auth.entity",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["entity/news.types",{"_index":1205,"title":{},"body":{"injectables/NewsUc.html":{}}}],["entity/user.entity",{"_index":1566,"title":{},"body":{"controllers/UsersController.html":{}}}],["entityid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":1074,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["entityname",{"_index":1342,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":261,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":941,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":1122,"title":{},"body":{"classes/NewsResponse.html":{}}}],["enumeration",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["env",{"_index":1605,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3767,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2150,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["environments",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3285,"title":{},"body":{"license.html":{}}}],["err",{"_index":1495,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/SampleError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error(message",{"_index":796,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":513,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":631,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:102",{"_index":636,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:105",{"_index":641,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:113",{"_index":644,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":581,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":60,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":704,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":336,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":316,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errorresponse",{"_index":38,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":306,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["errorresponse(type",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/SampleError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":442,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":447,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["especially",{"_index":3987,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["essential",{"_index":3248,"title":{},"body":{"license.html":{}}}],["establish",{"_index":3963,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2725,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2578,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2334,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1618,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3090,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2049,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["everywhere",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3184,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":1524,"title":{},"body":{"classes/UserDTO.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exceeds",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2050,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":507,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":747,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":632,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exchangeable",{"_index":3947,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exclude",{"_index":1130,"title":{},"body":{"classes/NewsResponse.html":{}}}],["excluded",{"_index":3422,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1868,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2266,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3595,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3288,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3646,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3241,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2557,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["execute/rollback",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1909,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["executes",{"_index":3875,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3196,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1476,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["executioncontext",{"_index":486,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":3571,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3328,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":870,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":1502,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2195,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":780,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4026,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expected",{"_index":3440,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expects",{"_index":2292,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":779,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["explicit",{"_index":616,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["explicitly",{"_index":3279,"title":{},"body":{"license.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2300,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":1131,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4013,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":611,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3680,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":3518,"title":{},"body":{"license.html":{}}}],["extend",{"_index":721,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3626,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":3009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersError.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3368,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3216,"title":{},"body":{"license.html":{}}}],["external",{"_index":1858,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["externalauthconfig",{"_index":845,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":4071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":744,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":858,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":865,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3504,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":1114,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2131,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitating",{"_index":3659,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3289,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":1820,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failed",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":1864,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failure",{"_index":3703,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3284,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":572,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":3427,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3047,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3182,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["favicon",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3437,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":184,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":551,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":182,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":180,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":578,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":652,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":2858,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":2860,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":2861,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":612,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":2862,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":2863,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":178,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":598,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":603,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":538,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":618,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1637,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3046,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3908,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3348,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3922,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1582,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":363,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["fields",{"_index":3758,"title":{},"body":{"todo.html":{}}}],["figure",{"_index":3966,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filename",{"_index":3895,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":1678,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":508,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":991,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{}}}],["filter.query.ts:11",{"_index":995,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:16",{"_index":993,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:22",{"_index":997,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1175,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":512,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1144,"title":{},"body":{"classes/NewsScope.html":{}}}],["final",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3529,"title":{},"body":{"license.html":{}}}],["find",{"_index":601,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":602,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":922,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{}}}],["findall(@currentuser",{"_index":1380,"title":{},"body":{"controllers/TaskController.html":{}}}],["findall(currentuser",{"_index":932,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1079,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1177,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1188,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopenbystudent",{"_index":1410,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1412,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenforuser",{"_index":1457,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1460,"title":{},"body":{"injectables/TaskUC.html":{}}}],["finding",{"_index":763,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1070,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1083,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":760,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":923,"title":{},"body":{"controllers/NewsController.html":{},"injectables/UsersService.html":{}}}],["findone(newsid",{"_index":937,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(username",{"_index":1518,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["findoneandupdate",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1071,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1085,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1178,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1190,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1341,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1936,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["firstname",{"_index":1542,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["fit",{"_index":4053,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3683,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1695,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1599,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["fixtures",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["flag",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["flow",{"_index":3270,"title":{},"body":{"license.html":{}}}],["fly",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["folder",{"_index":1468,"title":{},"body":{"injectables/TaskUC.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":3897,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2655,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1780,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":3915,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3326,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbidnonwhitelisted",{"_index":741,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2128,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["form",{"_index":2684,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":521,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["formats",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2356,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3376,"title":{},"body":{"license.html":{}}}],["forwarding",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1345,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3087,"title":{},"body":{"license.html":{}}}],["framework",{"_index":3931,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3085,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3106,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1609,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3313,"title":{},"body":{"license.html":{}}}],["full",{"_index":1698,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["function",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functional",{"_index":324,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":3976,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["functioning",{"_index":3453,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3000,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["further",{"_index":3404,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":399,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":3913,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1708,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2162,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["generalerror",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3262,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2058,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["generated",{"_index":3907,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4044,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":938,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1367,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('profile",{"_index":1564,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(id",{"_index":607,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getentitypermissions",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getentitypermissions(userid",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":1307,"title":{},"body":{"controllers/ServerController.html":{},"injectables/ServerService.html":{}}}],["getnewspermissions",{"_index":1179,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1192,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":208,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedschools",{"_index":532,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":540,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":533,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":542,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getprofile",{"_index":1562,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(@currentuser",{"_index":1568,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(user",{"_index":1563,"title":{},"body":{"controllers/UsersController.html":{}}}],["getquery",{"_index":1152,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1180,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1195,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["getservice",{"_index":625,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":622,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1181,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1199,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getting",{"_index":1586,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":534,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":544,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":535,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":546,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusertargetpermissions",{"_index":536,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":548,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3070,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":3345,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1477,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["gives",{"_index":587,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["giving",{"_index":3351,"title":{},"body":{"license.html":{}}}],["global",{"_index":331,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalerrorfilter",{"_index":511,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":710,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":828,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["globals",{"_index":2167,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":713,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3079,"title":{},"body":{"license.html":{}}}],["go",{"_index":3031,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3065,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["goals",{"_index":3156,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3477,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3157,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":3499,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3274,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3548,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3746,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3403,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3720,"title":{},"body":{"license.html":{}}}],["group",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["grouping",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["gt",{"_index":1172,"title":{},"body":{"classes/NewsScope.html":{}}}],["guarantee",{"_index":982,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guess",{"_index":1517,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["guest",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guidelines",{"_index":4046,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1500,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1420,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":286,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2353,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handling",{"_index":327,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":3959,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hard",{"_index":3982,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["haspermissions",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3287,"title":{},"body":{"license.html":{}}}],["header",{"_index":848,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["headers",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3142,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4018,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hello",{"_index":1348,"title":{},"body":{"injectables/ServerService.html":{}}}],["helparea",{"_index":1663,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":656,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["helpers",{"_index":2188,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":257,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":3592,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":873,"title":{},"body":{"classes/Lesson.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":3946,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":3955,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":1470,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["hints",{"_index":4031,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["history.git",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3525,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3484,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1419,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1351,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1353,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":823,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1428,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":3962,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2054,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2235,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hope",{"_index":3729,"title":{},"body":{"license.html":{}}}],["host",{"_index":639,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":707,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3410,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3780,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3428,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2154,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["http://fsf.org",{"_index":3089,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3018,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3731,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":291,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/mikro",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3785,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":3924,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":3925,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":3923,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://vuejs.org",{"_index":4080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/SampleError.html":{}}}],["httpstatus.bad_request",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":301,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/SampleError.html":{}}}],["httpstatus.not_implemented",{"_index":312,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["hub",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":781,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":749,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":767,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1281,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:6",{"_index":1283,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3617,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":520,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identity",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":293,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2433,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":866,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":788,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":596,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":1838,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":3985,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":882,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":308,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["implementations",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implemented",{"_index":2160,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":498,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3640,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["important",{"_index":619,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["importer",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3583,"title":{},"body":{"license.html":{}}}],["imports",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["impose",{"_index":3509,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3643,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1167,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3136,"title":{},"body":{"license.html":{}}}],["in/out",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3697,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3700,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3088,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3694,"title":{},"body":{"license.html":{}}}],["include",{"_index":247,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3243,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3200,"title":{},"body":{"license.html":{}}}],["including",{"_index":2232,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusion",{"_index":3375,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":727,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3141,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3660,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3431,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1741,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3505,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3366,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independently",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3755,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1649,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3551,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3516,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1834,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["individuals",{"_index":3178,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3443,"title":{},"body":{"license.html":{}}}],["inewsproperties",{"_index":424,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":764,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":426,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":366,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":1544,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:7",{"_index":369,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1019,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1294,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1296,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1133,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1301,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:11",{"_index":1559,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:5",{"_index":1558,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:6",{"_index":1302,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1557,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:9",{"_index":1303,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["inform",{"_index":3415,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":528,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3549,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3580,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3193,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":250,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["inital",{"_index":1632,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["initialized",{"_index":889,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["initializes",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3574,"title":{},"body":{"license.html":{}}}],["inject",{"_index":610,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["injectable",{"_index":143,"title":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":592,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":885,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["injections",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":831,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":289,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["install",{"_index":3257,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3447,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3462,"title":{},"body":{"license.html":{}}}],["instance",{"_index":725,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":654,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["instead",{"_index":1833,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["instructions",{"_index":3025,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3340,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1688,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intended",{"_index":3109,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3331,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3734,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3655,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3208,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":4006,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3212,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":484,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":485,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":479,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":339,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":317,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3387,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3567,"title":{},"body":{"license.html":{}}}],["interface",{"_index":430,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{}},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":862,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":579,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3454,"title":{},"body":{"license.html":{}}}],["internal",{"_index":406,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":645,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3707,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3254,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3268,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":593,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2650,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2613,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":3860,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3750,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3361,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4014,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":807,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1322,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3276,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":998,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":653,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":472,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":1819,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1704,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":651,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":999,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(['schools",{"_index":1003,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1265,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(0)@apiproperty({description",{"_index":1262,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@isoptional()@apiproperty({description",{"_index":1393,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(1)@max(100)@apiproperty({description",{"_index":1255,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@isoptional()@apiproperty({description",{"_index":1391,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(2015)@max(2030)@isoptional()@apiproperty({description",{"_index":1395,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["ismongoid",{"_index":1000,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ismongoid()@isoptional()@apipropertyoptional",{"_index":992,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["isoptional",{"_index":473,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/TaskQueryDto.html":{}}}],["isoptional()@isboolean()@toboolean()@apiproperty",{"_index":996,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1230,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":783,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":474,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":468,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@isoptional()@apipropertyoptional",{"_index":466,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@isoptional()@isin(undefined)@apiproperty",{"_index":994,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["issue",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":782,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2009,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["istechnicalerror",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":900,"title":{},"body":{"injectables/Logger.html":{}}}],["it's",{"_index":4036,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["itaskmetadata",{"_index":811,"title":{"classes/ITaskMetadata.html":{}},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["itaskoption",{"_index":1401,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["item",{"_index":3227,"title":{},"body":{"license.html":{}}}],["items",{"_index":1671,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3465,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":762,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3775,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":2856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest/utils",{"_index":3845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jestconfig",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3040,"title":{},"body":{"index.html":{}}}],["job",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2547,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":1513,"title":{},"body":{"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{}}}],["join",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["jose",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2903,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json",{"_index":2127,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":784,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["jwt",{"_index":860,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_module_options",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":838,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":130,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":868,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":864,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":844,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtoptionsprovider",{"_index":2829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":776,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtservice",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":120,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1593,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":3872,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3249,"title":{},"body":{"license.html":{}}}],["key",{"_index":2372,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["keys",{"_index":3450,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3204,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3097,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3123,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":3607,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3614,"title":{},"body":{"license.html":{}}}],["known",{"_index":1892,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["knows",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":1879,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3050,"title":{},"body":{"index.html":{}}}],["language",{"_index":2467,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3369,"title":{},"body":{"license.html":{}}}],["last",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":1543,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["later",{"_index":3671,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":3917,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3195,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3169,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3578,"title":{},"body":{"license.html":{}}}],["layer",{"_index":3993,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["layered",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":3953,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3754,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ldap",{"_index":1749,"title":{},"body":{"changelog.html":{}}}],["ldap/:id",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2414,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3736,"title":{},"body":{"license.html":{}}}],["lean",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["leave",{"_index":3799,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1475,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":589,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3789,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":3859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3130,"title":{},"body":{"license.html":{}}}],["legend",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lern",{"_index":1669,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2713,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":821,"title":{"classes/Lesson.html":{}},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["lesson.entity",{"_index":822,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{}}}],["lessonid",{"_index":826,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{}}}],["lessonmodel",{"_index":3849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":876,"title":{},"body":{"classes/Lesson.html":{},"changelog.html":{}}}],["lessonschema",{"_index":2846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1424,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["letter",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3147,"title":{},"body":{"license.html":{}}}],["level",{"_index":1469,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["liability",{"_index":3487,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3192,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3240,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3423,"title":{},"body":{"license.html":{},"todo.html":{}}}],["license",{"_index":3078,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3173,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3174,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3176,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3103,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3552,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3496,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3546,"title":{},"body":{"license.html":{}}}],["limit",{"_index":809,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3691,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3681,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3486,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1673,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":445,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["link",{"_index":1796,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3266,"title":{},"body":{"license.html":{}}}],["links",{"_index":1843,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3776,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":207,"title":{},"body":{"injectables/AuthorizationService.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":368,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3575,"title":{},"body":{"license.html":{}}}],["living",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4056,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3765,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loadind",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1689,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3016,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2190,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":647,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":791,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":799,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3777,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":483,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":635,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":491,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":879,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":905,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":337,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":649,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":318,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["loggerservice",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":329,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":478,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":492,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":488,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":2183,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["logic/rules",{"_index":4035,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":4085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["login(user",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuseruc",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3752,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3051,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":2470,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loop",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3698,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3701,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":3957,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1173,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3378,"title":{},"body":{"license.html":{}}}],["made",{"_index":3137,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2423,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mainly",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2374,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2287,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2559,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3245,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":2036,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3304,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["making",{"_index":1503,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["manage",{"_index":4004,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["managed",{"_index":1801,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4009,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["managing",{"_index":4060,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3757,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3593,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2086,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":359,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["manytomany({fieldname",{"_index":350,"title":{},"body":{"classes/Course.html":{}}}],["manytoone",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1827,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1005,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1009,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1006,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1011,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedtasks",{"_index":1435,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["mapper",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper.ts",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":964,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapping",{"_index":4000,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4030,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1007,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1013,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1295,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1550,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1008,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1015,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3638,"title":{},"body":{"license.html":{}}}],["maria",{"_index":1516,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["marked",{"_index":3494,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3503,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3171,"title":{},"body":{"license.html":{}}}],["master",{"_index":2006,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":529,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3291,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3466,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1622,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1629,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1266,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["max(100",{"_index":1270,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["max(2030",{"_index":1408,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["maximum",{"_index":1259,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["maybe",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3782,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3511,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3073,"title":{},"body":{"index.html":{}}}],["means",{"_index":3168,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3312,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3323,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3336,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3349,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3228,"title":{},"body":{"license.html":{}}}],["member",{"_index":555,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":1857,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":2318,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["menu",{"_index":3225,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3682,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3207,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3077,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3563,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/SampleError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1630,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1634,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3278,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":2966,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["method",{"_index":615,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2105,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4007,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2409,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2678,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["migrations",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["mikro",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":3753,"title":{},"body":{"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3774,"title":{},"body":{"todo.html":{}}}],["mikroormmodule",{"_index":1319,"title":{},"body":{"modules/ServerModule.html":{}}}],["mikroormmodule.forroot",{"_index":1336,"title":{},"body":{"modules/ServerModule.html":{}}}],["min",{"_index":1267,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(0",{"_index":1268,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(1",{"_index":1269,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(2015",{"_index":1407,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["minimizes",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1258,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["minio",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":2999,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3493,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1445,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1166,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":3989,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2197,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":2560,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":1243,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1239,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3165,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3231,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2699,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3354,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":1886,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3132,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3198,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":3863,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":106,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["module.ts",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/repo",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":3827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/authentication/auth.module",{"_index":1323,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1330,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/course",{"_index":1334,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/team",{"_index":1335,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":1324,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1332,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1329,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/users.module",{"_index":1326,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":1337,"title":{},"body":{"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":3032,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":1733,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoose",{"_index":1287,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1730,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["moreover",{"_index":3535,"title":{},"body":{"license.html":{}}}],["mounted",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["move",{"_index":1467,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":1478,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["msg",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2514,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":3992,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":745,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4027,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4029,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["named",{"_index":3071,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["names",{"_index":944,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["naming",{"_index":3797,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["nanoid",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1714,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3367,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1434,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2402,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3022,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3256,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1418,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nest",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["nest/legacy",{"_index":3788,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":3866,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":3873,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:dev:serve",{"_index":3906,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":3877,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":3892,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":3865,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":3880,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":3885,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":3882,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":3888,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":3893,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":3899,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":3901,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":3903,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":3898,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2607,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":493,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":509,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":3914,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":510,"title":{},"body":{"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2871,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":105,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestlogger",{"_index":878,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3102,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["new",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newly",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":375,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news.content",{"_index":1026,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1043,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1214,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1028,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1022,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params",{"_index":1504,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts",{"_index":458,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["news.params.ts:10",{"_index":470,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:14",{"_index":463,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:18",{"_index":465,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:23",{"_index":469,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":467,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1047,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1030,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1234,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1032,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1034,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1024,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.types",{"_index":427,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1045,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1039,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/Submission.html":{}}}],["news:10",{"_index":422,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":417,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":419,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":418,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":420,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":414,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":401,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":408,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":409,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":410,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":412,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":405,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":392,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":416,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":402,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":421,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":425,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news].param.ts",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_create",{"_index":1213,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1208,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["news_sources",{"_index":1123,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1135,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1207,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["newscontroller",{"_index":919,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1221,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":933,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":931,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":974,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1227,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":979,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1224,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":963,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":972,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":977,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":973,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":987,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1058,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1063,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{}}}],["newsresponse",{"_index":962,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1096,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstarget",{"_index":752,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1080,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":441,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":450,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":957,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1232,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1219,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":444,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{}}}],["next.handle().pipe",{"_index":1492,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":502,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1433,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2788,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3014,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2148,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3397,"title":{},"body":{"license.html":{}}}],["none",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1246,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":1890,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3426,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":2814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1589,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":246,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["notfound",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":550,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":1343,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3547,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3219,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3215,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3536,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3532,"title":{},"body":{"license.html":{}}}],["notimplementedexception",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["notwithstanding",{"_index":3481,"title":{},"body":{"license.html":{}}}],["november",{"_index":3081,"title":{},"body":{"license.html":{}}}],["now",{"_index":500,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":504,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3033,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3670,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2244,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nvmrc",{"_index":3020,"title":{},"body":{"index.html":{}}}],["o",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2215,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":1955,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1104,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1280,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["object.assign(this",{"_index":362,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TaskResponseDto.html":{},"classes/TeamNews.html":{}}}],["object.values(constraint",{"_index":84,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":1241,"title":{},"body":{"injectables/NewsUc.html":{}}}],["objectid",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["objects",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["obligate",{"_index":3650,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3412,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3314,"title":{},"body":{"license.html":{}}}],["observable",{"_index":490,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4052,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3396,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3544,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2019,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["offer",{"_index":3129,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3417,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3400,"title":{},"body":{"license.html":{}}}],["official",{"_index":3233,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":1880,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1658,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["ok",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["old",{"_index":1852,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":1464,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["once",{"_index":3936,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1228,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onload",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["onto",{"_index":4042,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":270,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":2230,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["opened",{"_index":3886,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3704,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3405,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3250,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2756,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2035,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3152,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3657,"title":{},"body":{"license.html":{}}}],["ops",{"_index":1635,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1461,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1338,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["options.provider.ts",{"_index":2828,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":1874,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1915,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ordering",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3559,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3179,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":3938,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":1919,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2702,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":3760,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.io",{"_index":3926,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{}}}],["orm/mikro",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1320,"title":{},"body":{"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3030,"title":{},"body":{"index.html":{}}}],["others",{"_index":740,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["otherwise",{"_index":1396,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["outgoing",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2358,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3297,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["over",{"_index":2371,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overhead",{"_index":4021,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["overrides",{"_index":506,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":330,"title":{},"body":{"modules/CoreModule.html":{}}}],["overview",{"_index":3747,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["owned",{"_index":3589,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":3979,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2351,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3360,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3244,"title":{},"body":{"license.html":{}}}],["page",{"_index":1256,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1263,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["paginate",{"_index":571,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":934,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pagination.query",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationmodel",{"_index":1081,"title":{"interfaces/PaginationModel.html":{}},"body":{"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["paginationquery",{"_index":935,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":955,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"coverage.html":{}}}],["paginationresponse(dtolist",{"_index":980,"title":{},"body":{"controllers/NewsController.html":{}}}],["paging",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3733,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3522,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3599,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":1768,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["param",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":984,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":981,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["params",{"_index":605,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.body",{"_index":1054,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1055,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1211,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1057,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1056,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1053,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["param|query].ts",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1655,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2066,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2274,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":952,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3181,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["partial",{"_index":345,"title":{},"body":{"classes/Course.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1499,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["partialtype(createnewsparams",{"_index":1505,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3237,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3206,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3271,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party",{"_index":3406,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3565,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":736,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1375,"title":{},"body":{"controllers/TaskController.html":{}}}],["passport",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":861,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":863,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["passwordrecovery",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":950,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":948,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3521,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3584,"title":{},"body":{"license.html":{}}}],["path",{"_index":629,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["path's",{"_index":3842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["pattern",{"_index":1136,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["payload",{"_index":857,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"changelog.html":{}}}],["payload.roles",{"_index":1540,"title":{},"body":{"classes/UserEntity.html":{}}}],["payload.schoolid",{"_index":1538,"title":{},"body":{"classes/UserEntity.html":{}}}],["payload.ts",{"_index":769,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.userid",{"_index":1536,"title":{},"body":{"classes/UserEntity.html":{}}}],["payment",{"_index":3631,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3413,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3416,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3066,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["performance",{"_index":1742,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3263,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3531,"title":{},"body":{"license.html":{}}}],["permission",{"_index":398,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1251,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["permissions.every((p",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1250,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3342,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3374,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3146,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3091,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3457,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2118,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2630,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1668,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["personal",{"_index":1625,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3648,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3382,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3394,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3121,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1654,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":1877,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":716,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1584,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1639,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1285,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3402,"title":{},"body":{"license.html":{}}}],["placed",{"_index":3904,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["plain",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plus",{"_index":3569,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":3727,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2624,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2081,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":2420,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":945,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":2819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3420,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3391,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3358,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3706,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2037,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["post",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["potential",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3769,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3325,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3038,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3104,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3604,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices/layers/orm",{"_index":3773,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3095,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3161,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["predecessor",{"_index":3566,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["preferred",{"_index":3230,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["preload",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":893,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2189,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["presentation",{"_index":3995,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3223,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3489,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":262,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2225,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3568,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3116,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3633,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["principle",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["principles",{"_index":3937,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3533,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1628,"title":{},"body":{"changelog.html":{}}}],["privacy",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2692,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["problems",{"_index":1976,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3028,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3448,"title":{},"body":{"license.html":{}}}],["process",{"_index":2404,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processed",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4040,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3622,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3253,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3383,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":1966,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3634,"title":{},"body":{"license.html":{}}}],["program",{"_index":3111,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3335,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3740,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3238,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3122,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3719,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3295,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3321,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3628,"title":{},"body":{"license.html":{}}}],["project",{"_index":1591,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2104,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3226,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3218,"title":{},"body":{"license.html":{}}}],["promise",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise.all",{"_index":1223,"title":{},"body":{"injectables/NewsUc.html":{}}}],["promisify",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3188,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3550,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3199,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UsersService.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":277,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["propertydecorator",{"_index":3012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":370,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":435,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":439,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":437,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1546,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1548,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":372,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":438,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":440,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":433,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3125,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1482,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3305,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3347,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":3930,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3470,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3686,"title":{},"body":{"license.html":{}}}],["provide",{"_index":514,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["provided",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":897,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["providers",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["provides",{"_index":891,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["providing",{"_index":328,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3482,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3527,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3674,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3676,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":1876,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1309,"title":{},"body":{"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3495,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3154,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3339,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1197,"title":{},"body":{"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":2192,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3260,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3429,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3620,"title":{},"body":{"license.html":{}}}],["put",{"_index":755,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["putting",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2169,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3540,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3685,"title":{},"body":{"license.html":{}}}],["queries",{"_index":1160,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queries.length",{"_index":1164,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":570,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.dto.ts",{"_index":1403,"title":{},"body":{"classes/TaskQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:10",{"_index":1406,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.dto.ts:16",{"_index":1405,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.dto.ts:23",{"_index":1404,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.targetid",{"_index":1050,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1048,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1052,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["querys",{"_index":1377,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1675,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["read",{"_index":942,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["readable",{"_index":3379,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3609,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3473,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"classes/SampleError.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":1935,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":1510,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["reason",{"_index":3618,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3392,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3538,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3119,"title":{},"body":{"license.html":{}}}],["received",{"_index":3362,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receives",{"_index":3554,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3624,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3456,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3616,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3177,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3234,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":617,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":1842,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3723,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1711,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2091,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":3945,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":4075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":411,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":413,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["references",{"_index":2660,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3115,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3167,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2965,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3652,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3478,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3359,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3272,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2267,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1650,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1653,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["reinstated",{"_index":3526,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":2361,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":1980,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3298,"title":{},"body":{"license.html":{}}}],["release",{"_index":1645,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":3158,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3148,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3352,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3159,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3781,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3608,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3411,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3113,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3654,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3656,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3479,"title":{},"body":{"license.html":{}}}],["remove",{"_index":739,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1598,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3699,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1957,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":1851,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":1889,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["replaces",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["repo",{"_index":2177,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo.ts",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1206,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1065,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/task.repo",{"_index":1387,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4010,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":3900,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["repositories",{"_index":4066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["repository",{"_index":4057,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["represent",{"_index":3445,"title":{},"body":{"license.html":{}}}],["representing",{"_index":1512,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["req.user",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["reqlib",{"_index":1888,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request/response",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["requested",{"_index":1344,"title":{},"body":{"modules/ServerModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":835,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1487,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":1891,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":846,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('./tsconfig.json",{"_index":3846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":3844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":743,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1231,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3353,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3019,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["requires",{"_index":732,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3183,"title":{},"body":{"license.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3436,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":1087,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["respect",{"_index":3329,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3793,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/TaskController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["response.dto.ts",{"_index":1446,"title":{},"body":{"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:12",{"_index":1454,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:15",{"_index":1452,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:18",{"_index":1450,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:21",{"_index":1451,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:24",{"_index":1453,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:6",{"_index":1449,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":712,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4038,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":3972,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3556,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1633,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":3869,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3794,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":481,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["restart",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["restricting",{"_index":3322,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3513,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2618,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":2850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3144,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3460,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":940,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["returned",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1447,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reusability",{"_index":3943,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4051,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":1847,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3054,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3710,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3662,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2785,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3126,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3684,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2307,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4047,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":774,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role/permissions",{"_index":4096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleids",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["roles",{"_index":771,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"classes/UserEntity.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rollback",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3463,"title":{},"body":{"license.html":{}}}],["room",{"_index":1897,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":256,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":3828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":3839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["route",{"_index":564,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":2820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1701,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["routes.test.js",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3573,"title":{},"body":{"license.html":{}}}],["rss",{"_index":407,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":1856,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1647,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["running",{"_index":1480,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3251,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":494,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":496,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3725,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3582,"title":{},"body":{"license.html":{}}}],["same",{"_index":2291,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":556,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":307,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sample_error",{"_index":311,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["sampleerror",{"_index":309,"title":{"classes/SampleError.html":{}},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"coverage.html":{}}}],["samples",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleucmethod(params",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1895,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3763,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1072,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{}}}],["save(news",{"_index":1091,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3409,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1602,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2589,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1651,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["school",{"_index":381,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":404,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UserEntity.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schoolids",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":403,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1297,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1299,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1018,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1036,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1118,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":454,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":452,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":753,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolyear",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["schul",{"_index":2155,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":2136,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":609,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1098,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1099,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":620,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":1242,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":880,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1138,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:14",{"_index":1149,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:29",{"_index":1151,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:35",{"_index":1147,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1145,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1153,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1238,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1218,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":565,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":943,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1648,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3258,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1707,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["searchable",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3191,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3133,"title":{},"body":{"license.html":{}}}],["secret",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3303,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3377,"title":{},"body":{"license.html":{}}}],["secure",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1600,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":3784,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3768,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":2798,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3597,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3581,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1595,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3170,"title":{},"body":{"license.html":{}}}],["send",{"_index":1666,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4020,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":524,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["sentry",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["sentry/node",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3419,"title":{},"body":{"license.html":{}}}],["separate",{"_index":887,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3045,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2062,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":3942,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["serialization",{"_index":3759,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2164,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["serve",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3017,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":881,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1325,"title":{},"body":{"modules/ServerModule.html":{}}}],["server.service",{"_index":1311,"title":{},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3787,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1305,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":2815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1313,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["servers",{"_index":2711,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serverservice",{"_index":1310,"title":{"injectables/ServerService.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"coverage.html":{},"overview.html":{}}}],["serves",{"_index":3247,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":560,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["service.find",{"_index":568,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.get",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":563,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":552,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":600,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":608,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":604,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":627,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":628,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":590,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["servicing",{"_index":3689,"title":{},"body":{"license.html":{}}}],["session",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":833,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":898,"title":{},"body":{"injectables/Logger.html":{}}}],["sets",{"_index":2095,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["setting",{"_index":3008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settings",{"_index":2281,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["setup",{"_index":717,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shall",{"_index":3308,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3107,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":756,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/controller",{"_index":954,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":956,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/core",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"todo.html":{}}}],["shared/error/api",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalValidationPipe.html":{}}}],["shared/error/business.error",{"_index":648,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["shared/interceptor/timeout.interceptor",{"_index":837,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["shared/pipe",{"_index":953,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/pipes",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1155,"title":{},"body":{"classes/NewsScope.html":{}}}],["shared/repo/interface/pagination.interface",{"_index":1093,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/transformer",{"_index":1002,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/types",{"_index":1095,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["shared/utils",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":1926,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4033,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3741,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3446,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":3029,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4022,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplicity",{"_index":3801,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simultaneously",{"_index":3647,"title":{},"body":{"license.html":{}}}],["single",{"_index":746,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4023,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":810,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":742,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["slash",{"_index":3791,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2765,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3086,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sold",{"_index":3430,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3286,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3300,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":3986,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3738,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sorted",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3883,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1120,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":3954,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3389,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3114,"title":{},"body":{"license.html":{}}}],["spec",{"_index":3010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spec.ts",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3471,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifically",{"_index":3098,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2107,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3236,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3669,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3673,"title":{},"body":{"license.html":{}}}],["speed",{"_index":1823,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3663,"title":{},"body":{"license.html":{}}}],["split",{"_index":3997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":3832,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stabilisation",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":3951,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1646,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3232,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3235,"title":{},"body":{"license.html":{}}}],["start",{"_index":3034,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1587,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starting",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":3881,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2303,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2207,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stated",{"_index":3277,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3515,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2799,"title":{},"body":{"coverage.html":{},"additional-documentation/nestjs-application.html":{}}}],["states",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":3891,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3341,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1455,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{},"license.html":{}}}],["stay",{"_index":3980,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3127,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["still",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1479,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stopping",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":1872,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1670,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4055,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["strategies",{"_index":3011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strategy",{"_index":859,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["strategy/jwt.strategy",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":3940,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":894,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["strip",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":594,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["structured",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["structures",{"_index":896,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1352,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["student_create",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["studentid",{"_index":1355,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":343,"title":{},"body":{"classes/Course.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3037,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3075,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":3965,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":785,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":3562,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3555,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3594,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3302,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1331,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.homework.id",{"_index":1430,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissions",{"_index":1358,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["submissionschema",{"_index":2847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1426,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1429,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["subprograms",{"_index":3267,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3398,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3441,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3560,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["succesful",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2518,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3149,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sue",{"_index":3606,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3451,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3800,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3751,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":1878,"title":{},"body":{"changelog.html":{}}}],["supplement",{"_index":3474,"title":{},"body":{"license.html":{}}}],["support",{"_index":2145,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["supported",{"_index":3996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":3862,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2700,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sure",{"_index":3112,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3642,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3514,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3702,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3744,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1372,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["symmetric",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1604,"title":{},"body":{"changelog.html":{}}}],["synced",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":2082,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["system/school",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2654,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":638,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["t[keyof",{"_index":759,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["tab",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":1790,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":360,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["tables",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2857,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3026,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2055,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["taking",{"_index":3007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tangible",{"_index":3425,"title":{},"body":{"license.html":{}}}],["tap",{"_index":495,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":575,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.targetids",{"_index":1163,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1248,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1161,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1162,"title":{},"body":{"classes/NewsScope.html":{}}}],["targetid",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":573,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetmodel",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["targetmodels",{"_index":1200,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1244,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":562,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":567,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["targets.filter((target",{"_index":1247,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":574,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":824,"title":{"classes/Task.html":{}},"body":{"classes/ITaskMetadata.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task._id",{"_index":1438,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.course?.color",{"_index":1442,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.course?.name",{"_index":1441,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.createdat",{"_index":1443,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.duedate",{"_index":1440,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.entity",{"_index":1357,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1437,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.name",{"_index":1439,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.updatedat",{"_index":1444,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskcontroller",{"_index":1364,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodel",{"_index":3847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1317,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskoptionsentry",{"_index":1388,"title":{"classes/TaskOptionsEntry.html":{}},"body":{"classes/TaskOptionsEntry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["taskquerydto",{"_index":1366,"title":{"classes/TaskQueryDto.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"coverage.html":{}}}],["taskquerydto:10",{"_index":1400,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskquerydto:16",{"_index":1394,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskquerydto:23",{"_index":1392,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskrepo",{"_index":1384,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponsedto",{"_index":1371,"title":{"classes/TaskResponseDto.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["tasks",{"_index":1463,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taskschema",{"_index":2848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskuc",{"_index":1369,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":2797,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["teachers",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":429,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":428,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":455,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":451,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":754,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tech",{"_index":3921,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":3983,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3311,"title":{},"body":{"license.html":{}}}],["technology",{"_index":3932,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":3910,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["tells",{"_index":3220,"title":{},"body":{"license.html":{}}}],["term",{"_index":3275,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3520,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3539,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3530,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3517,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2060,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":554,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test/services",{"_index":3058,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tested",{"_index":4015,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testenvironment",{"_index":3836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":3056,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["testpathignorepatterns",{"_index":3831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":3829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":253,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":1793,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":254,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4049,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3153,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["things",{"_index":2362,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["third",{"_index":3334,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1158,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1156,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1174,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1159,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery",{"_index":1171,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1169,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1170,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1233,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1212,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1249,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1245,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.code",{"_index":302,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.content",{"_index":434,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":711,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1277,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":436,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find",{"_index":1432,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(course",{"_index":1423,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lesson",{"_index":1425,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1427,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1105,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1102,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1097,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1106,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1103,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":577,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":561,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":566,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1101,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1545,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.getentitypermissions(userid",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1225,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1220,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1240,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":553,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.lastname",{"_index":1547,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.logger.log(`create",{"_index":1210,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1216,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1226,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1217,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1209,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":499,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":503,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":305,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.name",{"_index":371,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1237,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1222,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1229,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1215,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":969,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":989,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":976,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":985,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":986,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.request.app",{"_index":623,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.roles",{"_index":1539,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.schoolid",{"_index":1537,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.serverservice.gethello",{"_index":1312,"title":{},"body":{"controllers/ServerController.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1471,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1381,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.title",{"_index":304,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1278,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":303,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userid",{"_index":1535,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.users.find((user",{"_index":1519,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.usersservice.findone(username",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validationerrors",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2775,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3476,"title":{},"body":{"license.html":{}}}],["thr",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2506,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["through",{"_index":3209,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throw",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1488,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1497,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1496,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3292,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":3039,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3041,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4054,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":2119,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":834,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(timeoutinterceptor.defaulttimeout",{"_index":1493,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1489,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":836,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutms",{"_index":1491,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2507,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tiny",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["toboolean",{"_index":1001,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["todo",{"_index":258,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/UserEntity.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["toggle",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1616,"title":{},"body":{"changelog.html":{}}}],["tools",{"_index":3261,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1272,"title":{},"body":{"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{},"miscellaneous/typealiases.html":{}}}],["trace",{"_index":797,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3501,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3500,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3502,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2043,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3210,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3455,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3558,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":729,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1282,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":733,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":1132,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"dependencies.html":{}}}],["transformoptions",{"_index":730,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":884,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3414,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3475,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3317,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2739,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":432,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["try",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3766,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2662,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typ",{"_index":849,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["type.interface.ts",{"_index":787,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3803,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1134,"title":{},"body":{"classes/NewsResponse.html":{}}}],["types",{"_index":757,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.objectid",{"_index":1284,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":1289,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["types.ts",{"_index":2813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":983,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":446,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3438,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":595,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["t|j)s",{"_index":3833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":3770,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc.ts",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":958,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1370,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":2985,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":519,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":278,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3160,"title":{},"body":{"license.html":{}}}],["understand",{"_index":3934,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unhandled",{"_index":705,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":3964,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":523,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{}}}],["unit",{"_index":1985,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3061,"title":{},"body":{"index.html":{}}}],["universal",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3444,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3281,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3187,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2759,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3472,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":765,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1601,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3528,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":1824,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["update",{"_index":924,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1202,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":946,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1970,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["updatedat",{"_index":271,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{}}}],["updatenewsparams",{"_index":947,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":415,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2750,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":761,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1089,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":522,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":2279,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2319,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":260,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":515,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1397,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["useful",{"_index":3730,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":155,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user(props",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.id",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["user.password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":559,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.equals(schoolid",{"_index":557,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.schoolid.tostring",{"_index":576,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.test.js",{"_index":3059,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.username",{"_index":1520,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["user/class",{"_index":4008,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user/users.module",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/users.service",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_already_exists",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userdto",{"_index":1521,"title":{"classes/UserDTO.html":{}},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["userentity",{"_index":1527,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userentity(user",{"_index":1569,"title":{},"body":{"controllers/UsersController.html":{}}}],["userid",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["userid.tostring",{"_index":569,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":351,"title":{},"body":{"classes/Course.html":{}}}],["userinfo",{"_index":352,"title":{"classes/UserInfo.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1553,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1551,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1555,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1020,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1038,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1041,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1110,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["userrepo",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":773,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["users.service",{"_index":1575,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/admin",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["userscontroller",{"_index":1560,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["usersmodule",{"_index":119,"title":{"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":150,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstasks",{"_index":1431,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["userstasks.map((task",{"_index":1436,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["uses",{"_index":2582,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["usevalue",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":597,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usually",{"_index":4003,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["util",{"_index":2320,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utils",{"_index":2284,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2736,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v2",{"_index":1614,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3790,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3795,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":737,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":830,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":855,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4016,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["validateuser",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error",{"_index":71,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalValidationPipe.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":23,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1585,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":715,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":723,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":338,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":68,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":319,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":722,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":475,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1288,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":274,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":758,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["variable",{"_index":2647,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1606,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3093,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":792,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":801,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":806,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verify",{"_index":1737,"title":{},"body":{"changelog.html":{}}}],["verison",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1787,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1596,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3110,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":3984,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["via",{"_index":1448,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1198,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3469,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3524,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3772,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3036,"title":{},"body":{"index.html":{}}}],["void",{"_index":642,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3370,"title":{},"body":{"license.html":{}}}],["vor",{"_index":1850,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":3798,"title":{},"body":{"todo.html":{}}}],["vscode",{"_index":3919,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3796,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":3920,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3324,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3715,"title":{},"body":{"license.html":{}}}],["want",{"_index":3120,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["want's",{"_index":4028,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":793,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":803,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1414,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3222,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3221,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3778,"title":{},"body":{"todo.html":{}}}],["way",{"_index":1236,"title":{},"body":{"injectables/NewsUc.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3380,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3735,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weeks",{"_index":1466,"title":{},"body":{"injectables/TaskUC.html":{}}}],["weight",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3023,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["whatever",{"_index":3564,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":886,"title":{},"body":{"injectables/Logger.html":{}}}],["whether",{"_index":3434,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":735,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":869,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3242,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["whose",{"_index":3421,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3239,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["widespread",{"_index":3139,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2339,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2792,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2249,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3049,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3316,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3064,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3118,"title":{},"body":{"license.html":{}}}],["within",{"_index":287,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["without",{"_index":2173,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3044,"title":{},"body":{"index.html":{}}}],["work",{"_index":265,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3259,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2693,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["works",{"_index":2791,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["world",{"_index":1349,"title":{},"body":{"injectables/ServerService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3596,"title":{},"body":{"license.html":{}}}],["wraps",{"_index":4079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writeerrorlog",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":709,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writing",{"_index":3679,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3027,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":1870,"title":{},"body":{"changelog.html":{}}}],["xml2js",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":1390,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["years",{"_index":3388,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":606,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"injectables/NewsUc.html":{},"classes/SampleError.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3057,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3612,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '../../../shared/error/api-validation.error';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Post, UseGuards, Request, Body } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Controller('auth')\nexport class AuthController {\n\tconstructor(private authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntity.html":{"url":"classes/AuthEntity.html","title":"class - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/entity/auth.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/entity/auth.entity.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthEntity {\n\t@ApiProperty()\n\taccess_token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\nimport { UsersModule } from '../user/users.module';\nimport { JwtStrategy } from './strategy/jwt.strategy';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [\n\t\tUsersModule,\n\t\tPassportModule,\n\t\tJwtModule.register({\n\t\t\tsecret: jwtConstants.secret,\n\t\t\tsignOptions: { expiresIn: '60s' },\n\t\t}),\n\t],\n\tproviders: [AuthService, JwtStrategy],\n\texports: [AuthService],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotImplementedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User, UsersService } from '../user/users.service';\nimport { AuthEntity } from './entity/auth.entity';\n\n@Injectable()\nexport class AuthService {\n\tconstructor(private usersService: UsersService, private jwtService: JwtService) {}\n\n\tasync validateUser(username: string, password: string): Promise {\n\t\tconst user = await this.usersService.findOne(username);\n\t\tif (user && user.password === password) {\n\t\t\tconst { password, ...result } = user;\n\t\t\t// passport will add result to req.user\n\t\t\treturn result as User;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync login(user: any): Promise {\n\t\tthrow new NotImplementedException();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorType } from '../../core/error/interface';\nimport { ErrorResponse } from '../../core/error/dto/error.response';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n/**\n * sample business error implementation\n */\nexport class SampleError extends BusinessError {\n\tconstructor(message?: string) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'SAMPLE_ERROR',\n\t\t\t\ttitle: 'Sample Error',\n\t\t\t\tdefaultMessage: message || 'default sample error message',\n\t\t\t},\n\t\t\tHttpStatus.NOT_IMPLEMENTED\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserInfo })\n\tstudents = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\ninterface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@ApiProperty()\n\t@IsString()\n\ttitle: string;\n\n\t@ApiProperty()\n\t@IsString()\n\tbody: string;\n\n\t@ApiProperty()\n\t@IsDate()\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@IsOptional()\n\t@ApiProperty()\n\ttargetModel: string;\n\n\t@IsString()\n\t@IsOptional()\n\t@ApiPropertyOptional()\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '../../core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.equals(schoolId);\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:102\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError } from '@shared/error/business.error';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: Error): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: any, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeErrorLog = (error: any, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '../../../shared/error/api-validation.error';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\n// TODO put into shared types\ntype ValueOf = T[keyof T];\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\ninterface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\n// TODO put into shared types\ntype ValueOf = T[keyof T];\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ITaskMetadata.html":{"url":"classes/ITaskMetadata.html","title":"class - ITaskMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ITaskMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseName\n                            \n                            \n                                displayColor\n                            \n                            \n                                duedate\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport class ITaskMetadata extends BaseEntityWithTimestamps {\n\tname: string;\n\n\tduedate: Date;\n\n\tcourseName: string;\n\n\tdisplayColor: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '../../shared/interceptor/timeout.interceptor';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload) {\n\t\t// TODO check jwt is whitelisted\n\t\t// TODO check user exist/is active\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Collection, Entity, ManyToMany, ManyToOne, Property } from '@mikro-orm/core';\nimport { UserInfo } from '../../news/entity';\nimport { Course } from './course.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\ninterface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@IsOptional()@ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@IsIn(undefined)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@ToBoolean()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { ToBoolean } from '@shared/transformer';\n\n// TODO validate\nexport class NewsFilterQuery {\n\t@IsString()\n\t@IsOptional()\n\t@IsIn(['schools', 'courses', 'teams'])\n\t@ApiProperty()\n\ttargetModel?: string;\n\n\t@IsMongoId()\n\t@IsOptional()\n\t@ApiPropertyOptional()\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@ToBoolean()\n\t@ApiProperty()\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.body,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.body,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:25\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PaginationModel } from '@shared/repo/interface/pagination.interface';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: PaginationModel = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: PaginationModel): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({ pattern: '[a-f0-9]{24}' })\n\tid: string;\n\n\t@ApiProperty()\n\ttitle: string;\n\n\t@ApiProperty()\n\tcontent: string;\n\n\t@ApiProperty()\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({ type: 'string', enum: NEWS_SOURCES })\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional()\n\ttargetId?: string;\n\n\t@ApiPropertyOptional()\n\ttargetModel?: string;\n\n\t@ApiProperty()\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty()\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional()\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { Logger } from '../../../core/logger/logger.service';\nimport { News, NewsTargetModel, NewsTargetModelValue } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { ICreateNews, INewsScope, IUpdateNews } from '../entity/news.types';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished;\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// TODO find better way to update entity\n\t\tif (params.title) {\n\t\t\tnews.title = params.title;\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationModel.html":{"url":"interfaces/PaginationModel.html","title":"interface - PaginationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationModel {\n\treadonly skip?: number;\n\treadonly limit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiProperty({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiProperty({description: 'number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiProperty({ description: 'number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiProperty({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/pipe/parse-object-id.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: any): Types.ObjectId {\n\t\tconst validObjectId = Types.ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleError.html":{"url":"classes/SampleError.html","title":"class - SampleError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                sample business error implementation\n\n            \n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/business.error.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorType } from '../../core/error/interface';\nimport { ErrorResponse } from '../../core/error/dto/error.response';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n/**\n * sample business error implementation\n */\nexport class SampleError extends BusinessError {\n\tconstructor(message?: string) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'SAMPLE_ERROR',\n\t\t\t\ttitle: 'Sample Error',\n\t\t\t\tdefaultMessage: message || 'default sample error message',\n\t\t\t},\n\t\t\tHttpStatus.NOT_IMPLEMENTED\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({ pattern: '[a-f0-9]{24}' })\n\tid: string;\n\n\t@ApiProperty()\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\ninterface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:10\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { ServerService } from './server.service';\n\n@Controller()\nexport class ServerController {\n\tconstructor(private readonly serverService: ServerService) {}\n\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn this.serverService.getHello();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_providers\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nServerModule -->\n\nUsersModule->ServerModule\n\n\n\n\n\nServerService\n\nServerService\n\nServerModule -->\n\nServerService->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { ServerController } from './server.controller';\nimport { ServerService } from './server.service';\nimport { UsersModule } from './modules/user/users.module';\nimport { DB_URL } from './config';\nimport { TaskModule } from './modules/task/task.module';\nimport { CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo } from './modules/news/entity';\nimport { Task, Lesson, Course, Submission } from './modules/task/entity';\nimport { CoreModule } from './core/core.module';\nimport { CourseInfo } from './modules/news/entity/course-info.entity';\nimport { TeamInfo } from './modules/news/entity/team-info.entity';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tUsersModule,\n\t\tNewsModule,\n\t\tTaskModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLesson,\n\t\t\t\tCourse,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n\tproviders: [ServerService],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerService.html":{"url":"injectables/ServerService.html","title":"injectable - ServerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/server.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ServerService {\n\tgetHello(): string {\n\t\treturn 'Hello World!';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homework\n                            \n                            \n                                student\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\thomework: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lesson\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport class ITaskMetadata extends BaseEntityWithTimestamps {\n\tname: string;\n\n\tduedate: Date;\n\n\tcourseName: string;\n\n\tdisplayColor: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, query: TaskQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                TaskQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponseDto, TaskQueryDto } from './dto';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(@CurrentUser() currentUser: ICurrentUser, @Query() query: TaskQueryDto): Promise {\n\t\tconst response = this.taskUc.findAllOpenForUser(currentUser.userId, query);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskRepo\n\nTaskRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskOptionsEntry.html":{"url":"classes/TaskOptionsEntry.html","title":"class - TaskOptionsEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskOptionsEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.option.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TaskQueryDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@IsOptional()@ApiProperty({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@IsOptional()@ApiProperty({description: 'number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(2015)@Max(2030)@IsOptional()@ApiProperty({description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskQueryDto } from '../controller/dto';\n\nclass TaskOptionsEntry extends TaskQueryDto {}\n\nexport type ITaskOption = TaskOptionsEntry;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskQueryDto.html":{"url":"classes/TaskQueryDto.html","title":"class - TaskQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-query.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@IsOptional()@ApiProperty({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@IsOptional()@ApiProperty({description: 'number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(2015)@Max(2030)@IsOptional()@ApiProperty({description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min, IsOptional } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TaskQueryDto {\n\t@IsInt()\n\t@Min(2015)\n\t@Max(2030)\n\t@IsOptional()\n\t@ApiProperty({ description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030 })\n\tyear?;\n\n\t@IsInt()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiProperty({ description: 'number of elements (not pages) to be skipped' })\n\tskip?;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@IsOptional()\n\t@ApiProperty({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: ITaskOption)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                ITaskOption\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ITaskOption, Task, ITaskMetadata, Submission, Course, Lesson } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { year, limit, skip }: ITaskOption = {}): Promise {\n\t\t// todo: handle coursegroups\n\t\tconst coursesOfStudent = await this.em.find(Course, {\n\t\t\tstudents: userId,\n\t\t});\n\t\tconst lessonsOfStudent = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: coursesOfStudent },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst submissionsOfStudent = await this.em.find(Submission, {\n\t\t\tstudent: userId,\n\t\t});\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.homework.id);\n\n\t\tconst usersTasks = await this.em.find(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfStudent } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t['course']\n\t\t);\n\n\t\tconst mappedTasks = usersTasks.map((task) => {\n\t\t\treturn {\n\t\t\t\tid: task.id,\n\t\t\t\t_id: task._id,\n\t\t\t\tname: task.name,\n\t\t\t\tduedate: task.dueDate,\n\t\t\t\tcourseName: task.course?.name,\n\t\t\t\tdisplayColor: task.course?.color,\n\t\t\t\tcreatedAt: task.createdAt,\n\t\t\t\tupdatedAt: task.updatedAt,\n\t\t\t} as ITaskMetadata; // TODO does not match ITaskMetadata, remove as...\n\t\t});\n\n\t\t// TODO: pagination or total is missing\n\t\treturn mappedTasks;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponseDto.html":{"url":"classes/TaskResponseDto.html","title":"class - TaskResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-response.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseName\n                            \n                            \n                                displayColor\n                            \n                            \n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponseDto {\n\tconstructor(partial: Partial) {\n\t\tObject.assign(this, partial);\n\t}\n\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate: Date;\n\n\t@ApiProperty()\n\tcourseName: string;\n\n\t@ApiProperty()\n\tdisplayColor: string;\n\n\t@ApiProperty()\n\tid: string;\n\t// status: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, option: ITaskOption)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                ITaskOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ITaskOption, ITaskMetadata } from '../entity';\nimport { TaskRepo } from '../repo/task.repo';\n\n// filter tasks older than 3 weeks\n// TODO: move dtos folder one level higher\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo) {}\n\n\tasync findAllOpenForUser(userId: EntityId, option: ITaskOption): Promise {\n\t\treturn this.taskRepo.findAllOpenByStudent(userId, option);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\ninterface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                    Readonly\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/timeout.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                                Readonly\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/interceptor/timeout.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static readonly defaultTimeout = 5000;\n\n\t// constructor(private readonly timeoutMs: number = 5000) {}\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(TimeoutInterceptor.defaultTimeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateNewsParams } from './create-news.params';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams extends PartialType(CreateNewsParams) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                password\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// This should be a real class/interface representing a user entity\nexport class User {\n\tuserId: string;\n\n\tusername: string;\n\n\tpassword?: string;\n}\n\n@Injectable()\nexport class UsersService {\n\tprivate readonly users: User[] = [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t];\n\n\tasync findOne(username: string): Promise {\n\t\treturn this.users.find((user) => user.username === username);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/controller/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of a user', example: 'changeme'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/controller/dto/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'username of a user', example: 'john'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/controller/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDTO {\n\t@ApiProperty({ description: 'username of a user', example: 'john' })\n\tusername: string;\n\n\t@ApiProperty({ description: 'password of a user', example: 'changeme' })\n\tpassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: JwtPayload)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        JwtPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schoolId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { JwtPayload } from '../../authentication/interface/jwt-payload';\n\nexport class UserEntity {\n\tconstructor(payload: JwtPayload) {\n\t\t// TODO Builder\n\t\tthis.userId = payload.userId;\n\t\tthis.schoolId = payload.schoolId;\n\t\tthis.roles = payload.roles;\n\t}\n\n\t@ApiProperty()\n\tuserId: string;\n\n\t@ApiProperty()\n\tschoolId: string;\n\n\t@ApiProperty()\n\troles: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({ pattern: '[a-f0-9]{24}' })\n\tid: string;\n\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/users.controller.ts:11\n                \n            \n\n\n            \n                \n                    default route to test authenticated access \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards, Request } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { JwtPayload } from '../../authentication/interface/jwt-payload';\nimport { UserEntity } from '../entity/user.entity';\n\n@Authenticate('jwt')\n@Controller('users')\nexport class UsersController {\n\t/** default route to test authenticated access */\n\t@Get('profile')\n\tgetProfile(@CurrentUser() user: JwtPayload): UserEntity {\n\t\treturn new UserEntity(user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './controller/users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n\tproviders: [UsersService],\n\texports: [UsersService],\n\tcontrollers: [\n\t\t/* UsersController */\n\t],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t]\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// This should be a real class/interface representing a user entity\nexport class User {\n\tuserId: string;\n\n\tusername: string;\n\n\tpassword?: string;\n}\n\n@Injectable()\nexport class UsersService {\n\tprivate readonly users: User[] = [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t];\n\n\tasync findOne(username: string): Promise {\n\t\treturn this.users.find((user) => user.username === username);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\n\nSC-9004 - Sync env variables between backend and frontend\n\n26.2.0\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/controller/dto/user.dto.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            function\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/entity/auth.entity.ts\n            \n            class\n            AuthEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/jwt-options.provider.ts\n            \n            variable\n            jwtOptionsProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task-query.dto.ts\n            \n            class\n            TaskQueryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task-response.dto.ts\n            \n            class\n            TaskResponseDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            ITaskMetadata\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.option.entity.ts\n            \n            class\n            TaskOptionsEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/users.controller.ts\n            \n            controller\n            UsersController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/users.service.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.service.ts\n            \n            injectable\n            ServerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/business.error.ts\n            \n            class\n            SampleError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/interface/pagination.interface.ts\n            \n            interface\n            PaginationModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/transformer/to-boolean.transformer.ts\n            \n            function\n            ToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/test/jest-e2e.config.ts\n            \n            variable\n            e2eConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.6.0\n        \n            arg : ^4.1.3\n        \n            async : ^2.6.3\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^6.0.1\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            ToBoolean   (apps/.../to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nAuthenticate(...strategies: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    strategies\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/transformer/to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nToBoolean()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     PropertyDecorator\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_ServerModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUsersModule->ServerModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nServerService\n\nServerService\n\nServerModule -->\n\nServerService->ServerModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    42 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\n\nACCEPTED\n\ncheck build & start for production with ops\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\nfix jest, linter, ...\n\n\nDONE\n\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            ITaskOption   (apps/.../task.option.entity.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            ValueOf   (apps/.../news.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/task/entity/task.option.entity.ts\n    \n    \n        \n            \n                \n                    \n                    ITaskOption\n                \n            \n            \n                \n                            TaskOptionsEntry\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../main.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            e2eConfig   (apps/.../jest-e2e.config.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            jwtOptionsProvider   (apps/.../jwt-options.provider.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../main.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../main.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\ttestRegex: '\\\\.spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: any, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: any, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user } = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n\n    apps/server/test/jest-e2e.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            e2eConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t...jestConfig,\n\trootDir: '../../../',\n\ttestRegex: '.e2e-spec.ts$',\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/jwt-options.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptionsProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tprovide: 'JWT_MODULE_OPTIONS',\n\tuseValue: {\n\t\tsecret: jwtConstants.secret,\n\t\tsignOptions: { expiresIn: '60s' },\n\t},\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to fix linter issues and apply formatting\n\nHow to test the application?\n\nnest:test executes jest tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either _.spec.ts beside providers or *.e2e-spec.ts in test folders\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e beside unit tests on providers which are placed beside the providers (executed by statements above), e2e tests can be added in test folder\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:dev:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nContent\nFor further reading, browse apps/server/doc.\nDevelopment\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nTesting\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below are correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside mapping) inside a controller, use the logic layer instead. Mapping can be unit tested.\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nTesting\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story). A unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nTesting\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests. A test must define the before and after state of the data set clearly and cleanup the database after execution to the before state. Instead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong\nMikro-ORM\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (mongodb)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
