var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.146,1,2.84]],["body/classes/Account.html",[0,0.159,1,4.098,2,1.012,3,0.128,4,0.107,5,0.087,6,4.809,7,1.423,8,3.046,9,0.261,10,0.831,11,7.99,12,2.312,13,6.578,14,2.857,15,2.914,16,1.445,17,2.974,18,1.288,19,7.127,20,5.59,21,0.934,22,5.383,23,0.803,24,0.006,25,0.466,26,0.409,27,0.534,28,2.764,29,2.509,30,2.85,31,5.383,32,2.095,33,2.416,34,1.505,35,4.382,36,4.431,37,4.734,38,5.383,39,0.958,40,5.383,41,1.681,42,2.293,43,3.16,44,2.69,45,2.69,46,2.293,47,2.69,48,2.624,49,2,50,2.69,51,0.33,52,1.242,53,4.382,54,2.835,55,1.212,56,1.576,57,1.012,58,5.383,59,2.037,60,4.809,61,0.121,62,1.551,63,2.076,64,2.553,65,2.835,66,3.435,67,5.383,68,3.435,69,2.69,70,1.829,71,3.736,72,4.809,73,3.923,74,3.435,75,2.561,76,2.246,77,5.383,78,5.383,79,4.149,80,0.003,81,0.004,82,0.003]],["title/classes/ApiValidationError.html",[0,0.146,83,3.28]],["body/classes/ApiValidationError.html",[0,0.172,2,1.097,3,0.139,4,0.116,5,0.094,7,1.5,9,0.283,10,0.876,18,1.396,21,0.95,23,0.871,24,0.006,25,0.505,26,0.427,27,0.579,39,0.936,43,3.512,51,0.31,61,0.131,62,1.68,65,3.072,80,0.003,81,0.004,82,0.003,83,4.989,84,6.711,85,5.211,86,6.48,87,3.496,88,3.339,89,4.935,90,4.319,91,3.204,92,1.35,93,6.839,94,6.839,95,5.833,96,6.089,97,5.833,98,7.422,99,1.884,100,5.211,101,4.989,102,5.211,103,5.211,104,5.211,105,5.211,106,5.211,107,1.329,108,5.211,109,3.465,110,4.496,111,1.256,112,5.211,113,4.802,114,4.802,115,3.661,116,4.068,117,2.712,118,4.252,119,4.252,120,5.211]],["title/classes/ApiValidationErrorResponse.html",[0,0.146,121,3.807]],["body/classes/ApiValidationErrorResponse.html",[0,0.179,2,1.139,3,0.144,4,0.121,5,0.098,7,1.537,9,0.293,10,0.897,18,1.449,21,0.764,23,0.904,24,0.006,25,0.525,26,0.373,27,0.601,34,1.362,51,0.349,61,0.136,80,0.003,81,0.004,82,0.003,83,6.234,88,3.421,90,4.425,91,2.968,98,7.556,109,5.024,115,3.751,116,5.164,117,2.816,119,4.416,121,5.932,122,7.556,123,5.413,124,2.024,125,5.111,126,4.425,127,4.91,128,4.819,129,7.695,130,6.058,131,6.519,132,6.058,133,4.67,134,5.413,135,6.058,136,1.614,137,6.058,138,6.058,139,6.058,140,7.695,141,7.695,142,6.058,143,1.261,144,7.695,145,6.058]],["title/interfaces/AppendedAttachment.html",[146,0.463,147,3.037]],["body/interfaces/AppendedAttachment.html",[3,0.155,4,0.13,5,0.105,7,1.873,9,0.315,10,0.938,24,0.006,25,0.563,39,1.137,61,0.146,80,0.004,81,0.005,82,0.004,146,0.908,147,5.369,148,1.814,149,4.146,150,5.61,151,6.228,152,4.316,153,4.316,154,4.944,155,4.146,156,4.316,157,4.316,158,5.369,159,4.146,160,4.316,161,4.944,162,5.341,163,5.341,164,4.944,165,4.355,166,4.146,167,4.316,168,4.316,169,4.316]],["title/modules/AuthModule.html",[170,1.423,171,3.6]],["body/modules/AuthModule.html",[0,0.192,3,0.155,4,0.13,5,0.105,12,1.656,24,0.006,51,0.4,61,0.146,80,0.004,81,0.005,82,0.004,111,1.402,170,2.319,171,7.238,172,2.662,173,3.743,174,5.817,175,5.817,176,5.817,177,6.634,178,6.967,179,6.634,180,4.49,181,3.429,182,2.959,183,6.511,184,3.659,185,3.831,186,8.051,187,5.019,188,6.511,189,5.817,190,6.511,191,4.519,192,5.36,193,6.511,194,5.817,195,6.511]],["title/modules/AuthorizationModule.html",[170,1.423,196,3.428]],["body/modules/AuthorizationModule.html",[0,0.195,3,0.157,4,0.131,5,0.107,24,0.006,51,0.379,61,0.148,80,0.004,81,0.005,82,0.004,111,1.419,170,2.337,172,2.696,173,3.772,180,4.524,181,3.473,182,2.996,184,3.687,185,3.861,196,6.941,197,5.891,198,5.891,199,5.891,200,5.891,201,6.654,202,6.409,203,6.368,204,6.593,205,4.524,206,6.593,207,6.593,208,3.473,209,5.891]],["title/injectables/AuthorizationService.html",[202,3.151,210,1.096]],["body/injectables/AuthorizationService.html",[0,0.129,3,0.104,4,0.087,5,0.071,9,0.211,12,2.349,18,1.044,21,0.773,23,1.162,24,0.006,25,0.675,26,0.344,27,0.773,34,0.772,39,0.961,51,0.322,52,1.487,57,0.821,61,0.098,69,3.891,80,0.003,81,0.004,82,0.003,92,1.109,107,1.454,111,0.939,136,1.486,143,1.012,202,3.939,203,5.666,208,2.298,209,3.899,210,1.369,211,1.683,212,3.899,213,2.942,214,6.4,215,5.515,216,7.163,217,4.364,218,4.364,219,4.364,220,2.929,221,4.745,222,4.616,223,5.744,224,4.231,225,4.364,226,3.667,227,6.173,228,4.62,229,4.164,230,2.621,231,4.285,232,6.173,233,4.364,234,4.626,235,3.899,236,4.364,237,4.1,238,5.515,239,3.939,240,5.082,241,3.899,242,1.898,243,5.151,244,4.285,245,2.842,246,4.364,247,4.364,248,3.592,249,4.364,250,4.364,251,4.364,252,6.173,253,4.364,254,4.364,255,2.509,256,4.364,257,6.173,258,4.364,259,4.364]],["title/classes/BaseEntity.html",[0,0.146,260,2.532]],["body/classes/BaseEntity.html",[0,0.252,2,1.162,3,0.147,4,0.123,5,0.1,8,2.559,9,0.299,10,0.995,14,3.592,15,2.526,16,1.817,17,2.578,21,0.773,24,0.006,26,0.344,28,2.666,29,2.308,30,2.622,34,1.51,39,0.961,41,2.799,42,3.817,46,3.817,51,0.322,52,1.562,55,1.755,56,1.808,61,0.175,63,2.383,64,2.213,80,0.004,81,0.004,82,0.004,88,2.746,260,4.376,261,5.086,262,6.178,263,6.178,264,2.254,265,4.762,266,4.288,267,5.086,268,5.086,269,5.519,270,4.103,271,3.346,272,5.519,273,3.445,274,4.762,275,3.799,276,3.552,277,5.519,278,5.086,279,5.519,280,4.288,281,3.799,282,4.762,283,5.086,284,5.519]],["title/classes/BaseEntityWithTimestamps.html",[0,0.146,8,1.622]],["body/classes/BaseEntityWithTimestamps.html",[0,0.247,2,1.107,3,0.14,4,0.117,5,0.095,8,2.741,9,0.285,10,0.973,14,3.529,15,3.412,16,1.785,17,3.482,21,0.873,24,0.006,26,0.333,28,2.844,29,2.463,30,2.705,32,1.982,33,2.284,34,1.611,39,0.94,41,2.75,42,3.75,46,3.75,48,2.87,49,2.188,51,0.312,52,1.534,55,1.702,56,1.723,61,0.17,63,2.271,64,2.109,80,0.003,81,0.004,82,0.003,88,2.617,260,3.875,261,4.847,264,2.148,265,4.538,266,4.087,267,4.847,268,4.847,269,5.26,270,3.911,271,3.189,272,5.26,273,3.283,274,4.538,275,3.62,276,3.386,277,5.26,278,4.847,279,5.26,280,4.087,281,3.62,282,4.538,283,4.847,284,5.26,285,5.888,286,5.888,287,5.888,288,5.888]],["title/injectables/BaseRepo.html",[210,1.096,289,3.807]],["body/injectables/BaseRepo.html",[0,0.136,3,0.109,4,0.092,5,0.074,9,0.223,18,1.101,21,0.926,23,1.376,24,0.006,25,0.799,26,0.407,27,0.915,51,0.304,52,1.512,55,1.036,57,0.865,61,0.103,69,3.983,80,0.003,81,0.004,82,0.003,87,1.648,92,1.151,107,1.632,111,0.99,136,1.223,143,1.422,210,1.421,211,1.774,213,3.135,230,2.869,245,2.898,260,2.359,264,1.678,289,4.938,290,4.11,291,7.121,292,3.939,293,5.724,294,5.724,295,5.724,296,3.374,297,5.724,298,5.724,299,5.724,300,3.056,301,4.734,302,4.601,303,3.47,304,4.601,305,5.724,306,6.996,307,4.601,308,5.724,309,4.601,310,5.724,311,4.601,312,5.724,313,4.601,314,5.724,315,4.601,316,3.622,317,5.724,318,4.601,319,5.724,320,4.601,321,5.724,322,4.601,323,4.601,324,4.601,325,4.601,326,6.143,327,6.406,328,6.406,329,6.406,330,7.371,331,7.371,332,4.601,333,6.406]],["title/classes/BusinessError.html",[0,0.146,86,3.28]],["body/classes/BusinessError.html",[0,0.23,2,0.956,3,0.121,4,0.101,5,0.082,7,1.37,9,0.246,10,0.8,18,1.642,21,0.922,23,0.759,24,0.006,25,0.441,26,0.43,27,0.505,34,0.9,39,1.007,51,0.321,61,0.114,62,1.465,74,4.379,75,3.265,80,0.003,81,0.004,82,0.003,86,4.558,87,3.526,88,4.188,89,5.431,90,4.781,91,3.45,92,1.233,93,6.844,94,6.844,99,2.216,101,6.073,107,1.214,109,4.613,110,6.408,111,1.095,116,2.754,118,5.661,124,1.699,128,4.503,143,1.125,334,4.544,335,4.613,336,5.002,337,4.076,338,4.763,339,4.076,340,4.219,341,6.844,342,5.086,343,6.06,344,6.862,345,2.479,346,5.086,347,5.086,348,5.086,349,5.086,350,5.086,351,5.086,352,5.086,353,5.086,354,5.086,355,3.53,356,5.086,357,4.544,358,6.862,359,5.086,360,3.946,361,6.862,362,6.862,363,5.086]],["title/injectables/ConsoleWriter.html",[210,1.096,364,3.428]],["body/injectables/ConsoleWriter.html",[0,0.197,3,0.21,4,0.133,5,0.108,9,0.323,10,0.954,21,0.811,23,0.997,24,0.006,25,0.578,26,0.295,27,0.663,32,1.751,33,2.019,39,0.995,51,0.338,61,0.15,80,0.004,81,0.005,82,0.004,92,1.469,107,1.182,111,1.438,210,1.814,211,2.575,316,3.716,364,5.675,365,7.897,366,6.813,367,5.966,368,9.211,369,8.177,370,6.678,371,5.497,372,8.839,373,6.678,374,3.255,375,5.218,376,6.678,377,3.337,378,3.255,379,6.678,380,6.678,381,6.678]],["title/modules/CoreModule.html",[170,1.423,382,3.6]],["body/modules/CoreModule.html",[0,0.18,3,0.145,4,0.122,5,0.099,24,0.006,51,0.38,61,0.137,75,3.675,80,0.004,81,0.004,82,0.004,111,1.312,117,3.591,124,2.036,170,2.569,172,2.492,173,3.591,180,4.307,181,3.209,182,2.769,185,3.675,382,7.245,383,5.444,384,5.444,385,6.852,386,6.852,387,5.998,388,6.852,389,6.094,390,5.13,391,7.724,392,5.13,393,5.953,394,6.358,395,7.724,396,4.588,397,5.953,398,5.13,399,7.724,400,4.588,401,5.63,402,6.901,403,7.724,404,5.953,405,6.094,406,6.094,407,6.094,408,6.094]],["title/classes/Course.html",[0,0.146,409,1.98]],["body/classes/Course.html",[0,0.095,2,0.602,3,0.076,4,0.064,5,0.052,7,0.981,8,2.608,9,0.369,10,0.573,12,1.249,14,1.969,15,2.008,16,1.359,17,2.049,18,1.175,21,0.922,23,1,24,0.006,25,0.756,26,0.4,27,0.665,28,1.534,29,2.36,30,2.582,32,2.376,33,2.477,34,0.869,37,3.262,39,1.02,41,2.83,42,1.363,43,2.49,44,1.6,45,1.6,46,1.363,47,1.6,48,1.56,49,2.49,50,1.6,51,0.247,52,0.856,55,1.106,56,0.937,57,0.602,59,1.212,61,0.072,62,0.922,63,2.788,70,1.088,76,2.049,80,0.002,81,0.003,82,0.002,92,0.882,99,1.586,107,1.279,124,2.653,136,1.279,143,1.185,146,0.56,220,2.638,229,2.778,264,1.168,296,3.147,303,1.734,378,2.394,396,1.902,409,1.969,410,2.467,411,4.832,412,2.915,413,4.276,414,4.651,415,4.651,416,4.276,417,4.276,418,3.786,419,2.593,420,5.165,421,5.165,422,1.586,423,5.165,424,4.911,425,1.336,426,5.987,427,5.975,428,5.987,429,3.201,430,5.987,431,3.201,432,4.911,433,3.201,434,4.911,435,3.201,436,4.388,437,3.201,438,3.201,439,3.201,440,1.641,441,3.201,442,3.134,443,3.201,444,4.451,445,4.388,446,3.786,447,2.917,448,3.409,449,2.337,450,4.043,451,4.121,452,4.451,453,3.854,454,3.134,455,3.409,456,2.337,457,3.249,458,4.388,459,3.201,460,4.388,461,3.201,462,3.134,463,3.58,464,4.043,465,4.388,466,3.262,467,4.043,468,2.86,469,2.467,470,2.86,471,2.222,472,2.86,473,2.86,474,2.635,475,2.333,476,2.333,477,4.651,478,2.86,479,2.86,480,2.635,481,2.635,482,1.56,483,2.66,484,1.734,485,4.388,486,2.86,487,2.86,488,2.86,489,3.786,490,2.467,491,4.388,492,2.86,493,4.388,494,2.86,495,4.388,496,2.86,497,5.339,498,3.674,499,5.339,500,2.86,501,2.467,502,4.388,503,4.388,504,4.388,505,2.86,506,2.86]],["title/classes/CourseGroupInfo.html",[0,0.146,507,3.037]],["body/classes/CourseGroupInfo.html",[0,0.162,2,1.028,3,0.13,4,0.109,5,0.088,7,1.438,8,3.057,9,0.265,10,0.84,12,1.39,14,2.886,15,2.944,16,1.46,17,3.004,18,1.308,21,0.924,23,0.816,24,0.006,25,0.474,26,0.403,27,0.542,28,2.249,29,2.47,30,2.63,32,2.111,33,2.434,34,1.514,35,4.428,36,4.501,37,4.783,39,0.616,41,2.778,42,2.329,43,3.179,44,2.732,45,2.732,46,2.329,47,2.732,48,2.665,49,2.031,50,2.732,51,0.353,52,1.255,53,4.428,54,2.879,55,1.622,56,1.6,57,1.028,59,2.069,61,0.123,62,1.575,70,1.858,76,2.281,80,0.003,81,0.004,82,0.003,146,0.512,264,1.994,422,2.325,425,2.281,462,5.461,507,4.428,508,7.045,509,2.961,510,4.276,511,5.674,512,6.596,513,7.201,514,4.507,515,4.884,516,2.031,517,2.665,518,3.362,519,3.794,520,3.794,521,4.884]],["title/classes/CourseInfo.html",[0,0.146,522,2.675]],["body/classes/CourseInfo.html",[0,0.189,2,1.199,3,0.152,4,0.127,5,0.103,7,1.587,9,0.309,10,0.927,14,3.186,16,1.611,18,1.526,21,0.899,23,0.952,24,0.006,25,0.808,26,0.42,27,0.633,29,2.342,30,2.661,39,1.021,41,1.993,42,2.717,43,2.953,46,2.717,51,0.328,52,1.385,55,1.437,56,1.867,57,1.199,59,2.414,61,0.143,62,1.838,80,0.004,81,0.005,82,0.004,260,4.782,422,2.567,425,2.661,440,4.076,482,3.109,483,3.455,484,3.455,509,3.455,522,4.305,523,7.737,524,6.127,525,4.65,526,4.65]],["title/classes/CourseNews.html",[0,0.146,527,2.84]],["body/classes/CourseNews.html",[0,0.2,2,0.615,3,0.078,4,0.146,5,0.053,7,1.458,8,2.527,9,0.158,10,0.582,12,0.832,14,2.002,15,2.042,16,1.228,17,2.083,21,0.925,23,0.488,24,0.006,25,0.587,26,0.405,27,0.839,28,2.28,29,2.484,30,2.796,32,1.588,33,1.831,34,1.292,39,1.034,41,1.022,42,1.393,43,3.465,44,1.635,45,1.635,46,1.393,47,1.635,48,1.595,49,1.215,50,1.635,51,0.33,52,1.272,54,3.19,55,0.737,56,0.958,57,0.615,61,0.164,62,0.942,64,2.17,66,4.657,70,1.112,76,2.527,80,0.002,81,0.003,82,0.002,91,2.967,92,0.897,107,0.579,143,0.536,146,0.307,220,2.207,221,3.901,222,3.845,224,2.58,244,2.271,273,3.377,335,2.966,360,1.881,409,1.311,412,2.172,422,1.056,425,2.527,449,2.376,517,3.304,522,3.28,527,2.871,528,2.271,529,3.891,530,3.92,531,3.845,532,3.953,533,3.671,534,4.94,535,3.025,536,4.704,537,4.502,538,2.752,539,3.849,540,4.745,541,3.271,542,2.693,543,3.466,544,4.197,545,4.203,546,3.466,547,2.693,548,2.693,549,3.64,550,4.325,551,3.64,552,3.466,553,3.317,554,3.466,555,2.693,556,2.693,557,3.569,558,2.693,559,3.483,560,3.864,561,2.693,562,2.693,563,2.952,564,2.693,565,3.317,566,2.693,567,3.64,568,2.693,569,3.64,570,2.693,571,2.966,572,2.385,573,2.704,574,1.772,575,2.271,576,1.423,577,1.824,578,2.173,579,2.087,580,2.385,581,2.385,582,2.385,583,2.385,584,2.385,585,2.012,586,2.173,587,2.385,588,3.64,589,2.882,590,2.952,591,2.815,592,2.815,593,2.882,594,3.483,595,3.483,596,2.385,597,3.64,598,2.385,599,2.385,600,4.415,601,1.943,602,1.943]],["title/injectables/CourseRepo.html",[210,1.096,603,3.28]],["body/injectables/CourseRepo.html",[0,0.222,3,0.139,4,0.117,5,0.095,7,1.167,9,0.283,18,1.398,21,0.746,23,1.123,24,0.006,25,0.651,26,0.332,27,0.746,34,1.554,41,1.825,51,0.375,55,1.316,57,1.099,61,0.131,80,0.003,81,0.004,82,0.003,87,2.094,92,1.351,107,1.034,111,1.258,136,1.734,143,1.233,210,1.668,211,2.254,213,2.685,220,2.746,229,3.496,230,2.311,242,2.542,245,2.021,264,2.132,300,3.882,301,5.215,303,4.073,409,2.343,413,3.729,414,4.056,415,4.056,420,5.796,421,5.796,482,3.666,603,4.995,604,4.811,605,6.719,606,5.844,607,6.191,608,5.844,609,4.26,610,3.471,611,3.469,612,4.056,613,6.409,614,5.221,615,5.796,616,7.429,617,4.504,618,5.221,619,4.624,620,5.221,621,4.504]],["title/classes/CourseScope.html",[0,0.146,613,3.807]],["body/classes/CourseScope.html",[0,0.208,2,0.993,3,0.126,4,0.105,5,0.085,7,1.406,9,0.256,10,0.821,21,0.838,23,1.26,24,0.006,25,0.686,26,0.388,27,0.785,32,1.385,33,1.597,34,1.494,39,0.951,41,1.65,43,2.941,51,0.363,55,1.19,57,0.993,61,0.119,80,0.003,81,0.004,82,0.003,87,1.893,92,1.265,107,1.401,111,1.137,136,1.678,143,1.154,210,1.562,213,1.706,220,2.658,229,3.272,230,1.623,242,2.298,245,1.827,264,1.927,301,4.181,303,2.861,316,3.199,409,2.118,413,3.371,414,3.667,415,3.667,419,2.392,420,5.426,421,5.426,482,3.431,603,3.509,604,4.349,607,4.349,609,3.851,610,3.138,611,3.852,612,3.667,613,6.778,614,6.289,615,5.426,616,7.073,617,4.072,618,4.72,619,4.328,620,4.72,621,4.072,622,5.131,623,7.039,624,5.131,625,5.131,626,5.051,627,4.072,628,5.283,629,3.851,630,4.675,631,4.072,632,2.401,633,3.851,634,5.77,635,4.886,636,4.886,637,4.072,638,3.667]],["title/classes/Coursegroup.html",[0,0.146,639,2.675]],["body/classes/Coursegroup.html",[0,0.153,2,0.974,3,0.123,4,0.103,5,0.084,7,1.387,8,3.017,9,0.251,10,0.81,14,2.784,15,2.84,16,1.408,17,2.898,18,1.239,21,0.938,23,1.037,24,0.006,25,0.602,26,0.397,27,0.689,28,2.17,29,2.432,30,2.684,32,2.055,33,2.369,34,1.229,37,4.613,39,0.583,41,3.051,42,2.206,43,3.112,44,2.588,45,2.588,46,2.206,47,2.588,48,2.524,49,1.924,50,2.588,51,0.324,52,1.211,55,1.564,56,1.516,57,0.974,59,1.96,61,0.156,62,1.492,63,1.997,70,1.76,76,2.16,80,0.003,81,0.004,82,0.003,92,1.248,107,1.229,136,0.988,143,1.139,146,0.485,229,2.407,264,1.889,413,5.344,422,2.243,425,2.16,446,6.041,457,2.958,489,3.991,490,3.991,510,4.185,518,3.184,519,4.821,520,3.594,615,6.041,639,3.762,640,4.263,641,5.813,642,6.455,643,6.946,644,4.626,645,5.178,646,5.178,647,6.205,648,5.178,649,3.774,650,4.626]],["title/interfaces/CoursegroupInfoProperties.html",[146,0.463,512,3.807]],["body/interfaces/CoursegroupInfoProperties.html",[0,0.189,3,0.152,4,0.127,5,0.103,7,1.274,8,2.611,9,0.309,10,0.927,12,1.622,24,0.006,26,0.382,27,0.789,30,2.443,34,1.129,35,3.922,37,4.237,41,2.913,51,0.374,52,1.385,53,4.888,54,3.36,55,1.79,56,1.867,57,1.199,59,2.414,61,0.143,62,1.838,70,2.168,76,2.661,80,0.004,81,0.005,82,0.004,146,0.598,148,1.78,264,2.327,422,2.06,462,4.07,507,3.922,508,5.251,509,3.455,510,4.661,511,6.068,512,6.675,514,4.912,516,2.37,517,3.109,518,3.922,519,4.427,520,4.427,521,5.699]],["title/injectables/CoursegroupRepo.html",[210,1.096,651,3.807]],["body/injectables/CoursegroupRepo.html",[0,0.231,3,0.147,4,0.123,5,0.1,7,1.236,9,0.3,16,1.255,18,1.481,21,0.774,23,1.164,24,0.006,25,0.676,26,0.344,27,0.774,34,1.095,51,0.382,55,1.394,57,1.164,61,0.139,80,0.004,81,0.005,82,0.004,87,2.218,92,1.402,107,1.095,111,1.333,136,1.489,143,1.279,210,1.731,211,2.387,213,2.758,230,2.397,242,2.693,245,2.141,264,2.258,300,4.111,301,5.327,303,4.225,409,3.706,482,3.017,510,3.093,518,4.797,609,4.512,610,3.677,611,3.564,612,4.296,619,4.797,621,4.771,639,3.352,651,6.013,652,5.096,653,7.801,654,6.19,655,6.969,656,6.19,657,6.584,658,5.53,659,5.53,660,5.53,661,5.53]],["title/classes/CoursegroupScope.html",[0,0.146,657,3.807]],["body/classes/CoursegroupScope.html",[0,0.215,2,1.046,3,0.132,4,0.111,5,0.09,7,1.455,9,0.27,10,0.849,16,1.128,21,0.855,23,1.286,24,0.006,25,0.703,26,0.395,27,0.806,32,1.459,33,1.682,34,0.985,39,0.97,43,3.017,51,0.369,55,1.253,57,1.046,61,0.125,80,0.003,81,0.004,82,0.003,87,1.993,92,1.309,107,1.437,111,1.198,136,1.39,143,1.194,210,1.616,213,1.797,230,1.71,242,2.42,245,1.924,264,2.03,301,4.327,303,3.013,316,3.31,409,3.585,419,2.476,482,2.712,510,2.78,518,4.479,609,4.056,610,3.305,611,3.901,612,3.862,619,4.479,621,4.289,622,5.31,624,5.31,625,5.31,626,5.182,627,4.289,629,4.056,630,4.838,631,4.289,632,2.528,633,4.056,634,5.92,635,5.056,636,5.056,637,4.289,638,3.862,639,3.013,651,4.289,652,4.58,655,4.971,657,6.894,658,6.508,659,4.971,660,4.971,661,4.971,662,7.284,663,5.564]],["title/classes/CreateNewsParams.html",[0,0.146,664,3.428]],["body/classes/CreateNewsParams.html",[0,0.207,2,0.985,3,0.125,4,0.104,5,0.085,9,0.254,10,0.816,16,1.419,21,0.87,24,0.006,26,0.387,27,0.694,28,2.187,29,2.372,39,1.054,51,0.326,52,1.683,61,0.118,68,5.369,80,0.003,81,0.004,82,0.003,91,3.382,124,3.127,136,1,221,3.843,222,3.939,223,4.847,228,3.791,529,3.866,530,3.824,531,4.382,533,4.269,563,2.554,664,4.858,665,7.427,666,4.038,667,3.331,668,5.395,669,4.158,670,7,671,4.68,672,5.239,673,5.762,674,4.158,675,5.762,676,5.395,677,5.762,678,4.858,679,4.858,680,5.239,681,5.239,682,4.467,683,4.467,684,5.239,685,5.239,686,5.746,687,5.762,688,4.304,689,5.239,690,5.239,691,4.89,692,4.858,693,2.493,694,6.254,695,5.762,696,7.218,697,3.221,698,3.819,699,3.112]],["title/controllers/DashboardController.html",[700,2.195,701,3.807]],["body/controllers/DashboardController.html",[0,0.197,3,0.158,4,0.133,5,0.108,9,0.323,21,0.661,24,0.006,29,1.802,51,0.39,61,0.15,80,0.004,81,0.005,82,0.004,87,2.387,92,1.467,107,1.179,111,1.435,136,1.559,143,1.092,213,2.852,230,2.509,242,2.899,245,2.304,667,4.202,700,2.962,701,6.295,702,3.33,703,5.953,704,4.252,705,5.953,706,9.204,707,6.663,708,6.129,709,5.953,710,4.252,711,4.857,712,4.625,713,5.136,714,6.663,715,4.857,716,6.663,717,6.663,718,5.136,719,6.663]],["title/classes/DashboardEntity.html",[0,0.146,720,2.84]],["body/classes/DashboardEntity.html",[0,0.239,2,0.897,3,0.113,4,0.095,5,0.077,7,1.312,8,2.952,9,0.231,10,0.766,14,2.633,15,2.685,16,1.641,17,2.74,18,1.141,21,0.892,23,0.712,24,0.006,25,0.413,26,0.397,27,0.473,28,2.051,29,2.189,30,1.465,32,1.722,33,1.985,34,1.162,39,1.012,41,1.49,42,2.031,43,3.007,44,2.383,45,2.383,46,2.031,47,2.383,48,2.324,49,1.772,50,2.383,51,0.197,57,0.897,61,0.197,62,1.374,64,1.709,70,1.621,80,0.003,81,0.004,82,0.003,91,3.122,92,1.18,99,2.957,107,0.844,143,1.327,146,0.616,360,3.776,422,2.121,425,1.99,440,3.367,451,2.932,453,2.742,482,2.324,577,4.189,720,3.776,721,3.167,722,5.376,723,5.9,724,6.567,725,5.971,726,4.769,727,5.892,728,4.362,729,4.191,730,5.376,731,5.9,732,2.932,733,3.282,734,3.476,735,2.833,736,3.476,737,3.167,738,3.476,739,3.476,740,3.476,741,2.932,742,3.476,743,4.787,744,5.165,745,5.638,746,2.932,747,3.476,748,4.787,749,4.787,750,3.476,751,3.476,752,3.476,753,3.476,754,4.787,755,3.476]],["title/classes/DashboardGridElementResponse.html",[0,0.146,756,3.6]],["body/classes/DashboardGridElementResponse.html",[0,0.213,2,1.026,3,0.13,4,0.109,5,0.088,9,0.264,10,0.839,16,1.886,21,0.906,24,0.006,26,0.403,29,2.469,39,1.076,51,0.225,52,0.951,61,0.162,80,0.003,81,0.004,82,0.003,91,3.589,99,2.762,124,3.155,234,3.242,411,4.136,550,3.482,682,5.133,683,5.133,691,5.328,693,2.597,699,4.779,705,5.243,712,3.788,722,6.499,728,5.344,729,5.133,744,4.589,745,4.777,756,5.864,757,4.493,758,7.188,759,7.188,760,6.335,761,8.055,762,5.457,763,5.457,764,6.426,765,5.457,766,5.457,767,7.64,768,5.457,769,5.457,770,4.207,771,4.876]],["title/classes/DashboardMapper.html",[0,0.146,713,3.807]],["body/classes/DashboardMapper.html",[0,0.189,2,1.202,3,0.152,4,0.127,5,0.103,9,0.31,21,0.634,23,0.954,24,0.006,25,0.554,26,0.282,27,0.634,34,1.409,51,0.329,61,0.144,80,0.004,81,0.005,82,0.004,92,1.43,107,1.131,136,1.732,143,1.305,538,3.939,667,3.787,705,4.659,712,6.296,713,6.135,720,5.216,756,5.802,772,5.711,773,5.287,774,7.959,775,6.392,776,5.262,777,4.246,778,4.246,779,6.392,780,6.392,781,6.392,782,7.959,783,3.194,784,6.392,785,6.392,786,6.392,787,6.392,788,6.392,789,6.392,790,6.392,791,6.392,792,6.392,793,6.392,794,6.392,795,6.392,796,6.392,797,6.392,798,6.392]],["title/injectables/DashboardRepo.html",[210,1.096,799,3.428]],["body/injectables/DashboardRepo.html",[0,0.204,3,0.164,4,0.138,5,0.112,9,0.334,21,0.684,24,0.006,34,1.221,51,0.344,61,0.188,80,0.004,81,0.005,82,0.004,92,1.499,107,1.221,111,1.485,136,1.711,146,0.647,210,1.85,211,2.66,230,2.755,720,3.967,732,4.242,733,3.447,746,5.128,776,5.679,799,5.789,800,5.679,801,7.851,802,6.898,803,6.079,804,6.163,805,6.163,806,5.028,807,6.163,808,6.163,809,3.447]],["title/classes/DashboardResponse.html",[0,0.146,712,3.428]],["body/classes/DashboardResponse.html",[0,0.227,2,1.133,3,0.143,4,0.12,5,0.097,9,0.292,10,0.894,16,1.931,21,0.761,24,0.006,26,0.338,29,2.074,39,1.055,51,0.249,52,1.336,61,0.172,80,0.003,81,0.004,82,0.003,91,3.253,99,2.476,124,3.22,234,4.554,411,3.464,550,4.892,682,5.382,683,5.382,691,5.427,693,2.866,699,5.01,705,6.472,712,5.322,722,6.225,728,4.001,729,3.844,744,3.844,745,4.001,756,6.148,757,4.959,758,5.382,759,5.382,760,5.322,761,7.715,764,5.382,767,6.85,770,5.91,771,7.536,810,6.024,811,6.024]],["title/injectables/DashboardUc.html",[210,1.096,708,3.428]],["body/injectables/DashboardUc.html",[0,0.2,3,0.161,4,0.135,5,0.109,9,0.328,18,1.618,21,0.818,23,1.01,24,0.006,25,0.586,26,0.298,27,0.671,51,0.367,61,0.152,80,0.004,81,0.005,82,0.004,87,2.423,92,1.481,107,1.197,111,1.456,136,1.291,143,1.109,210,1.828,211,2.609,213,2.87,230,2.532,245,2.339,419,2.299,705,6.007,708,5.72,720,3.89,799,5.72,801,7.616,803,6.744,812,6.043,813,6.764,814,6.764,815,6.764,816,4.159,817,6.764,818,6.043,819,6.764,820,6.764]],["title/classes/DefaultGridReference.html",[0,0.146,732,3.037]],["body/classes/DefaultGridReference.html",[0,0.248,2,0.978,3,0.124,4,0.104,5,0.084,7,1.039,8,2.289,9,0.252,10,0.813,16,1.413,18,1.245,21,0.78,23,0.777,24,0.006,25,0.451,26,0.347,27,0.516,39,1.066,51,0.215,57,0.978,61,0.203,62,1.499,64,1.864,70,1.769,80,0.003,81,0.004,82,0.003,91,3.547,92,1.252,99,3.018,107,0.921,143,1.376,146,0.653,360,4.007,422,1.681,451,3.2,453,2.992,482,2.537,577,4.381,720,2.992,721,3.456,722,4.629,723,3.793,725,5.811,727,6.25,728,4.629,729,4.447,730,5.811,731,6.703,732,4.285,733,3.926,734,3.793,735,3.091,736,3.793,737,3.456,738,5.08,739,3.793,740,3.793,741,3.2,742,3.793,743,5.08,744,5.355,745,5.811,746,3.2,747,3.793,748,5.08,749,5.08,750,3.793,751,3.793,752,3.793,753,3.793,754,5.08,755,3.793,821,6.969,822,5.204]],["title/controllers/DelayController.html",[700,2.195,823,3.807]],["body/controllers/DelayController.html",[0,0.187,3,0.151,4,0.126,5,0.103,9,0.307,21,0.629,24,0.006,29,1.715,32,2.077,34,1.122,51,0.357,61,0.143,80,0.004,81,0.005,82,0.004,92,1.423,107,1.122,111,1.365,115,3.09,136,1.512,143,1.298,184,2.881,213,2.789,230,2.654,245,2.193,401,5.772,700,3.52,702,3.957,823,6.656,824,6.519,825,5.219,826,7.446,827,6.34,828,5.496,829,4.677,830,5.26,831,4.554,832,6.104,833,5.664,834,6.34,835,4.046,836,5.219,837,6.519,838,5.664,839,5.664,840,6.34,841,4.887,842,3.251,843,5.219,844,5.496,845,5.219,846,3.339,847,4.621,848,4.887]],["title/injectables/DurationLoggingInterceptor.html",[210,1.096,849,4.066]],["body/injectables/DurationLoggingInterceptor.html",[0,0.182,3,0.147,4,0.123,5,0.1,9,0.299,10,0.907,21,0.772,23,0.92,24,0.006,25,0.534,26,0.272,27,0.612,32,1.617,33,1.864,34,1.377,51,0.37,61,0.139,80,0.004,81,0.004,82,0.004,87,3.055,92,1.398,107,1.091,111,1.327,124,2.06,136,1.177,143,1.011,210,1.726,211,2.378,398,5.168,419,2.898,591,3.963,678,4.279,733,3.081,832,5.998,844,5.401,849,6.406,850,7.617,851,5.509,852,7.781,853,5.998,854,5.168,855,5.149,856,6.952,857,6.952,858,6.902,859,8,860,6.166,861,3.339,862,7.617,863,7.781,864,6.166,865,5.076,866,6.166,867,5.509,868,5.509,869,6.166,870,7.781,871,6.166,872,6.166,873,6.166]],["title/modules/ErrorModule.html",[170,1.423,385,3.6]],["body/modules/ErrorModule.html",[0,0.206,3,0.166,4,0.139,5,0.113,24,0.006,32,2.202,51,0.372,61,0.157,80,0.004,81,0.005,82,0.004,111,1.502,124,2.33,170,2.419,172,2.852,184,3.169,239,5.357,374,4.093,385,6.12,400,4.987,404,7.206,835,4.451,846,3.673,874,6.975,875,7.501,876,5.163,877,5.357,878,6.12,879,6.975,880,6.975,881,5.376]],["title/classes/ErrorResponse.html",[0,0.146,109,2.934]],["body/classes/ErrorResponse.html",[0,0.188,2,1.195,3,0.151,4,0.127,5,0.103,18,1.897,21,0.63,23,0.948,24,0.006,25,0.55,26,0.411,27,0.63,39,1.106,51,0.262,61,0.143,80,0.004,81,0.005,82,0.004,87,3.243,88,4.023,90,4.97,91,3.334,99,2.791,109,4.71,110,4.897,111,1.368,117,4.018,124,2.649,125,5.741,126,4.559,127,5.059,128,4.294,357,5.676,466,5.267,882,5.676,883,6.353,884,6.353,885,6.353,886,5.23,887,6.353,888,3.906,889,5.676,890,3.906,891,3.023,892,3.906,893,4.409,894,4.897]],["title/injectables/FeathersAuthProvider.html",[203,3.28,210,1.096]],["body/injectables/FeathersAuthProvider.html",[0,0.127,3,0.102,4,0.086,5,0.069,9,0.208,12,2.268,14,1.721,18,1.027,21,0.842,23,1.267,24,0.006,25,0.735,26,0.374,27,0.842,34,0.76,39,0.92,41,2.217,51,0.337,55,0.967,57,0.807,61,0.097,80,0.002,81,0.004,82,0.002,92,1.096,107,1.445,111,0.924,136,1.757,143,1.391,146,0.402,203,4.052,210,1.353,211,1.655,213,3.104,220,2.998,221,4.136,222,4.362,223,4.753,224,3.478,229,4.057,230,2.828,231,4.235,241,3.835,242,1.867,245,2.824,255,2.468,260,3.128,264,1.566,377,3.547,412,3.552,419,2.412,535,1.687,632,1.95,828,4.235,829,2.325,895,7.798,896,3.533,897,6.101,898,6.342,899,6.101,900,6.101,901,6.342,902,4.292,903,5.414,904,4.292,905,6.101,906,4.292,907,3.835,908,4.292,909,6.101,910,4.292,911,6.101,912,4.292,913,4.292,914,4.292,915,5.451,916,4.292,917,3.835,918,6.101,919,3.835,920,6.101,921,6.101,922,4.292,923,4.292,924,4.292,925,6.101,926,6.101,927,6.101,928,4.292,929,3.129,930,4.292,931,4.292,932,4.292,933,2.092,934,5.022,935,3.835,936,4.292,937,4.292,938,2.393]],["title/interfaces/FeathersError.html",[146,0.463,939,3.6]],["body/interfaces/FeathersError.html",[3,0.17,4,0.143,5,0.116,7,1.702,9,0.346,10,0.994,24,0.006,26,0.436,39,1.1,61,0.161,80,0.004,81,0.005,82,0.004,88,4.19,99,2.94,117,3.961,146,0.67,148,1.996,939,6.211,940,6.388,941,6.388,942,8.421]],["title/modules/FeathersModule.html",[170,1.423,201,3.428]],["body/modules/FeathersModule.html",[0,0.192,3,0.154,4,0.129,5,0.105,24,0.006,51,0.332,61,0.146,80,0.004,81,0.005,82,0.004,111,1.396,124,2.166,170,2.627,172,3.567,173,3.733,180,4.478,181,3.415,182,2.947,184,3.649,201,6.718,205,4.478,208,4.595,377,4.013,378,3.914,831,4.618,903,6.395,917,5.793,943,5.793,944,5.793,945,5.793,946,6.484,947,5.334,948,4.77,949,4.478,950,4.229,951,5.124,952,5.574,953,5.574,954,5.574,955,5.574,956,6.611]],["title/interfaces/FeathersService.html",[146,0.463,957,3.807]],["body/interfaces/FeathersService.html",[0,0.147,3,0.118,4,0.099,5,0.081,9,0.241,16,1.372,21,0.762,23,1.01,24,0.006,25,0.586,26,0.364,27,0.671,34,0.881,39,0.561,51,0.356,57,0.937,61,0.185,65,2.623,75,3.219,80,0.003,81,0.004,82,0.003,92,1.216,101,4.494,107,1.197,111,1.072,127,3.178,136,1.291,143,0.816,146,0.467,148,1.39,170,1.435,172,2.037,208,4.047,210,1.501,220,2.492,230,2.533,243,4.285,255,2.864,281,3.063,345,3.298,377,4.624,378,2.428,419,1.693,444,3.308,589,3.219,590,3.298,591,3.145,592,3.145,593,3.219,594,3.891,611,2.823,816,3.063,831,4.956,835,3.178,903,3.178,938,2.777,947,3.308,948,5.12,949,2.777,950,4.539,951,3.178,952,3.457,953,3.457,954,3.457,955,3.457,956,4.1,957,6.353,958,5.922,959,3.631,960,4.119,961,7.364,962,5.475,963,6.045,964,7.486,965,4.981,966,5.466,967,6.045,968,4.981,969,4.45,970,3.178,971,4.1,972,5.215,973,5.57,974,4.1,975,4.45,976,4.45,977,4.45,978,6.045,979,4.45,980,3.631,981,4.317,982,3.839,983,3.308,984,4.45,985,4.45,986,4.45,987,3.839,988,3.457,989,3.063,990,4.45]],["title/injectables/FeathersServiceProvider.html",[210,1.096,903,3.151]],["body/injectables/FeathersServiceProvider.html",[0,0.147,3,0.119,4,0.099,5,0.081,9,0.242,16,1.011,18,1.194,21,0.763,23,1.011,24,0.006,25,0.587,26,0.364,27,0.672,34,0.883,39,0.866,51,0.356,57,0.938,61,0.186,65,2.627,75,3.223,80,0.003,81,0.004,82,0.003,92,1.217,101,4.499,107,0.883,111,1.074,124,1.667,127,3.183,136,1.293,143,0.818,146,0.468,170,1.437,172,2.769,208,4.344,210,1.503,211,1.924,220,2.048,230,2.081,243,4.288,255,2.869,281,3.067,377,4.625,378,3.301,419,1.695,444,4.499,589,3.223,590,3.301,591,3.148,592,3.148,593,3.223,594,3.895,611,2.826,816,3.067,831,4.743,835,3.183,903,4.322,938,2.782,947,4.499,948,4.899,949,3.777,950,4.942,951,4.322,952,4.701,953,4.701,954,4.701,955,4.701,956,5.576,957,6.358,958,5.927,959,3.636,960,2.493,961,6.051,962,4.499,963,4.457,964,6.33,966,4.728,967,4.457,969,4.457,970,3.183,971,4.107,972,5.221,973,5.576,974,4.107,975,4.457,976,4.457,977,6.051,978,6.051,979,4.457,980,3.636,981,4.322,982,3.845,983,3.314,984,4.457,985,4.457,986,4.457,987,3.845,988,3.462,989,3.067,990,4.457,991,6.773,992,4.989,993,4.989,994,4.989,995,3.462]],["title/classes/FileTaskInfo.html",[0,0.146,996,3.151]],["body/classes/FileTaskInfo.html",[0,0.167,2,1.065,3,0.135,4,0.113,5,0.092,7,1.472,8,3.084,9,0.274,10,0.859,12,1.44,14,2.954,15,3.013,16,1.494,17,3.075,18,1.355,21,0.932,23,0.846,24,0.006,25,0.779,26,0.397,27,0.562,28,2.302,29,2.494,30,2.833,32,1.933,33,2.228,34,1.304,39,0.977,41,1.769,42,2.413,43,3.223,44,2.831,45,2.831,46,2.413,47,2.831,48,2.761,49,2.105,50,2.831,51,0.338,52,1.285,55,1.276,56,1.658,57,1.065,59,2.144,61,0.127,62,1.632,70,1.925,80,0.003,81,0.004,82,0.003,146,0.531,422,2.38,425,2.363,483,3.068,484,3.068,509,3.068,514,4.569,516,3.342,517,2.761,532,4.699,586,3.762,996,4.703,997,7.142,998,6.687,999,7.37,1000,5.664,1001,3.483,1002,5.061]],["title/interfaces/FileTaskInfoProperties.html",[146,0.463,998,3.807]],["body/interfaces/FileTaskInfoProperties.html",[0,0.195,3,0.157,4,0.132,5,0.107,7,1.319,8,2.668,9,0.32,10,0.947,12,1.68,24,0.006,25,0.816,26,0.358,30,2.703,39,1.034,51,0.363,52,1.416,55,1.488,56,1.934,57,1.242,59,2.501,61,0.149,62,1.903,70,2.246,80,0.004,81,0.005,82,0.004,146,0.619,148,1.844,422,2.134,483,3.578,484,3.578,509,3.578,514,4.962,516,3.018,517,3.221,532,5.103,586,4.389,996,4.216,997,5.439,998,6.781,1001,4.063,1002,5.903]],["title/interfaces/GlobalConstants.html",[146,0.463,1003,3.807]],["body/interfaces/GlobalConstants.html",[3,0.163,4,0.136,5,0.111,9,0.331,10,0.967,24,0.006,26,0.394,27,0.921,39,1.12,51,0.282,61,0.154,80,0.004,81,0.005,82,0.004,136,1.584,146,0.641,148,1.908,1003,6.884,1004,5.629,1005,7.832,1006,7.832,1007,7.832,1008,6.829,1009,6.838,1010,6.829,1011,3.703,1012,4.984]],["title/classes/GlobalErrorFilter.html",[0,0.146,878,3.6]],["body/classes/GlobalErrorFilter.html",[0,0.151,2,0.636,3,0.08,4,0.067,5,0.055,9,0.164,10,0.598,21,0.614,23,0.765,24,0.006,25,0.536,26,0.327,27,0.508,30,1.04,32,0.887,33,1.023,34,1.38,49,1.257,51,0.344,61,0.076,64,1.213,80,0.002,81,0.003,82,0.002,83,4.581,86,4.581,87,2.215,88,3.066,90,2.946,91,2.385,92,1.111,107,1.221,109,5.253,111,0.729,115,1.65,116,2.775,117,4.656,121,2.609,125,2.248,126,5.155,128,1.833,133,2.609,134,3.024,136,1.85,143,1.515,146,0.317,208,3.257,243,2.857,306,5.411,316,2.81,337,3.044,341,5.678,374,2.498,378,1.65,419,2.102,538,2.81,589,2.438,590,2.498,591,2.382,592,2.382,593,1.61,733,2.561,855,5.085,876,4.556,878,3.735,933,1.65,939,5.027,942,3.024,949,1.887,970,2.16,1013,5.316,1014,2.467,1015,6.184,1016,5.711,1017,5.091,1018,5.124,1019,3.384,1020,5.124,1021,6.184,1022,6.897,1023,3.384,1024,6.184,1025,3.384,1026,3.384,1027,3.024,1028,3.024,1029,3.384,1030,3.384,1031,3.384,1032,2.786,1033,3.024,1034,2.786,1035,5.902,1036,2.786,1037,2.248,1038,3.024,1039,3.556,1040,2.786,1041,2.467,1042,4.107,1043,2.248,1044,2.786,1045,3.024,1046,4.578,1047,3.024,1048,2.786,1049,3.024,1050,3.024,1051,3.024,1052,3.024,1053,3.024,1054,3.673,1055,4.218,1056,3.384,1057,3.384,1058,4.218,1059,5.711,1060,3.384,1061,3.384,1062,3.384,1063,4.218,1064,3.384,1065,3.384,1066,5.124,1067,3.384,1068,3.384,1069,2.349,1070,4.578,1071,2.467,1072,3.024,1073,2.248,1074,2.16,1075,4.578,1076,3.448,1077,2.786,1078,4.578,1079,3.024,1080,3.95,1081,3.024,1082,3.024,1083,2.609,1084,2.786,1085,3.024,1086,3.024,1087,2.786,1088,2.786,1089,2.786,1090,2.609,1091,2.609,1092,3.024,1093,3.024,1094,3.024,1095,3.024,1096,6.62,1097,2.786,1098,6.62,1099,3.024,1100,2.786,1101,3.024,1102,3.384,1103,3.384,1104,3.384,1105,5.124,1106,3.384,1107,3.384]],["title/classes/GlobalValidationPipe.html",[0,0.146,1108,3.807]],["body/classes/GlobalValidationPipe.html",[0,0.248,2,1.124,3,0.142,4,0.119,5,0.097,7,1.524,10,0.697,18,2.011,21,0.593,24,0.006,26,0.371,29,2.064,32,2.001,34,1.058,51,0.315,61,0.134,62,1.722,64,2.734,80,0.003,81,0.004,82,0.003,83,3.97,96,5.296,111,1.287,116,4.795,124,1.997,128,3.237,133,4.607,143,0.98,296,3.148,336,5.562,400,4.532,576,3.656,632,2.716,667,3.999,691,3.333,697,4.692,783,2.987,891,2.844,933,2.914,966,3.676,981,3.814,988,4.149,1108,5.881,1109,6.817,1110,5.341,1111,6.281,1112,4.692,1113,6.281,1114,6.281,1115,6.281,1116,4.869,1117,8.404,1118,5.978,1119,5.296,1120,4.921,1121,5.978,1122,4.149,1123,5.978,1124,5.978,1125,5.978,1126,5.978,1127,4.607,1128,4.357,1129,4.357,1130,5.978,1131,4.357,1132,5.978,1133,4.921,1134,3.676,1135,5.341,1136,4.357,1137,3.551,1138,5.978,1139,5.978]],["title/classes/GridElement.html",[0,0.146,746,3.037]],["body/classes/GridElement.html",[0,0.243,2,0.931,3,0.118,4,0.099,5,0.08,7,0.988,8,2.212,9,0.24,10,0.786,16,1.366,18,1.184,21,0.88,23,0.739,24,0.006,25,0.429,26,0.391,27,0.491,39,0.999,51,0.204,57,0.931,61,0.2,62,1.426,64,1.773,70,1.682,80,0.003,81,0.004,82,0.003,91,3.171,92,1.21,99,3.151,107,1.192,143,1.348,146,0.631,360,3.874,422,1.598,440,2.538,451,3.043,453,2.846,482,2.412,577,5.062,720,2.846,721,3.287,722,4.475,723,3.608,725,5.893,727,6.158,728,4.475,729,4.299,730,6.03,731,6.617,732,3.043,733,3.827,734,3.608,735,2.94,736,3.608,737,3.287,738,3.608,739,3.608,740,3.608,741,3.043,742,3.608,743,6.269,744,5.488,745,6.03,746,4.142,747,4.91,748,4.91,749,4.91,750,3.608,751,5.582,752,5.582,753,3.608,754,4.91,755,3.608,1140,4.949,1141,4.949,1142,4.949,1143,4.949,1144,4.949,1145,4.949]],["title/interfaces/HtmlMailContent.html",[146,0.463,164,3.037]],["body/interfaces/HtmlMailContent.html",[3,0.15,4,0.126,5,0.102,7,1.858,9,0.306,10,0.922,24,0.006,25,0.548,26,0.349,27,0.785,39,1.145,61,0.142,80,0.004,81,0.005,82,0.004,146,0.902,147,4.863,148,1.766,149,4.037,150,5.305,151,5.253,152,4.203,153,4.203,154,4.863,155,4.037,156,4.203,157,4.203,158,5.558,159,4.037,160,4.203,161,4.863,162,6.18,163,6.18,164,5.305,165,4.283,166,4.037,167,4.203,168,4.203,169,4.203]],["title/interfaces/ICourseProperties.html",[146,0.463,423,3.807]],["body/interfaces/ICourseProperties.html",[0,0.119,3,0.096,4,0.08,5,0.065,7,0.805,8,1.916,9,0.402,10,0.68,12,1.025,16,1.183,18,0.965,24,0.006,25,0.76,26,0.378,27,0.901,30,2.696,32,2.179,37,2.679,39,1.079,41,3.008,51,0.283,52,1.017,55,1.314,56,1.18,57,0.758,59,1.526,61,0.091,62,1.162,63,3.074,70,1.371,76,2.434,80,0.002,81,0.003,82,0.002,99,1.302,124,2.931,136,1.434,143,1.307,146,0.547,148,1.126,220,2.41,264,1.471,296,3.61,303,2.184,378,1.966,396,2.396,409,1.617,410,3.108,411,5.221,412,3.467,413,5.086,414,5.532,415,5.532,416,2.573,417,2.573,419,1.983,420,4.497,421,4.497,422,1.302,423,5.284,426,6.124,428,6.124,430,6.124,436,3.603,442,2.573,444,3.875,445,3.603,446,3.108,447,2.396,448,2.799,449,1.919,450,3.32,451,3.587,452,3.875,453,3.355,454,2.573,455,2.799,456,1.919,457,2.92,458,3.603,460,3.603,462,2.573,463,2.94,464,3.32,465,3.603,466,3.875,467,4.803,468,3.603,469,3.108,470,3.603,471,2.799,472,3.603,473,3.603,474,3.32,475,2.94,476,2.94,477,5.214,478,3.603,479,3.603,480,3.32,481,3.32,482,1.966,483,3.16,484,2.184,485,5.212,486,3.603,487,3.603,488,3.603,489,4.497,490,3.108,491,5.212,492,3.603,493,5.212,494,3.603,495,5.212,496,3.603,497,6.124,498,4.215,499,6.124,500,3.603,501,3.108,502,5.212,503,5.212,504,5.212,505,3.603,506,3.603]],["title/interfaces/ICoursegroupProperties.html",[146,0.463,642,3.807]],["body/interfaces/ICoursegroupProperties.html",[0,0.184,3,0.148,4,0.124,5,0.101,7,1.244,8,2.572,9,0.302,10,0.913,24,0.006,26,0.345,27,0.777,30,2.632,37,4.136,41,3.099,51,0.354,52,1.365,55,1.763,56,1.823,57,1.171,59,2.357,61,0.176,62,1.794,63,2.402,70,2.116,76,2.598,80,0.004,81,0.005,82,0.004,136,1.189,143,1.284,146,0.584,148,1.738,264,2.272,413,5.909,422,2.011,446,4.8,457,2.652,489,4.8,490,4.8,510,4.628,518,3.829,519,5.435,520,4.322,615,6.602,639,3.372,640,5.126,641,4.322,642,6.602,647,5.563,649,4.539,650,5.563]],["title/interfaces/ICreateNews.html",[146,0.463,1146,3.428]],["body/interfaces/ICreateNews.html",[3,0.138,4,0.116,5,0.094,9,0.281,10,0.873,20,3.567,24,0.006,26,0.422,27,0.822,28,2.588,39,1.045,51,0.361,57,1.091,61,0.204,80,0.003,81,0.004,82,0.003,91,3.377,124,1.938,146,0.87,148,1.619,220,2.505,221,3.648,222,4.141,223,5.095,409,3,440,3.838,457,2.471,482,2.827,517,4.039,522,4.053,529,3.712,530,4.118,531,4.375,533,4.741,535,2.942,557,3.942,563,2.827,571,3.446,573,4.053,574,4.053,1146,5.195,1147,4.228,1148,6.687,1149,4.026,1150,4.026,1151,4.228,1152,4.228,1153,5.182,1154,4.026,1155,3.853]],["title/interfaces/ICurrentUser.html",[146,0.463,1156,2.532]],["body/interfaces/ICurrentUser.html",[1,4.436,3,0.145,4,0.121,5,0.098,9,0.295,10,0.9,12,2.266,15,2.487,16,1.905,17,2.538,24,0.006,25,0.527,26,0.406,28,2.41,39,1.154,61,0.191,80,0.004,81,0.004,82,0.004,146,0.794,148,1.698,224,2.59,229,4.142,237,5.124,412,4.152,1156,3.956,1157,4.688,1158,5.686,1159,4.843,1160,4.471,1161,3.671,1162,6.184,1163,5.354,1164,5.124,1165,3.203,1166,3.203]],["title/interfaces/IDashboardRepo.html",[146,0.463,803,3.6]],["body/interfaces/IDashboardRepo.html",[0,0.204,3,0.164,4,0.138,5,0.112,9,0.334,21,0.684,24,0.006,34,1.221,51,0.344,61,0.188,80,0.004,81,0.005,82,0.004,92,1.499,107,1.221,111,1.485,136,1.711,146,0.647,148,1.925,210,1.85,230,2.755,720,3.967,732,4.242,733,3.447,746,5.128,776,5.679,799,4.788,800,5.679,801,7.851,803,6.535,804,6.163,805,6.163,806,5.028,807,6.163,808,6.163,809,3.447,1167,6.898]],["title/interfaces/IErrorType.html",[146,0.463,343,3.6]],["body/interfaces/IErrorType.html",[3,0.17,4,0.143,5,0.116,9,0.347,10,0.995,24,0.006,26,0.436,39,1.128,61,0.161,80,0.004,81,0.005,82,0.004,87,3.265,91,3.638,118,6.876,146,0.672,148,2,343,6.22,1168,6.402,1169,6.402]],["title/interfaces/IFindOptions.html",[146,0.463,1170,3.28]],["body/interfaces/IFindOptions.html",[3,0.164,4,0.138,5,0.112,9,0.334,10,0.973,20,4.242,24,0.006,26,0.396,27,0.924,61,0.21,80,0.004,81,0.005,82,0.004,99,2.693,146,0.782,148,1.925,563,3.362,1170,5.54,1171,5.028,1172,5.028,1173,5.532,1174,5.356,1175,7.667,1176,6.789,1177,4.582,1178,4.788,1179,5.028,1180,6.866,1181,6.866]],["title/interfaces/IGridElement.html",[146,0.463,725,3.28]],["body/interfaces/IGridElement.html",[0,0.251,3,0.127,4,0.107,5,0.087,7,1.069,8,2.333,9,0.259,10,0.828,16,1.44,24,0.006,26,0.352,39,1.022,51,0.221,57,1.007,61,0.204,62,1.543,64,1.919,70,1.82,80,0.003,81,0.004,82,0.003,91,3.274,99,3.037,143,1.391,146,0.666,148,1.495,360,4.084,422,1.729,451,3.293,453,3.079,482,2.61,577,4.444,720,3.079,721,3.557,722,4.718,723,3.903,725,6.03,727,6.13,728,4.718,729,4.532,730,5.638,731,6.752,732,3.293,733,3.549,734,3.903,735,3.181,736,3.903,737,3.557,738,3.903,739,3.903,740,3.903,741,3.293,742,3.903,743,6.438,744,5.416,745,5.867,746,3.293,747,3.903,748,5.177,749,5.177,750,3.903,751,3.903,752,3.903,753,3.903,754,5.177,755,3.903,1054,5.042]],["title/interfaces/IGridElementReference.html",[146,0.463,730,3.28]],["body/interfaces/IGridElementReference.html",[0,0.252,3,0.129,4,0.108,5,0.088,7,1.082,8,2.351,9,0.263,10,0.835,16,1.451,24,0.006,26,0.316,39,1.026,51,0.224,57,1.019,61,0.205,62,1.561,64,1.942,70,1.842,80,0.003,81,0.004,82,0.003,91,3.289,99,3.045,143,1.398,146,0.671,148,1.513,360,4.117,422,1.75,451,3.333,453,3.117,482,2.642,577,4.471,720,3.117,721,3.6,722,4.755,723,3.951,725,5.89,727,6.155,728,4.755,729,4.569,730,5.89,731,6.772,732,3.333,733,3.578,734,3.951,735,3.219,736,3.951,737,3.6,738,3.951,739,3.951,740,3.951,741,3.333,742,3.951,743,5.219,744,5.442,745,5.89,746,3.333,747,3.951,748,5.219,749,5.219,750,3.951,751,3.951,752,3.951,753,3.951,754,5.219,755,3.951,1054,4.253]],["title/interfaces/ILogger.html",[146,0.463,1182,3.807]],["body/interfaces/ILogger.html",[3,0.143,4,0.12,5,0.097,9,0.291,21,0.909,23,1.367,24,0.006,25,0.793,26,0.404,27,0.965,39,1.14,61,0.135,80,0.003,81,0.004,82,0.003,90,5.266,92,1.374,107,1.621,117,3.555,146,0.562,148,1.675,345,4.564,861,5.436,1182,5.895,1183,5.361,1184,5.895,1185,5.08,1186,7.649,1187,7.649,1188,6,1189,6,1190,6.833,1191,6.931,1192,6,1193,6.833,1194,6,1195,6,1196,6,1197,6.833,1198,6,1199,5.361,1200,5.361]],["title/interfaces/INewsProperties.html",[66,3.151,146,0.463]],["body/interfaces/INewsProperties.html",[0,0.221,3,0.095,4,0.165,5,0.065,7,1.496,8,1.907,9,0.194,10,0.677,12,1.019,16,0.812,24,0.006,25,0.503,26,0.4,27,0.869,28,2.34,30,2.628,34,1.209,39,1.084,51,0.353,52,1.386,54,3.059,55,0.902,56,1.173,57,0.753,61,0.179,62,1.154,64,2.447,66,4.779,70,1.362,76,2.85,80,0.002,81,0.003,82,0.002,91,3.197,143,0.657,146,0.376,148,1.118,220,2.832,221,3.651,222,3.413,224,1.707,244,2.781,273,3.809,335,3.45,360,2.304,409,1.606,412,1.743,422,1.294,425,1.672,449,1.907,517,3.651,522,3.145,527,2.304,528,2.781,529,3.739,530,4.12,531,4.143,532,4.49,533,4.306,534,5.795,535,3.362,536,5.518,537,5.281,538,1.821,540,4.917,543,2.781,544,3.928,546,2.781,549,2.921,550,3.706,551,2.921,552,2.781,553,2.662,554,2.781,557,3.597,559,4.307,560,4.779,563,2.831,565,2.662,567,2.921,569,2.921,571,3.45,572,2.921,573,3.145,574,2.17,575,2.781,576,1.743,577,2.234,578,2.662,579,2.557,580,2.921,581,2.921,582,2.921,583,2.921,584,2.921,585,2.464,586,2.662,587,2.921,588,4.233,589,3.25,590,3.329,591,3.175,592,3.175,593,3.25,594,3.928,595,3.928,596,2.921,597,4.233,598,2.921,599,2.921,600,4.979,601,2.38,602,2.38]],["title/interfaces/INewsScope.html",[146,0.463,1154,3.428]],["body/interfaces/INewsScope.html",[3,0.141,4,0.118,5,0.096,9,0.287,10,0.884,20,3.641,24,0.006,26,0.412,27,0.926,28,1.85,39,0.854,51,0.364,57,1.113,61,0.205,80,0.003,81,0.004,82,0.003,91,2.284,124,1.978,146,0.874,148,1.653,220,2.529,221,3.697,222,4.181,223,5.425,409,3.04,440,3.889,457,3.564,482,2.886,517,4.078,522,4.107,529,3.668,530,4.145,531,2.959,533,3.207,535,2.981,557,3.994,563,2.886,571,3.517,573,4.107,574,4.107,1146,4.11,1147,4.316,1148,5.29,1149,4.11,1150,4.11,1151,4.316,1152,4.316,1153,6.776,1154,5.264,1155,5.86]],["title/interfaces/IPagination.html",[146,0.463,1176,3.6]],["body/interfaces/IPagination.html",[3,0.164,4,0.138,5,0.112,9,0.334,10,0.973,20,4.242,24,0.006,26,0.396,27,0.924,61,0.21,80,0.004,81,0.005,82,0.004,99,3.13,146,0.782,148,1.925,563,3.362,1170,4.582,1171,5.028,1172,5.028,1173,4.098,1174,3.967,1175,6.866,1176,6.535,1177,6.186,1178,6.464,1179,5.028,1180,6.866,1181,6.866]],["title/interfaces/IParentDescriptionsProperties.html",[146,0.463,1201,3.151]],["body/interfaces/IParentDescriptionsProperties.html",[0,0.146,3,0.118,4,0.099,5,0.08,7,0.987,8,2.21,9,0.239,10,0.785,16,1.742,24,0.006,25,0.768,26,0.362,27,0.668,28,2.39,30,2.725,34,0.874,39,1.085,41,2.39,49,2.843,51,0.339,52,1.173,55,1.516,56,1.446,57,0.929,59,1.87,61,0.172,62,1.424,70,1.679,76,2.808,80,0.003,81,0.004,82,0.003,99,1.596,124,2.745,136,0.943,143,1.409,146,0.717,148,1.379,220,2.743,264,1.803,292,3.038,316,2.246,411,4.724,416,3.153,417,3.153,419,2.287,422,1.596,442,3.153,457,3.661,483,3.645,484,2.676,510,2.469,516,2.5,517,2.409,540,3.87,576,2.15,641,3.43,933,2.409,938,3.753,1011,2.676,1201,4.883,1202,3.602,1203,4.144,1204,5.485,1205,4.671,1206,3.997,1207,4.294,1208,5.052,1209,3.602,1210,3.809,1211,3.43,1212,2.534,1213,4.546,1214,5.187,1215,3.809,1216,6.625,1217,3.809,1218,5.187,1219,3.809,1220,3.809,1221,3.809,1222,3.809,1223,3.809,1224,3.809,1225,5.187,1226,3.809,1227,5.187,1228,3.809,1229,3.809]],["title/interfaces/IResolvedUser.html",[146,0.463,1162,3.428]],["body/interfaces/IResolvedUser.html",[1,3.444,3,0.142,4,0.119,5,0.097,9,0.29,10,0.891,12,1.523,15,3.623,16,1.928,17,3.697,24,0.006,25,0.519,26,0.425,28,2.923,39,1.151,61,0.189,80,0.003,81,0.004,82,0.003,146,0.788,148,1.672,224,3.774,229,2.784,237,3.978,412,4.071,1156,3.071,1157,4.616,1158,3.822,1159,4.82,1160,4.003,1161,2.85,1162,5.838,1163,4.157,1164,5.885,1165,4.666,1166,4.666]],["title/interfaces/IRole.html",[146,0.463,1164,3.28]],["body/interfaces/IRole.html",[1,3.744,3,0.155,4,0.13,5,0.105,9,0.315,10,0.939,12,1.656,15,2.662,16,1.964,17,2.717,24,0.006,25,0.791,26,0.355,28,2.515,39,1.148,61,0.197,80,0.004,81,0.005,82,0.004,146,0.819,148,1.817,224,2.773,229,3.027,237,4.325,412,3.802,1156,3.339,1157,5.019,1158,4.155,1159,4.24,1160,4.159,1161,3.098,1162,5.588,1163,4.519,1164,5.805,1165,3.429,1166,3.429]],["title/interfaces/IRoleProperties.html",[146,0.463,1230,3.807]],["body/interfaces/IRoleProperties.html",[0,0.168,3,0.135,4,0.114,5,0.092,7,1.137,8,2.429,9,0.398,10,0.862,24,0.006,25,0.8,26,0.398,27,0.863,30,2.672,34,1.309,35,4.548,39,1.085,51,0.305,52,1.289,53,3.502,55,1.283,56,1.667,57,1.071,59,2.156,61,0.185,62,1.641,63,2.197,70,1.936,76,2.376,80,0.003,81,0.004,82,0.003,146,0.534,148,1.59,220,2.724,224,3.933,422,1.839,449,2.71,483,3.084,484,3.084,563,3.605,697,3.502,888,4.548,1054,3.383,1129,4.151,1159,5.186,1161,3.908,1230,6.331,1231,4.39,1232,4.39,1233,5.088,1234,4.39,1235,3.953,1236,4.689,1237,3.783,1238,5.088,1239,5.088,1240,5.088,1241,5.088,1242,5.701]],["title/interfaces/ISubmissionProperties.html",[146,0.463,1243,3.807]],["body/interfaces/ISubmissionProperties.html",[0,0.142,3,0.115,4,0.096,5,0.107,7,0.963,8,2.173,9,0.233,10,0.771,12,1.226,24,0.006,26,0.42,27,0.952,30,2.498,34,1.171,35,4.068,39,1.034,51,0.363,52,1.153,53,4.645,54,2.539,55,1.086,56,1.411,57,0.906,59,1.824,61,0.108,62,1.389,70,1.638,76,3.392,80,0.003,81,0.004,82,0.003,99,2.626,136,0.92,146,0.452,148,1.345,409,1.932,422,1.557,425,2.011,462,3.076,507,4.999,514,4.836,516,3.565,517,3.682,540,4.344,639,4.767,938,4.751,996,5.944,1243,5.823,1244,3.968,1245,6.568,1246,7.014,1247,7.613,1248,8.054,1249,4.767,1250,8.054,1251,6.416,1252,4.306,1253,3.076,1254,2.688,1255,4.306,1256,4.306,1257,5.446,1258,4.306,1259,2.964,1260,4.306,1261,4.306,1262,4.306,1263,4.306,1264,4.306,1265,4.306,1266,4.306,1267,4.306,1268,4.306,1269,4.306,1270,4.306]],["title/interfaces/ITaskParent.html",[146,0.463,1208,3.037]],["body/interfaces/ITaskParent.html",[0,0.144,3,0.116,4,0.097,5,0.079,7,0.97,8,2.184,9,0.235,10,0.776,16,1.732,21,0.752,23,0.725,24,0.006,25,0.707,26,0.293,27,0.482,28,2.369,30,2.711,34,0.86,39,0.994,41,2.369,49,2.818,51,0.337,52,1.159,55,1.498,56,1.422,57,0.913,59,1.838,61,0.171,62,1.399,70,1.651,76,2.775,80,0.003,81,0.004,82,0.003,92,1.195,99,2.148,107,1.342,124,1.623,136,0.927,143,1.401,146,0.711,148,1.356,220,2.821,229,2.258,264,1.772,292,2.987,316,2.207,411,2.793,416,5.205,417,5.205,418,5.126,419,2.26,422,1.569,442,4.244,457,3.758,483,3.602,484,2.631,510,2.427,516,2.471,517,2.368,540,3.824,576,2.113,641,3.371,933,2.368,938,3.709,1011,2.631,1201,4.84,1202,3.541,1203,4.108,1204,5.452,1205,4.616,1206,3.951,1207,4.244,1208,5.254,1209,3.541,1210,3.744,1211,3.371,1212,2.491,1213,4.505,1214,5.126,1215,3.744,1216,6.586,1217,3.744,1218,5.126,1219,3.744,1220,3.744,1221,3.744,1222,3.744,1223,3.744,1224,3.744,1225,5.126,1226,3.744,1227,5.126,1228,3.744,1229,3.744,1271,4.857,1272,4.857,1273,4.857]],["title/interfaces/ITaskProperties.html",[146,0.463,1205,3.428]],["body/interfaces/ITaskProperties.html",[0,0.144,3,0.116,4,0.097,5,0.079,7,0.97,8,2.184,9,0.235,10,0.776,16,1.348,24,0.006,25,0.764,26,0.377,27,0.875,28,2.669,30,2.711,34,0.86,39,1.036,41,2.669,49,2.818,51,0.337,52,1.159,55,1.498,56,1.422,57,0.913,59,1.838,61,0.171,62,1.399,70,1.651,76,2.775,80,0.003,81,0.004,82,0.003,99,1.569,124,1.623,136,0.927,143,1.401,146,0.711,148,1.356,220,2.583,264,1.772,292,2.987,316,2.207,411,2.793,416,3.099,417,3.099,419,2.904,422,1.569,442,3.099,457,3.848,483,3.602,484,2.631,510,2.427,516,2.471,517,2.368,540,3.824,576,2.113,641,3.371,933,2.368,938,3.709,1011,2.631,1201,4.244,1202,3.541,1203,4.627,1204,5.869,1205,5.264,1206,5.075,1207,5.452,1208,5.016,1209,3.541,1210,3.744,1211,3.371,1212,2.491,1213,4.505,1214,5.126,1215,3.744,1216,6.586,1217,3.744,1218,5.126,1219,3.744,1220,3.744,1221,3.744,1222,3.744,1223,3.744,1224,3.744,1225,5.126,1226,3.744,1227,5.126,1228,3.744,1229,3.744]],["title/interfaces/IUserProperties.html",[146,0.463,1274,3.28]],["body/interfaces/IUserProperties.html",[0,0.181,3,0.146,4,0.122,5,0.099,7,1.224,8,2.546,9,0.433,10,0.904,12,1.559,24,0.006,25,0.672,26,0.394,30,2.832,39,1.12,51,0.32,52,1.351,55,1.38,56,1.794,57,1.153,59,2.32,61,0.174,62,1.766,70,2.083,76,2.557,80,0.004,81,0.004,82,0.004,146,0.574,148,1.711,220,2.786,412,2.666,422,1.979,535,3.623,585,3.769,888,4.767,1160,2.917,1165,4.854,1166,4.854,1274,5.648,1275,5.046,1276,5.881,1277,4.725,1278,4.725,1279,4.071,1280,4.071,1281,4.071,1282,4.071,1283,4.725,1284,4.725,1285,5.046]],["title/interfaces/IUserProperties-1.html",[146,0.387,1274,2.744,1286,2.375]],["body/interfaces/IUserProperties-1.html",[0,0.167,3,0.134,4,0.112,5,0.091,7,1.125,8,2.412,9,0.446,10,0.856,12,1.433,24,0.006,25,0.708,26,0.406,27,0.859,30,2.829,34,0.997,35,3.464,39,1.107,51,0.337,52,1.28,53,3.464,54,2.967,55,1.269,56,1.649,57,1.059,59,2.132,61,0.165,62,1.623,70,1.915,76,3.064,80,0.003,81,0.004,82,0.003,146,0.528,148,1.572,220,2.783,412,2.451,422,1.819,535,3.62,585,3.464,888,4.516,1159,5.008,1160,2.681,1161,4.273,1165,4.729,1166,4.729,1242,4.343,1274,5.427,1276,5.73,1277,4.343,1278,4.343,1279,3.742,1280,3.742,1281,3.742,1282,3.742,1283,4.343,1284,4.343,1287,4.638,1288,5.034,1289,5.034]],["title/interfaces/IUserTaskInfoProperties.html",[146,0.463,1290,3.807]],["body/interfaces/IUserTaskInfoProperties.html",[0,0.198,3,0.159,4,0.134,5,0.108,7,1.339,9,0.325,10,0.956,24,0.006,26,0.362,30,2.721,39,1.108,51,0.339,52,1.429,55,1.51,56,1.963,57,1.261,59,2.538,61,0.151,62,1.932,70,2.279,80,0.004,81,0.005,82,0.004,146,0.629,148,1.872,260,4.204,422,2.166,509,3.632,514,3.532,516,2.492,1160,3.191,1165,4.983,1166,4.983,1279,4.454,1280,4.454,1281,4.454,1282,4.454,1290,6.825,1291,5.521]],["title/interfaces/InlineAttachment.html",[146,0.463,154,3.037]],["body/interfaces/InlineAttachment.html",[3,0.152,4,0.128,5,0.104,7,1.865,9,0.31,10,0.929,24,0.006,25,0.555,26,0.283,39,1.141,61,0.144,80,0.004,81,0.005,82,0.004,146,0.905,147,4.9,148,1.788,149,4.087,150,5.582,151,6.202,152,4.254,153,4.254,154,5.335,155,4.087,156,6.03,157,4.254,158,5.335,159,4.087,160,4.254,161,4.9,162,5.293,163,5.293,164,4.9,165,4.316,166,4.087,167,4.254,168,4.254,169,4.254]],["title/modules/InterceptorModule.html",[170,1.423,386,3.6]],["body/modules/InterceptorModule.html",[0,0.192,3,0.155,4,0.13,5,0.105,24,0.006,51,0.361,61,0.146,63,2.511,80,0.004,81,0.005,82,0.004,111,1.402,124,2.175,133,5.019,170,2.319,172,2.662,184,2.959,275,4.951,296,3.429,378,4.451,386,5.869,400,4.782,401,6.371,783,4.023,835,4.155,844,5.588,846,4.24,881,6.206,1112,4.951,1212,4.128,1292,6.511,1293,6.628,1294,5.588,1295,6.206,1296,4.782,1297,9.131,1298,5.588,1299,6.628,1300,7.038,1301,4.325]],["title/injectables/JwtAuthGuard.html",[210,1.096,1302,3.807]],["body/injectables/JwtAuthGuard.html",[0,0.223,3,0.179,4,0.15,5,0.122,7,1.503,24,0.006,51,0.363,61,0.169,80,0.004,81,0.005,82,0.004,111,1.62,187,5.802,210,1.949,211,2.903,1302,6.771,1303,6.725,1304,6.725,1305,7.527,1306,7.527]],["title/interfaces/JwtConstants.html",[146,0.463,191,3.428]],["body/interfaces/JwtConstants.html",[3,0.153,4,0.129,5,0.104,9,0.312,10,0.933,24,0.006,26,0.401,39,1.109,51,0.266,61,0.18,63,2.485,73,6.819,79,6.166,80,0.004,81,0.005,82,0.004,136,1.527,146,0.604,148,1.799,191,6.314,208,3.394,229,2.996,440,4.102,576,2.803,649,4.697,1158,5.105,1307,5.305,1308,8.357,1309,7.147,1310,6.444,1311,6.444,1312,5.305,1313,4.28,1314,4.697,1315,4.28,1316,6.444,1317,5.758,1318,5.758,1319,5.758,1320,6.444,1321,5.758,1322,4.697,1323,4.967,1324,6.444,1325,5.305,1326,6.444,1327,5.305,1328,5.758,1329,6.444,1330,6.444,1331,5.758,1332,5.758]],["title/interfaces/JwtPayload.html",[146,0.463,1333,3.807]],["body/interfaces/JwtPayload.html",[3,0.151,4,0.126,5,0.103,7,1.581,9,0.307,10,0.923,24,0.006,26,0.419,39,1.125,51,0.262,57,1.192,61,0.143,63,3.489,80,0.004,81,0.005,82,0.004,99,3.066,146,0.594,148,1.77,1156,4.428,1317,8.081,1318,8.081,1319,8.081,1321,8.081,1322,6.593,1323,6.972,1327,6.519,1328,7.075,1333,6.104,1334,5.664,1335,5.664,1336,6.519]],["title/injectables/JwtStrategy.html",[178,3.6,210,1.096]],["body/injectables/JwtStrategy.html",[0,0.168,3,0.135,4,0.113,5,0.092,7,1.133,9,0.275,12,1.876,18,1.358,21,0.732,23,1.101,24,0.006,25,0.639,26,0.326,27,0.732,51,0.388,61,0.128,62,1.635,63,2.846,80,0.003,81,0.004,82,0.003,87,2.644,92,1.326,107,1.004,111,1.222,136,1.408,143,0.93,178,5.378,179,6.519,187,4.374,191,3.939,192,4.672,194,5.07,210,1.637,211,2.189,213,2.648,230,2.267,242,2.469,245,2.552,276,4.715,419,1.929,456,2.7,933,2.766,1116,3.621,1127,4.374,1158,3.621,1161,2.7,1295,5.687,1323,5.687,1333,6.692,1337,5.07,1338,5.675,1339,6.403,1340,5.675,1341,7.379,1342,5.675,1343,7.757,1344,5.675,1345,4.374,1346,5.07,1347,5.446,1348,5.675,1349,5.675,1350,5.675,1351,5.675,1352,5.675,1353,5.675,1354,5.675,1355,5.675,1356,5.675,1357,5.675,1358,5.07,1359,5.675,1360,4.374,1361,4.537,1362,5.675,1363,5.675,1364,4.672,1365,5.675,1366,5.07,1367,5.07,1368,5.675,1369,5.07,1370,3.263]],["title/injectables/JwtValidationAdapter.html",[179,3.428,210,1.096]],["body/injectables/JwtValidationAdapter.html",[0,0.16,1,4.117,3,0.129,4,0.108,5,0.088,9,0.263,16,1.729,21,0.71,23,1.069,24,0.006,25,0.62,26,0.316,27,0.71,39,1.101,51,0.296,61,0.122,80,0.003,81,0.004,82,0.003,92,1.286,107,1.267,111,1.167,124,1.811,136,1.367,179,4.969,210,1.588,211,2.09,213,2.942,230,2.621,243,3.992,245,2.476,275,5.244,276,4.117,589,3.407,590,3.49,591,3.328,592,3.328,593,3.407,594,4.117,674,4.253,854,5.665,933,2.642,1127,5.519,1134,4.402,1158,5.442,1160,3.407,1323,7.355,1336,5.894,1347,6.264,1371,6.6,1372,4.462,1373,7.16,1374,7.16,1375,7.16,1376,5.42,1377,7.16,1378,5.42,1379,7.16,1380,4.117,1381,5.894,1382,5.519,1383,5.219,1384,7.16,1385,7.16,1386,6.397,1387,6.397,1388,5.42,1389,7.16,1390,5.42,1391,5.42,1392,7.16,1393,5.42,1394,5.42,1395,5.42,1396,5.42]],["title/modules/LearnroomModule.html",[170,1.423,1397,3.6]],["body/modules/LearnroomModule.html",[0,0.202,3,0.163,4,0.136,5,0.111,24,0.006,51,0.383,61,0.154,80,0.004,81,0.005,82,0.004,111,1.472,170,2.39,172,2.796,173,3.856,180,4.626,181,3.601,182,3.107,184,3.77,185,3.254,701,6.884,702,4.146,708,6.712,709,6.109,799,5.758,818,6.109,846,3.601,881,5.271,1397,7.049,1398,6.109,1399,6.109,1400,6.838,1401,6.838,1402,6.838]],["title/classes/LearnroomTestHelper.html",[0,0.146,1403,4.066]],["body/classes/LearnroomTestHelper.html",[0,0.121,2,0.771,3,0.098,4,0.082,5,0.066,7,1.179,9,0.199,10,0.689,12,1.76,21,0.966,23,1.198,24,0.006,25,0.724,26,0.402,27,0.796,32,1.076,33,1.24,34,1.34,41,1.845,43,3.522,51,0.313,52,0.715,55,0.924,57,0.771,61,0.092,80,0.002,81,0.003,82,0.002,92,1.061,107,1.699,136,1.445,143,1.412,220,2.714,260,4.824,264,1.496,316,3.145,345,2.879,409,3.849,412,1.784,413,4.416,414,2.847,415,2.847,419,2.727,510,2.049,535,2.322,563,1.999,639,4.526,1160,2.81,1249,2.221,1259,2.522,1403,4.862,1404,3.376,1405,6.7,1406,4.862,1407,5.906,1408,5.906,1409,5.836,1410,7.571,1411,7.571,1412,7.571,1413,5.836,1414,4.305,1415,4.862,1416,4.862,1417,5.697,1418,4.862,1419,5.697,1420,5.697,1421,5.697,1422,5.697,1423,5.697,1424,3.664,1425,4.862,1426,3.664,1427,3.664,1428,5.906,1429,6.764,1430,4.101,1431,5.906,1432,4.101,1433,4.101,1434,4.101,1435,4.101,1436,4.101,1437,4.101,1438,3.376,1439,3.664,1440,3.376,1441,3.664,1442,3.664,1443,3.376,1444,3.664,1445,3.664,1446,3.664,1447,3.664,1448,3.664,1449,3.664,1450,4.101,1451,4.101,1452,3.664,1453,3.376,1454,3.376,1455,5.906,1456,5.906,1457,4.101,1458,4.101,1459,4.101,1460,4.101,1461,4.101,1462,4.101,1463,4.101]],["title/classes/LessonTaskInfo.html",[0,0.146,1203,2.675]],["body/classes/LessonTaskInfo.html",[0,0.167,2,1.063,3,0.134,4,0.113,5,0.091,7,1.47,8,3.082,9,0.274,10,0.858,14,2.951,15,3.01,16,1.492,17,3.071,18,1.353,21,0.931,23,0.844,24,0.006,25,0.49,26,0.397,27,0.561,28,2.299,29,2.493,30,2.832,32,1.93,33,2.225,34,1.303,39,0.637,41,2.808,42,2.408,43,3.221,44,2.826,45,2.826,46,2.408,47,2.826,48,2.756,49,2.101,50,2.826,51,0.338,52,1.283,55,1.658,56,1.655,57,1.063,59,2.14,61,0.127,62,1.629,70,1.922,80,0.003,81,0.004,82,0.003,146,0.53,264,2.063,422,2.377,425,2.359,457,3.486,509,3.062,510,4.333,516,3.221,519,3.924,520,3.924,576,2.46,1203,3.987,1464,7.137,1465,6.018,1466,6.683,1467,7.361,1468,5.654,1469,4.122,1470,5.052,1471,5.052]],["title/interfaces/LessonTaskInfoProperties.html",[146,0.463,1466,3.807]],["body/interfaces/LessonTaskInfoProperties.html",[0,0.194,3,0.156,4,0.131,5,0.106,7,1.311,8,2.658,9,0.318,10,0.944,24,0.006,26,0.357,27,0.803,30,2.696,41,2.938,51,0.362,52,1.411,55,1.823,56,1.922,57,1.235,59,2.485,61,0.148,62,1.891,70,2.231,80,0.004,81,0.005,82,0.004,146,0.615,148,1.833,264,2.395,422,2.12,457,3.9,509,3.556,510,4.7,516,2.439,519,4.557,520,4.557,576,2.856,1203,3.556,1464,5.405,1465,6.528,1466,6.762,1469,4.786,1470,5.866,1471,5.866]],["title/injectables/Logger.html",[210,1.096,855,2.84]],["body/injectables/Logger.html",[0,0.191,3,0.153,4,0.129,5,0.104,7,1.598,24,0.006,32,1.69,51,0.33,61,0.145,64,2.309,75,3.067,80,0.004,81,0.005,82,0.004,92,1.158,111,1.387,210,1.775,211,2.485,239,4.112,243,4.461,377,3.22,454,4.112,611,3.338,733,3.998,783,3.998,842,3.304,855,5.482,861,4.712,892,3.963,952,4.473,981,4.112,1116,4.112,1182,7.012,1185,5.778,1380,3.706,1472,5.758,1473,9.098,1474,6.444,1475,6.444,1476,4.967,1477,5.758,1478,4.967,1479,5.758,1480,4.28,1481,4.112,1482,7.147,1483,4.697,1484,6.444,1485,6.444,1486,5.758,1487,4.697,1488,5.758,1489,4.112,1490,6.444,1491,6.444,1492,6.444]],["title/modules/LoggerModule.html",[170,1.423,387,3.151]],["body/modules/LoggerModule.html",[0,0.208,3,0.167,4,0.14,5,0.114,24,0.006,51,0.349,61,0.158,80,0.004,81,0.005,82,0.004,111,1.515,170,2.432,172,2.877,173,3.924,180,4.707,181,3.706,182,3.198,184,3.836,205,4.707,387,6.281,855,5.822,1493,6.287,1494,6.287,1495,6.287,1496,7.037,1497,7.037]],["title/interfaces/Mail.html",[146,0.463,165,2.675]],["body/interfaces/Mail.html",[3,0.141,4,0.118,5,0.096,7,1.763,9,0.287,10,0.885,24,0.006,25,0.514,26,0.412,27,0.954,39,1.15,61,0.133,80,0.003,81,0.004,82,0.003,146,0.89,147,4.669,148,1.656,149,3.785,150,5.149,151,5.043,152,3.94,153,3.94,154,4.669,155,3.785,156,3.94,157,3.94,158,5.149,159,3.785,160,3.94,161,5.429,162,5.043,163,5.043,164,5.429,165,5.056,166,5.634,167,5.864,168,5.864,169,5.864]],["title/interfaces/MailAttachment.html",[146,0.463,150,3.037]],["body/interfaces/MailAttachment.html",[3,0.15,4,0.125,5,0.102,7,1.801,9,0.305,10,0.919,24,0.006,25,0.781,26,0.38,39,1.149,61,0.141,80,0.004,81,0.005,82,0.004,146,0.901,147,4.845,148,1.755,149,4.013,150,5.546,151,5.233,152,5.991,153,5.991,154,4.845,155,4.013,156,4.177,157,4.177,158,5.291,159,4.013,160,4.177,161,4.845,162,5.233,163,5.233,164,4.845,165,4.267,166,4.013,167,4.177,168,4.177,169,4.177]],["title/interfaces/MailContent.html",[146,0.463,158,3.037]],["body/interfaces/MailContent.html",[3,0.15,4,0.126,5,0.102,7,1.802,9,0.305,10,0.92,24,0.006,25,0.546,26,0.348,27,0.783,39,1.14,61,0.142,80,0.004,81,0.005,82,0.004,146,0.902,147,5.55,148,1.759,149,4.021,150,5.295,151,5.24,152,4.186,153,4.186,154,5.55,155,4.021,156,4.186,157,4.186,158,5.55,159,5.759,160,5.995,161,4.851,162,5.24,163,5.24,164,4.851,165,4.273,166,4.021,167,4.186,168,4.186,169,4.186]],["title/modules/MailModule.html",[170,1.423,1498,3.428]],["body/modules/MailModule.html",[0,0.182,3,0.146,4,0.123,5,0.1,21,0.611,23,0.919,24,0.006,25,0.673,26,0.376,27,0.611,39,0.959,51,0.352,61,0.138,80,0.004,81,0.004,82,0.004,92,1.106,107,1.089,111,1.325,136,1.483,143,1.274,146,0.577,170,2.454,172,2.516,184,2.796,185,2.928,205,3.431,538,3.532,846,3.241,847,4.485,1498,5.912,1499,4.485,1500,5.066,1501,5.99,1502,6.897,1503,6.154,1504,3.985,1505,6.209,1506,7.013,1507,4.485,1508,4.087,1509,5.912,1510,5.498,1511,5.665,1512,5.665,1513,5.665,1514,5.99,1515,5.066,1516,4.743,1517,5.066,1518,5.066,1519,6.398,1520,4.743,1521,5.066,1522,5.498,1523,5.498,1524,5.498]],["title/interfaces/MailModuleOptions.html",[146,0.463,1502,3.807]],["body/interfaces/MailModuleOptions.html",[0,0.179,3,0.144,4,0.121,5,0.098,9,0.294,10,0.898,24,0.006,25,0.526,26,0.405,39,1.098,51,0.35,61,0.137,80,0.004,81,0.004,82,0.004,111,1.307,136,1.471,143,1.263,146,0.569,148,1.694,170,2.439,184,2.758,185,2.888,205,3.385,538,2.758,846,3.197,847,4.425,1498,5.348,1499,4.425,1501,4.679,1502,6.525,1504,3.113,1505,5.616,1506,6.968,1507,4.425,1508,4.032,1509,5.875,1510,5.423,1511,6.699,1512,6.699,1513,6.699,1514,5.939,1515,4.997,1516,4.679,1517,4.997,1518,4.997,1519,6.343,1520,4.679,1521,4.997,1522,5.423,1523,5.423,1524,5.423]],["title/injectables/MailService.html",[210,1.096,1509,3.428]],["body/injectables/MailService.html",[0,0.187,3,0.15,4,0.126,5,0.102,9,0.306,18,1.892,21,0.785,23,1.181,24,0.006,25,0.685,26,0.349,27,0.785,39,0.891,51,0.356,61,0.142,80,0.004,81,0.005,82,0.004,87,2.834,92,1.421,107,1.12,111,1.362,146,0.593,165,4.895,210,1.755,211,2.44,213,2.786,230,2.43,245,2.188,419,2.688,576,2.752,783,3.952,816,3.891,830,5.731,1504,4.424,1507,4.612,1508,4.203,1509,5.489,1512,4.612,1513,4.612,1525,5.209,1526,6.511,1527,6.327,1528,8.479,1529,6.967,1530,6.327,1531,7.066,1532,6.327,1533,5.653,1534,5.653,1535,5.653,1536,5.653,1537,4.877]],["title/interfaces/MailServiceOptions.html",[146,0.463,1529,3.807]],["body/interfaces/MailServiceOptions.html",[0,0.196,3,0.157,4,0.132,5,0.107,9,0.321,10,0.949,18,1.584,24,0.006,26,0.359,39,1.081,51,0.364,61,0.149,80,0.004,81,0.005,82,0.004,87,2.914,111,1.425,146,0.621,148,1.848,165,4.406,210,1.805,213,2.138,230,2.035,245,2.29,419,2.765,576,2.88,783,3.309,816,4.071,830,4.398,1504,3.395,1507,4.826,1508,4.398,1509,4.596,1512,6.695,1513,6.695,1525,5.451,1528,7.867,1529,6.787,1531,5.916,1533,5.916,1534,5.916,1535,5.916,1536,5.916,1537,5.104]],["title/modules/MongoDatabaseModule.html",[170,1.423,1538,4.066]],["body/modules/MongoDatabaseModule.html",[0,0.187,3,0.15,4,0.126,5,0.128,12,1.609,21,0.628,23,0.945,24,0.006,25,0.548,26,0.279,27,0.628,51,0.384,55,1.425,61,0.142,63,2.44,71,4.392,80,0.004,81,0.005,82,0.004,92,1.137,107,1.12,111,1.362,143,1.037,170,2.486,172,2.587,185,3.011,345,3.084,456,3.011,467,5.209,538,3.594,1005,6.511,1006,6.511,1007,6.511,1500,5.209,1501,6.096,1504,4.055,1505,6.289,1538,7.103,1539,5.489,1540,5.489,1541,4.877,1542,7.441,1543,6.327,1544,6.327,1545,4.877,1546,3.332,1547,5.653,1548,4.877,1549,4.877,1550,6.096,1551,3.891,1552,3.638,1553,7.066,1554,4.203,1555,4.392,1556,5.209,1557,4.612]],["title/modules/MongoMemoryDatabaseModule.html",[170,1.423,1558,3.807]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.148,3,0.119,4,0.1,5,0.081,18,1.201,21,0.675,23,0.749,24,0.006,25,0.435,26,0.3,27,0.498,34,0.888,51,0.368,55,1.532,56,1.47,61,0.186,63,1.936,80,0.003,81,0.004,82,0.003,87,1.799,92,0.902,107,1.204,111,1.081,136,1.579,143,1.356,170,2.382,172,2.053,184,2.281,185,2.389,205,2.8,213,2.491,230,2.09,245,2.668,265,3.87,345,2.447,419,2.622,498,3.087,538,3.091,733,2.509,809,2.509,816,4.183,835,3.204,842,3.488,846,3.583,854,4.518,960,2.509,1073,3.335,1383,3.66,1489,3.204,1500,4.133,1501,5.243,1504,3.956,1505,6.3,1539,5.355,1540,5.355,1541,3.87,1542,6.808,1548,6.374,1549,3.87,1551,4.183,1555,3.485,1557,4.958,1558,5.947,1559,6.325,1560,5.021,1561,8.643,1562,5.021,1563,6.077,1564,6.893,1565,6.893,1566,8.141,1567,3.204,1568,4.133,1569,4.486,1570,6.077,1571,5.6,1572,4.486,1573,3.87,1574,3.087,1575,3.66,1576,3.485,1577,4.133,1578,3.485,1579,4.133,1580,3.87,1581,6.077,1582,4.486,1583,4.486,1584,4.486,1585,5.021,1586,3.485,1587,5.021,1588,5.021,1589,5.243,1590,3.335,1591,3.66,1592,4.486,1593,5.021,1594,5.021]],["title/classes/MongoSharedConnection.html",[0,0.146,1595,3.807]],["body/classes/MongoSharedConnection.html",[0,0.175,2,1.115,3,0.141,4,0.118,5,0.096,7,1.516,9,0.287,21,0.753,23,0.886,24,0.006,25,0.514,26,0.262,27,0.589,49,2.821,51,0.314,55,1.71,61,0.133,80,0.003,81,0.004,82,0.003,92,1.364,107,1.344,136,1.132,213,3.015,230,2.713,234,4.51,245,2.626,264,2.164,296,3.124,340,4.669,345,2.892,457,3.567,735,4.974,809,2.964,1237,3.94,1286,3.411,1539,5.812,1540,5.812,1551,4.669,1552,5.077,1567,3.785,1586,4.117,1589,6.455,1595,5.853,1596,4.884,1597,8.374,1598,7.268,1599,7.593,1600,5.932,1601,4.884,1602,5.932,1603,6.784,1604,7.512,1605,4.117,1606,4.884,1607,5.535,1608,5.932,1609,5.932,1610,5.932,1611,5.932,1612,5.932,1613,5.932,1614,5.932,1615,5.932,1616,3.648,1617,5.932]],["title/classes/MongoSharedDriver.html",[0,0.146,1550,3.807]],["body/classes/MongoSharedDriver.html",[0,0.207,2,1.314,3,0.166,4,0.139,5,0.113,7,1.679,9,0.339,10,0.98,21,0.694,24,0.006,32,1.833,33,2.113,34,1.488,51,0.347,55,1.574,61,0.157,80,0.004,81,0.005,82,0.004,87,3.23,264,2.55,1414,6.572,1539,5.835,1540,5.835,1550,6.48,1551,4.298,1552,5.185,1590,6.214,1595,5.388,1618,6.245,1619,9.016,1620,8.407,1621,6.99]],["title/classes/News.html",[0,0.146,529,1.942]],["body/classes/News.html",[0,0.202,2,0.622,3,0.079,4,0.146,5,0.054,7,1.465,8,2.639,9,0.16,10,0.587,12,0.842,14,2.019,15,2.06,16,1.382,17,2.102,18,0.792,21,0.933,23,0.752,24,0.006,25,0.669,26,0.409,27,0.858,28,2.292,29,2.467,30,2.803,32,1.6,33,1.844,34,1.298,39,1.036,41,1.034,42,1.41,43,2.533,44,1.654,45,1.654,46,1.41,47,1.654,48,1.613,49,1.23,50,1.654,51,0.332,52,1.279,54,3.591,55,0.745,56,0.969,57,0.622,61,0.165,62,0.953,64,2.185,66,5.127,70,1.125,76,2.545,80,0.002,81,0.003,82,0.002,91,2.981,92,0.905,107,0.586,143,0.542,146,0.31,220,2.218,221,3.917,222,3.862,224,2.598,244,2.297,273,3.401,335,2.992,360,1.903,409,1.327,412,2.191,422,1.627,425,2.845,449,2.397,517,3.323,522,2.728,527,1.903,528,2.297,529,3.755,530,3.932,531,3.862,532,3.973,533,3.692,534,4.97,535,3.038,536,4.732,537,4.529,538,2.772,539,3.883,540,4.62,543,3.496,544,4.219,545,4.233,546,3.496,549,3.672,550,4.351,551,3.672,552,3.496,553,3.346,554,3.496,557,3.591,559,3.507,560,3.892,563,2.973,565,3.346,567,3.672,569,3.672,571,3.623,572,2.412,573,2.728,574,1.792,575,2.297,576,1.44,577,2.809,578,3.346,579,3.214,580,2.412,581,2.412,582,2.412,583,2.412,584,2.412,585,2.035,586,2.198,587,2.412,588,3.672,589,2.902,590,2.973,591,2.835,592,2.835,593,2.902,594,3.507,595,3.507,596,2.412,597,3.672,598,2.412,599,2.412,600,4.446,601,1.966,602,1.966,1622,5.038,1623,3.309,1624,3.309,1625,3.309,1626,3.309,1627,3.309,1628,3.309,1629,3.309,1630,3.309,1631,3.309,1632,3.309,1633,3.309,1634,3.309]],["title/controllers/NewsController.html",[700,2.195,1635,3.807]],["body/controllers/NewsController.html",[0,0.111,3,0.089,4,0.075,5,0.061,9,0.182,10,0.646,12,2.187,16,1.123,21,0.769,23,1.156,24,0.006,25,0.671,26,0.342,27,0.769,29,2.095,34,0.665,39,0.989,51,0.355,52,0.966,57,0.706,61,0.085,80,0.002,81,0.003,82,0.002,87,1.346,92,0.996,107,1.371,111,0.809,126,3.186,136,1.705,143,1.27,213,3.039,228,3.001,230,2.744,242,1.634,243,3.09,245,2.679,447,4.315,449,2.636,529,3.767,535,2.856,574,3.001,578,3.68,611,3.232,619,3.407,632,2.991,664,5.042,667,3.988,693,1.788,700,1.67,702,1.878,704,2.398,710,2.398,711,2.739,715,2.739,718,5.971,947,2.496,966,4.983,1076,4.051,1111,3.093,1156,4.858,1174,4.177,1358,4.95,1635,4.271,1636,3.357,1637,6.247,1638,5.073,1639,6.582,1640,5.646,1641,3.757,1642,5.073,1643,3.757,1644,3.68,1645,5.692,1646,3.757,1647,5.54,1648,3.757,1649,7.241,1650,3.757,1651,5.042,1652,4.825,1653,3.757,1654,4.561,1655,3.757,1656,5.54,1657,3.757,1658,4.95,1659,5.54,1660,3.845,1661,3.757,1662,5.295,1663,5.54,1664,3.757,1665,5.073,1666,3.357,1667,2.896,1668,5.376,1669,2.496,1670,3.093,1671,4.2,1672,3.357,1673,2.608,1674,2.739,1675,3.357,1676,3.357,1677,3.757,1678,3.357,1679,3.357,1680,3.357,1681,3.357,1682,5.98,1683,3.093,1684,3.357,1685,3.357,1686,3.357,1687,3.357,1688,3.357,1689,3.093,1690,3.093,1691,3.757,1692,6.582,1693,3.757,1694,3.757,1695,3.757,1696,5.54,1697,3.757]],["title/classes/NewsFilterQuery.html",[0,0.146,1651,3.428]],["body/classes/NewsFilterQuery.html",[0,0.22,2,1.083,3,0.137,4,0.115,5,0.093,9,0.279,10,0.869,16,1.51,21,0.819,24,0.006,26,0.364,27,0.919,29,2.233,39,0.983,51,0.36,52,1.004,61,0.13,68,5.571,80,0.003,81,0.004,82,0.003,124,3.02,136,1.099,221,4.407,222,4.126,223,5.077,228,4.034,457,3.173,529,3.641,530,3.967,563,2.807,679,5.17,682,4.753,683,4.753,686,6.019,687,6.132,688,4.58,692,6.059,693,2.74,695,7.187,696,6.132,697,3.541,698,4.197,699,3.42,1155,5.484,1651,5.17,1698,7.187,1699,4.74,1700,5.758,1701,5.43,1702,6.655,1703,5.758,1704,5.758,1705,5.758,1706,5.758,1707,6.655,1708,7.449,1709,5.758,1710,7.449,1711,5.758,1712,7.449,1713,6.132,1714,5.758,1715,5.758]],["title/classes/NewsMapper.html",[0,0.146,1674,3.6]],["body/classes/NewsMapper.html",[0,0.142,2,0.902,3,0.114,4,0.096,5,0.078,9,0.232,12,1.22,21,0.805,23,1.211,24,0.006,25,0.703,26,0.358,27,0.805,34,0.849,51,0.351,52,0.836,61,0.108,80,0.003,81,0.004,82,0.003,91,2.544,92,1.185,107,1.436,136,1.549,143,1.33,221,3.215,222,3.766,223,4.055,529,3.344,530,2.997,531,3.296,533,3.572,535,1.886,538,4.357,571,2.85,632,2.997,664,5.632,667,4.364,773,4.38,777,3.187,778,3.187,966,4.055,1146,5.23,1152,5.493,1154,5.632,1155,3.187,1651,5.632,1662,5.915,1673,5.632,1674,4.807,1716,4.287,1717,6.595,1718,6.595,1719,6.595,1720,6.595,1721,4.798,1722,6.595,1723,4.798,1724,6.595,1725,4.798,1726,6.595,1727,4.798,1728,3.698,1729,7.536,1730,3.698,1731,3.698,1732,4.287,1733,4.798,1734,4.798,1735,4.798,1736,4.798,1737,4.798,1738,4.287,1739,4.798,1740,4.798,1741,4.798,1742,4.798,1743,4.798,1744,4.287,1745,4.798,1746,4.287,1747,6.595,1748,4.798,1749,4.798,1750,4.798,1751,4.798,1752,4.798,1753,4.798,1754,4.798,1755,4.798,1756,3.95,1757,4.798,1758,3.95,1759,4.798,1760,4.287,1761,4.287,1762,6.595,1763,4.798,1764,4.798,1765,4.798,1766,6.595,1767,6.595,1768,6.595,1769,4.798,1770,4.798]],["title/modules/NewsModule.html",[170,1.423,1771,3.6]],["body/modules/NewsModule.html",[0,0.177,3,0.142,4,0.119,5,0.097,24,0.006,51,0.393,61,0.134,80,0.003,81,0.004,82,0.003,111,1.287,170,2.198,172,2.444,173,3.547,180,4.255,181,3.148,182,2.716,184,3.467,185,3.631,196,6.492,205,4.255,271,3.237,387,5.969,498,3.676,702,3.813,1119,4.149,1635,6.824,1640,4.357,1671,6.326,1672,5.341,1771,7.26,1772,5.341,1773,5.978,1774,5.341,1775,5.341,1776,6.213,1777,5.978,1778,6.478,1779,5.341,1780,5.978,1781,5.978,1782,5.341,1783,5.978,1784,5.978,1785,5.978,1786,3.97,1787,3.97,1788,6.817,1789,5.978,1790,5.978,1791,5.978,1792,4.149]],["title/injectables/NewsRepo.html",[210,1.096,1776,3.28]],["body/injectables/NewsRepo.html",[0,0.102,3,0.082,4,0.069,5,0.056,7,1.039,9,0.167,10,0.607,16,1.055,21,0.904,23,1.327,24,0.006,25,0.77,26,0.397,27,0.882,32,0.906,33,1.045,34,0.611,43,3.19,51,0.355,52,1.303,55,1.172,56,1.011,57,0.65,61,0.078,69,3.483,80,0.002,81,0.003,82,0.002,92,0.935,107,1.594,111,0.744,136,1.639,143,1.026,210,1.155,211,1.333,213,3.073,220,2.107,230,2.731,234,3.72,243,3.492,245,2.902,289,6.941,291,5.594,292,3.2,293,4.65,294,4.65,295,4.65,296,2.741,297,4.65,298,4.65,299,4.65,305,3.087,306,6.57,308,3.087,310,3.087,312,3.087,314,3.087,316,2.365,317,3.087,319,3.087,321,3.087,345,2.537,355,4.837,419,2.128,457,2.667,527,3.601,529,3.58,530,3.902,532,2.819,535,3.089,537,3.457,575,4.837,578,4.629,601,3.72,602,3.72,610,2.052,611,2.172,619,3.2,626,4.447,632,2.365,669,3.092,770,5.372,877,2.205,929,4.564,960,2.601,1035,4.564,1155,4.629,1170,5.416,1173,3.092,1174,2.993,1504,4.403,1555,2.398,1638,4.827,1701,2.519,1776,3.457,1793,3.087,1794,6.262,1795,5.205,1796,5.205,1797,3.455,1798,4.837,1799,3.455,1800,5.205,1801,3.455,1802,6.97,1803,4.65,1804,6.97,1805,5.205,1806,3.455,1807,3.455,1808,3.455,1809,3.455,1810,3.455,1811,3.455,1812,3.455,1813,3.455,1814,3.455,1815,3.455,1816,3.455,1817,2.844,1818,3.455,1819,4.65,1820,3.455,1821,4.012,1822,3.455,1823,3.455,1824,5.205,1825,3.455,1826,5.205,1827,3.455,1828,3.455,1829,5.205,1830,5.205,1831,3.455,1832,3.087,1833,3.455,1834,2.844,1835,3.455,1836,2.519,1837,2.052,1838,6.262,1839,3.455,1840,3.455,1841,3.455]],["title/classes/NewsResponse.html",[0,0.146,1673,3.428]],["body/classes/NewsResponse.html",[0,0.111,2,0.704,3,0.089,4,0.171,5,0.061,9,0.181,10,0.644,12,2.129,15,2.686,16,1.779,17,2.74,21,0.933,24,0.006,25,0.628,26,0.425,27,0.803,28,2.528,29,2.544,39,1.066,51,0.319,52,1.703,61,0.084,68,4.627,80,0.002,81,0.003,82,0.002,91,2.983,124,3.229,136,1.254,221,3.201,222,3.282,223,4.039,224,3.294,228,2.993,234,3.282,409,2.215,529,3.829,530,4.055,531,3.865,532,3.557,533,3.557,535,3.378,536,4.559,537,4.362,559,2.153,560,2.389,563,3.201,574,2.993,577,4.044,673,4.549,674,3.282,675,4.549,676,4.259,682,4.627,683,4.627,686,4.787,687,4.549,688,3.398,691,5.159,692,5.033,693,1.782,698,2.729,699,3.901,760,6.194,1120,4.549,1481,3.526,1640,4.028,1673,3.835,1842,2.886,1843,3.744,1844,6.479,1845,3.744,1846,5.638,1847,3.744,1848,3.744,1849,3.744,1850,4.549,1851,3.744,1852,4.787,1853,4.937,1854,3.744,1855,5.868,1856,3.744,1857,5.407,1858,3.744,1859,5.526,1860,3.744,1861,4.787,1862,3.081,1863,3.744,1864,2.886,1865,3.744,1866,3.744,1867,3.744,1868,3.744,1869,3.744,1870,4.259,1871,3.744,1872,5.868,1873,2.886,1874,3.744]],["title/classes/NewsScope.html",[0,0.146,1821,3.807]],["body/classes/NewsScope.html",[0,0.151,2,0.961,3,0.122,4,0.102,5,0.083,7,1.375,9,0.248,10,0.803,21,0.863,23,1.298,24,0.006,25,0.722,26,0.395,27,0.826,28,1.596,32,1.34,33,1.545,34,0.904,39,0.938,43,2.893,51,0.344,52,0.891,55,1.151,56,1.496,61,0.115,80,0.004,81,0.004,82,0.003,92,1.237,107,1.474,136,1.314,143,1.276,221,2.491,226,3.036,316,3.129,419,2.34,457,3.316,529,2.707,530,2.322,533,2.768,611,3.737,612,3.547,617,5.307,622,5.018,624,5.018,625,5.018,626,5.549,627,3.939,629,3.725,630,4.573,631,3.939,632,3.538,633,3.725,634,5.675,635,4.778,636,4.778,637,3.939,638,3.547,678,5.404,809,2.554,877,3.261,929,3.725,935,4.566,1155,4.573,1286,2.939,1798,5.782,1821,6.904,1875,6.409,1876,4.207,1877,6.885,1878,6.885,1879,6.885,1880,4.566,1881,6.885,1882,4.566,1883,3.939,1884,4.778,1885,5.111,1886,5.111,1887,5.111,1888,6.885,1889,5.111,1890,5.111,1891,3.395,1892,5.111,1893,5.111,1894,5.111,1895,5.111]],["title/interfaces/NewsTargetFilter.html",[146,0.463,1798,3.428]],["body/interfaces/NewsTargetFilter.html",[3,0.171,4,0.143,5,0.116,9,0.348,10,0.996,24,0.006,26,0.377,51,0.353,52,1.252,57,1.35,61,0.162,80,0.004,81,0.005,82,0.004,146,0.673,148,2.005,220,2.854,221,4.601,222,4.717,530,3.264,934,7.771,1798,5.931,1875,5.913,1896,6.417]],["title/injectables/NewsUc.html",[210,1.096,1671,3.151]],["body/injectables/NewsUc.html",[0,0.074,3,0.06,4,0.05,5,0.041,9,0.122,12,1.748,16,1.619,18,0.6,21,0.792,23,1.192,24,0.006,25,0.692,26,0.36,27,0.792,28,1.829,32,1.686,33,1.542,34,0.717,39,0.574,49,1.895,51,0.311,52,0.437,57,0.472,61,0.056,80,0.001,81,0.002,82,0.001,92,0.728,107,1.519,111,0.54,124,0.838,136,1.709,143,1.309,202,4.617,210,0.899,211,0.968,213,3.004,220,2.934,221,3.893,222,2.927,223,4.449,224,3.604,228,1.359,229,4.364,230,2.637,242,1.092,243,4.786,245,3.164,296,1.322,345,1.976,412,2.796,419,2.917,425,1.692,449,3.583,457,2.173,529,3.789,530,3.124,532,1.359,533,4.078,535,0.987,538,2.318,553,2.693,589,1.194,590,1.223,591,1.167,592,1.167,610,1.491,611,3.142,679,4.065,688,1.543,698,1.829,809,1.254,855,4.16,868,2.242,877,1.601,898,3.622,907,3.622,929,5.274,934,3.338,938,2.844,960,2.026,966,4.782,1059,1.934,1076,2.261,1137,1.491,1146,4.065,1152,4.269,1154,5.022,1155,4.27,1160,1.929,1170,3.89,1174,1.443,1179,1.829,1212,2.615,1370,1.443,1481,1.601,1483,2.955,1504,3.525,1637,3.125,1640,3.718,1671,2.587,1683,3.338,1732,2.242,1738,2.242,1744,5.232,1746,5.232,1761,3.622,1776,4.567,1779,2.242,1798,2.814,1817,2.066,1897,2.066,1898,4.054,1899,4.054,1900,4.054,1901,4.054,1902,5.101,1903,2.51,1904,2.51,1905,4.054,1906,2.51,1907,4.054,1908,2.51,1909,4.054,1910,2.51,1911,4.054,1912,4.557,1913,4.557,1914,3.388,1915,4.054,1916,2.51,1917,4.054,1918,2.51,1919,2.51,1920,4.054,1921,2.51,1922,2.955,1923,2.51,1924,5.101,1925,2.51,1926,4.054,1927,2.51,1928,2.51,1929,2.51,1930,3.338,1931,4.821,1932,2.51,1933,2.242,1934,2.51,1935,5.857,1936,2.51,1937,4.054,1938,2.51,1939,4.054,1940,2.51,1941,5.232,1942,2.51,1943,2.51,1944,2.51,1945,4.054,1946,2.242,1947,4.054,1948,2.51,1949,3.622,1950,2.51,1951,4.054,1952,2.51,1953,2.51,1954,5.101,1955,2.51,1956,4.054,1957,2.51,1958,2.51,1959,2.51,1960,2.242,1961,1.742,1962,2.51,1963,2.51,1964,2.51,1965,2.51,1966,2.242,1967,4.054,1968,2.51,1969,2.51,1970,2.51,1971,4.054,1972,2.51,1973,2.51,1974,2.51,1975,2.51,1976,2.51]],["title/classes/PaginationQuery.html",[0,0.146,1652,3.28]],["body/classes/PaginationQuery.html",[0,0.234,2,1.192,3,0.151,4,0.126,5,0.103,9,0.307,10,0.923,21,0.786,24,0.006,26,0.349,27,0.897,29,2.142,32,2.077,33,2.394,51,0.327,61,0.143,80,0.004,81,0.005,82,0.004,99,3.066,124,2.645,677,6.519,692,5.994,693,3.017,697,3.899,770,6.104,809,3.957,1133,6.519,1177,5.736,1178,6.462,1286,4.554,1652,5.26,1977,5.664,1978,6.278,1979,6.34,1980,4.289,1981,7.919,1982,7.919,1983,7.919,1984,6.34,1985,6.34,1986,7.075,1987,6.34,1988,8.636,1989,5.664,1990,6.34,1991,6.34,1992,6.34,1993,6.34]],["title/classes/PaginationResponse.html",[0,0.146,1669,3.28]],["body/classes/PaginationResponse.html",[0,0.18,2,1.144,3,0.145,4,0.121,5,0.098,9,0.295,10,0.9,18,1.455,21,0.912,23,0.908,24,0.006,25,0.527,26,0.406,27,0.912,29,2.41,51,0.251,61,0.137,80,0.004,81,0.004,82,0.004,99,3.246,306,6.382,345,3.76,691,5.437,693,2.894,783,4.595,1177,6.339,1178,6.624,1669,5.124,1994,5.434,1995,6.957,1996,7.714,1997,6.082,1998,6.082,1999,6.082,2000,6.082,2001,6.082,2002,6.082,2003,6.082,2004,6.082,2005,6.082]],["title/injectables/ParseObjectIdPipe.html",[210,1.096,1668,3.428]],["body/injectables/ParseObjectIdPipe.html",[0,0.199,3,0.16,4,0.134,5,0.109,9,0.326,21,0.668,23,1.005,24,0.006,25,0.583,26,0.297,27,0.668,33,2.485,34,1.192,39,1.067,41,2.568,51,0.366,55,1.517,57,1.266,61,0.152,80,0.004,81,0.005,82,0.004,92,1.477,107,1.192,111,1.45,136,1.286,143,1.104,210,1.824,211,2.598,220,2.036,255,3.873,264,2.457,733,3.366,1122,5.705,1668,5.705,1862,4.584,2006,7.344,2007,5.544,2008,8.22,2009,6.735,2010,8.22,2011,6.735,2012,8.22,2013,6.735,2014,6.735]],["title/interfaces/PlainTextMailContent.html",[146,0.463,161,3.037]],["body/interfaces/PlainTextMailContent.html",[3,0.15,4,0.126,5,0.102,7,1.858,9,0.306,10,0.922,24,0.006,25,0.548,26,0.349,27,0.785,39,1.145,61,0.142,80,0.004,81,0.005,82,0.004,146,0.902,147,4.863,148,1.766,149,4.037,150,5.305,151,5.253,152,4.203,153,4.203,154,4.863,155,4.037,156,4.203,157,4.203,158,5.558,159,4.037,160,4.203,161,5.305,162,6.18,163,6.18,164,4.863,165,4.283,166,4.037,167,4.203,168,4.203,169,4.203]],["title/classes/ResolvedUser.html",[0,0.146,1361,3.037]],["body/classes/ResolvedUser.html",[0,0.175,2,1.111,3,0.141,4,0.118,5,0.096,9,0.286,10,0.883,15,3.418,16,1.695,17,3.488,21,0.953,24,0.006,26,0.428,28,2.754,29,2.598,39,1.101,51,0.313,57,1.111,61,0.17,80,0.003,81,0.004,82,0.003,224,3.561,412,3.636,691,5.621,693,2.812,733,3.785,1159,4.403,1161,3.978,1162,5.802,1164,5.031,1165,4.403,1166,4.403,1361,4.658,2015,4.865,2016,5.91,2017,5.91,2018,5.91,2019,5.91,2020,5.91,2021,5.91,2022,5.91,2023,5.91]],["title/classes/ResolvedUserMapper.html",[0,0.146,2024,3.807]],["body/classes/ResolvedUserMapper.html",[0,0.184,2,1.171,3,0.148,4,0.124,5,0.101,9,0.302,12,2.355,16,1.262,21,0.618,23,0.93,24,0.006,25,0.678,26,0.275,27,0.618,32,1.633,33,1.882,34,1.102,39,0.965,51,0.323,52,1.085,61,0.14,80,0.004,81,0.005,82,0.004,92,1.407,107,1.102,136,1.189,143,1.021,224,3.828,538,3.892,667,3.726,773,5.201,777,4.136,778,4.136,1159,4.511,1161,4.276,1361,5.526,1756,5.126,1758,5.126,1760,5.563,2024,6.035,2025,5.563,2026,7.83,2027,6.227,2028,4.8,2029,5.563,2030,6.227,2031,5.563,2032,6.227,2033,6.227,2034,6.227,2035,6.227,2036,6.227,2037,6.227,2038,5.563,2039,6.227,2040,5.563]],["title/classes/Role.html",[0,0.146,1161,2.35]],["body/classes/Role.html",[0,0.147,2,0.934,3,0.118,4,0.099,5,0.08,7,1.348,8,2.984,9,0.372,10,0.787,14,2.706,15,2.76,16,1.369,17,2.817,18,1.188,21,0.917,23,0.741,24,0.006,25,0.769,26,0.408,27,0.493,28,2.109,29,2.458,30,2.792,32,2.159,33,2.489,34,1.457,35,4.151,39,1.041,41,1.551,42,2.115,43,3.058,44,2.481,45,2.481,46,2.115,47,2.481,48,2.42,49,1.845,50,2.481,51,0.279,52,1.177,53,3.053,55,1.118,56,1.453,57,0.934,59,1.879,61,0.173,62,1.43,63,1.915,70,1.687,76,2.072,80,0.003,81,0.004,82,0.003,146,0.465,220,2.489,224,3.667,422,2.18,425,2.072,449,2.363,483,2.689,484,2.689,563,3.291,697,3.053,888,4.151,1054,2.949,1129,3.619,1159,5.039,1161,3.917,1230,6.345,1231,3.827,1232,3.827,1233,4.436,1234,3.827,1235,3.446,1236,4.087,1237,3.298,1238,4.436,1239,4.436,1240,4.436,1241,4.436,1242,5.204,2041,6.751,2042,4.087,2043,4.965,2044,4.965,2045,4.965]],["title/injectables/RoleRepo.html",[210,1.096,2046,3.428]],["body/injectables/RoleRepo.html",[0,0.164,3,0.132,4,0.111,5,0.09,9,0.27,10,0.849,16,1.646,18,1.331,21,0.887,23,1.286,24,0.006,25,0.795,26,0.38,27,0.855,39,0.915,51,0.356,52,0.97,55,1.253,57,1.046,61,0.125,80,0.003,81,0.004,82,0.003,87,1.993,92,1.309,107,1.437,111,1.198,136,1.55,143,1.194,210,1.616,211,2.146,213,3.097,220,2.826,224,2.37,230,2.82,242,2.42,245,2.809,264,2.03,300,3.696,301,5.118,303,3.945,809,2.78,1161,4.449,2046,5.056,2047,4.971,2048,8.943,2049,6.508,2050,7.284,2051,7.284,2052,7.284,2053,6.508,2054,5.564,2055,7.284,2056,5.564,2057,7.284,2058,5.564,2059,5.564,2060,7.284,2061,7.284,2062,5.564]],["title/injectables/RoleUC.html",[210,1.096,2063,3.428]],["body/injectables/RoleUC.html",[0,0.187,3,0.15,4,0.126,5,0.102,9,0.306,18,1.511,21,0.784,23,1.179,24,0.006,25,0.684,26,0.349,27,0.784,34,1.117,39,0.711,51,0.373,52,1.101,57,1.187,61,0.142,80,0.004,81,0.005,82,0.004,87,2.262,92,1.419,107,1.117,111,1.359,136,1.205,143,1.035,210,1.752,211,2.435,213,2.784,220,2.731,224,3.961,230,2.427,237,4.194,242,2.747,245,2.184,1159,4.16,1232,4.867,2046,6.584,2063,5.482,2064,5.642,2065,7.899,2066,6.315,2067,6.315,2068,7.899,2069,6.315,2070,3.883,2071,6.315,2072,6.315,2073,6.315,2074,6.315,2075,6.315]],["title/classes/SchoolInfo.html",[0,0.146,557,2.601]],["body/classes/SchoolInfo.html",[0,0.189,2,1.199,3,0.152,4,0.127,5,0.103,7,1.587,9,0.309,10,0.927,14,3.186,16,1.611,18,1.526,21,0.899,23,0.952,24,0.006,25,0.808,26,0.42,27,0.633,29,2.342,30,2.661,39,1.021,41,1.993,42,2.717,43,2.953,46,2.717,51,0.328,52,1.385,55,1.437,56,1.867,57,1.199,59,2.414,61,0.143,62,1.838,80,0.004,81,0.005,82,0.004,260,4.782,422,2.567,425,2.661,440,4.076,483,3.455,484,3.455,509,3.455,524,6.127,525,4.65,526,4.65,557,4.187,1149,4.427,2076,7.737]],["title/classes/SchoolInfoMapper.html",[0,0.146,1728,3.807]],["body/classes/SchoolInfoMapper.html",[0,0.203,2,1.294,3,0.164,4,0.137,5,0.111,9,0.333,21,0.683,23,1.027,24,0.006,25,0.596,26,0.304,27,0.683,34,1.218,51,0.344,52,1.2,61,0.155,80,0.004,81,0.005,82,0.004,92,1.497,107,1.218,136,1.314,143,1.128,538,4.07,557,5.019,667,3.963,773,5.532,777,4.572,778,4.572,1728,6.42,1852,6.784,2077,7.441,2078,5.305,2079,8.329,2080,5.666,2081,6.883,2082,5.666,2083,6.883]],["title/classes/SchoolInfoResponse.html",[0,0.146,1852,3.6]],["body/classes/SchoolInfoResponse.html",[0,0.2,2,1.275,3,0.161,4,0.135,5,0.11,9,0.328,10,0.962,16,1.924,21,0.819,24,0.006,25,0.822,26,0.364,29,2.232,39,1.043,51,0.28,52,1.614,61,0.152,80,0.004,81,0.005,82,0.004,124,2.972,535,3.64,682,5.266,683,5.266,691,4.961,693,3.226,699,4.027,760,4.705,1852,6.015,1864,5.225,2084,7.949,2085,5.225,2086,5.58,2087,5.58]],["title/classes/SchoolNews.html",[0,0.146,601,2.934]],["body/classes/SchoolNews.html",[0,0.2,2,0.615,3,0.078,4,0.146,5,0.053,7,1.458,8,2.527,9,0.158,10,0.582,12,0.832,14,2.002,15,2.042,16,1.228,17,2.083,21,0.925,23,0.488,24,0.006,25,0.587,26,0.405,27,0.839,28,2.28,29,2.484,30,2.796,32,1.588,33,1.831,34,1.292,39,1.034,41,1.022,42,1.393,43,3.465,44,1.635,45,1.635,46,1.393,47,1.635,48,1.595,49,1.215,50,1.635,51,0.33,52,1.272,54,3.19,55,0.737,56,0.958,57,0.615,61,0.164,62,0.942,64,2.17,66,4.657,70,1.112,76,2.527,80,0.002,81,0.003,82,0.002,91,2.967,92,0.897,107,0.579,143,0.536,146,0.307,220,2.207,221,3.901,222,3.845,224,2.58,244,2.271,273,3.377,335,2.966,360,1.881,409,1.311,412,2.172,422,1.056,425,2.527,449,2.376,517,3.304,522,2.704,527,1.881,528,2.271,529,3.891,530,3.92,531,3.845,532,3.953,533,3.671,534,4.94,535,3.025,536,4.704,537,4.502,538,2.752,539,3.849,540,4.745,542,2.693,543,3.466,544,4.197,545,4.203,546,3.466,547,2.693,548,2.693,549,3.64,550,4.325,551,3.64,552,3.466,553,3.317,554,3.466,555,2.693,556,2.693,557,3.844,558,2.693,559,3.483,560,3.864,561,2.693,562,2.693,563,2.952,564,2.693,565,3.317,566,2.693,567,3.64,568,2.693,569,3.64,570,2.693,571,2.966,572,2.385,573,2.704,574,1.772,575,2.271,576,1.423,577,1.824,578,2.173,579,2.087,580,2.385,581,2.385,582,2.385,583,2.385,584,2.385,585,2.012,586,2.173,587,2.385,588,3.64,589,2.882,590,2.952,591,2.815,592,2.815,593,2.882,594,3.483,595,3.483,596,2.385,597,3.64,598,2.385,599,2.385,600,4.415,601,2.966,602,1.943,2088,3.271]],["title/classes/Scope.html",[0,0.146,611,2.061]],["body/classes/Scope.html",[0,0.128,2,0.815,3,0.103,4,0.086,5,0.07,9,0.21,10,0.716,14,1.737,20,2.665,21,0.77,23,1.065,24,0.006,25,0.532,26,0.386,27,0.609,32,1.136,33,2.157,39,1.024,49,2.282,51,0.254,55,0.976,56,1.269,61,0.191,63,1.671,80,0.005,81,0.004,82,0.003,92,1.104,101,2.879,107,1.087,136,1.625,143,1.512,266,3.008,306,5.388,316,3.528,419,2.425,457,3.039,611,2.563,622,5.201,624,4.478,625,4.478,626,5.885,629,4.478,630,5.653,632,4.064,633,4.478,634,5.974,635,5.908,636,5.908,638,3.008,809,3.566,890,2.665,938,2.417,1054,5.056,1237,4.74,1286,2.492,1296,4.611,1573,3.34,1574,2.665,1862,2.417,1873,4.735,1883,6.561,1961,3.008,2089,3.34,2090,5.488,2091,4.334,2092,4.334,2093,4.334,2094,4.334,2095,4.334,2096,4.334,2097,4.334,2098,6.375,2099,5.874,2100,5.488,2101,3.872,2102,4.334,2103,3.872,2104,6.375,2105,4.334,2106,4.334,2107,3.872,2108,4.334,2109,3.872,2110,4.334,2111,4.334,2112,4.334,2113,5.488,2114,4.334,2115,6.143,2116,4.334,2117,4.334,2118,4.334,2119,4.334,2120,4.334,2121,4.334,2122,4.334,2123,6.143,2124,4.334,2125,6.143,2126,4.334,2127,4.334,2128,4.334,2129,4.334,2130,4.334]],["title/classes/ServerConsole.html",[0,0.146,2131,3.807]],["body/classes/ServerConsole.html",[0,0.173,2,1.099,3,0.139,4,0.117,5,0.095,9,0.283,18,1.398,21,0.825,23,1.123,24,0.006,25,0.651,26,0.332,27,0.746,29,2.034,39,0.936,51,0.311,61,0.131,80,0.003,81,0.004,82,0.003,92,1.351,107,1.331,115,2.849,124,3.034,143,1.233,182,3.417,242,2.542,316,3.989,364,6.454,366,4.504,374,2.849,375,6.177,826,7.227,829,5.189,842,4.264,962,5.831,983,5.523,1296,5.215,2131,5.796,2132,5.221,2133,7.52,2134,5.844,2135,5.844,2136,7.52,2137,6.399,2138,5.844,2139,7.52,2140,6.719,2141,5.844,2142,6.719,2143,7.167,2144,5.221,2145,5.844,2146,5.844]],["title/modules/ServerConsoleModule.html",[170,1.423,2147,3.6]],["body/modules/ServerConsoleModule.html",[0,0.195,3,0.157,4,0.132,5,0.107,24,0.006,51,0.389,61,0.149,80,0.004,81,0.005,82,0.004,111,1.422,170,2.34,172,2.702,173,3.777,180,4.53,181,3.48,182,3.003,184,3.998,185,3.866,364,6.658,366,5.093,374,3.221,375,5.614,949,3.684,1546,3.48,2131,6.262,2144,5.903,2147,7.153,2148,5.903,2149,5.903,2150,5.903,2151,6.658,2152,6.607,2153,6.607,2154,8.124,2155,6.607,2156,6.607]],["title/controllers/ServerController.html",[700,2.195,2157,3.807]],["body/controllers/ServerController.html",[0,0.209,3,0.169,4,0.141,5,0.115,9,0.343,21,0.703,24,0.006,29,1.917,32,2.223,39,0.954,51,0.293,61,0.159,80,0.004,81,0.005,82,0.004,92,1.523,107,1.254,111,1.525,115,3.454,143,1.161,700,3.767,702,3.54,826,7.736,828,5.883,829,4.59,830,5.629,831,4.874,841,5.461,842,3.633,2157,6.533,2158,6.33,2159,7.085]],["title/modules/ServerModule.html",[170,1.423,2151,3.428]],["body/modules/ServerModule.html",[0,0.136,1,3.676,3,0.109,4,0.091,5,0.074,12,1.871,24,0.006,26,0.202,34,0.812,39,0.896,51,0.405,55,1.44,56,1.343,61,0.103,63,1.769,64,1.644,65,2.416,69,3.978,71,3.184,80,0.003,81,0.004,82,0.003,111,0.988,136,1.519,143,0.752,170,1.842,171,6.319,172,1.876,173,2.972,177,6.016,180,3.565,181,2.416,182,2.085,185,3.042,382,6.319,409,2.563,507,3.931,514,3.367,516,2.375,522,3.462,527,3.676,529,2.513,544,3.676,557,3.367,573,3.462,576,1.995,589,2.183,590,2.236,591,2.132,592,2.132,593,2.183,601,3.798,602,3.798,639,3.462,702,3.195,915,4.098,996,4.08,1005,5.263,1006,5.263,1007,5.263,1087,3.776,1088,3.776,1089,3.776,1161,3.042,1184,3.536,1203,3.462,1254,3.565,1397,6.319,1498,5.81,1504,3.278,1511,3.344,1512,3.344,1513,3.344,1546,2.416,1548,3.536,1549,3.536,1551,3.931,1554,3.047,1556,3.776,1557,3.344,1771,6.319,2151,6.826,2157,5.672,2160,4.098,2161,4.098,2162,6.319,2163,3.776,2164,6.393,2165,6.393,2166,3.344,2167,3.047,2168,2.927,2169,3.776,2170,4.587,2171,4.587,2172,4.587,2173,4.587,2174,4.587,2175,4.587,2176,4.587,2177,4.587,2178,4.587,2179,4.587,2180,4.587,2181,5.263,2182,4.928,2183,5.263,2184,4.587,2185,4.587,2186,4.587,2187,4.587,2188,3.184,2189,4.587,2190,4.587,2191,6.393,2192,4.587,2193,3.776,2194,3.047,2195,4.098,2196,3.776,2197,4.587]],["title/classes/StatusDomainService.html",[0,0.146,2198,3.807]],["body/classes/StatusDomainService.html",[0,0.16,2,1.021,3,0.129,4,0.108,5,0.088,9,0.263,10,0.836,18,1.299,21,0.88,23,1.274,24,0.006,25,0.739,26,0.402,27,0.847,39,0.611,49,2.017,51,0.224,52,0.946,61,0.122,80,0.003,81,0.004,82,0.003,92,1.288,99,2.591,107,1.42,136,1.368,143,1.175,419,3.097,440,2.784,457,3.053,516,3.296,809,4.01,1235,3.768,1253,5.815,1254,5.571,1873,5.525,2198,5.525,2199,4.851,2200,7.168,2201,8.534,2202,7.168,2203,7.168,2204,7.168,2205,5.429,2206,6.185,2207,5.429,2208,7.168,2209,5.429,2210,7.168,2211,5.429,2212,5.429,2213,7.168,2214,5.429,2215,5.429,2216,5.429,2217,5.429,2218,5.429,2219,5.429,2220,5.429,2221,4.851,2222,4.851,2223,5.429,2224,5.429,2225,5.429,2226,5.429,2227,3.606,2228,4.185,2229,5.429,2230,4.185,2231,5.429]],["title/classes/Submission.html",[0,0.146,1254,2.754]],["body/classes/Submission.html",[0,0.122,2,0.777,3,0.098,4,0.082,5,0.096,7,1.186,8,2.835,9,0.2,10,0.693,12,1.051,14,2.381,15,2.428,16,1.204,17,2.478,18,0.989,21,0.942,23,0.617,24,0.006,25,0.358,26,0.419,27,0.69,28,1.855,29,2.548,30,2.714,32,2.111,33,2.433,34,1.528,35,4.949,36,5.722,39,0.972,41,1.291,42,1.761,43,2.823,44,2.066,45,2.066,46,1.761,47,2.066,48,2.015,49,1.536,50,2.066,51,0.346,52,1.035,53,4.274,54,2.177,55,0.931,56,1.21,57,0.777,59,1.565,61,0.093,62,1.191,70,1.405,76,3.17,80,0.002,81,0.003,82,0.002,99,2.245,136,0.789,146,0.387,409,1.657,422,1.918,425,2.478,462,2.638,507,4.274,514,4.413,516,3.392,517,3.388,540,3.997,545,4.825,639,4.359,938,4.925,996,5.508,1243,5.857,1244,3.403,1245,5.857,1246,6.255,1247,6.789,1248,7.486,1249,4.359,1250,7.486,1251,6.108,1252,3.693,1253,2.638,1254,3.312,1255,5.306,1256,5.306,1257,4.889,1258,5.306,1259,2.542,1260,5.306,1261,3.693,1262,3.693,1263,3.693,1264,3.693,1265,3.693,1266,3.693,1267,3.693,1268,3.693,1269,3.693,1270,3.693,2232,5.939,2233,4.134,2234,4.134,2235,4.134,2236,4.134,2237,4.134,2238,4.134,2239,4.134,2240,4.134,2241,4.134]],["title/injectables/SubmissionRepo.html",[210,1.096,2242,3.428]],["body/injectables/SubmissionRepo.html",[0,0.157,3,0.126,4,0.106,5,0.086,9,0.257,18,1.268,21,0.839,23,1.262,24,0.006,25,0.732,26,0.373,27,0.839,51,0.363,52,0.924,55,1.589,56,1.552,57,0.997,61,0.119,63,2.044,64,1.899,80,0.005,81,0.004,82,0.003,87,1.899,92,1.268,107,1.403,111,1.141,136,1.614,143,1.3,210,1.565,211,2.044,213,3.068,220,2.901,229,4.092,230,2.782,242,2.306,245,2.924,264,1.934,300,3.521,301,5.022,303,3.821,419,2.695,507,4.338,511,3.382,516,1.969,605,6.303,607,5.808,610,3.149,611,2.212,619,4.338,626,3.382,632,3.206,639,2.871,1037,3.521,1249,2.871,1251,3.864,1253,4.502,1254,2.956,1546,2.792,2242,4.897,2243,4.736,2244,7.055,2245,7.055,2246,5.301,2247,7.055,2248,5.301,2249,7.055,2250,5.301,2251,6.303,2252,5.301,2253,4.736,2254,7.055,2255,5.301,2256,7.055,2257,5.301]],["title/classes/TargetInfoMapper.html",[0,0.146,1730,3.807]],["body/classes/TargetInfoMapper.html",[0,0.203,2,1.291,3,0.163,4,0.137,5,0.111,9,0.333,21,0.681,23,1.025,24,0.006,25,0.595,26,0.303,27,0.681,34,1.215,51,0.343,52,1.197,61,0.154,80,0.004,81,0.005,82,0.004,92,1.495,107,1.215,136,1.311,143,1.126,530,3.121,538,4.066,571,5.524,667,3.958,773,5.525,778,4.562,1730,6.411,1861,6.779,1872,6.136,2078,5.294,2080,5.654,2082,5.654,2258,7.432,2259,8.318,2260,6.868,2261,6.868,2262,6.868]],["title/classes/TargetInfoResponse.html",[0,0.146,1861,3.6]],["body/classes/TargetInfoResponse.html",[0,0.2,2,1.275,3,0.161,4,0.135,5,0.11,9,0.328,10,0.962,16,1.924,21,0.819,24,0.006,25,0.822,26,0.364,29,2.232,39,1.043,51,0.28,52,1.614,61,0.152,80,0.004,81,0.005,82,0.004,124,2.972,530,4.207,682,5.266,683,5.266,691,4.961,693,3.226,699,4.027,760,4.705,1861,6.015,1864,5.225,2085,5.225,2086,5.58,2087,5.58,2263,7.949]],["title/classes/Task.html",[0,0.146,516,1.835]],["body/classes/Task.html",[0,0.114,2,0.723,3,0.091,4,0.077,5,0.062,7,1.125,8,2.773,9,0.186,10,0.657,14,2.259,15,2.304,16,1.489,17,2.351,18,0.92,21,0.949,23,0.996,24,0.006,25,0.75,26,0.402,27,0.876,28,2.637,29,2.429,30,2.759,32,1.478,33,1.704,34,1.18,39,0.995,41,2.443,42,1.638,43,2.729,44,1.921,45,1.921,46,1.638,47,1.921,48,1.874,49,3.217,50,1.921,51,0.303,52,0.982,55,1.269,56,1.125,57,0.723,59,1.455,61,0.15,62,1.108,70,1.307,76,2.351,80,0.002,81,0.003,82,0.002,92,1.013,99,1.242,107,1.446,124,1.284,136,0.734,143,1.282,146,0.625,220,2.47,264,1.403,292,2.364,316,2.561,345,1.874,411,2.211,416,2.453,417,2.453,419,2.496,422,1.82,425,1.604,442,2.453,457,3.763,483,3.052,484,2.082,510,2.816,516,2.478,517,1.874,540,3.24,545,2.669,576,1.673,641,5.098,644,3.435,933,2.747,938,3.142,1011,2.082,1201,3.596,1202,2.803,1203,3.978,1204,5.387,1205,5.098,1206,4.363,1207,4.687,1208,5.324,1209,2.803,1210,4.343,1211,2.669,1212,1.971,1213,4.854,1214,4.343,1215,2.964,1216,6.027,1217,2.964,1218,4.343,1219,2.964,1220,2.964,1221,2.964,1222,5.661,1223,5.661,1224,4.343,1225,5.141,1226,4.343,1227,4.343,1228,2.964,1229,5.661,2264,5.635,2265,5.635,2266,5.635,2267,3.845,2268,3.845,2269,3.845,2270,3.845,2271,3.845,2272,3.845,2273,3.845,2274,3.845,2275,3.845,2276,3.845,2277,3.845,2278,3.845]],["title/controllers/TaskController.html",[700,2.195,2279,3.807]],["body/controllers/TaskController.html",[0,0.154,3,0.124,4,0.104,5,0.084,9,0.252,21,0.692,23,1.041,24,0.006,25,0.604,26,0.308,27,0.692,29,1.887,34,1.235,51,0.386,57,0.98,61,0.117,80,0.005,81,0.004,82,0.003,87,1.868,92,1.254,107,1.235,111,1.122,136,1.785,143,1.377,213,2.909,230,2.58,242,2.267,245,2.413,632,3.573,667,2.48,693,2.48,700,2.317,702,2.605,704,3.326,710,3.326,711,3.8,715,3.8,1156,4.717,1177,5.578,1178,5.828,1645,5.465,1652,6.606,1667,4.018,1669,3.462,1670,4.291,1995,6.121,2279,5.377,2280,4.657,2281,3.462,2282,7.025,2283,7.025,2284,4.657,2285,6.976,2286,5.213,2287,4.657,2288,6.976,2289,5.213,2290,5.458,2291,5.213,2292,3.8,2293,4.018,2294,5.213,2295,5.213,2296,5.213,2297,6.976,2298,5.213,2299,6.976,2300,6.976,2301,6.976,2302,6.976,2303,5.213]],["title/classes/TaskDomainService.html",[0,0.146,2304,3.807]],["body/classes/TaskDomainService.html",[0,0.178,2,0.79,3,0.1,4,0.084,5,0.097,9,0.203,10,0.701,18,1.005,21,0.88,23,1.258,24,0.006,25,0.73,26,0.409,27,0.836,34,0.743,49,1.561,51,0.248,52,0.732,61,0.135,63,1.62,64,1.505,80,0.002,81,0.003,82,0.002,92,1.079,99,2.801,107,1.491,136,1.693,143,1.422,146,0.394,155,2.68,281,2.583,419,3.183,452,2.79,511,2.68,516,3.629,518,2.583,563,2.047,674,2.495,809,2.099,891,1.999,960,2.099,1076,2.342,1207,3.833,1208,5.333,1213,4.166,1249,2.275,1253,2.68,1254,5.108,1259,3.694,1286,2.415,1574,2.583,1891,2.79,1961,2.915,2198,4.631,2206,3.237,2227,4.658,2228,3.237,2230,3.237,2281,5.595,2304,4.631,2305,3.237,2306,6.007,2307,6.007,2308,6.007,2309,7.235,2310,6.266,2311,6.007,2312,6.007,2313,6.322,2314,6.007,2315,6.007,2316,4.2,2317,6.007,2318,4.2,2319,3.753,2320,6.685,2321,6.007,2322,4.2,2323,3.753,2324,4.2,2325,6.007,2326,4.2,2327,6.007,2328,7.013,2329,6.838,2330,4.2,2331,4.2,2332,2.915,2333,3.237,2334,5.367,2335,4.2,2336,2.68,2337,4.2,2338,3.753,2339,4.2,2340,2.915,2341,4.2,2342,4.2,2343,4.2,2344,6.007,2345,4.2,2346,4.2,2347,3.237,2348,2.915,2349,3.237,2350,4.2,2351,4.2,2352,4.2,2353,4.2,2354,4.2,2355,4.2,2356,4.2,2357,4.2,2358,2.583,2359,4.2,2360,5.367,2361,4.2,2362,4.2,2363,4.2,2364,7.654,2365,4.2,2366,4.2,2367,3.753,2368,6.007,2369,4.2,2370,4.2,2371,4.2]],["title/classes/TaskMapper.html",[0,0.146,2293,3.807]],["body/classes/TaskMapper.html",[0,0.184,2,1.171,3,0.148,4,0.124,5,0.101,9,0.302,21,0.618,23,0.93,24,0.006,25,0.539,26,0.275,27,0.618,34,1.102,49,2.313,51,0.323,61,0.14,63,2.402,80,0.004,81,0.005,82,0.004,92,1.407,107,1.102,136,1.715,143,1.021,516,2.909,538,3.892,667,3.726,773,5.201,777,4.136,778,4.136,1213,4.651,1546,3.28,1756,5.126,1758,5.126,2082,5.126,2206,4.8,2222,5.563,2227,5.201,2228,4.8,2230,4.8,2292,6.551,2293,6.035,2320,6.927,2358,3.829,2367,5.563,2372,5.563,2373,7.83,2374,6.227,2375,7.83,2376,6.227,2377,6.227,2378,6.227,2379,6.227,2380,6.227,2381,6.227,2382,6.227,2383,6.227,2384,6.227,2385,6.227,2386,6.227,2387,6.227,2388,6.227,2389,6.227,2390,6.227]],["title/modules/TaskModule.html",[170,1.423,2162,3.6]],["body/modules/TaskModule.html",[0,0.193,3,0.155,4,0.13,5,0.106,24,0.006,51,0.388,61,0.147,80,0.004,81,0.005,82,0.004,111,1.405,170,2.322,172,2.668,173,3.747,180,4.495,181,3.436,182,2.965,184,3.663,185,3.105,603,6.352,702,4.028,2070,4.012,2162,7.311,2242,6.637,2279,6.743,2290,6.637,2391,5.829,2392,5.829,2393,6.637,2394,6.525,2395,5.829,2396,6.525,2397,4.164]],["title/classes/TaskParentTestEntity.html",[0,0.146,2398,3.807]],["body/classes/TaskParentTestEntity.html",[0,0.18,2,0.805,3,0.102,4,0.085,5,0.069,7,0.855,9,0.207,10,0.71,12,2.218,16,1.719,18,1.024,21,0.841,23,0.909,24,0.006,25,0.707,26,0.341,27,0.766,28,1.337,34,1.543,49,1.59,51,0.251,52,0.746,57,0.805,61,0.137,80,0.002,81,0.004,82,0.002,92,1.094,99,1.966,107,1.254,136,1.809,143,1.541,220,2.904,229,2.831,345,2.086,411,2.461,416,4.926,417,4.926,418,5.951,442,3.885,457,2.594,501,3.299,510,2.139,511,3.885,514,4.593,516,3.569,589,2.037,590,2.086,591,1.99,592,1.99,593,2.037,594,2.461,733,3.043,933,2.086,1165,2.254,1166,2.254,1201,4.522,1203,3.838,1204,4.926,1206,3.617,1207,5.409,1208,4.358,1213,4.21,1245,4.693,1249,4.418,1251,3.12,1253,3.885,1254,5.241,1405,4.226,1409,3.299,1413,3.299,1453,3.524,1454,5.013,1978,2.971,2398,5.463,2399,3.524,2400,5.44,2401,6.089,2402,5.44,2403,4.28,2404,4.28,2405,4.28,2406,4.28,2407,6.332,2408,3.824,2409,3.824,2410,3.824,2411,3.299,2412,3.824,2413,3.824,2414,3.524,2415,3.824,2416,3.824,2417,5.44,2418,3.824,2419,3.524,2420,3.824,2421,3.824,2422,3.824,2423,3.824,2424,5.44,2425,3.824,2426,3.824,2427,3.824,2428,3.824,2429,3.824]],["title/injectables/TaskRepo.html",[210,1.096,2393,3.428]],["body/injectables/TaskRepo.html",[0,0.098,3,0.079,4,0.066,5,0.054,9,0.161,18,0.794,21,0.798,23,1.155,24,0.006,25,0.67,26,0.341,27,0.768,28,2.133,32,0.871,33,1.004,34,1.3,41,1.037,51,0.332,52,0.579,55,1.137,56,0.972,57,0.624,61,0.075,63,1.948,69,3.867,80,0.002,81,0.003,82,0.002,87,1.189,92,0.907,107,1.503,111,0.715,124,2.042,136,1.758,143,1.268,182,1.509,210,1.12,211,1.28,213,2.974,220,2.86,230,2.661,234,4.057,237,6.373,242,1.444,243,4.623,245,2.867,264,1.211,266,3.505,300,2.205,301,4.057,303,2.735,345,3.329,419,2.886,510,1.659,516,3.217,610,1.972,611,3.065,619,3.105,626,4.358,632,2.295,933,1.618,960,3.867,1037,2.205,1170,6,1173,3.63,1174,4.767,1203,2.735,1206,3,1213,5.144,1249,1.798,1259,2.041,1369,6.101,1465,2.304,1469,5.355,1504,4.851,1545,3.892,1576,4.74,1638,3.892,1817,2.733,1819,4.512,1832,2.966,1837,1.972,2182,3.892,2281,5.14,2313,3.681,2336,3.222,2340,2.304,2358,2.041,2393,3.505,2397,2.118,2430,2.966,2431,6.111,2432,6.111,2433,5.05,2434,5.05,2435,6.829,2436,3.32,2437,5.05,2438,3.32,2439,6.99,2440,6.913,2441,3.32,2442,3.32,2443,3.32,2444,6.101,2445,3.32,2446,4.512,2447,5.05,2448,3.32,2449,5.05,2450,3.32,2451,3.32,2452,2.733,2453,5.264,2454,6.111,2455,6.111,2456,6.111,2457,6.111,2458,5.46,2459,7.738,2460,6.111,2461,5.05,2462,5.05,2463,3.32,2464,3.32,2465,3.32,2466,3.32,2467,2.966,2468,2.966,2469,3.32,2470,2.559,2471,3.32,2472,2.733,2473,5.05,2474,3.32,2475,2.559]],["title/classes/TaskResponse.html",[0,0.146,2292,3.6]],["body/classes/TaskResponse.html",[0,0.17,2,1.079,3,0.136,4,0.114,5,0.093,9,0.278,10,0.867,15,3.37,16,1.671,17,3.439,21,0.947,24,0.006,25,0.714,26,0.426,27,0.918,28,2.89,29,2.582,39,1.075,51,0.237,61,0.129,80,0.003,81,0.004,82,0.003,99,2.662,115,3.622,124,1.917,440,2.942,516,2.761,667,3.536,669,4.414,691,5.524,692,6.268,693,2.73,729,5.259,1206,4.896,2206,4.422,2227,5.475,2228,4.422,2230,4.422,2292,5.417,2476,5.126,2477,6.639,2478,4.569,2479,8.242,2480,5.737,2481,5.737,2482,5.737,2483,5.737,2484,5.737,2485,5.737,2486,5.737,2487,5.737]],["title/classes/TaskScope.html",[0,0.146,2453,3.807]],["body/classes/TaskScope.html",[0,0.135,2,0.861,3,0.109,4,0.091,5,0.074,7,1.275,9,0.222,10,0.745,16,1.295,21,0.914,23,1.354,24,0.006,25,0.77,26,0.406,27,0.882,28,2.297,32,1.201,33,1.385,34,0.811,39,0.896,41,1.431,43,2.732,51,0.328,52,0.798,55,1.032,57,0.861,61,0.103,80,0.003,81,0.004,82,0.003,92,1.148,107,1.605,143,1.42,220,2.898,264,1.671,316,2.902,419,2.499,516,1.702,576,1.993,611,3.615,612,3.179,617,6.678,622,4.655,624,4.655,625,4.655,626,4.692,627,3.531,629,3.339,630,4.242,631,3.531,632,2.082,633,3.339,634,5.36,635,4.433,636,4.433,637,3.531,638,3.179,938,3.561,1204,4.075,1206,4.725,1207,2.923,1876,3.771,1880,4.092,1882,4.092,2251,7.107,2439,3.771,2444,5.706,2453,7.436,2467,4.092,2468,4.092,2488,7.943,2489,6.387,2490,6.387,2491,6.387,2492,6.387,2493,7.955,2494,6.387,2495,4.581,2496,6.387,2497,6.387,2498,4.581,2499,6.387,2500,6.387,2501,4.581,2502,6.387,2503,4.581,2504,4.581,2505,4.581,2506,4.581]],["title/classes/TaskTestHelper.html",[0,0.146,2411,3.807]],["body/classes/TaskTestHelper.html",[0,0.148,2,0.62,3,0.078,4,0.066,5,0.053,7,1.003,9,0.16,10,0.586,12,1.962,16,1.379,21,0.943,23,1.235,24,0.006,25,0.761,26,0.393,27,0.821,28,1.9,32,0.864,33,0.996,34,1.42,41,1.029,43,3.386,49,1.224,51,0.207,52,0.875,57,0.62,61,0.113,80,0.002,81,0.003,82,0.002,92,0.902,99,1.064,107,1.652,136,1.721,143,1.461,220,2.872,229,1.532,260,4.345,316,2.765,345,3.761,411,1.895,416,2.103,417,2.103,418,3.871,419,1.707,440,1.69,442,2.103,457,1.404,501,2.54,510,1.647,511,4.341,514,4.693,516,3.601,535,1.974,589,1.568,590,1.606,591,1.532,592,1.532,593,1.568,594,1.895,733,1.647,933,1.606,1160,2.389,1165,1.736,1166,1.736,1201,3.204,1203,3.295,1204,4.341,1206,4.041,1207,5.12,1208,3.088,1213,3.614,1245,3.871,1249,4.345,1251,2.402,1253,3.204,1254,5.128,1405,6.48,1406,4.134,1409,5.244,1413,5.244,1414,3.66,1415,4.134,1416,4.134,1417,5.008,1418,4.134,1419,5.008,1420,5.008,1421,5.008,1422,5.008,1423,5.008,1424,2.944,1425,4.134,1426,2.944,1427,2.944,1438,2.713,1439,2.944,1440,2.713,1441,2.944,1442,2.944,1443,2.713,1444,2.944,1445,2.944,1446,2.944,1447,2.944,1448,2.944,1449,2.944,1453,2.713,1454,4.134,1978,2.287,2398,4.689,2399,2.713,2400,2.944,2402,4.486,2407,5.435,2408,2.944,2409,2.944,2410,2.944,2411,3.871,2412,4.486,2413,2.944,2414,2.713,2415,4.486,2416,2.944,2417,4.486,2418,6.078,2419,2.713,2420,2.944,2421,2.944,2422,4.486,2423,2.944,2424,4.486,2425,4.486,2426,2.944,2427,4.486,2428,2.944,2429,2.944,2507,5.021,2508,5.021,2509,5.021,2510,5.021,2511,5.021,2512,3.295,2513,3.295,2514,3.295,2515,3.295,2516,3.295,2517,3.295,2518,3.295,2519,3.295]],["title/injectables/TaskUC.html",[210,1.096,2290,3.428]],["body/injectables/TaskUC.html",[0,0.097,3,0.078,4,0.065,5,0.053,9,0.158,15,1.338,18,1.195,21,0.819,23,1.232,24,0.006,25,0.715,26,0.364,27,0.819,34,1.416,51,0.318,57,0.615,61,0.112,63,1.262,80,0.002,81,0.003,82,0.002,87,2.17,92,0.897,107,1.416,111,0.704,126,4.602,136,1.835,143,1.312,210,1.108,211,1.262,213,3.031,220,2.722,229,3.393,230,2.734,240,4.986,245,3.114,255,2.871,377,1.635,409,1.311,419,2.874,447,1.943,448,2.271,449,4.174,453,1.881,455,2.271,457,2.127,518,2.012,563,2.434,603,5.316,609,2.385,610,3.597,933,1.595,980,3.64,1156,4.423,1173,3.597,1174,5.483,1176,6.748,1179,2.385,1206,2.966,1249,1.772,1259,2.012,1465,2.271,1469,2.385,1546,1.723,1645,4.026,1946,2.923,1995,5.608,2070,2.012,2221,4.461,2242,5.554,2281,4.023,2282,5.411,2283,4.461,2284,2.923,2287,4.461,2290,3.466,2304,2.522,2313,6.015,2319,4.461,2320,2.522,2323,2.923,2336,2.087,2358,4.167,2360,6.874,2393,5.34,2395,2.923,2414,4.111,2439,4.986,2458,2.923,2520,2.693,2521,6.056,2522,4.993,2523,4.993,2524,4.993,2525,4.993,2526,3.271,2527,3.271,2528,3.271,2529,3.271,2530,3.271,2531,3.271,2532,4.993,2533,3.271,2534,4.993,2535,3.271,2536,4.993,2537,3.271,2538,4.993,2539,6.055,2540,3.271,2541,2.923,2542,2.923,2543,2.923,2544,2.693,2545,2.522,2546,3.271,2547,3.271,2548,2.923,2549,3.271,2550,4.993,2551,4.993,2552,6.056,2553,4.993,2554,4.993,2555,6.777,2556,4.993,2557,4.993,2558,3.271,2559,4.993,2560,6.056,2561,4.993,2562,3.271,2563,3.271,2564,3.271,2565,2.923,2566,3.271,2567,3.271,2568,3.271,2569,6.056,2570,3.271,2571,3.271,2572,4.993,2573,3.271,2574,3.271,2575,4.993,2576,3.271]],["title/classes/TeamInfo.html",[0,0.146,573,2.675]],["body/classes/TeamInfo.html",[0,0.189,2,1.199,3,0.152,4,0.127,5,0.103,7,1.587,9,0.309,10,0.927,14,3.186,16,1.611,18,1.526,21,0.899,23,0.952,24,0.006,25,0.808,26,0.42,27,0.633,29,2.342,30,2.661,39,1.021,41,1.993,42,2.717,43,2.953,46,2.717,51,0.328,52,1.385,55,1.437,56,1.867,57,1.199,59,2.414,61,0.143,62,1.838,80,0.004,81,0.005,82,0.004,260,4.782,422,2.567,425,2.661,440,4.076,483,3.455,484,3.455,509,3.455,524,6.127,525,4.65,526,4.65,573,4.305,1150,4.427,2577,7.737]],["title/classes/TeamNews.html",[0,0.146,602,2.934]],["body/classes/TeamNews.html",[0,0.2,2,0.615,3,0.078,4,0.146,5,0.053,7,1.458,8,2.527,9,0.158,10,0.582,12,0.832,14,2.002,15,2.042,16,1.228,17,2.083,21,0.925,23,0.488,24,0.006,25,0.587,26,0.405,27,0.839,28,2.28,29,2.484,30,2.796,32,1.588,33,1.831,34,1.292,39,1.034,41,1.022,42,1.393,43,3.465,44,1.635,45,1.635,46,1.393,47,1.635,48,1.595,49,1.215,50,1.635,51,0.33,52,1.272,54,3.19,55,0.737,56,0.958,57,0.615,61,0.164,62,0.942,64,2.17,66,4.657,70,1.112,76,2.527,80,0.002,81,0.003,82,0.002,91,2.967,92,0.897,107,0.579,143,0.536,146,0.307,220,2.207,221,3.901,222,3.845,224,2.58,244,2.271,273,3.377,335,2.966,360,1.881,409,1.311,412,2.172,422,1.056,425,2.527,449,2.376,517,3.304,522,2.704,527,1.881,528,2.271,529,3.891,530,3.92,531,3.845,532,3.953,533,3.671,534,4.94,535,3.025,536,4.704,537,4.502,538,2.752,539,3.849,540,4.745,542,2.693,543,3.466,544,4.197,545,4.203,546,3.466,547,2.693,548,2.693,549,3.64,550,4.325,551,3.64,552,3.466,553,3.317,554,3.466,555,2.693,556,2.693,557,3.569,558,2.693,559,3.483,560,3.864,561,2.693,562,2.693,563,2.952,564,2.693,565,3.317,566,2.693,567,3.64,568,2.693,569,3.64,570,2.693,571,2.966,572,2.385,573,3.28,574,1.772,575,2.271,576,1.423,577,1.824,578,2.173,579,2.087,580,2.385,581,2.385,582,2.385,583,2.385,584,2.385,585,2.012,586,2.173,587,2.385,588,3.64,589,2.882,590,2.952,591,2.815,592,2.815,593,2.882,594,3.483,595,3.483,596,2.385,597,3.64,598,2.385,599,2.385,600,4.415,601,1.943,602,2.966,2578,3.271]],["title/controllers/TeamNewsController.html",[700,2.195,1778,3.807]],["body/controllers/TeamNewsController.html",[0,0.162,3,0.131,4,0.11,5,0.089,9,0.266,12,1.837,21,0.545,23,0.82,24,0.006,25,0.476,26,0.242,27,0.545,29,1.487,34,0.973,39,0.909,51,0.391,57,1.033,61,0.124,80,0.003,81,0.004,82,0.003,87,1.969,92,1.298,107,0.973,111,1.183,126,4.155,136,1.541,143,0.901,213,2.607,230,2.22,242,2.391,243,3.065,245,1.901,456,2.615,529,2.841,574,4.824,611,3.368,619,4.443,632,3.668,667,2.615,693,2.615,700,2.443,702,2.746,704,3.507,710,3.507,711,4.006,715,4.006,718,4.236,877,3.507,1150,3.814,1156,4.397,1174,4.931,1644,5.362,1645,5.291,1651,5.952,1652,5.696,1654,5.948,1667,4.236,1668,5.015,1669,3.65,1670,4.524,1671,5.151,1673,3.814,1674,4.006,1675,4.91,1676,4.91,1682,4.524,1683,4.524,1684,4.91,1685,4.91,1686,4.91,1687,4.91,1688,4.91,1778,5.569,2397,3.507,2579,6.456,2580,4.91,2581,8.073,2582,5.496,2583,7.226,2584,5.496,2585,8.073,2586,5.496,2587,5.496,2588,4.91,2589,4.91,2590,5.496,2591,5.496]],["title/classes/TestHelper.html",[0,0.146,1405,3.428]],["body/classes/TestHelper.html",[0,0.104,2,0.659,3,0.083,4,0.07,5,0.057,9,0.17,10,0.614,12,2.425,16,1.525,18,1.68,21,0.923,23,0.943,24,0.006,25,0.608,26,0.349,27,0.627,32,0.919,33,1.06,34,1.118,39,0.847,41,1.973,51,0.261,52,1.101,55,0.789,61,0.079,63,2.029,64,1.885,80,0.002,81,0.003,82,0.002,92,0.945,107,1.578,136,1.34,143,1.295,220,2.731,234,3.125,260,4.989,264,1.279,316,3.59,335,5.121,345,2.565,400,3.125,419,2.147,451,2.155,452,3.495,453,3.026,454,2.237,456,3.341,463,5.759,535,3.106,611,1.463,761,4.331,960,1.752,1035,5.484,1037,2.328,1069,2.433,1076,4.7,1160,3.58,1285,4.331,1313,2.328,1370,3.026,1380,3.026,1405,3.652,1406,5.2,1409,5.799,1413,6.316,1414,4.604,1415,4.331,1416,4.331,1417,5.779,1418,4.331,1419,5.779,1420,5.779,1421,5.779,1422,6.504,1423,5.779,1425,6.504,1438,4.331,1440,4.331,1443,4.331,1481,4.48,1552,2.016,1574,2.155,1873,5.799,2028,5.799,2332,4.873,2340,3.652,2419,2.886,2548,3.132,2592,3.132,2593,5.262,2594,4.031,2595,5.262,2596,5.262,2597,5.262,2598,4.701,2599,5.262,2600,4.701,2601,3.505,2602,3.505,2603,3.505,2604,3.505,2605,3.505,2606,3.505,2607,3.505,2608,3.505,2609,3.505,2610,3.505,2611,3.505,2612,3.505,2613,3.505,2614,3.505,2615,3.505,2616,3.505,2617,3.505,2618,3.505,2619,2.433,2620,3.132,2621,2.555,2622,8.194,2623,5.262,2624,3.505,2625,3.132,2626,7.02,2627,2.886,2628,2.555,2629,3.505,2630,3.505,2631,3.505,2632,3.132,2633,5.262,2634,3.505,2635,3.505,2636,3.505,2637,3.505,2638,3.505,2639,3.132,2640,2.886,2641,3.505,2642,3.505]],["title/injectables/TimeoutInterceptor.html",[210,1.096,1300,3.807]],["body/injectables/TimeoutInterceptor.html",[0,0.157,3,0.127,4,0.106,5,0.086,9,0.258,10,0.825,21,0.875,23,1.057,24,0.006,25,0.613,26,0.351,27,0.84,32,1.397,33,1.611,51,0.35,61,0.12,80,0.003,81,0.004,82,0.003,92,1.272,99,2.927,107,1.253,111,1.147,124,1.78,143,1.389,192,4.386,210,1.57,211,2.055,316,2.421,419,2.702,538,3.613,589,2.535,590,2.597,591,3.938,592,2.477,593,2.535,594,3.064,700,3.146,733,2.662,832,5.456,837,5.827,844,4.913,856,6.324,857,6.324,858,6.529,859,7.568,861,2.885,862,7.103,865,4.386,867,4.76,949,3.947,950,3.728,973,4.386,1035,3.883,1212,2.732,1298,6.292,1300,5.456,1414,5.795,1591,5.16,1644,4.702,2090,6.324,2643,4.76,2644,7.079,2645,5.16,2646,4.913,2647,5.827,2648,7.95,2649,7.95,2650,5.328,2651,5.328,2652,6.128,2653,5.328,2654,5.328,2655,5.328,2656,5.328,2657,5.328,2658,7.079,2659,7.079,2660,5.328,2661,7.079,2662,5.328,2663,5.328,2664,5.328,2665,5.328,2666,5.328,2667,5.328,2668,5.328,2669,7.079,2670,5.328,2671,5.328]],["title/classes/UpdateNewsParams.html",[0,0.146,1662,3.6]],["body/classes/UpdateNewsParams.html",[0,0.261,2,1.113,3,0.141,4,0.118,5,0.096,9,0.287,10,1.029,21,0.83,24,0.006,26,0.369,27,0.752,28,2.369,29,2.263,39,0.994,51,0.313,52,1.626,61,0.133,80,0.003,81,0.004,82,0.003,91,3.518,124,2.947,529,3.777,531,4.558,533,4.531,666,4.564,667,3.609,669,4.505,671,5.29,673,6.243,674,4.505,675,6.243,676,5.846,692,6.123,693,2.818,694,6.776,695,7.263,696,6.888,697,3.641,1116,4.839,1151,5.528,1313,5.037,1662,5.528,2672,7.882,2673,7.584,2674,7.584,2675,5.528,2676,6.776,2677,7.584,2678,5.921,2679,5.921,2680,5.921]],["title/classes/User.html",[0,0.146,12,1.256]],["body/classes/User.html",[0,0.156,2,0.993,3,0.126,4,0.105,5,0.085,7,1.406,8,3.032,9,0.409,10,0.821,12,1.79,14,2.822,15,2.878,16,1.427,17,2.937,18,1.264,21,0.942,23,0.789,24,0.006,25,0.686,26,0.407,27,0.524,28,2.199,29,2.537,30,2.881,32,1.846,33,2.128,34,1.246,39,1.08,41,1.65,42,2.25,43,3.137,44,2.64,45,2.64,46,2.25,47,2.64,48,2.575,49,1.963,50,2.64,51,0.291,52,1.227,55,1.19,56,1.546,57,0.993,59,1.999,61,0.158,62,1.522,70,1.795,76,2.204,80,0.003,81,0.004,82,0.003,146,0.495,220,2.552,412,3.062,422,2.273,425,2.204,535,3.319,585,3.248,888,4.328,1160,2.514,1165,4.446,1166,4.446,1274,5.608,1275,4.349,1276,5.387,1277,4.072,1278,4.072,1279,3.509,1280,3.509,1281,3.509,1282,3.509,1283,4.072,1284,4.072,1285,4.349,2042,4.349,2681,7.039,2682,4.72,2683,5.283,2684,5.283,2685,5.283,2686,4.72,2687,4.72]],["title/classes/User-1.html",[0,0.122,12,1.05,1286,2.375]],["body/classes/User-1.html",[0,0.143,2,0.912,3,0.115,4,0.097,5,0.078,7,1.327,8,2.966,9,0.427,10,0.775,12,1.689,14,2.663,15,2.717,16,1.347,17,2.772,18,1.16,21,0.936,23,0.724,24,0.006,25,0.706,26,0.412,27,0.847,28,2.075,29,2.523,30,2.866,32,1.987,33,2.291,34,1.341,35,2.982,39,1.063,41,1.515,42,2.066,43,3.029,44,2.423,45,2.423,46,2.066,47,2.423,48,2.364,49,1.802,50,2.423,51,0.313,52,1.158,53,2.982,54,2.554,55,1.092,56,1.42,57,0.912,59,1.836,61,0.149,62,1.397,70,1.648,76,2.772,80,0.003,81,0.004,82,0.003,146,0.455,220,2.666,412,2.89,422,2.146,425,2.024,535,3.357,585,2.982,888,4.085,1159,4.756,1160,2.308,1161,3.606,1165,4.293,1166,4.293,1242,3.738,1274,5.414,1276,5.202,1277,3.738,1278,3.738,1279,3.221,1280,3.221,1281,3.221,1282,3.221,1283,3.738,1284,3.738,1287,3.992,1288,4.333,1289,4.333,2042,3.992,2682,4.333,2686,5.936,2687,4.333,2688,6.644,2689,4.85,2690,4.85,2691,4.85,2692,4.85,2693,4.85]],["title/controllers/UserController.html",[700,2.195,2694,3.807]],["body/controllers/UserController.html",[0,0.195,3,0.156,4,0.131,5,0.106,9,0.319,12,1.673,21,0.653,23,0.982,24,0.006,25,0.57,26,0.29,27,0.653,29,1.78,51,0.396,57,1.237,61,0.148,80,0.004,81,0.005,82,0.004,87,2.357,92,1.456,107,1.164,111,1.416,143,1.079,213,2.836,230,2.49,242,2.862,693,3.131,700,2.925,702,3.288,704,4.198,710,4.198,711,4.796,715,4.796,1156,4.699,1361,4.046,1645,5.216,1667,5.071,2397,4.198,2694,6.246,2695,5.878,2696,6.58,2697,8.103,2698,6.58,2699,5.832,2700,6.58,2701,6.58,2702,6.58,2703,6.58,2704,6.58]],["title/injectables/UserFacade.html",[210,1.096,1339,3.428]],["body/injectables/UserFacade.html",[0,0.195,3,0.157,4,0.131,5,0.107,9,0.319,18,1.577,21,0.805,23,1.211,24,0.006,25,0.703,26,0.358,27,0.805,51,0.379,57,1.24,61,0.148,80,0.004,81,0.005,82,0.004,87,2.362,92,1.458,107,1.167,111,1.419,136,1.259,143,1.081,210,1.8,211,2.543,213,2.838,230,2.493,242,2.868,245,2.28,777,4.379,1156,4.702,1339,5.631,1361,5.404,1645,3.917,2699,6.368,2705,5.891,2706,8.114,2707,6.593,2708,6.593,2709,8.114,2710,6.593,2711,6.593,2712,6.593]],["title/classes/UserInfo.html",[0,0.146,544,2.84]],["body/classes/UserInfo.html",[0,0.182,2,1.155,3,0.146,4,0.122,5,0.099,7,1.55,9,0.297,10,0.905,14,3.112,16,1.574,18,1.469,21,0.915,23,0.917,24,0.006,25,0.532,26,0.422,27,0.609,29,2.419,30,2.834,39,1.077,41,1.918,42,2.616,43,2.884,46,2.616,51,0.321,52,1.353,55,1.383,56,1.798,57,1.155,59,2.324,61,0.138,62,1.769,80,0.004,81,0.004,82,0.004,260,4.729,422,2.507,425,2.562,440,3.98,509,3.326,524,4.734,525,4.477,526,4.477,544,4.463,1160,2.922,1165,4.709,1166,4.709,1279,4.079,1280,4.079,1281,4.079,1282,4.079,2713,7.989,2714,7.762]],["title/classes/UserInfoMapper.html",[0,0.146,1731,3.807]],["body/classes/UserInfoMapper.html",[0,0.202,2,1.286,3,0.163,4,0.136,5,0.111,9,0.331,21,0.678,23,1.021,24,0.006,25,0.592,26,0.302,27,0.678,34,1.21,51,0.343,52,1.192,61,0.154,80,0.004,81,0.005,82,0.004,92,1.491,107,1.21,136,1.305,143,1.121,538,4.058,544,5.47,667,3.948,773,5.51,777,4.542,778,4.542,1731,6.394,1846,6.769,2029,6.109,2031,6.109,2078,5.271,2080,5.629,2715,7.412,2716,8.296,2717,6.838,2718,6.838,2719,6.838]],["title/classes/UserInfoResponse.html",[0,0.146,1846,3.6]],["body/classes/UserInfoResponse.html",[0,0.191,2,1.217,3,0.154,4,0.129,5,0.105,9,0.313,10,0.935,12,2.427,16,1.899,21,0.865,24,0.006,25,0.789,26,0.385,29,2.358,39,1.075,51,0.267,52,1.398,61,0.146,80,0.004,81,0.005,82,0.004,124,3.044,682,5.118,683,5.118,691,5.081,693,3.079,699,3.844,760,5.567,1165,4.59,1166,4.59,1846,5.846,1864,4.988,1914,5.327,2085,4.988,2086,5.327,2087,5.327,2720,8.14,2721,7.165,2722,6.471]],["title/modules/UserModule.html",[170,1.423,177,3.428]],["body/modules/UserModule.html",[0,0.186,3,0.15,4,0.125,5,0.102,24,0.006,51,0.384,61,0.141,80,0.004,81,0.005,82,0.004,111,1.354,170,2.27,172,2.572,173,3.663,177,7.003,180,4.394,181,3.312,182,2.858,184,3.58,205,4.394,700,2.796,702,3.937,1339,6.928,2046,6.577,2063,6.577,2070,3.867,2397,4.013,2694,6.632,2699,6.294,2723,5.619,2724,5.619,2725,5.619,2726,6.294,2727,6.289,2728,6.289]],["title/injectables/UserRepo.html",[210,1.096,2726,3.28]],["body/injectables/UserRepo.html",[0,0.193,3,0.156,4,0.13,5,0.106,9,0.317,12,2.227,16,1.636,18,1.564,21,0.801,23,1.205,24,0.006,25,0.699,26,0.356,27,0.801,51,0.378,52,1.14,55,1.473,57,1.229,61,0.147,80,0.004,81,0.005,82,0.004,87,2.343,92,1.45,107,1.157,111,1.408,136,1.248,143,1.072,210,1.791,211,2.522,213,2.828,220,2.764,230,2.48,242,2.844,245,2.261,264,2.385,300,4.343,301,5.432,303,4.372,2049,7.212,2053,7.212,2726,5.361,2729,5.842,2730,6.538,2731,6.538,2732,6.538]],["title/classes/UserTaskInfo.html",[0,0.146,514,2.601]],["body/classes/UserTaskInfo.html",[0,0.179,2,1.139,3,0.144,4,0.121,5,0.098,7,1.537,9,0.293,10,0.897,14,3.085,16,1.56,18,1.449,21,0.911,23,0.904,24,0.006,25,0.525,26,0.405,27,0.601,29,2.407,30,2.822,39,1.074,41,1.892,42,2.58,43,2.859,46,2.58,51,0.318,52,1.341,55,1.364,56,1.773,57,1.139,59,2.293,61,0.136,62,1.745,70,2.059,80,0.003,81,0.004,82,0.003,146,0.568,260,4.709,422,2.485,425,2.528,509,3.281,514,4.053,515,6.875,516,3.306,525,4.416,526,4.416,1160,2.883,1165,4.686,1166,4.686,1279,4.024,1280,4.024,1281,4.024,1282,4.024,1290,6.858,1291,7.325,2733,6.058]],["title/injectables/UserUC.html",[210,1.096,2699,3.28]],["body/injectables/UserUC.html",[0,0.184,3,0.148,4,0.124,5,0.101,9,0.302,12,1.583,18,1.49,21,0.777,23,1.169,24,0.006,25,0.678,26,0.345,27,0.777,51,0.39,57,1.171,61,0.14,80,0.004,81,0.005,82,0.004,87,2.805,92,1.407,107,1.102,111,1.341,136,1.495,143,1.021,210,1.737,211,2.402,213,2.766,230,2.406,242,2.709,245,2.153,419,2.116,1156,4.608,1361,5.267,1645,3.699,1949,5.563,2024,4.8,2063,6.659,2070,3.829,2699,5.201,2726,6.278,2734,5.563,2735,7.83,2736,6.227,2737,6.227,2738,7.83,2739,6.227,2740,5.126,2741,6.227,2742,6.227,2743,5.563,2744,6.227,2745,6.227,2746,5.563,2747,6.227,2748,6.227]],["title/classes/ValidationError.html",[0,0.146,96,3.428]],["body/classes/ValidationError.html",[0,0.173,2,1.103,3,0.14,4,0.117,5,0.095,7,1.505,9,0.284,10,0.879,18,1.403,21,0.951,23,0.876,24,0.006,25,0.508,26,0.427,27,0.582,39,1.048,43,3.517,51,0.311,61,0.132,62,1.69,80,0.003,81,0.004,82,0.003,86,6.487,87,3.499,88,3.351,89,5.529,90,5.229,91,3.213,92,1.354,93,6.857,94,6.857,96,5.232,99,1.894,100,5.241,101,6.04,102,5.241,103,5.241,104,5.241,105,5.241,106,5.241,107,1.334,108,5.241,109,3.484,110,4.521,111,1.263,112,5.241,113,4.829,116,3.177,117,2.727,118,4.276,120,5.241,345,2.859,2749,5.241,2750,5.866,2751,5.866,2752,5.866]],["title/classes/ValidationErrorDetailResponse.html",[0,0.146,131,3.807]],["body/classes/ValidationErrorDetailResponse.html",[0,0.215,2,1.369,3,0.173,4,0.145,5,0.118,18,1.742,21,0.723,23,1.087,24,0.006,25,0.631,26,0.321,27,0.723,39,1.105,61,0.164,80,0.004,81,0.005,82,0.004,87,2.609,113,5.995,117,4.005,128,4.969,131,6.64,2349,6.64,2753,7.697,2754,6.506,2755,7.282,2756,7.282]],["title/modules/ValidationModule.html",[170,1.423,388,3.6]],["body/modules/ValidationModule.html",[0,0.216,3,0.174,4,0.146,5,0.118,24,0.006,51,0.379,61,0.164,80,0.004,81,0.005,82,0.004,111,1.571,170,2.485,172,2.985,184,3.317,388,6.288,402,7.708,835,4.658,846,3.844,881,5.626,1108,6.65,2757,7.299,2758,7.299,2759,7.299]],["title/changelog.html",[2760,3.184,2761,2.867,2762,3.691]],["body/changelog.html",[0,0.06,1,1.962,2,0.787,3,0.014,4,0.012,5,0.075,9,0.029,12,1.847,13,0.927,16,0.413,20,0.366,21,0.202,24,0.001,25,0.139,27,0.159,28,0.87,32,0.895,33,0.341,34,1.016,51,0.084,52,0.104,54,1.072,60,1.818,64,1.722,65,0.845,68,0.719,69,1.391,71,0.782,72,0.532,73,0.434,74,0.719,75,0.536,80,0.001,81,0.001,82,0.001,88,1.383,89,0.953,90,0.342,99,0.364,107,0.284,115,2.861,116,1.848,117,2.607,119,1.169,128,2.137,143,0.098,146,0.106,165,0.869,170,0.896,173,0.524,181,0.593,182,0.512,184,0.27,185,0.283,205,0.332,208,1.278,213,0.192,224,1.571,226,0.669,228,0.322,229,0.524,230,0.493,231,0.782,234,0.353,237,1.065,243,0.332,245,0.206,255,0.342,266,0.413,270,0.395,271,2.879,274,0.459,276,2.406,278,3.037,280,0.782,281,0.693,292,0.366,296,2.715,326,0.459,337,0.353,338,0.413,339,1.209,340,1.712,355,0.782,371,0.49,374,1.357,375,0.719,377,3.908,378,1.517,390,0.748,394,0.49,396,2.485,398,2.266,409,1.582,412,0.259,447,0.953,449,1.878,451,0.366,456,1.155,462,1.299,463,1.769,464,1.676,466,1.065,475,0.821,476,1.769,477,0.413,482,0.992,498,1.252,511,2.354,516,0.756,518,0.366,529,0.443,530,0.27,531,1.017,532,0.869,535,2.831,552,0.782,559,0.922,565,0.395,574,1.508,576,0.259,589,0.969,590,0.549,591,0.277,593,0.536,595,0.342,611,0.248,632,1.103,639,0.322,668,1.236,669,0.669,674,1.654,677,0.49,678,4.807,688,1.252,704,0.38,710,0.38,735,0.353,737,0.395,741,0.693,783,2.201,806,0.821,809,0.563,828,3.893,829,2.498,830,1.065,831,1.789,841,0.459,842,2.464,846,0.845,854,0.748,861,0.322,877,1.023,888,0.366,890,1.252,891,0.536,892,0.693,893,0.413,919,1.006,933,0.549,948,0.353,949,0.332,950,1.797,951,2.177,953,2.16,960,1.017,962,2.266,966,0.366,970,0.38,972,0.459,980,2.268,981,1.023,987,1.236,989,0.366,995,0.782,1001,2.098,1008,0.49,1011,1.102,1012,0.821,1016,0.459,1036,0.49,1037,0.748,1039,0.782,1041,0.434,1043,0.748,1054,0.353,1059,0.868,1069,1.413,1071,0.821,1074,0.38,1076,2.057,1090,0.459,1091,1.236,1100,0.49,1112,1.712,1114,0.49,1115,1.676,1116,1.549,1119,2.739,1120,3.248,1127,0.868,1129,2.03,1133,0.49,1134,0.986,1136,1.769,1137,0.669,1149,3.335,1150,1.413,1151,0.434,1159,1.278,1160,3.538,1161,0.969,1163,0.782,1173,0.669,1174,0.648,1177,0.395,1185,1.065,1204,0.719,1209,1.169,1211,0.413,1212,1.428,1213,1.654,1234,0.459,1237,0.748,1246,0.927,1249,0.869,1253,1.549,1254,0.628,1257,0.49,1259,0.693,1276,1.023,1286,0.922,1296,0.353,1298,0.413,1299,3.248,1301,0.748,1312,0.49,1313,1.352,1314,0.434,1315,1.849,1322,1.169,1325,0.49,1327,0.49,1336,0.49,1343,1.433,1345,2.398,1347,1.849,1360,0.868,1370,1.17,1380,5.047,1383,1.169,1469,1.169,1476,6.542,1478,0.459,1481,1.023,1486,0.532,1489,1.985,1504,0.305,1508,1.612,1526,1.32,1537,0.459,1545,0.459,1546,4.374,1551,0.366,1552,1.17,1554,2.266,1555,0.782,1559,0.782,1567,0.719,1576,0.413,1578,0.413,1580,0.459,1589,0.868,1590,2.266,1591,0.821,1598,0.927,1601,0.49,1605,1.413,1606,1.676,1607,0.821,1616,2.098,1637,2.398,1640,2.03,1644,0.748,1660,1.413,1666,2.488,1689,0.49,1701,0.434,1707,3.296,1786,1.065,1787,1.065,1788,4.749,1792,0.782,1803,1.006,1834,0.49,1837,0.353,1850,1.32,1862,1.135,1870,2.398,1884,0.782,1891,1.065,1912,1.818,1914,1.065,1922,0.821,1960,0.532,1961,1.933,1978,4.158,1980,1.102,1989,1.006,2070,0.986,2137,0.434,2143,0.459,2166,2.487,2167,0.395,2168,1.023,2169,0.49,2188,1.685,2193,1.32,2194,0.395,2227,0.748,2253,0.532,2281,1.849,2313,0.821,2332,0.413,2336,0.719,2338,0.532,2340,0.782,2347,1.236,2348,1.413,2349,0.868,2440,1.006,2446,0.532,2452,1.32,2470,0.459,2475,0.868,2477,0.532,2478,2.098,2544,0.927,2545,3.042,2565,1.433,2600,1.006,2620,5.552,2621,1.169,2639,0.532,2640,2.561,2645,1.169,2652,0.459,2675,2.03,2721,1.433,2762,2.78,2763,0.595,2764,1.413,2765,0.927,2766,0.532,2767,0.595,2768,0.595,2769,1.604,2770,0.782,2771,4.088,2772,8.293,2773,4.244,2774,0.595,2775,6.106,2776,0.595,2777,1.006,2778,1.126,2779,0.595,2780,0.595,2781,0.595,2782,2.292,2783,0.595,2784,0.595,2785,7.367,2786,1.933,2787,1.126,2788,0.595,2789,0.434,2790,2.035,2791,0.532,2792,1.484,2793,1.006,2794,0.595,2795,3.946,2796,1.604,2797,0.595,2798,8.36,2799,5.466,2800,0.595,2801,0.595,2802,0.595,2803,5.608,2804,0.595,2805,4.097,2806,1.006,2807,0.595,2808,0.595,2809,0.595,2810,3.111,2811,2.292,2812,0.595,2813,0.595,2814,0.595,2815,0.595,2816,1.604,2817,0.595,2818,1.818,2819,8.988,2820,0.595,2821,0.49,2822,1.818,2823,2.487,2824,1.604,2825,1.126,2826,0.595,2827,0.595,2828,1.933,2829,0.532,2830,0.595,2831,1.126,2832,0.595,2833,0.595,2834,0.595,2835,1.818,2836,0.49,2837,1.433,2838,0.595,2839,2.168,2840,3.296,2841,0.49,2842,0.595,2843,0.595,2844,0.532,2845,0.595,2846,1.433,2847,0.595,2848,0.595,2849,0.595,2850,0.595,2851,1.998,2852,3.111,2853,2.78,2854,0.595,2855,0.595,2856,0.595,2857,0.595,2858,1.126,2859,0.595,2860,0.595,2861,0.595,2862,0.782,2863,1.604,2864,0.595,2865,0.595,2866,0.595,2867,0.413,2868,0.595,2869,0.595,2870,5.608,2871,0.532,2872,1.126,2873,5.819,2874,2.427,2875,0.532,2876,0.595,2877,0.595,2878,0.595,2879,2.035,2880,1.126,2881,2.398,2882,0.595,2883,0.595,2884,0.595,2885,2.035,2886,0.595,2887,2.035,2888,0.595,2889,1.126,2890,0.532,2891,0.532,2892,0.459,2893,0.532,2894,1.998,2895,0.927,2896,2.63,2897,1.484,2898,0.413,2899,1.126,2900,0.595,2901,1.433,2902,0.595,2903,0.595,2904,1.604,2905,3.248,2906,4.12,2907,0.595,2908,0.595,2909,0.595,2910,0.595,2911,0.595,2912,1.604,2913,1.126,2914,0.595,2915,0.595,2916,5.608,2917,2.168,2918,1.126,2919,1.126,2920,1.126,2921,0.595,2922,3.412,2923,2.035,2924,0.595,2925,0.595,2926,0.595,2927,1.818,2928,1.126,2929,0.595,2930,0.595,2931,1.604,2932,0.595,2933,0.49,2934,0.782,2935,2.168,2936,0.532,2937,1.236,2938,0.595,2939,2.78,2940,0.595,2941,1.604,2942,5.316,2943,2.561,2944,0.595,2945,0.595,2946,0.595,2947,1.126,2948,1.169,2949,0.595,2950,2.168,2951,1.126,2952,0.595,2953,0.595,2954,2.035,2955,2.427,2956,1.676,2957,0.927,2958,0.595,2959,0.595,2960,3.037,2961,0.595,2962,0.595,2963,0.595,2964,1.006,2965,0.595,2966,0.595,2967,1.604,2968,0.927,2969,0.595,2970,1.006,2971,4.805,2972,0.595,2973,3.412,2974,3.248,2975,1.126,2976,2.427,2977,0.595,2978,0.595,2979,0.595,2980,1.818,2981,0.532,2982,0.595,2983,0.595,2984,0.595,2985,0.49,2986,0.595,2987,0.595,2988,0.595,2989,0.595,2990,2.784,2991,2.035,2992,0.595,2993,1.006,2994,0.459,2995,2.78,2996,0.49,2997,2.035,2998,1.126,2999,1.006,3000,1.006,3001,1.006,3002,1.299,3003,1.849,3004,0.595,3005,0.595,3006,0.532,3007,0.595,3008,0.49,3009,0.434,3010,2.16,3011,0.595,3012,0.532,3013,0.595,3014,2.035,3015,0.595,3016,6.417,3017,0.595,3018,0.595,3019,0.595,3020,0.595,3021,0.595,3022,2.427,3023,1.604,3024,0.595,3025,1.32,3026,0.595,3027,0.595,3028,0.595,3029,2.168,3030,0.595,3031,1.126,3032,0.595,3033,0.595,3034,1.126,3035,0.595,3036,2.035,3037,0.927,3038,0.595,3039,0.595,3040,1.006,3041,0.595,3042,0.595,3043,2.146,3044,0.595,3045,0.595,3046,0.595,3047,0.434,3048,1.849,3049,0.595,3050,2.035,3051,0.595,3052,3.048,3053,0.595,3054,0.532,3055,0.595,3056,3.444,3057,1.126,3058,5.979,3059,1.169,3060,1.126,3061,0.595,3062,0.595,3063,3.936,3064,0.595,3065,0.595,3066,0.595,3067,0.595,3068,3.946,3069,3.412,3070,0.595,3071,4.805,3072,0.595,3073,0.595,3074,0.595,3075,2.427,3076,0.595,3077,0.595,3078,1.676,3079,0.49,3080,0.595,3081,0.532,3082,0.595,3083,1.818,3084,0.595,3085,0.595,3086,1.604,3087,0.595,3088,1.818,3089,0.595,3090,0.595,3091,1.604,3092,1.006,3093,1.126,3094,1.126,3095,1.818,3096,1.126,3097,0.532,3098,0.595,3099,1.126,3100,1.126,3101,1.604,3102,1.126,3103,1.818,3104,0.595,3105,1.006,3106,0.595,3107,1.126,3108,1.006,3109,0.595,3110,2.78,3111,1.126,3112,0.595,3113,2.168,3114,0.595,3115,2.784,3116,3.111,3117,0.595,3118,0.595,3119,1.126,3120,0.595,3121,0.49,3122,0.595,3123,0.595,3124,0.595,3125,0.532,3126,0.595,3127,0.595,3128,0.595,3129,0.595,3130,0.595,3131,0.595,3132,0.595,3133,0.595,3134,0.595,3135,1.126,3136,3.296,3137,0.595,3138,1.433,3139,0.927,3140,0.595,3141,0.595,3142,1.126,3143,1.126,3144,0.595,3145,1.676,3146,0.595,3147,0.595,3148,1.113,3149,0.595,3150,0.595,3151,0.595,3152,0.595,3153,2.035,3154,3.689,3155,0.595,3156,0.595,3157,0.595,3158,0.49,3159,0.595,3160,0.595,3161,0.595,3162,1.126,3163,1.126,3164,1.126,3165,1.006,3166,1.126,3167,0.595,3168,1.433,3169,0.595,3170,0.595,3171,0.595,3172,0.595,3173,1.126,3174,0.595,3175,0.595,3176,1.006,3177,0.595,3178,0.595,3179,1.433,3180,1.818,3181,0.595,3182,0.595,3183,1.006,3184,0.595,3185,0.595,3186,0.595,3187,0.595,3188,0.595,3189,2.784,3190,1.126,3191,0.595,3192,0.595,3193,0.595,3194,0.595,3195,0.595,3196,0.595,3197,1.006,3198,0.595,3199,3.946,3200,0.595,3201,2.488,3202,0.595,3203,1.433,3204,0.595,3205,0.595,3206,1.006,3207,0.595,3208,0.595,3209,2.168,3210,1.126,3211,0.595,3212,1.604,3213,1.169,3214,0.595,3215,0.595,3216,0.595,3217,1.126,3218,0.595,3219,0.595,3220,1.006,3221,0.595,3222,0.595,3223,0.868,3224,1.126,3225,2.784,3226,0.595,3227,0.595,3228,0.595,3229,0.49,3230,0.595,3231,1.126,3232,1.006,3233,0.595,3234,0.595,3235,0.595,3236,0.595,3237,2.427,3238,0.532,3239,0.595,3240,1.006,3241,0.595,3242,0.532,3243,2.035,3244,0.927,3245,0.595,3246,1.126,3247,1.604,3248,0.595,3249,0.595,3250,0.434,3251,0.595,3252,0.595,3253,1.126,3254,0.595,3255,0.49,3256,0.595,3257,0.595,3258,0.595,3259,1.604,3260,0.595,3261,0.595,3262,1.126,3263,0.595,3264,0.595,3265,0.595,3266,0.595,3267,1.126,3268,0.595,3269,1.604,3270,0.459,3271,1.006,3272,0.595,3273,0.595,3274,1.169,3275,1.126,3276,1.484,3277,0.595,3278,0.595,3279,0.595,3280,0.595,3281,1.604,3282,1.569,3283,0.595,3284,0.532,3285,0.595,3286,1.604,3287,0.595,3288,0.595,3289,0.595,3290,1.604,3291,0.595,3292,0.595,3293,1.126,3294,0.595,3295,1.433,3296,1.126,3297,0.595,3298,0.595,3299,0.595,3300,0.595,3301,0.595,3302,0.459,3303,0.868,3304,0.459,3305,0.595,3306,0.595,3307,0.532,3308,1.006,3309,0.595,3310,0.595,3311,0.595,3312,0.595,3313,1.604,3314,0.595,3315,0.595,3316,0.595,3317,2.035,3318,0.595,3319,1.126,3320,1.126,3321,0.595,3322,0.595,3323,0.595,3324,1.126,3325,0.595,3326,0.595,3327,0.595,3328,0.532,3329,0.532,3330,0.595,3331,0.595,3332,0.595,3333,0.532,3334,0.595,3335,0.595,3336,0.595,3337,0.595,3338,0.595,3339,0.595,3340,0.595,3341,0.595,3342,0.532,3343,0.595,3344,0.595,3345,0.595,3346,0.595,3347,0.595,3348,0.595,3349,1.126,3350,0.595,3351,0.595,3352,0.532,3353,1.126,3354,0.595,3355,0.927,3356,1.413,3357,0.595,3358,1.126,3359,0.532,3360,0.595,3361,0.532,3362,0.595,3363,1.126,3364,0.595,3365,0.595,3366,0.49,3367,0.595,3368,2.427,3369,0.595,3370,0.595,3371,0.595,3372,0.595,3373,0.532,3374,0.595,3375,0.595,3376,0.595,3377,0.595,3378,0.595,3379,0.459,3380,0.595,3381,1.604,3382,0.595,3383,0.459,3384,0.595,3385,0.595,3386,0.595,3387,0.595,3388,0.748,3389,1.126,3390,0.595,3391,1.604,3392,0.595,3393,0.595,3394,0.595,3395,0.595,3396,0.595,3397,0.595,3398,0.595,3399,0.595,3400,0.595,3401,1.126,3402,0.49,3403,1.126,3404,0.532,3405,1.32,3406,0.595,3407,0.868,3408,0.595,3409,0.49,3410,0.595,3411,8.36,3412,3.111,3413,0.595,3414,0.595,3415,0.49,3416,0.595,3417,0.595,3418,0.595,3419,0.595,3420,0.595,3421,2.784,3422,0.595,3423,1.169,3424,0.595,3425,0.595,3426,0.595,3427,0.595,3428,0.595,3429,2.035,3430,2.035,3431,1.433,3432,2.427,3433,1.126,3434,1.126,3435,3.048,3436,1.569,3437,3.111,3438,1.006,3439,1.126,3440,1.126,3441,0.927,3442,1.126,3443,0.595,3444,0.595,3445,2.78,3446,0.49,3447,0.413,3448,0.927,3449,0.595,3450,0.459,3451,0.413,3452,0.459,3453,0.595,3454,0.595,3455,0.532,3456,0.595,3457,0.595,3458,0.595,3459,0.595,3460,0.595,3461,1.126,3462,0.595,3463,0.595,3464,1.126,3465,0.595,3466,0.595,3467,0.595,3468,0.532,3469,0.595,3470,0.595,3471,1.006,3472,0.49,3473,0.595,3474,1.604,3475,0.595,3476,0.532,3477,1.126,3478,0.595,3479,0.595,3480,0.532,3481,0.595,3482,1.126,3483,0.595,3484,0.595,3485,0.595,3486,0.595,3487,0.595,3488,1.006,3489,1.006,3490,2.035,3491,1.676,3492,0.595,3493,0.595,3494,0.595,3495,1.32,3496,0.595,3497,0.595,3498,0.595,3499,1.126,3500,1.604,3501,0.595,3502,0.595,3503,0.595,3504,0.595,3505,1.126,3506,0.595,3507,0.868,3508,1.126,3509,0.595,3510,0.532,3511,0.595,3512,0.595,3513,1.126,3514,1.126,3515,0.595,3516,0.595,3517,0.595,3518,0.595,3519,1.604,3520,1.604,3521,1.569,3522,0.413,3523,1.998,3524,0.595,3525,1.126,3526,0.595,3527,0.595,3528,0.532,3529,1.126,3530,1.604,3531,1.006,3532,0.595,3533,0.595,3534,0.532,3535,0.595,3536,0.595,3537,1.685,3538,0.595,3539,0.595,3540,0.595,3541,0.595,3542,0.595,3543,0.595,3544,0.595,3545,0.595,3546,0.595,3547,0.595,3548,1.126,3549,0.532,3550,0.49,3551,0.532,3552,0.595,3553,0.49,3554,0.595,3555,0.49,3556,0.595,3557,1.32,3558,0.595,3559,0.595,3560,0.595,3561,1.126,3562,0.595,3563,0.595,3564,0.595,3565,0.927,3566,0.595,3567,0.595,3568,0.595,3569,0.595,3570,0.595,3571,0.532,3572,0.595,3573,1.126,3574,0.595,3575,0.595,3576,1.126,3577,1.126,3578,1.126,3579,1.604,3580,1.818,3581,1.126,3582,1.32,3583,0.927,3584,0.413,3585,0.595,3586,0.49,3587,0.532,3588,0.595,3589,0.821,3590,0.595,3591,1.433,3592,0.595,3593,0.595,3594,0.595,3595,0.595,3596,0.532,3597,0.595,3598,1.126,3599,1.604,3600,1.006,3601,0.595,3602,0.595,3603,0.595,3604,1.126,3605,1.006,3606,1.126,3607,0.595,3608,0.595,3609,0.595,3610,0.595,3611,0.595,3612,0.595,3613,0.595,3614,0.595,3615,0.595,3616,0.532,3617,0.532,3618,0.595,3619,0.595,3620,1.604,3621,0.595,3622,1.126,3623,0.595,3624,1.006,3625,0.595,3626,1.126,3627,0.595,3628,1.126,3629,0.595,3630,0.927,3631,0.595,3632,0.532,3633,0.595,3634,0.595,3635,0.532,3636,1.604,3637,1.126,3638,0.782,3639,1.006,3640,1.126,3641,1.006,3642,1.126,3643,0.821,3644,0.595,3645,1.126,3646,0.532,3647,0.595,3648,1.126,3649,1.006,3650,0.595,3651,0.532,3652,0.595,3653,0.532,3654,0.595,3655,0.595,3656,1.126,3657,0.595,3658,0.595,3659,0.927,3660,0.595,3661,3.412,3662,0.595,3663,0.532,3664,0.532,3665,0.595,3666,0.595,3667,0.595,3668,0.595,3669,0.595,3670,0.595,3671,0.595,3672,0.595,3673,0.595,3674,0.595,3675,0.595,3676,0.595,3677,0.595,3678,0.595,3679,0.927,3680,0.595,3681,0.595,3682,0.595,3683,0.595,3684,0.595,3685,0.595,3686,0.595,3687,0.595,3688,0.595,3689,0.595,3690,0.49,3691,0.595,3692,0.49,3693,0.595,3694,0.595,3695,0.532,3696,0.595,3697,0.595,3698,0.595,3699,0.532,3700,0.595,3701,0.595,3702,0.595,3703,0.595,3704,0.595,3705,0.595,3706,0.595,3707,0.49,3708,0.595,3709,0.595,3710,0.595,3711,0.595,3712,1.604,3713,0.595,3714,1.126,3715,1.604,3716,1.126,3717,1.126,3718,1.126,3719,1.126,3720,0.595,3721,1.126,3722,0.595,3723,0.595,3724,0.595,3725,0.595,3726,0.595,3727,0.532,3728,0.595,3729,1.126,3730,0.595,3731,0.595,3732,0.459,3733,0.595,3734,0.49,3735,0.595,3736,1.126,3737,0.595,3738,0.459,3739,0.595,3740,0.595,3741,0.595,3742,0.595,3743,0.49,3744,0.595,3745,1.604,3746,1.604,3747,0.595,3748,0.595,3749,0.595,3750,0.595,3751,0.595,3752,0.595,3753,0.595,3754,0.532,3755,0.595,3756,0.595,3757,1.126,3758,0.532,3759,0.532,3760,0.595,3761,0.595,3762,0.595,3763,0.595,3764,0.595,3765,0.595,3766,0.595,3767,0.595,3768,0.595,3769,1.126,3770,1.126,3771,0.595,3772,0.532,3773,0.595,3774,0.595,3775,0.595,3776,1.126,3777,0.595,3778,0.595,3779,1.126,3780,0.595,3781,1.126,3782,0.595,3783,0.595,3784,1.126,3785,2.035,3786,0.595,3787,0.595,3788,0.595,3789,0.595,3790,0.595,3791,0.868,3792,0.532,3793,1.126,3794,0.595,3795,0.595,3796,0.595,3797,0.595,3798,0.595,3799,0.595,3800,0.595,3801,0.595,3802,0.595,3803,0.595,3804,0.595,3805,0.595,3806,0.595,3807,0.595,3808,1.604,3809,0.595,3810,0.595,3811,0.595,3812,0.595,3813,0.595,3814,0.595,3815,0.595,3816,1.126,3817,1.126,3818,0.595,3819,0.595,3820,0.595,3821,2.035,3822,4.405,3823,1.126,3824,0.927,3825,1.006,3826,1.126,3827,1.006,3828,1.126,3829,0.595,3830,1.126,3831,1.006,3832,1.126,3833,1.126,3834,1.126,3835,0.927,3836,1.126,3837,2.035,3838,1.126,3839,2.035,3840,1.126,3841,1.126,3842,1.006,3843,1.604,3844,1.126,3845,0.595,3846,0.49,3847,0.868,3848,0.459,3849,1.126,3850,0.595,3851,2.427,3852,1.126,3853,0.595,3854,0.49,3855,0.595,3856,2.035,3857,0.595,3858,0.595,3859,0.595,3860,0.595,3861,0.532,3862,0.595,3863,0.595,3864,0.595,3865,1.126,3866,1.126,3867,1.126,3868,0.595,3869,0.595,3870,0.595,3871,0.595,3872,0.595,3873,1.126,3874,1.126,3875,0.595,3876,0.595,3877,0.595,3878,0.459,3879,0.595,3880,0.595,3881,0.595,3882,1.126,3883,0.595,3884,1.604,3885,1.433,3886,0.595,3887,0.595,3888,0.49,3889,1.126,3890,1.126,3891,0.595,3892,0.459,3893,0.595,3894,1.604,3895,1.126,3896,1.126,3897,0.595,3898,1.126,3899,0.595,3900,0.595,3901,0.595,3902,2.035,3903,0.595,3904,0.595,3905,0.595,3906,0.595,3907,0.595,3908,0.595,3909,0.595,3910,1.126,3911,0.595,3912,0.595,3913,0.595,3914,0.532,3915,0.595,3916,1.126,3917,0.595,3918,0.595,3919,0.49,3920,0.595,3921,1.126,3922,2.035,3923,0.595,3924,0.532,3925,0.595,3926,1.126,3927,1.126,3928,0.595,3929,0.595,3930,0.532,3931,1.126,3932,0.595,3933,0.595,3934,1.126,3935,1.126,3936,0.595,3937,0.595,3938,0.595,3939,1.126,3940,1.126,3941,0.595,3942,0.595,3943,1.126,3944,0.595,3945,0.595,3946,0.595,3947,0.595,3948,1.126,3949,0.595,3950,0.595,3951,0.49,3952,0.595,3953,2.035,3954,0.49,3955,0.595,3956,0.595,3957,1.126,3958,0.532,3959,0.459,3960,1.126,3961,0.595,3962,2.427,3963,1.126,3964,0.595,3965,0.595,3966,0.49,3967,0.595,3968,0.595,3969,0.595,3970,0.595,3971,0.595,3972,0.595,3973,0.595,3974,0.595,3975,0.595,3976,0.595,3977,0.595,3978,0.595,3979,1.006,3980,0.595,3981,0.595,3982,0.595,3983,0.595,3984,0.49,3985,0.595,3986,0.595,3987,0.532,3988,0.595,3989,0.532,3990,0.595,3991,0.595,3992,0.595,3993,0.49,3994,0.459,3995,0.595,3996,0.595,3997,0.532,3998,1.604,3999,0.595,4000,0.532,4001,0.532,4002,0.595,4003,0.532,4004,0.595,4005,0.595,4006,0.595,4007,0.595,4008,0.595,4009,2.035,4010,0.595,4011,0.595,4012,0.532,4013,0.595,4014,1.433,4015,0.595,4016,0.595,4017,0.595,4018,0.532,4019,0.595,4020,0.595,4021,1.126,4022,0.595,4023,0.595,4024,0.595,4025,0.459,4026,1.126,4027,0.595,4028,0.595,4029,0.595,4030,0.595,4031,1.604,4032,1.126,4033,1.126,4034,0.595,4035,0.532,4036,0.595,4037,1.126,4038,0.532,4039,1.604,4040,0.595,4041,0.595,4042,0.595,4043,0.595,4044,0.595,4045,1.126,4046,1.126,4047,1.126,4048,1.433,4049,1.126,4050,0.595,4051,1.126,4052,0.595,4053,1.126,4054,0.413,4055,0.532,4056,1.604,4057,0.595,4058,0.595,4059,0.595,4060,0.595,4061,2.427,4062,0.595,4063,0.532,4064,0.595,4065,0.595,4066,0.595,4067,0.532,4068,0.595,4069,0.927,4070,0.595,4071,0.532,4072,0.459,4073,0.595,4074,0.595,4075,0.595,4076,0.595,4077,1.126,4078,0.595,4079,0.595,4080,0.595,4081,0.595,4082,0.532,4083,0.595,4084,0.595,4085,0.49,4086,0.595,4087,0.595,4088,0.49,4089,0.595,4090,0.595,4091,0.595,4092,1.126,4093,0.532]],["title/coverage.html",[3388,4.468]],["body/coverage.html",[0,0.292,1,1.077,5,0.03,6,1.674,8,0.615,12,1.055,24,0.006,26,0.083,32,0.491,34,0.332,66,1.196,69,0.936,80,0.001,81,0.002,82,0.001,83,1.245,84,1.674,85,1.674,86,1.245,96,1.301,109,1.113,116,1.015,117,2.273,121,1.444,122,1.674,123,1.674,131,1.444,146,0.89,147,1.152,149,4.051,150,1.152,154,1.152,158,1.152,161,1.152,164,1.152,165,1.015,178,1.366,179,1.301,191,2.209,202,1.196,203,1.245,210,1.997,212,1.674,260,0.961,261,2.62,289,1.444,290,1.674,334,1.674,343,1.366,364,1.301,365,1.674,366,1.444,367,1.674,409,0.751,410,3.197,423,1.444,462,2.03,507,1.152,508,2.62,509,4.121,512,1.444,514,0.987,516,2.359,522,1.015,523,1.674,527,1.077,528,3.801,529,0.737,530,0.851,544,1.077,557,0.987,573,1.015,601,1.113,602,1.113,603,1.245,604,2.62,611,0.782,613,1.444,639,1.015,640,2.62,642,1.444,651,1.444,652,2.62,657,1.444,664,1.301,665,2.62,666,3.197,686,3.023,700,2.822,701,1.444,703,1.674,708,1.301,710,1.196,712,1.301,713,1.444,720,1.077,721,3.637,725,1.245,730,1.245,732,1.152,746,1.152,756,1.366,757,2.62,772,1.674,799,1.301,800,2.62,803,1.366,809,5.119,812,1.674,823,1.444,824,3.414,825,3.414,836,1.543,843,1.543,849,1.543,850,1.674,851,1.674,855,1.077,878,1.366,882,1.674,886,1.543,895,2.843,896,2.62,903,1.196,939,1.366,940,1.674,941,1.674,957,1.444,958,2.453,959,2.319,996,1.196,997,2.62,998,1.444,1003,1.444,1004,3.414,1010,1.543,1013,5.721,1014,5.41,1017,1.543,1032,1.543,1034,1.543,1040,1.543,1044,1.543,1054,4.409,1083,1.444,1084,1.543,1097,1.543,1108,1.444,1109,1.674,1110,1.674,1146,1.301,1147,2.319,1154,1.301,1156,0.961,1157,3.197,1161,0.892,1162,1.301,1164,1.245,1168,1.674,1169,1.674,1170,1.245,1171,2.319,1172,2.319,1176,1.366,1182,1.444,1183,1.674,1201,1.196,1202,3.564,1203,1.015,1205,1.301,1208,1.152,1230,1.444,1231,2.453,1243,1.444,1244,2.62,1254,1.045,1274,2.114,1275,2.62,1287,2.62,1290,1.444,1291,2.62,1300,1.444,1302,1.444,1303,1.674,1304,1.674,1307,3.414,1333,1.444,1334,1.674,1335,1.674,1337,1.674,1339,1.301,1361,1.152,1371,2.62,1372,2.62,1403,1.543,1404,1.543,1405,1.301,1464,2.62,1466,1.444,1472,1.674,1499,2.319,1502,1.444,1509,1.301,1516,1.444,1525,2.62,1529,1.444,1539,3.801,1540,3.801,1541,1.444,1550,1.444,1552,2.811,1554,2.114,1559,2.209,1568,1.543,1595,1.444,1596,3.414,1604,1.543,1607,1.366,1618,1.674,1635,1.444,1636,1.674,1645,1.113,1651,1.301,1652,1.245,1662,1.366,1668,1.301,1669,1.245,1671,1.196,1673,1.301,1674,1.366,1698,2.62,1699,2.62,1713,1.543,1716,1.674,1728,1.444,1730,1.444,1731,1.444,1776,1.245,1778,1.444,1793,1.674,1798,1.301,1821,1.444,1842,3.197,1846,1.366,1852,1.366,1857,1.543,1861,1.366,1862,1.045,1875,2.62,1876,2.62,1883,1.444,1896,1.674,1897,1.543,1977,1.674,1994,1.674,2006,1.674,2007,1.543,2015,1.543,2024,1.444,2025,1.674,2046,1.301,2047,1.674,2063,1.301,2064,1.674,2076,1.674,2077,1.674,2078,3.197,2084,1.674,2085,3.197,2089,4.893,2131,1.444,2132,1.674,2157,1.444,2158,1.674,2163,4.025,2181,1.543,2182,1.444,2183,1.543,2198,1.444,2199,1.674,2242,1.301,2243,1.674,2258,1.674,2263,1.674,2279,1.444,2280,1.674,2290,1.301,2292,1.366,2293,1.444,2304,1.444,2305,1.444,2372,1.674,2393,1.301,2398,1.444,2399,2.62,2411,1.444,2430,1.674,2453,1.444,2476,1.674,2488,1.674,2520,1.543,2577,1.674,2579,1.674,2580,1.674,2592,1.674,2643,1.674,2652,1.444,2672,1.674,2694,1.444,2695,1.674,2699,1.245,2705,1.674,2713,1.674,2715,1.674,2720,1.674,2726,1.245,2729,1.674,2734,1.674,2749,1.674,2753,1.674,2754,1.674,2777,1.674,2844,1.674,2950,1.674,2960,1.543,3029,3.705,3043,1.444,3056,3.414,3121,1.543,3203,2.843,3220,1.674,3240,1.674,3356,1.301,3388,1.245,3951,7.837,4094,1.543,4095,7.61,4096,9.6,4097,6.964,4098,6.964,4099,9.281,4100,1.674,4101,2.62,4102,5.953,4103,1.874,4104,5.476,4105,5.476,4106,5.476,4107,8.059,4108,1.674,4109,1.674,4110,3.705,4111,3.705,4112,1.674,4113,1.674,4114,6.964,4115,1.874,4116,5.476,4117,4.889,4118,5.476,4119,1.874,4120,7.422,4121,1.674,4122,3.414,4123,1.543,4124,1.874,4125,1.874,4126,1.674,4127,1.874,4128,1.874,4129,1.874,4130,3.182,4131,1.874,4132,1.874,4133,4.147,4134,1.874,4135,4.147,4136,1.874,4137,1.874,4138,1.874,4139,3.182,4140,6.68,4141,1.874,4142,1.874,4143,1.874,4144,1.874,4145,1.674,4146,1.674,4147,2.843,4148,2.843,4149,1.674,4150,1.674,4151,1.674,4152,1.874,4153,1.874,4154,1.874,4155,1.674,4156,1.674,4157,1.674,4158,1.674,4159,1.674,4160,1.674,4161,1.674,4162,1.674,4163,3.414,4164,1.874]],["title/dependencies.html",[173,2.76,3690,3.401]],["body/dependencies.html",[0,0.173,4,0.081,5,0.094,16,0.819,24,0.006,26,0.178,55,1.545,56,1.182,69,2.018,80,0.002,81,0.003,82,0.002,111,0.869,115,1.968,173,1.877,187,3.112,189,3.608,208,3.613,213,1.886,230,2.31,264,1.473,340,4.218,374,1.968,375,2.577,377,2.018,390,2.682,392,2.682,447,2.399,471,2.803,543,4.053,560,2.577,589,2.779,693,1.921,697,4.218,835,2.577,865,3.324,950,3.076,970,4.796,971,3.324,1028,3.608,1276,2.577,1315,2.682,1346,6.129,1347,2.682,1386,3.608,1507,2.943,1508,2.682,1511,2.943,1549,3.112,1567,2.577,1590,2.682,1665,3.112,1913,3.608,2140,3.608,2167,2.682,2168,3.726,2169,3.324,2188,6.092,2806,3.608,2822,3.608,3139,4.807,3165,3.608,3250,2.943,3307,3.608,3308,3.608,3355,4.807,3359,3.608,3468,3.608,3488,3.608,3489,3.608,3528,3.608,3534,3.608,3571,3.608,3584,2.803,3589,4.257,3600,3.608,3792,3.608,4035,3.608,4071,3.608,4165,5.84,4166,8.572,4167,4.038,4168,4.038,4169,4.038,4170,4.038,4171,4.038,4172,4.038,4173,5.84,4174,5.84,4175,4.038,4176,5.84,4177,5.84,4178,4.038,4179,4.038,4180,4.038,4181,4.038,4182,4.038,4183,4.038,4184,4.038,4185,4.038,4186,4.038,4187,4.038,4188,3.324,4189,4.038,4190,4.038,4191,6.86,4192,4.038,4193,4.038,4194,6.86,4195,4.038,4196,4.038,4197,4.038,4198,4.038,4199,5.84,4200,4.038,4201,5.84,4202,4.038,4203,4.038,4204,7.975,4205,4.038,4206,4.038,4207,4.038,4208,4.038,4209,3.608,4210,4.038,4211,4.038,4212,4.038,4213,4.038,4214,4.038,4215,5.84,4216,4.038,4217,4.038,4218,4.038,4219,5.84,4220,4.038,4221,5.84,4222,5.84,4223,4.038,4224,4.038,4225,4.038,4226,3.112,4227,4.038,4228,4.038,4229,4.038,4230,4.038,4231,4.038,4232,5.84,4233,4.038,4234,4.038,4235,4.038,4236,4.038,4237,4.038,4238,4.038,4239,4.038,4240,4.038,4241,4.038,4242,4.038,4243,4.038,4244,4.038,4245,4.038,4246,4.038,4247,4.038,4248,4.038,4249,5.84,4250,5.217,4251,4.038,4252,4.038,4253,4.038,4254,4.038,4255,3.608,4256,4.038,4257,5.84,4258,4.038,4259,4.038,4260,4.038,4261,4.038,4262,4.038,4263,4.038,4264,4.038,4265,4.038,4266,4.038,4267,4.038,4268,4.038,4269,4.038,4270,5.84,4271,4.038,4272,4.038,4273,4.038,4274,4.038,4275,4.038,4276,5.84,4277,3.608,4278,3.324,4279,4.038,4280,4.038,4281,4.038,4282,4.038,4283,4.038,4284,4.038,4285,4.038,4286,4.038,4287,3.608,4288,4.038,4289,4.038,4290,4.038,4291,4.038,4292,4.038,4293,4.038,4294,4.038,4295,4.038,4296,4.038,4297,3.324,4298,4.038,4299,4.038,4300,4.038,4301,4.038,4302,4.038,4303,4.038,4304,4.038,4305,4.038,4306,4.038,4307,4.038,4308,4.038,4309,4.038]],["title/miscellaneous/enumerations.html",[4310,2.636,4311,5.304]],["body/miscellaneous/enumerations.html",[9,0.323,24,0.006,33,3.04,80,0.004,81,0.005,82,0.004,222,4.081,409,2.671,413,4.252,414,4.625,415,4.625,447,3.958,448,4.625,449,3.886,482,3.248,535,2.62,574,3.609,1147,4.857,1149,4.625,1150,4.625,1171,4.857,1172,5.953,1179,5.953,1180,6.723,1181,6.723,1249,4.423,1259,5.021,1404,5.486,1429,7.296,1452,5.953,2305,5.136,2309,5.953,2310,5.953,2329,7.296,2520,5.486,2539,7.296,2541,5.953,2542,5.953,2543,5.953,2544,5.486,4310,4.252,4311,5.953,4312,6.663,4313,5.953,4314,5.953,4315,8.166,4316,5.953]],["title/miscellaneous/functions.html",[4310,2.636,4317,4.327]],["body/miscellaneous/functions.html",[9,0.278,23,1.44,24,0.006,25,0.836,26,0.254,27,0.957,33,1.738,39,0.838,80,0.003,81,0.004,82,0.003,107,1.708,109,4.419,117,3.835,345,2.802,457,3.716,576,2.5,630,3.818,632,3.381,635,5.164,636,5.164,638,3.989,809,2.872,933,2.802,1013,4.43,1014,6.359,1055,4.732,1058,4.732,1063,4.732,1083,5.735,1122,3.989,1237,3.818,1286,3.305,1296,4.9,1713,6.791,1862,3.205,1961,5.164,2089,4.43,2099,4.732,2100,5.135,2101,5.135,2103,5.135,2104,5.135,2107,5.135,2109,5.135,2113,5.135,3997,5.135,4101,6.791,4108,6.647,4109,6.647,4121,5.135,4150,5.135,4151,6.647,4157,6.647,4158,6.647,4159,6.647,4160,6.647,4161,6.647,4162,6.647,4310,3.667,4317,4.19,4318,5.748,4319,7.37,4320,8.27,4321,5.748,4322,5.748,4323,4.732,4324,5.748,4325,5.748]],["title/index.html",[9,0.2,2760,3.184,2761,2.867]],["body/index.html",[16,0.882,24,0.005,25,0.534,32,1.141,34,0.77,64,1.559,65,3.245,74,3.931,75,4.523,80,0.003,81,0.004,82,0.003,88,3.179,89,2.585,90,2.502,91,1.678,99,2.31,115,3.003,117,2.864,124,1.454,127,2.777,173,2.023,208,4.323,239,2.777,265,3.354,270,5.166,271,3.337,274,4.749,275,2.676,276,2.502,280,3.02,296,2.292,374,4.001,396,2.585,398,2.89,447,2.585,477,3.02,529,2.422,554,3.02,559,2.502,595,3.543,669,2.585,674,2.585,704,4.564,828,3.02,829,2.357,842,3.159,861,2.357,893,4.964,894,3.354,948,2.585,950,3.245,951,3.931,960,2.175,970,4.963,972,3.354,981,3.931,995,6.213,1074,3.931,1076,3.988,1080,3.354,1112,5.241,1128,3.172,1173,2.585,1212,2.231,1301,2.89,1312,3.582,1380,3.543,1579,3.582,1605,4.276,1616,4.398,1701,3.172,1836,4.491,1837,2.585,1914,2.89,1986,3.888,2166,3.172,2167,2.89,2168,3.931,2194,2.89,2348,3.02,2470,3.354,2594,2.777,2764,3.02,2765,3.582,2786,3.02,2805,4.749,2819,3.888,2828,3.02,2837,7.829,2851,3.582,2862,3.02,2881,3.354,2890,5.504,2892,4.749,2895,6.403,2898,3.02,2937,3.354,3008,3.582,3010,3.02,3048,4.75,3179,3.888,3232,6.39,3276,4.491,3356,3.02,3388,2.89,3402,5.072,3423,4.491,3450,3.354,3451,5.398,3522,3.02,3537,3.02,3553,5.888,3555,5.072,3587,3.888,3738,3.354,3759,3.888,3846,3.582,3847,4.749,3848,3.354,3888,3.582,3993,3.582,4025,3.354,4067,3.888,4069,3.582,4226,3.354,4326,3.354,4327,7.016,4328,4.491,4329,3.02,4330,3.354,4331,3.582,4332,3.354,4333,5.072,4334,4.092,4335,3.888,4336,4.352,4337,5.504,4338,5.504,4339,4.352,4340,4.352,4341,4.352,4342,3.354,4343,3.888,4344,6.161,4345,3.888,4346,3.888,4347,3.172,4348,7.152,4349,4.964,4350,3.888,4351,4.352,4352,3.888,4353,5.072,4354,4.352,4355,3.582,4356,3.354,4357,4.352,4358,4.352,4359,3.582,4360,4.352,4361,4.352,4362,3.888,4363,3.354,4364,4.352,4365,3.888,4366,6.161,4367,6.161,4368,8.208,4369,7.778,4370,4.352,4371,4.352,4372,6.161,4373,3.888,4374,4.352,4375,3.582,4376,6.161,4377,4.352,4378,3.888,4379,6.161,4380,6.161,4381,3.172,4382,3.888,4383,4.352,4384,4.352,4385,3.354,4386,4.352,4387,3.354,4388,3.888,4389,4.352,4390,3.582,4391,4.749,4392,4.352,4393,4.352,4394,3.888,4395,4.352,4396,2.89,4397,3.582]],["title/license.html",[2760,3.184,2761,2.867,4398,3.691]],["body/license.html",[0,0.028,4,0.176,5,0.028,12,1.595,21,0.093,24,0.001,28,0.294,30,0.289,34,0.82,51,0.039,52,0.301,64,2.542,65,1.563,71,0.653,75,0.447,79,0.725,80,0.001,81,0.001,82,0.001,88,3.694,89,0.558,92,0.169,99,0.558,127,1.102,143,0.154,146,0.402,148,0.668,159,0.6,165,0.509,166,2.49,182,0.427,224,2.222,226,1.762,228,1.607,234,1.025,238,2.138,239,3.768,266,2.976,281,5.86,296,0.909,316,0.427,337,0.558,339,1.025,355,0.653,377,0.863,378,1.446,392,0.624,397,0.725,419,0.32,449,2.482,450,0.774,453,0.541,454,0.6,455,0.653,456,2.71,466,0.624,469,1.845,474,0.774,531,0.47,535,0.37,550,0.6,553,0.624,579,2.211,591,0.437,592,0.437,611,0.392,669,1.422,674,1.762,676,0.725,679,2.059,688,0.578,741,2.131,783,1.196,806,0.685,830,5.225,831,2.663,842,2.803,846,2.055,861,0.509,890,1.824,891,2.901,893,3.214,947,1.59,951,2.49,960,0.863,970,1.102,988,0.653,989,3.362,1001,1.824,1043,1.147,1090,1.331,1116,0.6,1119,0.653,1129,2.163,1131,1.258,1134,1.824,1137,1.025,1160,2.601,1173,1.025,1178,1.198,1235,2.708,1236,2.852,1286,1.992,1294,3.953,1315,1.59,1364,0.774,1370,2.244,1380,1.376,1382,0.725,1383,4.152,1480,0.624,1483,0.685,1504,0.482,1546,1.563,1552,0.541,1574,0.578,1575,3.125,1577,0.774,1578,2.708,1580,1.845,1590,1.971,1601,0.774,1605,1.661,1616,2.399,1644,1.59,1660,1.198,1665,0.725,1690,0.774,1701,4.152,1787,0.624,1836,1.258,1837,2.318,1862,3.956,1914,0.624,1922,0.685,1961,0.653,1978,1.661,2137,1.258,2142,0.84,2194,0.624,2227,0.624,2332,0.653,2348,0.653,2475,1.845,2588,1.542,2594,3.328,2598,0.84,2628,2.163,2646,2.059,2676,4.412,2743,0.84,2766,0.84,2770,1.661,2771,2.163,2772,1.542,2782,0.774,2786,2.405,2789,0.685,2793,3.096,2805,0.725,2835,0.84,2840,0.84,2862,2.059,2875,2.138,2892,6.596,2894,6.719,2897,5.322,2898,1.661,2917,0.84,2933,1.421,2943,1.421,2948,0.685,2956,0.774,2960,0.774,2968,1.421,2970,1.542,2981,2.651,2985,1.421,2993,0.84,2994,0.725,3006,2.138,3008,0.774,3025,2.442,3037,0.774,3043,1.331,3048,2.848,3052,1.542,3056,1.421,3059,0.685,3079,0.774,3092,1.542,3103,0.84,3125,0.84,3139,1.421,3148,0.653,3168,0.84,3180,0.84,3183,0.84,3197,0.84,3213,2.163,3223,2.671,3242,1.542,3244,0.774,3255,1.421,3270,3.305,3274,0.685,3282,0.725,3284,0.84,3302,0.725,3303,2.671,3328,0.84,3361,0.84,3379,0.725,3388,1.147,3404,1.542,3409,1.421,3415,0.774,3436,3.305,3448,0.774,3450,6.113,3451,3.62,3452,1.845,3455,6.688,3472,1.421,3521,3.569,3537,3.214,3550,0.774,3565,0.774,3580,0.84,3582,1.421,3583,1.421,3586,3.812,3616,0.84,3638,2.059,3639,0.84,3641,0.84,3679,0.774,3699,0.84,3707,0.774,3732,1.331,3824,1.421,3847,2.287,3848,1.845,3854,1.421,3888,1.421,3892,1.845,3924,1.542,3959,1.845,3966,3.212,3984,4.501,3987,0.84,3994,0.725,4000,5.885,4001,1.542,4003,1.542,4012,0.84,4048,0.84,4055,1.542,4072,4.214,4082,2.138,4126,0.84,4226,0.725,4327,0.774,4331,0.774,4347,4.999,4349,0.653,4350,2.138,4355,3.53,4378,0.84,4381,1.745,4391,1.845,4396,0.624,4398,8.578,4399,6.587,4400,6.436,4401,0.94,4402,2.394,4403,7.798,4404,5.298,4405,5.701,4406,3.465,4407,0.94,4408,0.94,4409,1.726,4410,3.465,4411,2.394,4412,2.394,4413,5.696,4414,0.94,4415,0.94,4416,1.542,4417,3.465,4418,3.53,4419,1.726,4420,1.726,4421,5.446,4422,4.631,4423,0.94,4424,0.94,4425,3.902,4426,1.542,4427,0.84,4428,0.84,4429,4.884,4430,8.52,4431,2.394,4432,2.138,4433,0.94,4434,0.94,4435,2.967,4436,4.939,4437,0.94,4438,4.939,4439,1.331,4440,0.94,4441,3.465,4442,0.725,4443,0.774,4444,5.604,4445,0.84,4446,0.84,4447,5.216,4448,5.467,4449,3.465,4450,5.696,4451,0.94,4452,1.726,4453,0.94,4454,0.94,4455,2.138,4456,0.94,4457,0.94,4458,0.94,4459,0.94,4460,0.94,4461,0.94,4462,2.967,4463,0.94,4464,2.394,4465,0.94,4466,0.94,4467,5.645,4468,1.845,4469,0.94,4470,0.94,4471,1.97,4472,2.394,4473,0.94,4474,2.138,4475,0.725,4476,1.726,4477,1.726,4478,2.394,4479,0.94,4480,4.861,4481,3.465,4482,3.465,4483,3.902,4484,2.394,4485,1.726,4486,0.94,4487,0.94,4488,0.94,4489,2.394,4490,0.94,4491,0.94,4492,1.726,4493,0.94,4494,1.726,4495,0.94,4496,0.94,4497,2.967,4498,0.84,4499,1.726,4500,8.482,4501,2.394,4502,4.939,4503,2.651,4504,1.331,4505,0.94,4506,1.726,4507,2.394,4508,4.939,4509,5.216,4510,2.967,4511,1.726,4512,2.967,4513,2.651,4514,0.94,4515,2.394,4516,7.57,4517,1.542,4518,0.94,4519,4.631,4520,0.94,4521,2.138,4522,2.708,4523,0.94,4524,6.273,4525,2.138,4526,1.726,4527,5.467,4528,3.902,4529,0.94,4530,1.726,4531,4.287,4532,0.94,4533,5.905,4534,1.726,4535,0.94,4536,0.774,4537,0.94,4538,2.394,4539,0.94,4540,0.94,4541,0.94,4542,0.774,4543,2.394,4544,2.651,4545,0.94,4546,0.94,4547,0.94,4548,1.542,4549,5.216,4550,0.84,4551,0.774,4552,2.138,4553,2.394,4554,2.394,4555,0.94,4556,3.096,4557,0.84,4558,1.198,4559,2.138,4560,0.94,4561,0.94,4562,0.94,4563,1.542,4564,0.94,4565,6.835,4566,1.542,4567,2.138,4568,0.685,4569,1.726,4570,2.967,4571,0.94,4572,1.726,4573,2.852,4574,0.94,4575,0.94,4576,0.94,4577,1.726,4578,0.94,4579,1.421,4580,0.94,4581,2.852,4582,0.94,4583,0.774,4584,4.287,4585,2.442,4586,0.94,4587,3.096,4588,0.94,4589,1.726,4590,0.94,4591,0.94,4592,0.94,4593,0.94,4594,0.94,4595,2.394,4596,0.94,4597,1.726,4598,1.726,4599,1.726,4600,0.94,4601,5.905,4602,1.542,4603,0.94,4604,0.94,4605,0.84,4606,0.94,4607,0.685,4608,0.94,4609,0.94,4610,2.394,4611,0.84,4612,0.94,4613,5.604,4614,0.725,4615,0.94,4616,0.94,4617,3.465,4618,3.486,4619,0.94,4620,0.94,4621,2.394,4622,0.94,4623,0.94,4624,2.967,4625,0.94,4626,0.94,4627,0.94,4628,0.94,4629,0.94,4630,0.94,4631,1.726,4632,0.94,4633,0.94,4634,0.94,4635,1.726,4636,0.94,4637,0.94,4638,0.94,4639,0.94,4640,0.94,4641,1.726,4642,1.258,4643,4.412,4644,0.94,4645,3.902,4646,0.94,4647,0.94,4648,2.394,4649,2.967,4650,2.967,4651,2.967,4652,0.94,4653,3.096,4654,3.096,4655,0.94,4656,2.394,4657,0.94,4658,1.726,4659,0.94,4660,1.542,4661,3.465,4662,1.726,4663,2.967,4664,2.967,4665,0.94,4666,2.394,4667,3.096,4668,0.94,4669,0.94,4670,3.53,4671,1.726,4672,0.685,4673,0.94,4674,0.84,4675,2.394,4676,0.94,4677,0.94,4678,2.138,4679,0.94,4680,0.94,4681,0.94,4682,0.94,4683,0.94,4684,2.394,4685,0.94,4686,0.84,4687,2.138,4688,1.726,4689,3.902,4690,6.338,4691,2.394,4692,1.726,4693,1.726,4694,1.726,4695,2.967,4696,0.84,4697,0.94,4698,0.94,4699,0.94,4700,3.486,4701,1.726,4702,0.94,4703,0.94,4704,0.94,4705,0.94,4706,1.726,4707,0.94,4708,1.726,4709,0.94,4710,0.94,4711,3.376,4712,0.94,4713,4.884,4714,0.94,4715,0.94,4716,0.94,4717,0.94,4718,1.726,4719,0.94,4720,2.526,4721,2.967,4722,1.726,4723,0.84,4724,0.94,4725,0.94,4726,0.94,4727,0.94,4728,1.726,4729,0.94,4730,0.94,4731,0.774,4732,2.651,4733,0.94,4734,1.726,4735,0.94,4736,0.94,4737,2.138,4738,0.94,4739,0.94,4740,0.94,4741,0.94,4742,2.967,4743,0.94,4744,0.94,4745,0.84,4746,0.84,4747,0.84,4748,0.94,4749,0.94,4750,0.94,4751,3.465,4752,0.94,4753,0.94,4754,2.967,4755,0.94,4756,0.94,4757,0.94,4758,0.94,4759,0.94,4760,0.94,4761,2.967,4762,0.94,4763,0.94,4764,2.394,4765,0.94,4766,0.774,4767,2.394,4768,0.94,4769,0.94,4770,0.94,4771,0.94,4772,0.94,4773,0.94,4774,0.94,4775,0.84,4776,1.542,4777,0.94,4778,0.685,4779,1.726,4780,0.84,4781,0.94,4782,2.967,4783,0.94,4784,0.94,4785,1.726,4786,2.394,4787,2.394,4788,0.774,4789,1.726,4790,0.94,4791,4.287,4792,0.94,4793,0.94,4794,1.726,4795,0.94,4796,0.94,4797,0.94,4798,0.94,4799,2.967,4800,2.394,4801,0.94,4802,3.465,4803,0.94,4804,0.94,4805,0.94,4806,0.94,4807,0.84,4808,0.94,4809,1.726,4810,1.726,4811,1.542,4812,2.394,4813,0.84,4814,0.94,4815,2.394,4816,0.94,4817,1.421,4818,0.94,4819,1.726,4820,0.94,4821,0.94,4822,1.726,4823,7.302,4824,2.394,4825,0.94,4826,3.465,4827,5.216,4828,2.394,4829,0.94,4830,0.94,4831,0.94,4832,2.967,4833,0.94,4834,2.394,4835,0.94,4836,0.94,4837,0.94,4838,0.94,4839,0.94,4840,0.94,4841,0.94,4842,2.967,4843,1.726,4844,0.94,4845,0.94,4846,2.394,4847,0.94,4848,1.726,4849,2.394,4850,1.726,4851,0.94,4852,0.94,4853,0.94,4854,1.726,4855,2.394,4856,0.84,4857,0.94,4858,0.94,4859,1.726,4860,0.94,4861,0.84,4862,0.94,4863,0.94,4864,0.94,4865,2.394,4866,1.726,4867,0.84,4868,0.94,4869,0.94,4870,2.967,4871,0.94,4872,2.394,4873,0.94,4874,0.94,4875,1.726,4876,0.94,4877,0.94,4878,0.94,4879,2.394,4880,1.726,4881,1.726,4882,0.94,4883,1.726,4884,4.287,4885,1.542,4886,2.394,4887,2.967,4888,0.84,4889,0.94,4890,1.726,4891,0.94,4892,2.394,4893,0.94,4894,0.94,4895,0.94,4896,0.94,4897,0.94,4898,0.94,4899,2.394,4900,1.726,4901,0.94,4902,0.84,4903,0.94,4904,0.94,4905,1.726,4906,1.726,4907,0.94,4908,1.542,4909,0.94,4910,0.94,4911,0.774,4912,0.94,4913,2.394,4914,0.94,4915,0.94,4916,0.94,4917,0.94,4918,1.726,4919,2.394,4920,0.94,4921,0.94,4922,0.94,4923,0.94,4924,1.726,4925,0.94,4926,0.94,4927,0.94,4928,0.94,4929,0.94,4930,0.94,4931,0.94,4932,0.94,4933,0.725,4934,0.94,4935,0.94,4936,0.94,4937,2.967,4938,0.94,4939,0.94,4940,1.726,4941,0.94,4942,0.94,4943,0.94,4944,0.94,4945,0.94,4946,0.94,4947,0.94,4948,0.774,4949,0.94,4950,0.94,4951,0.94,4952,0.84,4953,1.726,4954,0.94,4955,0.94,4956,0.94,4957,0.94,4958,0.84,4959,1.726,4960,0.94,4961,0.94,4962,0.84,4963,0.84,4964,0.653,4965,0.94,4966,1.726,4967,1.726,4968,0.94,4969,0.94,4970,0.94,4971,0.94,4972,2.394,4973,1.421,4974,0.94,4975,1.726,4976,1.726,4977,0.94,4978,0.774,4979,0.84,4980,0.94,4981,0.84,4982,0.94,4983,0.94,4984,1.726,4985,0.94,4986,2.394,4987,0.94,4988,0.94,4989,0.94,4990,0.94,4991,0.94,4992,0.94,4993,0.94,4994,0.94,4995,0.94,4996,0.94,4997,0.84,4998,0.94,4999,0.774,5000,0.94,5001,0.94,5002,0.94,5003,0.94,5004,0.94,5005,0.94,5006,0.94,5007,0.94,5008,0.94,5009,0.94,5010,0.94,5011,0.725,5012,0.84,5013,1.726,5014,1.542,5015,0.94,5016,0.94,5017,0.94,5018,0.94,5019,0.94,5020,0.94,5021,0.94,5022,0.84,5023,0.725,5024,0.94,5025,0.94,5026,0.774,5027,0.94,5028,0.94,5029,0.94,5030,0.94,5031,0.94]],["title/modules.html",[172,2.751]],["body/modules.html",[24,0.005,80,0.004,81,0.005,82,0.004,171,4.837,172,2.713,177,4.605,196,4.605,201,4.605,382,4.837,385,4.837,386,4.837,387,4.234,388,4.837,989,5.904,1315,6.648,1397,4.837,1498,4.605,1538,5.462,1558,5.114,1771,4.837,2147,4.837,2151,4.605,2162,4.837,5032,10.009,5033,10.009,5034,9.105,5035,9.602]],["title/overview.html",[5036,5.185]],["body/overview.html",[2,0.87,24,0.006,80,0.003,81,0.004,82,0.003,148,1.292,171,6.73,172,1.892,173,2.99,174,4.135,175,4.135,176,4.135,177,6.744,178,5.389,179,5.132,180,3.587,181,2.437,182,2.103,196,6.489,197,4.135,198,4.135,199,4.135,200,4.135,201,6.033,202,5.689,203,4.911,211,1.785,364,5.132,382,6.886,383,4.135,384,4.135,385,5.389,386,5.389,387,5.689,388,5.389,603,4.911,702,2.313,708,5.132,855,5.127,903,5.689,943,4.135,944,4.135,945,4.135,1339,6.188,1397,6.121,1398,4.135,1399,4.135,1493,4.135,1494,4.135,1495,4.135,1498,5.132,1671,5.689,1771,6.946,1772,4.135,1774,4.135,1775,4.135,1776,4.911,2046,5.132,2063,5.132,2147,6.336,2148,4.135,2149,4.135,2150,4.135,2151,6.807,2160,4.135,2161,4.135,2162,6.886,2242,5.132,2290,5.132,2391,4.135,2392,4.135,2393,5.132,2475,3.567,2699,4.911,2723,4.135,2724,4.135,2725,4.135,2726,4.911,2829,4.135,2871,4.135,3209,4.135,5036,3.567,5037,4.628]],["title/todo.html",[63,1.593,2760,3.184,2761,2.867]],["body/todo.html",[0,0.123,5,0.067,10,0.485,12,1.516,16,1.209,18,0.994,24,0.005,25,0.516,26,0.263,32,1.997,39,0.468,52,1.542,57,0.781,63,1.603,64,2.729,65,4.248,69,2.077,80,0.003,81,0.003,82,0.002,88,1.847,115,3.398,116,2.251,117,2.771,119,3.029,128,2.251,148,1.16,170,2.323,182,2.709,185,1.977,205,2.317,208,3.14,213,2.251,228,2.251,230,1.277,267,5.739,270,3.96,271,4.79,276,4.009,296,4.873,303,3.229,336,4.346,378,2.026,390,3.96,396,3.541,400,2.469,401,3.029,404,3.203,454,2.652,456,1.977,475,5.082,498,4.287,529,1.634,532,2.251,590,2.906,595,2.39,649,3.029,667,2.837,669,3.541,700,1.847,704,2.652,816,2.555,829,4.682,842,2.131,855,2.39,861,3.229,876,2.555,877,2.652,892,3.666,948,4.141,950,3.14,960,3.484,982,4.595,995,4.839,1001,4.959,1011,2.251,1012,3.029,1014,3.029,1039,2.884,1042,2.76,1073,5.357,1074,3.804,1112,2.555,1113,6.639,1116,2.652,1119,2.884,1134,2.555,1136,3.029,1137,2.469,1185,3.96,1294,2.884,1298,2.884,1315,2.76,1345,3.203,1347,2.76,1364,4.908,1366,3.713,1370,2.39,1489,2.652,1504,3.575,1551,2.555,1552,4.009,1563,6.229,1574,2.555,1575,3.029,1586,2.884,1590,2.76,1605,4.138,1660,2.884,1786,2.76,1787,2.76,1837,2.469,1862,2.317,1870,3.203,2070,2.555,2166,3.029,2168,3.804,2188,4.839,2358,4.684,2397,2.652,2621,3.029,2771,3.029,2785,3.713,2811,3.421,2821,4.908,2867,2.884,2873,6.639,2881,3.203,2906,3.713,2934,2.884,2957,3.421,2985,3.421,2996,3.421,3000,3.713,3001,3.713,3003,2.76,3025,3.421,3047,3.029,3058,3.421,3063,3.713,3282,3.203,3356,4.138,3431,3.713,3435,3.713,3507,4.595,3521,3.203,3522,2.884,3679,3.421,3690,3.421,3692,3.421,3738,3.203,3994,3.203,4025,3.203,4054,4.138,4085,3.421,4088,3.421,4250,3.713,4277,3.713,4278,3.421,4329,2.884,4375,3.421,4385,3.203,4396,2.76,4397,3.421,4439,3.203,4442,3.203,4568,3.029,4605,3.713,4731,3.421,5011,4.595,5038,3.421,5039,4.156,5040,3.713,5041,3.713,5042,3.203,5043,3.421,5044,4.156,5045,4.156,5046,3.713,5047,4.156,5048,4.156,5049,4.156,5050,4.156,5051,4.156,5052,4.156,5053,4.156,5054,4.156,5055,4.156,5056,3.421,5057,4.156,5058,4.156,5059,4.156,5060,4.156,5061,4.156,5062,4.156,5063,4.156,5064,4.156,5065,4.156,5066,4.156,5067,4.156,5068,4.156,5069,4.156,5070,4.156,5071,3.713,5072,4.156,5073,4.156,5074,4.156,5075,4.156,5076,4.156,5077,3.713,5078,4.156,5079,4.156,5080,3.713,5081,3.713,5082,3.713,5083,4.156,5084,3.713,5085,4.156,5086,4.156,5087,4.156,5088,3.421,5089,4.156,5090,6.229,5091,4.156,5092,4.156,5093,4.156,5094,4.156,5095,4.156,5096,4.156,5097,3.421,5098,4.156,5099,5.962,5100,3.713,5101,4.156]],["title/miscellaneous/typealiases.html",[4310,2.636,5102,5.936]],["body/miscellaneous/typealiases.html",[9,0.271,12,1.425,16,1.136,20,4.5,24,0.006,26,0.424,39,0.631,52,0.977,71,3.889,80,0.003,81,0.004,82,0.003,99,1.81,101,5.413,146,0.525,170,2.108,220,2.212,306,5.656,440,4.596,449,3.482,456,2.666,498,3.446,522,3.035,529,2.877,557,2.951,571,4.347,573,3.035,610,4.841,630,4.861,721,3.722,727,5.079,958,4.319,959,5.94,964,6.025,974,6.025,1147,4.085,1151,4.085,1152,5.334,1161,3.482,1164,3.722,1171,4.085,1172,5.334,1175,6.025,1231,4.319,1232,5.641,1234,4.319,1499,4.085,1504,3.753,1514,5.641,1515,6.025,1542,6.025,1553,5.007,1557,4.085,1559,3.889,1590,4.861,1842,4.319,1855,6.538,1897,4.613,1930,4.613,1931,4.613,1995,4.085,2015,4.613,2089,4.319,2098,6.538,2099,6.025,2305,4.319,2320,5.641,2334,6.538,2347,4.319,3158,4.613,4122,4.613,4123,6.025,4310,3.576,4313,6.538,4314,6.538,4316,5.007,4320,7.281,4723,5.007,5103,5.604,5104,7.318,5105,7.318,5106,5.604,5107,5.604,5108,7.318,5109,7.318,5110,5.604,5111,5.604,5112,5.604,5113,5.007,5114,5.604,5115,5.007,5116,5.007,5117,7.318,5118,5.604,5119,7.318,5120,5.604,5121,5.007,5122,5.604,5123,5.604,5124,5.604,5125,5.604,5126,3.889,5127,5.604,5128,5.604,5129,5.604,5130,5.604]],["title/miscellaneous/variables.html",[2823,4.327,4310,2.636]],["body/miscellaneous/variables.html",[1,1.136,9,0.096,10,0.23,12,1.969,14,0.792,24,0.006,25,0.438,26,0.382,29,0.534,30,0.607,32,2.522,33,2.889,34,1.371,39,0.485,41,0.617,49,1.236,61,0.097,63,0.762,64,0.708,69,1.663,73,1.44,75,0.94,80,0.002,81,0.002,82,0.001,83,2.21,86,2.21,88,1.479,91,1.663,92,0.355,99,0.638,107,0.35,109,2.561,115,1.622,116,1.07,117,4.411,118,1.44,124,0.66,125,2.21,126,2.909,128,1.07,136,1.725,143,1.393,170,0.569,184,1.512,191,2.992,208,2.27,213,0.638,224,1.836,226,1.173,229,2.004,230,0.607,240,1.626,245,0.683,255,1.913,271,1.802,275,1.215,316,1.512,337,1.976,339,1.173,341,3.549,343,1.44,374,1.622,375,2.123,378,0.963,400,1.173,401,1.44,409,0.792,410,1.523,411,1.136,412,1.875,440,1.013,471,1.371,476,1.44,480,1.626,481,1.626,507,1.215,514,1.04,516,0.734,522,1.07,527,1.136,529,0.777,535,0.777,544,1.136,557,1.04,559,1.136,560,1.26,573,1.07,576,1.875,589,0.94,590,0.963,591,0.918,592,0.918,593,0.94,601,1.173,602,1.173,632,1.512,639,1.07,665,1.626,666,2.565,669,1.976,686,4.461,691,1.101,698,3.142,700,0.878,702,0.987,710,2.123,741,1.215,744,1.26,809,0.987,816,1.215,823,1.523,824,1.626,825,3.549,828,1.371,829,1.802,832,1.523,836,2.739,837,2.739,838,1.765,839,1.765,842,1.706,843,2.739,844,2.309,845,1.626,846,2.27,847,1.44,848,1.523,855,3.743,858,1.523,861,1.802,876,3.11,892,1.215,933,1.622,939,2.425,948,1.173,949,1.101,950,1.752,960,0.987,980,1.44,982,1.523,987,1.523,988,1.371,995,1.371,996,1.26,1001,1.215,1003,1.523,1004,1.626,1008,1.626,1010,3.549,1011,1.07,1012,1.44,1013,1.523,1014,4.984,1016,1.523,1017,2.739,1032,2.739,1033,1.765,1034,2.739,1035,4.461,1036,1.626,1037,1.312,1038,1.765,1039,2.992,1040,2.739,1041,1.44,1042,2.863,1043,1.312,1044,2.739,1045,1.765,1046,2.973,1047,1.765,1048,1.626,1049,1.765,1050,1.765,1051,1.765,1052,1.765,1053,1.765,1055,1.626,1058,1.626,1059,4.352,1063,1.626,1069,1.371,1070,2.973,1071,1.44,1072,1.765,1073,1.312,1074,2.751,1075,2.973,1076,2.404,1077,1.626,1078,2.973,1079,1.765,1080,2.565,1081,1.765,1082,1.765,1083,1.523,1084,2.739,1085,1.765,1086,1.765,1087,1.626,1088,1.626,1089,1.626,1090,1.523,1091,1.523,1092,1.765,1093,1.765,1094,1.765,1095,1.765,1096,5.044,1097,2.739,1098,5.044,1099,1.765,1100,1.626,1101,1.765,1112,1.215,1115,2.739,1122,1.371,1134,1.215,1137,1.173,1156,2.21,1158,2.123,1159,3.223,1161,2.407,1163,1.371,1203,1.07,1212,1.013,1235,1.371,1237,1.312,1254,1.101,1276,1.26,1294,1.371,1307,1.626,1308,1.765,1309,1.765,1313,1.312,1325,1.626,1331,1.765,1332,1.765,1345,1.523,1347,3.75,1361,2.046,1371,1.626,1372,2.739,1380,1.136,1387,1.765,1480,1.312,1489,2.123,1499,1.44,1504,2.21,1505,2.425,1506,2.739,1511,1.44,1514,1.523,1516,2.565,1517,1.626,1518,1.626,1519,1.626,1520,1.523,1521,1.626,1539,2.309,1540,2.309,1541,2.565,1545,1.523,1546,2.27,1547,2.973,1548,2.565,1551,1.215,1552,2.909,1554,4.324,1557,2.425,1559,2.992,1564,2.973,1566,5.044,1568,2.739,1569,1.765,1570,2.973,1571,1.626,1572,1.765,1573,1.523,1574,1.215,1575,1.44,1576,1.371,1577,1.626,1578,1.371,1579,1.626,1580,1.523,1581,2.973,1582,1.765,1583,1.765,1584,1.765,1596,3.549,1603,1.765,1604,2.739,1607,2.425,1645,3.635,1698,1.626,1699,2.739,1786,1.312,1787,1.312,1842,1.523,1850,1.626,1857,2.739,1862,1.855,1883,2.565,1891,1.312,1978,1.371,2028,1.523,2038,1.765,2040,1.765,2147,1.44,2163,1.626,2167,1.312,2168,2.123,2181,2.739,2182,2.565,2183,2.739,2193,1.626,2194,2.21,2478,2.046,2625,1.765,2645,1.44,2652,2.565,2675,1.44,2746,1.765,2823,1.44,2828,4.248,2881,2.565,2891,1.765,2895,1.626,2933,1.626,2934,1.371,2935,1.765,2936,2.973,2937,1.523,2980,2.973,3010,1.371,3047,3.687,3048,2.863,3097,1.765,3303,1.523,3388,1.312,3447,1.371,3507,1.523,3550,1.626,3557,1.626,3584,2.992,3617,2.973,3659,1.626,3754,2.973,3846,1.626,4085,1.626,4094,1.626,4100,1.765,4101,2.739,4110,1.765,4111,4.519,4112,2.973,4113,3.851,4122,1.626,4123,4.164,4145,1.765,4146,2.973,4147,1.765,4148,1.765,4149,2.973,4155,1.765,4156,2.973,4163,4.164,4209,1.765,4310,1.26,4317,2.425,4319,5.816,4323,1.626,4326,2.565,4353,1.626,4388,1.765,4536,1.626,4568,1.44,5043,1.626,5056,3.549,5080,2.973,5090,1.765,5113,1.765,5115,2.973,5116,3.851,5131,1.975,5132,3.327,5133,4.311,5134,5.058,5135,1.975,5136,4.311,5137,1.975,5138,1.975,5139,5.058,5140,4.311,5141,1.975,5142,3.327,5143,1.975,5144,1.975,5145,1.975,5146,1.975,5147,1.975,5148,1.975,5149,1.975,5150,1.975,5151,1.975,5152,1.975,5153,1.765,5154,1.975,5155,1.975,5156,1.765,5157,1.975,5158,1.975,5159,1.975,5160,1.975,5161,1.975,5162,2.739,5163,1.765,5164,1.765,5165,1.765,5166,1.975,5167,1.975,5168,1.975,5169,2.973,5170,1.975,5171,1.975,5172,1.975,5173,1.975,5174,1.975,5175,1.765,5176,1.975,5177,3.851,5178,1.975,5179,1.975,5180,1.975,5181,1.975,5182,1.975,5183,1.975,5184,1.975,5185,1.975,5186,1.975,5187,1.975,5188,1.975,5189,1.975,5190,1.975,5191,1.975,5192,1.975,5193,1.975,5194,1.975,5195,1.975,5196,1.975,5197,1.975,5198,1.975,5199,1.975,5200,1.975,5201,1.975,5202,1.975,5203,1.975,5204,1.975,5205,1.975,5206,3.327,5207,2.973,5208,3.327,5209,1.975,5210,1.975,5211,1.975,5212,1.975,5213,1.975]],["title/additional-documentation/nestjs-application.html",[75,1.689,374,1.731,891,1.689,1980,1.923]],["body/additional-documentation/nestjs-application.html",[7,0.712,24,0.005,25,0.309,32,0.935,64,3.035,65,3.729,68,2.275,75,4.26,80,0.002,81,0.003,82,0.002,88,3.534,89,3.165,148,0.995,170,1.535,172,1.458,181,1.878,208,2.806,226,3.165,228,1.931,239,2.275,271,5.01,276,3.064,296,1.878,338,2.474,339,2.118,340,2.192,374,4.222,375,4.835,377,1.782,378,2.597,393,2.748,456,1.696,469,2.748,471,2.474,498,2.192,531,1.782,538,2.9,589,3.369,593,2.536,679,3.698,783,3.189,829,4.306,842,3.63,848,2.748,891,1.696,892,2.192,893,3.698,894,2.748,948,3.165,950,1.878,951,2.275,960,2.663,966,2.192,970,2.275,988,2.474,989,2.192,1001,2.192,1039,4.914,1069,2.474,1073,4.702,1080,2.748,1112,2.192,1128,3.884,1134,2.192,1137,3.165,1184,2.748,1293,2.935,1294,4.429,1301,3.539,1313,4.702,1380,2.05,1476,2.748,1478,2.748,1480,2.368,1508,4.702,1526,2.935,1567,3.4,1571,2.935,1576,2.474,1786,5.033,1787,4.702,1792,2.474,1870,2.748,1980,2.886,2143,4.107,2167,2.368,2168,2.275,2194,3.539,2195,3.185,2196,4.387,2478,2.192,2594,2.275,2632,3.185,2646,3.698,2761,3.698,2764,2.474,2782,2.935,2818,4.761,2841,4.387,2873,2.935,2894,2.935,2898,2.474,2905,2.935,2927,3.185,2934,4.914,2937,4.107,2948,3.884,2956,5.253,2957,4.387,2999,3.185,3002,4.835,3003,2.368,3047,6.175,3048,6.281,3145,2.935,3148,2.474,3213,3.884,3355,2.935,3356,6.361,3383,4.107,3388,5.033,3405,4.387,3507,4.107,3522,2.474,3537,3.698,3553,2.935,3557,4.387,3584,2.474,3695,5.701,3758,3.185,3791,4.107,3827,4.761,3842,3.185,4163,2.935,4287,3.185,4297,2.935,4326,2.748,4327,2.935,4328,2.599,4330,2.748,4332,2.748,4335,3.185,4342,4.918,4353,2.935,4375,2.935,4387,5.457,4396,4.702,4404,2.935,4536,2.935,4557,4.761,4558,2.474,4567,3.185,4568,4.651,4613,3.185,4642,2.599,4711,2.599,4720,3.884,4778,2.599,4817,2.935,4861,3.185,4867,3.185,4978,4.387,4999,2.935,5023,2.748,5034,3.185,5036,2.748,5077,4.761,5081,5.701,5082,5.701,5126,3.698,5162,4.387,5163,4.761,5164,3.185,5165,3.185,5177,3.185,5214,3.565,5215,2.935,5216,3.565,5217,3.565,5218,3.565,5219,3.565,5220,3.565,5221,3.565,5222,3.565,5223,3.565,5224,5.329,5225,3.565,5226,3.565,5227,3.565,5228,5.329,5229,7.08,5230,3.565,5231,3.565,5232,3.565,5233,2.935,5234,3.565,5235,7.08,5236,3.185,5237,3.565,5238,3.565,5239,3.565,5240,7.951,5241,3.565,5242,3.565,5243,3.565,5244,3.565,5245,5.329,5246,3.565,5247,3.565,5248,3.565,5249,3.565,5250,5.329,5251,3.565,5252,3.565,5253,4.761,5254,5.329,5255,3.565,5256,3.565,5257,3.565,5258,3.565,5259,5.329,5260,3.565,5261,3.565,5262,3.565,5263,2.748,5264,3.565,5265,3.565,5266,3.565,5267,3.565,5268,3.565,5269,3.565,5270,3.185,5271,3.565,5272,3.565,5273,3.565,5274,3.565,5275,3.565,5276,6.381,5277,4.761,5278,3.565,5279,3.565,5280,3.565,5281,3.565,5282,3.565,5283,3.565,5284,5.329,5285,3.565,5286,5.329,5287,4.387,5288,3.185,5289,3.565,5290,6.381,5291,5.329,5292,3.565,5293,3.565,5294,3.565,5295,3.185,5296,3.565,5297,3.185,5298,3.565,5299,3.565,5300,3.565,5301,3.565,5302,3.565,5303,3.565,5304,3.565,5305,3.565]],["title/additional-documentation/nestjs-application/software-architecture.html",[891,1.689,1980,1.923,4334,2.358,4405,2.737]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.589,4,0.046,5,0.051,12,1.82,16,1.062,21,0.479,23,0.468,24,0.003,25,0.201,32,0.342,33,0.947,34,0.555,52,0.546,62,0.668,63,0.502,64,2.751,65,1.65,68,3.083,69,0.651,73,0.949,75,3.599,79,1.004,80,0.001,81,0.001,82,0.001,88,3.307,89,1.861,90,0.749,99,0.421,115,3.626,116,2.361,117,2.98,119,0.949,125,1.54,126,1.333,128,2.059,143,0.214,146,0.578,148,0.647,173,2.026,182,1.054,185,0.62,205,0.726,224,0.988,226,1.861,228,4.486,231,0.904,239,2.426,248,1.072,255,0.749,270,5.406,271,0.705,273,0.726,276,1.333,280,0.904,281,1.927,296,0.686,335,0.774,337,5.512,338,0.904,339,2.258,340,4.194,355,0.904,375,0.831,377,3.939,378,1.853,392,3.712,393,1.787,396,3.111,397,1.004,398,4.097,400,0.774,409,0.522,444,2.081,447,0.774,448,0.904,449,1.103,452,0.865,453,0.749,454,1.999,455,2.175,456,2.659,463,0.949,476,0.949,482,1.527,498,2.68,511,1.48,530,1.054,531,1.159,559,1.802,574,0.705,576,0.567,577,0.726,592,0.605,595,1.333,611,0.543,632,1.727,668,1.004,674,1.377,678,0.904,688,1.426,699,0.774,737,0.865,783,4.337,829,1.697,830,0.865,831,4.532,846,3.105,853,4.754,854,3.712,861,4.096,876,0.801,890,3.22,891,1.491,893,4.281,948,1.861,949,2.92,950,4.519,951,2.781,953,1.609,962,2.081,989,1.426,1011,3.193,1041,0.949,1042,4.258,1043,0.865,1048,1.072,1071,0.949,1074,0.831,1076,2.12,1112,1.426,1122,0.904,1134,1.426,1136,4.073,1137,1.377,1149,0.904,1159,1.221,1160,2.492,1161,0.62,1163,0.904,1173,0.774,1174,0.749,1177,0.865,1185,2.081,1191,3.977,1212,1.949,1235,2.175,1249,0.705,1259,1.426,1295,1.004,1296,2.258,1298,0.904,1299,4.854,1301,0.865,1314,3.522,1322,0.949,1367,1.164,1370,0.749,1380,0.749,1381,1.072,1383,3.177,1465,0.904,1476,1.004,1480,1.54,1481,0.831,1483,2.771,1487,1.69,1520,1.004,1537,1.004,1546,1.221,1552,0.749,1555,0.904,1567,0.831,1573,1.004,1574,0.801,1575,3.177,1578,2.175,1591,0.949,1598,1.909,1607,0.949,1616,2.337,1658,2.072,1792,0.904,1836,4.298,1837,2.87,1862,0.726,1884,0.904,1891,0.865,1922,0.949,1980,0.705,2137,0.949,2166,0.949,2167,2.081,2168,1.999,2281,2.081,2313,0.949,2332,2.175,2336,5.862,2340,2.175,2348,2.175,2470,1.004,2472,1.909,2478,2.971,2545,1.004,2594,2.781,2619,4.092,2627,2.58,2628,3.817,2645,0.949,2646,0.904,2647,1.072,2675,1.69,2764,1.609,2765,1.909,2770,2.638,2771,2.284,2773,2.58,2786,4.968,2789,2.771,2791,1.164,2792,0.949,2811,1.072,2821,1.072,2823,0.949,2828,0.904,2836,1.072,2839,2.799,2841,1.072,2846,1.164,2851,1.072,2853,2.799,2862,2.175,2867,0.904,2893,1.164,2897,3.522,2905,1.072,2939,2.799,2943,1.072,2968,1.072,2974,1.909,3002,0.831,3003,2.525,3009,2.771,3010,1.609,3012,1.164,3040,2.072,3043,1.004,3054,1.164,3059,3.177,3078,1.072,3079,1.909,3081,1.164,3083,1.164,3095,1.164,3113,1.164,3148,0.904,3158,1.909,3206,2.072,3213,3.817,3223,7.1,3229,1.909,3250,2.284,3271,1.164,3274,2.771,3276,5.932,3295,1.164,3302,1.787,3333,2.072,3356,1.609,3366,3.588,3379,1.787,3383,1.004,3402,1.072,3407,1.004,3409,1.072,3423,3.177,3436,2.93,3445,3.396,3451,3.353,3452,1.004,3471,1.164,3472,1.909,3476,1.164,3491,1.909,3495,2.58,3510,5.511,3521,2.415,3522,0.904,3523,1.072,3537,1.609,3555,1.072,3583,1.072,3589,0.949,3596,3.894,3605,2.072,3635,2.799,3638,3.025,3643,0.949,3653,2.072,3692,1.072,3707,1.072,3732,2.93,3734,1.072,3743,1.072,3791,1.004,3825,1.164,3831,1.164,3861,3.894,3878,1.787,3892,1.787,3919,1.072,3951,1.072,3954,1.072,3958,3.396,3959,1.004,3966,1.072,3979,1.164,3984,1.909,4014,1.164,4025,4.036,4038,1.164,4054,0.904,4063,1.164,4072,1.787,4093,2.072,4297,1.909,4326,2.415,4328,1.69,4329,1.609,4334,5.502,4342,1.004,4343,2.072,4347,2.771,4349,0.904,4355,1.909,4356,2.93,4363,6.758,4381,0.949,4385,1.004,4387,1.004,4391,1.787,4404,1.909,4405,1.004,4416,2.072,4418,1.072,4421,1.164,4426,1.164,4429,1.164,4432,1.164,4442,1.004,4444,1.164,4455,1.164,4467,1.909,4468,3.724,4471,3.977,4474,2.072,4475,1.787,4498,1.164,4503,1.164,4504,4.754,4522,0.904,4525,1.164,4542,1.072,4544,2.799,4548,1.164,4550,1.164,4556,1.164,4558,2.175,4565,1.164,4566,1.164,4573,5.616,4579,1.072,4581,1.072,4583,1.909,4585,1.072,4587,1.164,4607,0.949,4614,2.93,4618,1.164,4642,0.949,4643,1.164,4660,1.164,4670,1.072,4672,0.949,4687,1.164,4690,1.164,4696,1.164,4700,2.072,4711,0.949,4713,1.164,4720,2.284,4732,1.164,4745,2.072,4746,3.894,4766,1.072,4775,3.396,4776,1.164,4778,0.949,4780,1.164,4788,1.072,4807,1.164,4811,1.164,4813,1.164,4817,1.072,4856,4.316,4885,1.164,4902,1.164,4911,4.311,4933,5.108,4948,1.072,4962,1.164,4963,1.164,4964,4.281,4973,1.072,5012,1.164,5026,1.072,5036,1.004,5038,1.909,5041,1.164,5042,3.724,5084,2.072,5100,1.164,5233,1.072,5263,1.004,5306,1.303,5307,1.303,5308,5.727,5309,5.896,5310,2.319,5311,3.133,5312,4.6,5313,2.319,5314,2.799,5315,5.237,5316,1.303,5317,1.303,5318,2.93,5319,3.396,5320,1.303,5321,1.303,5322,1.303,5323,1.303,5324,1.303,5325,2.319,5326,2.319,5327,1.303,5328,1.303,5329,4.359,5330,1.303,5331,1.303,5332,3.133,5333,2.319,5334,1.303,5335,1.303,5336,1.303,5337,1.303,5338,1.303,5339,1.303,5340,1.303,5341,1.164,5342,2.319,5343,4.831,5344,1.303,5345,1.303,5346,2.319,5347,2.319,5348,3.801,5349,3.133,5350,3.801,5351,1.303,5352,3.396,5353,3.396,5354,1.303,5355,1.303,5356,1.303,5357,1.303,5358,1.303,5359,1.303,5360,2.799,5361,1.303,5362,1.303,5363,1.303,5364,7.439,5365,1.303,5366,7.328,5367,1.303,5368,2.072,5369,1.303,5370,2.319,5371,1.072,5372,5.896,5373,1.303,5374,2.799,5375,2.319,5376,1.303,5377,1.303,5378,1.303,5379,1.303,5380,1.303,5381,3.129,5382,2.319,5383,1.303,5384,1.303,5385,1.303,5386,1.303,5387,1.164,5388,1.303,5389,2.58,5390,1.303,5391,1.303,5392,1.164,5393,1.303,5394,1.303,5395,1.303,5396,1.164,5397,2.319,5398,1.303,5399,3.133,5400,1.303,5401,1.303,5402,1.303,5403,2.319,5404,1.303,5405,2.319,5406,3.133,5407,1.303,5408,1.303,5409,1.303,5410,2.072,5411,2.319,5412,3.133,5413,1.303,5414,1.303,5415,1.303,5416,1.303,5417,1.303,5418,1.303,5419,1.164,5420,1.303,5421,2.319,5422,1.303,5423,1.303,5424,5.896,5425,1.303,5426,1.164,5427,1.072,5428,1.303,5429,1.303,5430,1.303,5431,1.303,5432,1.303,5433,1.303,5434,1.303,5435,3.133,5436,1.303,5437,2.319,5438,3.133,5439,1.303,5440,1.303,5441,1.303,5442,1.303,5443,2.319,5444,1.303,5445,1.303,5446,1.303,5447,2.072,5448,1.303,5449,1.164,5450,1.303,5451,1.303,5452,2.319,5453,1.303,5454,1.164,5455,1.303,5456,2.319,5457,1.303,5458,1.303,5459,1.303,5460,1.303,5461,1.164,5462,1.303,5463,1.303,5464,2.319,5465,1.303,5466,1.303,5467,1.303,5468,1.303,5469,1.303,5470,1.164,5471,1.303,5472,1.303,5473,1.303,5474,1.164,5475,3.133,5476,1.303,5477,1.303,5478,1.303,5479,1.303,5480,1.303,5481,2.319,5482,1.303,5483,1.164,5484,1.303,5485,3.133,5486,1.303,5487,1.303,5488,2.319,5489,1.303,5490,2.319,5491,1.303,5492,1.303,5493,1.303,5494,1.303,5495,1.303,5496,1.303,5497,1.303,5498,2.319,5499,1.303,5500,1.303,5501,1.303,5502,1.303,5503,1.303,5504,1.303,5505,1.303,5506,1.303,5507,8.059,5508,1.303,5509,1.303,5510,4.359,5511,1.164,5512,1.303,5513,1.303,5514,2.319,5515,1.303,5516,1.303,5517,1.303,5518,1.303,5519,1.303,5520,1.303,5521,1.303,5522,1.164,5523,1.303,5524,1.303,5525,1.164,5526,1.303,5527,1.303,5528,1.303,5529,1.303,5530,2.319,5531,1.303,5532,1.303,5533,2.415,5534,1.303,5535,1.303,5536,1.072,5537,1.303,5538,1.303,5539,4.359,5540,1.303,5541,1.303,5542,1.303,5543,1.303,5544,1.303,5545,1.303,5546,1.303,5547,1.303,5548,1.303,5549,1.303,5550,1.303,5551,2.319,5552,1.303,5553,1.303,5554,2.319,5555,1.303,5556,1.303,5557,1.303,5558,2.319,5559,1.303,5560,1.303,5561,1.303,5562,1.303,5563,1.303,5564,1.164,5565,2.319,5566,1.303,5567,2.319,5568,1.303,5569,1.303,5570,1.303,5571,1.164,5572,2.319]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[88,1.384,891,1.481,1980,1.686,2619,2.16,4334,2.067]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.238,2,0.447,3,0.057,4,0.047,5,0.13,10,0.573,12,1.59,16,0.482,18,0.569,20,1.462,21,0.732,24,0.006,25,0.639,26,0.171,29,1.691,30,0.731,32,0.624,34,0.687,51,0.16,52,1.233,61,0.151,64,3.247,65,2.044,68,2.477,69,3.814,74,2.477,75,1.132,80,0.003,81,0.002,82,0.001,88,1.725,115,3.269,116,2.663,126,1.368,127,3.62,128,1.288,136,1.083,143,0.806,146,0.223,148,1.083,170,2.573,172,3.286,173,1.106,184,1.764,185,1.847,196,1.651,201,3.413,202,2.477,203,3.769,205,3.74,208,3.292,210,0.528,213,1.253,226,1.413,228,3.073,230,1.193,231,1.651,242,1.035,245,1.342,271,2.663,273,3.74,275,3.489,282,1.833,283,1.958,292,1.462,326,1.833,335,2.305,336,1.734,337,3.37,339,2.921,371,1.958,374,3.047,377,4.097,378,2.766,390,3.266,400,2.305,444,1.58,456,3.191,477,2.694,516,0.884,529,1.933,531,1.939,535,1.933,559,2.232,593,1.132,595,1.368,632,1.081,664,1.651,667,3.366,669,1.413,679,3.413,688,1.462,697,3.023,700,3.279,702,3.124,718,1.833,735,1.413,783,3.814,816,2.386,829,2.102,831,4.068,842,1.219,844,1.651,853,3.79,876,1.462,890,3.844,891,2.34,892,1.462,894,1.833,896,1.958,901,2.125,903,4.279,947,1.58,948,3.713,949,3.74,952,3.413,953,1.651,954,1.651,955,1.651,959,1.734,960,1.188,962,1.58,966,1.462,983,1.58,989,1.462,1001,3.023,1011,1.288,1027,2.125,1039,1.651,1042,1.58,1074,3.137,1076,3.164,1111,4.048,1113,3.195,1122,1.651,1128,1.734,1131,1.734,1134,1.462,1136,3.584,1137,2.305,1156,1.99,1211,1.651,1295,1.833,1296,2.305,1302,1.833,1314,1.734,1322,1.734,1347,1.58,1370,2.232,1380,2.827,1381,1.958,1382,2.991,1465,2.694,1487,2.829,1489,1.518,1546,1.253,1552,3.856,1554,1.58,1555,3.413,1574,2.386,1616,2.386,1642,1.833,1644,1.58,1645,2.305,1652,1.58,1660,4.339,1665,1.833,1668,1.651,1678,2.125,1679,2.125,1680,2.125,1681,2.125,1682,1.958,1690,1.958,1786,1.58,1836,2.829,1837,1.413,1853,2.125,1862,2.164,1884,1.651,1914,1.58,2007,1.958,2070,3.023,2188,1.651,2333,2.991,2336,4.708,2358,4.693,2397,1.518,2478,1.462,2594,3.989,2619,4.339,2621,1.734,2628,1.734,2640,1.958,2726,1.58,2740,5.146,2770,1.651,2773,1.958,2786,1.651,2792,1.734,2823,1.734,2828,2.694,2836,4.048,2867,2.694,2898,1.651,2948,2.829,2974,4.671,2994,3.79,3002,2.477,3003,1.58,3009,1.734,3059,3.584,3108,2.125,3136,2.125,3145,1.958,3250,2.829,3274,2.829,3276,1.734,3303,1.833,3304,2.991,3407,1.833,3436,1.833,3441,1.958,3446,1.958,3447,2.694,3451,1.651,3452,1.833,3491,4.048,3537,2.694,3549,2.125,3551,2.125,3584,4.339,3624,2.125,3630,1.958,3632,2.125,3638,1.651,3643,1.734,3646,2.125,3663,2.125,3664,2.125,3738,1.833,3847,1.833,3878,1.833,3930,2.125,3954,1.958,4054,1.651,4323,1.958,4329,5.298,4331,1.958,4334,3.266,4342,1.833,4347,1.734,4349,1.651,4359,1.958,4362,2.125,4363,3.79,4373,2.125,4381,1.734,4382,2.125,4387,4.373,4390,1.958,4391,4.373,4394,2.125,4396,1.58,4397,1.958,4428,2.125,4443,1.958,4445,2.125,4475,1.833,4504,1.833,4517,2.125,4522,1.651,4542,1.958,4551,1.958,4552,2.125,4558,1.651,4579,1.958,4585,1.958,4607,1.734,4614,1.833,4642,2.829,4653,2.125,4672,1.734,4711,1.734,4766,1.958,4778,1.734,4888,4.393,4933,2.991,4958,2.125,4964,1.651,4981,2.125,5026,1.958,5042,4.373,5043,4.048,5056,4.048,5097,4.048,5126,3.413,5153,2.125,5169,2.125,5175,2.125,5233,1.958,5236,2.125,5287,3.195,5308,2.125,5318,1.833,5353,2.125,5366,7.146,5368,2.125,5371,3.195,5387,2.125,5389,1.958,5396,2.125,5410,2.125,5419,3.467,5426,4.393,5461,3.467,5483,3.467,5522,3.467,5525,2.125,5533,1.833,5573,1.958,5574,2.125,5575,2.378,5576,4.917,5577,2.378,5578,6.32,5579,2.378,5580,3.881,5581,5.674,5582,2.378,5583,2.378,5584,2.378,5585,2.378,5586,2.378,5587,2.378,5588,2.378,5589,3.881,5590,2.378,5591,2.378,5592,2.378,5593,2.125,5594,3.881,5595,4.917,5596,2.378,5597,2.378,5598,2.378,5599,2.378,5600,2.125,5601,2.378,5602,2.378,5603,2.125,5604,3.881,5605,2.378,5606,1.958,5607,2.378,5608,2.378,5609,2.378,5610,2.378,5611,2.378,5612,2.378,5613,2.378,5614,2.378,5615,3.881,5616,3.881,5617,2.378,5618,2.125,5619,3.467,5620,2.378,5621,2.378,5622,2.378,5623,2.378,5624,2.378,5625,2.378,5626,2.378,5627,2.378,5628,2.378,5629,2.378,5630,2.378,5631,2.378,5632,2.378,5633,2.378,5634,2.378,5635,2.378,5636,2.378,5637,2.378,5638,2.378,5639,2.378,5640,2.378,5641,1.833,5642,2.378,5643,2.378,5644,2.378,5645,2.378,5646,2.378,5647,2.378,5648,2.378,5649,2.378,5650,2.378,5651,2.378,5652,2.378,5653,2.378,5654,2.125,5655,2.378,5656,2.378,5657,2.378,5658,2.125,5659,2.378,5660,2.378,5661,2.378,5662,2.378,5663,2.378,5664,2.378,5665,2.378,5666,2.378,5667,2.378,5668,2.125,5669,2.378]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[891,1.481,1980,1.686,2358,1.914,5318,2.399,5670,2.781]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[12,2.28,21,0.379,24,0.006,29,1.034,34,1.296,39,0.43,52,0.978,63,1.474,64,3.257,65,3.501,69,4.075,74,2.438,75,3.88,80,0.002,81,0.003,82,0.002,88,2.494,89,3.332,114,3.146,117,1.776,127,2.438,136,1.071,143,0.92,146,0.358,182,1.737,213,1.234,220,1.696,230,1.174,245,2.697,248,4.618,255,2.197,273,3.128,276,3.226,292,2.35,326,4.324,337,5.006,338,4.613,339,2.27,340,2.35,374,2.734,377,1.91,378,2.734,390,2.538,393,4.324,396,2.27,397,2.946,398,2.538,412,2.44,425,1.594,449,1.818,452,2.538,456,3.163,477,3.894,516,1.42,532,2.07,535,2.613,546,3.894,632,2.549,668,5.123,678,2.652,688,4.503,783,3.898,809,1.91,831,2.197,854,2.538,861,2.07,876,2.35,890,5.315,949,4.919,954,2.652,955,2.652,983,2.538,1041,2.786,1042,2.538,1054,2.27,1069,2.652,1076,3.128,1128,2.786,1131,2.786,1212,1.959,1276,3.58,1294,2.652,1313,2.538,1360,2.946,1380,3.226,1481,4.241,1586,2.652,1605,2.652,1616,2.35,1642,2.946,1792,2.652,1891,2.538,1922,2.786,1933,3.414,1966,3.414,2028,2.946,2143,2.946,2188,2.652,2281,2.538,2336,2.438,2358,5.803,2594,3.58,2628,2.786,2764,2.652,2770,2.652,2789,4.089,2862,3.894,2867,3.894,2896,2.946,2897,2.786,3003,3.726,3009,2.786,3048,2.538,3088,5.938,3110,3.414,3270,2.946,3274,4.845,3302,2.946,3304,2.946,3415,3.146,3423,2.786,3447,2.652,3450,4.324,3589,2.786,3638,2.652,3643,5.686,3732,2.946,3743,3.146,3919,3.146,3959,2.946,4054,3.894,4072,2.946,4188,3.146,4226,2.946,4317,2.786,4329,2.652,4330,2.946,4334,4.864,4347,2.786,4349,2.652,4356,2.946,4439,2.946,4443,4.618,4468,6.285,4475,2.946,4480,3.146,4522,2.652,4558,3.894,4607,4.089,4672,2.786,4711,4.089,4720,4.089,4778,2.786,4911,3.146,4933,2.946,4952,3.414,4964,2.652,4999,3.146,5011,2.946,5022,5.012,5023,2.946,5038,3.146,5088,3.146,5126,2.652,5215,3.146,5263,2.946,5287,3.146,5314,3.414,5318,4.324,5319,3.414,5366,6.012,5449,3.414,5454,3.414,5474,3.414,5511,3.414,5536,3.146,5573,3.146,5578,5.012,5593,5.012,5641,2.946,5654,3.414,5658,3.414,5670,3.414,5671,3.821,5672,3.821,5673,3.821,5674,3.821,5675,3.821,5676,3.821,5677,3.821,5678,3.821,5679,5.61,5680,3.821,5681,3.821,5682,3.821,5683,3.821,5684,3.821,5685,3.821,5686,3.821,5687,3.821,5688,3.821,5689,3.821,5690,3.821,5691,3.821,5692,3.821,5693,3.821,5694,3.414,5695,3.821,5696,3.821,5697,3.414,5698,3.821,5699,3.414,5700,3.821,5701,3.821,5702,3.821,5703,3.821,5704,3.821,5705,3.821,5706,3.821,5707,3.821,5708,5.012,5709,3.821,5710,3.821,5711,3.821,5712,3.821,5713,3.821,5714,3.821,5715,3.821,5716,3.821,5717,3.821,5718,3.821,5719,3.821,5720,3.821,5721,3.821,5722,3.821,5723,3.821,5724,3.821,5725,3.821,5726,3.821,5727,3.821,5728,3.821,5729,3.821,5730,3.821,5731,3.821,5732,3.821,5733,3.821,5734,3.821,5735,3.821,5736,3.821,5737,5.61,5738,3.821,5739,3.146,5740,3.821,5741,3.414,5742,3.821,5743,3.821,5744,3.821,5745,3.821,5746,3.146]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[392,2.067,891,1.481,1980,1.686,4964,2.16,5312,2.562]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.19,18,1.109,24,0.006,25,0.401,26,0.353,32,2.203,39,1.04,51,0.306,61,0.104,64,2.865,75,2.205,80,0.003,81,0.004,82,0.004,88,3.289,89,2.753,90,2.665,91,1.788,96,4.469,99,2.079,114,3.815,115,3.139,116,4.007,117,3.906,125,3.078,126,2.665,128,4.55,146,0.604,170,2.42,185,3.064,210,1.028,213,1.497,226,2.753,239,4.722,268,3.815,271,2.51,273,4.126,275,2.85,335,2.753,337,4.991,338,3.217,339,3.825,340,2.85,374,3.139,377,3.218,387,4.109,390,3.078,392,4.277,396,2.753,398,5.311,404,3.572,419,1.575,454,2.957,456,3.064,466,4.277,579,2.957,674,3.825,783,2.316,842,2.376,855,5.23,861,5.002,875,4.141,876,3.959,877,2.957,878,3.378,886,3.815,890,2.85,891,3.064,892,4.55,950,2.441,952,3.217,983,3.078,1011,2.51,1042,4.915,1043,6.041,1073,4.277,1077,3.815,1137,3.825,1185,4.277,1190,4.141,1191,3.815,1193,4.141,1197,4.141,1199,4.141,1200,4.141,1212,3.302,1296,2.753,1314,3.378,1370,2.665,1382,3.572,1477,4.141,1480,3.078,1487,4.694,1489,4.109,1546,2.441,1616,2.85,1689,5.301,1782,4.141,1941,4.141,2137,3.378,2333,3.572,2349,3.572,2792,3.378,2805,3.572,3002,2.957,3010,3.217,3407,3.572,3649,4.141,3835,5.301,4328,3.378,4359,3.815,4396,3.078,4563,4.141,4686,4.141,4964,3.217,5277,4.141,5312,5.301,5427,3.815,5470,4.141,5603,4.141,5606,3.815,5641,3.572,5668,4.141,5746,3.815,5747,4.635,5748,7.996,5749,4.635,5750,4.635,5751,7.996,5752,4.141,5753,4.635,5754,4.635,5755,7.4,5756,4.635,5757,4.635,5758,4.635,5759,4.635,5760,6.439,5761,4.635,5762,4.635,5763,4.635,5764,4.635,5765,4.141,5766,4.635,5767,6.439,5768,4.635,5769,4.635,5770,4.635,5771,4.635,5772,4.635,5773,4.635,5774,4.635,5775,4.635,5776,4.635,5777,4.635,5778,4.635,5779,4.635]],["title/additional-documentation/nestjs-application/testing.html",[891,1.966,1301,2.744,1980,2.237]],["body/additional-documentation/nestjs-application/testing.html",[0,0.088,1,1.001,2,0.327,12,0.998,13,1.433,21,0.462,23,0.26,24,0.006,25,0.34,26,0.205,32,1.221,33,1.408,34,0.529,51,0.123,52,0.303,55,0.392,64,2.984,69,1.962,74,1.907,75,2.494,80,0.003,81,0.002,82,0.002,88,2.721,107,0.308,115,0.848,117,3.601,125,2.608,126,3.014,128,0.943,136,1.449,143,0.859,170,2.081,172,1.222,173,1.825,182,0.791,184,1.784,185,1.868,202,1.907,213,2.624,214,1.555,215,1.555,221,0.848,224,0.741,226,4.16,228,0.943,229,0.809,230,1.758,231,2.074,235,1.555,245,2.847,255,2.257,271,5.024,273,1.666,275,1.07,276,2.257,280,2.074,282,1.342,301,1.775,303,2.126,336,1.269,337,2.332,339,1.775,374,0.848,377,2.327,378,2.984,387,1.111,394,1.433,396,1.775,409,0.698,412,0.757,444,1.156,447,1.034,448,1.208,455,1.208,456,2.494,466,1.156,471,2.074,475,1.269,527,1.001,529,2.249,565,1.156,576,0.757,579,1.111,591,0.809,592,0.809,595,2.257,611,1.247,649,1.269,667,0.828,699,1.034,700,2.07,702,0.87,735,1.034,741,2.863,783,3.61,806,1.269,829,5.024,831,3.014,833,5.112,842,0.893,845,4.315,846,2.761,847,3.394,848,4.04,853,1.342,854,3.093,858,1.342,861,1.618,876,2.414,888,1.837,889,2.67,890,3.764,892,1.07,929,1.269,933,0.848,947,1.156,949,0.971,950,2.068,962,1.985,981,1.907,983,4.291,989,1.837,995,1.208,1011,3.912,1012,1.269,1016,2.303,1037,1.156,1043,1.156,1054,4.684,1071,1.269,1073,3.8,1074,2.971,1076,3.191,1091,2.303,1112,1.07,1114,1.433,1119,1.208,1131,1.269,1135,1.555,1158,1.111,1159,0.917,1173,1.034,1174,1.718,1184,1.342,1185,1.156,1212,2.388,1249,0.943,1286,3.014,1293,1.433,1296,1.775,1298,2.074,1301,5.644,1360,1.342,1370,1.001,1478,1.342,1479,1.555,1480,1.156,1481,1.111,1482,1.555,1483,3.394,1487,1.269,1489,2.505,1546,0.917,1556,1.433,1558,2.303,1559,2.074,1565,1.555,1567,1.111,1576,1.208,1578,1.208,1586,3.971,1589,2.303,1591,1.269,1592,1.555,1606,1.433,1616,1.07,1637,1.342,1638,2.303,1642,2.303,1644,1.156,1649,1.555,1654,1.433,1660,1.208,1669,1.156,1671,1.111,1702,1.555,1776,2.608,1786,3.482,1787,2.608,1792,3.638,1837,1.034,1844,1.555,1862,0.971,1884,3.232,1891,2.608,1914,1.156,1930,1.433,1931,1.433,1995,1.269,2070,4.763,2151,2.074,2194,2.608,2196,1.433,2227,1.156,2332,1.208,2333,1.342,2336,4.308,2347,2.303,2348,2.725,2358,1.07,2397,1.111,2452,1.433,2472,1.433,2478,1.837,2545,1.342,2594,1.111,2619,3.638,2621,1.269,2627,1.433,2645,4.171,2646,1.208,2647,1.433,2740,1.433,2761,1.208,2770,1.208,2771,1.269,2786,2.074,2789,2.178,2792,4.171,2828,2.074,2862,3.638,2867,3.232,2892,2.303,2896,1.342,2897,1.269,2898,2.074,2901,1.555,2934,2.074,2948,4.171,2964,1.555,2995,2.67,2996,3.232,3002,4.943,3003,3.482,3009,1.269,3010,2.074,3048,1.156,3058,1.433,3059,3.394,3105,2.67,3121,1.433,3138,4.683,3148,1.208,3176,5.469,3201,1.555,3223,1.342,3238,1.555,3244,1.433,3255,1.433,3270,3.026,3276,1.269,3282,1.342,3304,1.342,3342,1.555,3352,1.555,3366,1.433,3373,1.555,3423,2.178,3438,1.555,3441,1.433,3446,1.433,3447,2.074,3448,1.433,3451,3.971,3480,1.555,3495,1.433,3522,2.074,3523,1.433,3565,3.232,3582,1.433,3586,2.46,3589,1.269,3591,1.555,3643,2.178,3651,1.555,3659,3.232,3734,1.433,3772,3.507,3791,1.342,3824,1.433,3835,1.433,3848,2.303,3854,1.433,3878,1.342,3885,5.469,3892,2.303,3989,1.555,3993,1.433,4018,1.555,4054,1.208,4069,1.433,4094,1.433,4188,1.433,4255,1.555,4278,1.433,4317,4.462,4329,3.232,4330,4.04,4337,1.555,4338,1.555,4346,1.555,4349,1.208,4352,1.555,4356,1.342,4363,1.342,4381,2.178,4385,5.203,4390,1.433,4405,1.342,4418,1.433,4427,1.555,4439,2.303,4442,1.342,4446,1.555,4467,1.433,4468,3.026,4471,1.433,4480,3.232,4504,1.342,4513,1.555,4521,1.555,4522,1.208,4551,1.433,4558,3.232,4559,1.555,4573,2.46,4581,1.433,4583,1.433,4602,1.555,4607,1.269,4611,1.555,4614,1.342,4642,1.269,4654,1.555,4667,1.555,4670,1.433,4672,1.269,4678,1.555,4720,2.178,4731,1.433,4737,1.555,4747,6.256,4788,1.433,4908,1.555,4973,1.433,4978,1.433,4979,1.555,4997,4.16,5011,1.342,5042,3.026,5046,1.555,5071,1.555,5088,1.433,5097,1.433,5121,1.555,5126,1.208,5156,1.555,5207,2.67,5215,1.433,5253,1.555,5263,4.979,5270,1.555,5288,1.555,5341,1.555,5352,1.555,5360,2.67,5366,5.398,5371,1.433,5374,1.555,5381,1.433,5389,1.433,5392,4.16,5427,1.433,5533,1.342,5536,3.232,5571,2.67,5573,3.833,5574,1.555,5600,1.555,5606,1.433,5618,1.555,5619,1.555,5641,4.04,5694,1.555,5697,2.67,5699,1.555,5708,1.555,5741,1.555,5746,2.46,5752,1.555,5765,1.555,5780,2.988,5781,1.741,5782,1.741,5783,1.741,5784,1.741,5785,1.741,5786,1.741,5787,1.741,5788,1.741,5789,1.741,5790,1.741,5791,1.741,5792,1.741,5793,1.741,5794,2.988,5795,1.741,5796,1.741,5797,1.741,5798,1.741,5799,1.741,5800,1.741,5801,1.741,5802,1.741,5803,1.741,5804,1.741,5805,1.741,5806,1.741,5807,1.741,5808,1.741,5809,1.741,5810,1.741,5811,1.741,5812,1.741,5813,1.741,5814,1.741,5815,1.741,5816,1.741,5817,1.741,5818,1.741,5819,1.741,5820,1.741,5821,1.741,5822,1.555,5823,3.926,5824,1.741,5825,3.926,5826,2.988,5827,5.242,5828,2.988,5829,3.926,5830,4.657,5831,1.741,5832,1.741,5833,2.988,5834,1.741,5835,1.741,5836,1.741,5837,1.741,5838,1.741,5839,1.741,5840,1.741,5841,1.741,5842,5.721,5843,1.741,5844,1.741,5845,1.741,5846,1.741,5847,1.741,5848,1.741,5849,1.741,5850,1.741,5851,1.741,5852,1.741,5853,1.741,5854,1.741,5855,2.988,5856,1.741,5857,2.988,5858,1.741,5859,1.741,5860,1.741,5861,2.988,5862,1.741,5863,1.741,5864,3.926,5865,2.988,5866,2.988,5867,1.741,5868,1.741,5869,4.657,5870,1.741,5871,1.741,5872,1.741,5873,1.741,5874,1.741,5875,1.741,5876,1.741,5877,2.988,5878,1.741,5879,2.988,5880,1.741,5881,2.988,5882,1.741,5883,1.741,5884,1.741,5885,1.741,5886,1.741,5887,2.988,5888,2.988,5889,1.741,5890,1.741,5891,2.988,5892,1.741,5893,1.741,5894,2.988,5895,1.741,5896,1.741,5897,1.741,5898,1.741,5899,1.741,5900,1.741,5901,2.988,5902,4.657,5903,1.741,5904,1.741,5905,1.741,5906,1.741,5907,1.741,5908,1.741,5909,2.988,5910,1.741,5911,1.741,5912,1.741,5913,1.741,5914,1.741,5915,1.741,5916,1.741,5917,1.741,5918,1.741,5919,1.741,5920,1.741,5921,2.988,5922,1.741,5923,1.741,5924,1.741,5925,1.741,5926,1.741,5927,1.741,5928,1.741,5929,1.741,5930,1.741,5931,1.741,5932,1.741,5933,1.741,5934,1.741,5935,1.741,5936,1.741,5937,1.741,5938,1.741,5939,1.741,5940,1.741,5941,1.741,5942,1.741,5943,1.741,5944,1.741,5945,1.741,5946,1.741,5947,1.741,5948,1.741,5949,1.741,5950,1.741,5951,1.741,5952,1.741,5953,1.741,5954,1.741]],["title/additional-documentation/nestjs-application/decisions.html",[891,1.966,1980,2.237,5739,3.401]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.48,16,1.272,24,0.005,29,1.698,52,1.094,54,3.306,55,1.414,64,3.08,69,3.932,80,0.004,81,0.005,82,0.004,115,3.059,270,4.169,281,3.86,340,3.86,374,3.059,452,5.227,456,2.987,593,3.745,611,2.619,735,3.728,783,3.137,841,4.838,842,3.218,846,3.306,950,3.306,954,5.462,955,4.356,981,4.005,1011,3.399,1116,4.005,1315,5.71,1370,3.609,1488,5.608,1551,3.86,1567,5.485,1586,4.356,1834,6.478,1837,3.728,1884,5.462,2340,5.462,2478,4.839,2619,4.356,2764,4.356,3002,4.005,3078,5.167,3148,4.356,3229,5.167,3250,4.575,3329,5.608,3383,6.626,3405,5.167,3531,5.608,3584,4.356,3638,4.356,3727,5.608,3914,5.608,4328,4.575,4334,4.169,4522,4.356,4948,5.167,5023,4.838,5381,5.167,5533,4.838,5564,5.608,5739,6.478,5822,5.608,5955,6.277,5956,6.277,5957,6.277,5958,6.277,5959,6.277,5960,6.277,5961,6.277,5962,6.277,5963,6.277,5964,7.869,5965,6.277,5966,6.277,5967,6.277,5968,6.277,5969,6.277,5970,6.277,5971,6.277,5972,6.277,5973,6.277,5974,6.277,5975,6.277,5976,6.277,5977,6.277]],["title/additional-documentation/nestjs-application/vscode.html",[891,1.966,1980,2.237,4332,3.184]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.135,24,0.005,65,4.404,74,4.421,75,3.979,80,0.004,81,0.005,82,0.004,271,4.529,355,4.809,374,4.076,392,4.602,456,3.297,829,3.752,960,4.179,1001,5.142,2478,4.26,2589,6.19,2646,4.809,2675,5.05,2896,5.34,2934,5.804,2994,5.34,3002,4.421,3037,5.704,3047,5.05,3213,5.05,3379,5.34,3447,4.809,3630,6.884,4332,6.446,4365,7.471,4396,4.602,4568,5.05,4674,6.19,5014,8.025,5040,6.19,5126,4.809,5162,5.704,5295,6.19,5297,6.19,5978,6.928,5979,6.928,5980,6.928,5981,6.928,5982,6.928,5983,6.928,5984,6.928,5985,6.928,5986,6.928]],["title/additional-documentation/nestjs-application/git.html",[891,1.966,1980,2.237,4333,3.401]],["body/additional-documentation/nestjs-application/git.html",[24,0.005,80,0.004,81,0.005,82,0.004,400,4.537,592,3.55,1212,3.916,1296,4.537,1546,4.022,1554,5.073,3994,5.887,4088,7.292,4333,7.703,4345,6.823,5447,6.823,5987,7.637,5988,7.637,5989,7.637,5990,7.637]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":809,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/TaskDomainService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4244,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4279,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4290,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4207,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":4198,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4206,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4269,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":4302,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4294,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4262,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4254,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4293,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4191,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4247,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4096,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4117,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4141,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":4129,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":4142,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4107,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4119,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":4144,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4099,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4095,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4120,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4114,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4118,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4116,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4140,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":5928,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":5930,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1286,"title":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}},"body":{"classes/MongoSharedConnection.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"classes/TaskDomainService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4270,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4282,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4231,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4218,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4265,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":5877,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4228,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4309,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4280,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4202,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4171,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":5879,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4199,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":4234,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":4172,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4211,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4098,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":4138,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":4154,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4106,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4105,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4130,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":4128,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":4139,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1978,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":4097,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":3056,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["110",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":4272,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["1289",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3183,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["1499",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":3052,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":5226,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":3043,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4229,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3209,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1735",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["187",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3168,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":4630,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":5971,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":5970,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":741,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4232,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4246,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4266,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4289,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4195,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4214,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":4197,"title":{},"body":{"dependencies.html":{}}}],["2/18",{"_index":4115,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":4103,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2960,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":4402,"title":{},"body":{"license.html":{}}}],["2020",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2950,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22",{"_index":3029,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22.10.0",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3203,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":3240,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["26.10.0",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["26.10.1",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["26.10.2",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["26.10.3",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["26.9.2",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["267",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2871,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2710",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["279",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2917,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["29",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":5073,"title":{},"body":{"todo.html":{}}}],["3",{"_index":3270,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4276,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4284,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":5921,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4273,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4264,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4307,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4189,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4285,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":4127,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":4143,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3197,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":5285,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5279,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":4104,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":2844,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["3719",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":3848,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4204,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4298,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4224,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4241,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":4174,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4208,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4166,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4173,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":4225,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":4182,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5219,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4/18",{"_index":4133,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4153,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":4125,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":5084,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":1077,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":2829,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["4215",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":806,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4193,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4194,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4227,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4268,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":4248,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":4134,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4132,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4102,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":5230,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5225,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":4124,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":5929,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":3121,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4213,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4184,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":3165,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":4286,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":4274,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":4126,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":2059,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":5037,"title":{},"body":{"overview.html":{}}}],["6727",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":5066,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":4707,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4726,"title":{},"body":{"license.html":{}}}],["7",{"_index":2475,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["7.0.0",{"_index":4215,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":4180,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":4177,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4223,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":4176,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":4175,"title":{},"body":{"dependencies.html":{}}}],["7.6.17",{"_index":4179,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":4305,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":4186,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4236,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":5177,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":5255,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":4131,"title":{},"body":{"coverage.html":{}}}],["8300",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2777,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["9003",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["9083",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":5248,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":1983,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4372,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":683,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":1027,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":1051,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":1065,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5575,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":1052,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":1067,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5261,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":622,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_this",{"_index":2335,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["_timeout",{"_index":2648,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.createdat",{"_index":2220,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["a.m",{"_index":4393,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":4766,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4391,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4652,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":5005,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":335,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":5498,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":480,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":4843,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":4842,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5054,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":3997,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":831,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":5561,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":554,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":3583,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":3596,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":2090,"title":{},"body":{"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4691,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5009,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4473,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4651,"title":{},"body":{"license.html":{}}}],["according",{"_index":3079,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1158,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":60,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["accumulator",{"_index":2115,"title":{},"body":{"classes/Scope.html":{}}}],["accumulator.push(queryelement",{"_index":2120,"title":{},"body":{"classes/Scope.html":{}}}],["achieve",{"_index":5012,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4593,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4890,"title":{},"body":{"license.html":{}}}],["act",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":987,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":3037,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1369,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{}}}],["activities",{"_index":4515,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4929,"title":{},"body":{"license.html":{}}}],["actors",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":4911,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":4746,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4495,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1546,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1380,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["addid",{"_index":1415,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["addid(entity",{"_index":1438,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["adding",{"_index":476,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":891,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/TaskDomainService.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4359,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5241,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addparenttotasks",{"_index":2306,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["addparenttotasks(tasks",{"_index":2315,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["addquery",{"_index":624,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":629,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["address",{"_index":4963,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":4491,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3605,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2839,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addstatustotask",{"_index":2200,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["addstatustotask(task",{"_index":2205,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["addtokentowhitelist",{"_index":1390,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":1396,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":1373,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":1375,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2905,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":4628,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4772,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4998,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4773,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4400,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4871,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4590,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":5886,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":5888,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterduedateornone",{"_index":2489,"title":{},"body":{"classes/TaskScope.html":{}}}],["afterduedateornone(duedate",{"_index":2494,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":5936,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":3842,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":4642,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5477,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4678,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":5380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":5361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5564,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":5030,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4946,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4985,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":4899,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":1329,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":5103,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["allcourses",{"_index":2546,"title":{},"body":{"injectables/TaskUC.html":{}}}],["allcourses.filter((c",{"_index":2549,"title":{},"body":{"injectables/TaskUC.html":{}}}],["alleging",{"_index":4878,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2896,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":2770,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2675,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4654,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":355,"title":{},"body":{"classes/BusinessError.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4456,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4703,"title":{},"body":{"license.html":{}}}],["always",{"_index":5381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":3158,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqp",{"_index":4187,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":1528,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4190,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":5277,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4301,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":4844,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4449,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":5583,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5567,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":5911,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ansible",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["anti",{"_index":4616,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":4664,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4503,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":115,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4339,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4340,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4344,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":114,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":691,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":760,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1866,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1864,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":692,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1859,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1856,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1667,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":1676,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":2295,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":2701,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":83,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":1139,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":139,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":121,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{}}}],["apivalidationerrorresponse(error",{"_index":1056,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":1074,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":5938,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":5933,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":404,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":403,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":401,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":402,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":5101,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":147,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["applicable",{"_index":4508,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5250,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":75,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4328,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":4968,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1294,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":5942,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4355,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4647,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5004,"title":{},"body":{"license.html":{}}}],["apps",{"_index":2891,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5116,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5106,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":5135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5110,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../database.config.ts",{"_index":5142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":5138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5107,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5109,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../find",{"_index":4316,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4319,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":5143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5113,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":5133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5115,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4314,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5112,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5114,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role.entity.ts",{"_index":5111,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../scope.ts",{"_index":4320,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":5134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":5132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.uc.ts",{"_index":4315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../taskdomainservice.ts",{"_index":4313,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../testhelper.ts",{"_index":4312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../types.ts",{"_index":5105,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5118,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5236,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5289,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5294,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":1004,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console",{"_index":365,"title":{},"body":{"injectables/ConsoleWriter.html":{},"coverage.html":{}}}],["apps/server/src/console/console.ts",{"_index":4100,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/server",{"_index":2152,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":2132,"title":{},"body":{"classes/ServerConsole.html":{},"coverage.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":2138,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":2141,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":2135,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":389,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":122,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":882,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":884,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":2753,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":874,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":1013,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":1168,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":940,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":4110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":1292,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":1183,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":1194,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":1192,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":1198,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":1189,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":1196,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":1496,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":1472,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":1109,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":2757,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts",{"_index":410,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:27",{"_index":431,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:30",{"_index":429,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:34",{"_index":433,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:38",{"_index":435,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:42",{"_index":438,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:46",{"_index":437,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:50",{"_index":424,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:65",{"_index":441,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:70",{"_index":439,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:82",{"_index":461,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:88",{"_index":459,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:98",{"_index":443,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts",{"_index":640,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"coverage.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:13",{"_index":645,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:16",{"_index":643,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:26",{"_index":648,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:31",{"_index":646,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts",{"_index":721,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:16",{"_index":821,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:22",{"_index":822,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:38",{"_index":1140,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:45",{"_index":1141,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:47",{"_index":1142,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:49",{"_index":1143,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:51",{"_index":1145,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:55",{"_index":1144,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:61",{"_index":724,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:69",{"_index":726,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts",{"_index":1404,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:24",{"_index":1430,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:34",{"_index":1434,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:38",{"_index":1436,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:42",{"_index":1435,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:46",{"_index":1432,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/user.entity.ts",{"_index":1275,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/entities/user.entity.ts:16",{"_index":2683,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:19",{"_index":2684,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:22",{"_index":2685,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:26",{"_index":2681,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/main.ts",{"_index":4121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":1307,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":4122,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":1303,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":1334,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":1371,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":1337,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":1340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":1342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":204,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":233,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":236,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":895,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":1539,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/database/types.ts",{"_index":5120,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":958,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":946,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/lernroom/controller/dashboard.controller.ts",{"_index":703,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/controller/dashboard.controller.ts:15",{"_index":707,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts",{"_index":757,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:13",{"_index":766,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:18",{"_index":765,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:23",{"_index":762,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:28",{"_index":768,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:33",{"_index":769,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:41",{"_index":811,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:46",{"_index":810,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:8",{"_index":763,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/lernroom.module.ts",{"_index":1400,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts",{"_index":772,"title":{},"body":{"classes/DashboardMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts:5",{"_index":775,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts",{"_index":812,"title":{},"body":{"injectables/DashboardUc.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:6",{"_index":814,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:9",{"_index":815,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/mail/mail.interface.ts",{"_index":149,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":1499,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/mail/mail.module.ts:28",{"_index":1503,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":1525,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":1530,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:18",{"_index":1532,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":665,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1698,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1842,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":1849,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:21",{"_index":1868,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:26",{"_index":1843,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":1848,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:38",{"_index":1858,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":1860,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:50",{"_index":1867,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":1865,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":1863,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":1854,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:71",{"_index":1847,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:76",{"_index":1871,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:81",{"_index":1845,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:86",{"_index":1869,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":1851,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":2084,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":2263,"title":{},"body":{"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":2672,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":2720,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1636,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":1643,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":1653,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":1657,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":1664,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":1648,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":2579,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":523,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":528,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":1632,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":1623,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":1625,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":1626,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":1628,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":1629,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:50",{"_index":1630,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:54",{"_index":1631,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:57",{"_index":1627,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:60",{"_index":1624,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:63",{"_index":1633,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:65",{"_index":1622,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:75",{"_index":1634,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":1147,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":2076,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":2577,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":2713,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1716,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:30",{"_index":1723,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:44",{"_index":1721,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:57",{"_index":1727,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":1725,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":2077,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":2258,"title":{},"body":{"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":2715,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1777,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1875,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1793,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:13",{"_index":1816,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:21",{"_index":1799,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:34",{"_index":1806,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:41",{"_index":1801,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1897,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:110",{"_index":1927,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1904,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:134",{"_index":1908,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:145",{"_index":1919,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:165",{"_index":1925,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:183",{"_index":1918,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:193",{"_index":1921,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1906,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:55",{"_index":1910,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:86",{"_index":1916,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":2476,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":2483,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":2480,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":2482,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":2484,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":2481,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":2487,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":2486,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":2485,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":2280,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":2289,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:33",{"_index":2286,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts",{"_index":2199,"title":{},"body":{"classes/StatusDomainService.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:10",{"_index":2209,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:18",{"_index":2211,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:29",{"_index":2207,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:4",{"_index":2204,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts",{"_index":2305,"title":{},"body":{"classes/TaskDomainService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts:28",{"_index":2314,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts:34",{"_index":2316,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts:43",{"_index":2330,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts:51",{"_index":2322,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts:56",{"_index":2326,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts:63",{"_index":2318,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts:68",{"_index":2324,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["apps/server/src/modules/task/entity/course",{"_index":508,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/file",{"_index":997,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson",{"_index":1464,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1244,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:23",{"_index":2240,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:26",{"_index":2238,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:29",{"_index":2235,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:32",{"_index":2241,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:36",{"_index":2233,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:39",{"_index":2239,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:43",{"_index":2236,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:46",{"_index":2237,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:49",{"_index":2232,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1202,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:24",{"_index":1273,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:25",{"_index":1271,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:26",{"_index":1272,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:32",{"_index":2269,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:35",{"_index":2267,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:38",{"_index":2272,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:41",{"_index":2271,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:44",{"_index":2268,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:47",{"_index":2266,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:60",{"_index":2277,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:64",{"_index":2275,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:68",{"_index":2274,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:72",{"_index":2273,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:81",{"_index":2278,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:88",{"_index":2276,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/user",{"_index":1291,"title":{},"body":{"interfaces/IUserTaskInfoProperties.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":2372,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:6",{"_index":2374,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":2243,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:13",{"_index":2246,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:16",{"_index":2250,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:24",{"_index":2252,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:29",{"_index":2248,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task",{"_index":2488,"title":{},"body":{"classes/TaskScope.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":2430,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:100",{"_index":2448,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:108",{"_index":2451,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:13",{"_index":2436,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:23",{"_index":2438,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:43",{"_index":2442,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:71",{"_index":2445,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:91",{"_index":2450,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":2394,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":2520,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:110",{"_index":2528,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:125",{"_index":2540,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:20",{"_index":2527,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:29",{"_index":2537,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:40",{"_index":2533,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:59",{"_index":2530,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:82",{"_index":2535,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:96",{"_index":2531,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts",{"_index":2399,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:15",{"_index":2406,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:20",{"_index":2404,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:28",{"_index":2405,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:44",{"_index":2517,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:50",{"_index":2516,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:57",{"_index":2512,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:6",{"_index":2403,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:66",{"_index":2514,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:73",{"_index":2518,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:79",{"_index":2515,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:8",{"_index":2401,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":2015,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":2019,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":2018,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":2016,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":2023,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":2021,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":2020,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":2022,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":2017,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":2695,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":2698,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:17",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:24",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:27",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:9",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts",{"_index":1231,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:20",{"_index":2044,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:24",{"_index":2045,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:34",{"_index":2041,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1287,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:18",{"_index":2689,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:21",{"_index":2690,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:24",{"_index":2691,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:30",{"_index":2693,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:36",{"_index":2688,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":2025,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":2027,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":2047,"title":{},"body":{"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:12",{"_index":2056,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:17",{"_index":2054,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:22",{"_index":2058,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:8",{"_index":2052,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":2729,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:10",{"_index":2731,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:7",{"_index":2730,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":2064,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":2069,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":2067,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":2734,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":2739,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":2737,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":2705,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":2708,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":2710,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":2727,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":4145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts",{"_index":604,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:23",{"_index":606,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:26",{"_index":608,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:9",{"_index":628,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts",{"_index":652,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:16",{"_index":654,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:19",{"_index":656,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:9",{"_index":663,"title":{},"body":{"classes/CoursegroupScope.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts",{"_index":800,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:10",{"_index":802,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:5",{"_index":1167,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/server.controller.ts",{"_index":2158,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":2159,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":2163,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/$1",{"_index":5186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":84,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":334,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":346,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":349,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":348,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":347,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":344,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":350,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":351,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":2749,"title":{},"body":{"classes/ValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":2751,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":4147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":850,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":824,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":2643,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":2653,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":2651,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":2650,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":2655,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":2657,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1977,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1984,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1987,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1994,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1998,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":2001,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":2000,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1999,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1997,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":2006,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":4148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4150,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":261,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":263,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":285,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":287,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":286,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":288,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":262,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":1171,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":1157,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/test/helper.ts",{"_index":2592,"title":{},"body":{"classes/TestHelper.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:11",{"_index":2593,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:27",{"_index":2608,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:29",{"_index":2607,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:31",{"_index":2606,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:36",{"_index":2605,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:42",{"_index":2604,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:65",{"_index":2609,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:7",{"_index":2602,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:70",{"_index":2610,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:74",{"_index":2612,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:78",{"_index":2611,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:82",{"_index":2603,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:9",{"_index":2601,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:90",{"_index":2613,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5123,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":290,"title":{},"body":{"injectables/BaseRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":313,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":309,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":311,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":315,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":322,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":318,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":320,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":304,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":302,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":307,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":4155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":2089,"title":{},"body":{"classes/Scope.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:57",{"_index":2091,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:59",{"_index":2095,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:67",{"_index":2092,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:71",{"_index":2093,"title":{},"body":{"classes/Scope.html":{}}}],["appthis",{"_index":4341,"title":{},"body":{"index.html":{}}}],["arc",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4334,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5025,"title":{},"body":{"license.html":{}}}],["archives",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4192,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":2140,"title":{},"body":{"classes/ServerConsole.html":{},"dependencies.html":{}}}],["argument",{"_index":5862,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":1022,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":4989,"title":{},"body":{"license.html":{}}}],["around",{"_index":5038,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":4908,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":4919,"title":{},"body":{"license.html":{}}}],["array",{"_index":1237,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/MongoSharedConnection.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(constraint",{"_index":142,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(input",{"_index":2108,"title":{},"body":{"classes/Scope.html":{}}}],["array.isarray(user.permissions",{"_index":922,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrayofobjects",{"_index":638,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["arrayofobjects.length",{"_index":2129,"title":{},"body":{"classes/Scope.html":{}}}],["arrayofquerys",{"_index":2123,"title":{},"body":{"classes/Scope.html":{}}}],["arrays",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":4625,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1180,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["asking",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":5471,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4446,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":5910,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":4861,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":4574,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4981,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5008,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4811,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":3651,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5544,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5446,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5014,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":157,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":160,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":4821,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":4795,"title":{},"body":{"license.html":{}}}],["aud",{"_index":1319,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":1327,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":5539,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":5052,"title":{},"body":{"todo.html":{}}}],["auth.guard.ts",{"_index":1304,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":209,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":896,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":904,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":912,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":914,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":908,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":906,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":910,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":1311,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":1332,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":1331,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":710,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":715,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1163,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5549,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2828,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":711,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authguard",{"_index":1305,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1306,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":171,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4794,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":455,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":207,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1781,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1928,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":196,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":202,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":4788,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":4885,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":4923,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4800,"title":{},"body":{"license.html":{}}}],["auto",{"_index":5274,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":3103,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":3847,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["avaible",{"_index":2548,"title":{},"body":{"injectables/TaskUC.html":{},"classes/TestHelper.html":{}}}],["availability",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":989,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":2995,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":5321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":245,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":5833,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4424,"title":{},"body":{"license.html":{}}}],["aws",{"_index":4071,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3528,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1235,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/StatusDomainService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":5363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1791,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad",{"_index":2331,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["bad_request",{"_index":5717,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":2011,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":2014,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["bar",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":336,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":4304,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":152,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":951,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":260,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseInfo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/SchoolInfo.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TestHelper.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":526,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentity:7",{"_index":525,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentitywithtimestamps",{"_index":8,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:22",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:25",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:28",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baserepo",{"_index":289,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"coverage.html":{}}}],["baserepo:14",{"_index":1811,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:19",{"_index":1809,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:27",{"_index":1810,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:36",{"_index":1812,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:40",{"_index":1815,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:44",{"_index":1813,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:48",{"_index":1814,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:53",{"_index":1807,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:9",{"_index":1808,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["basic",{"_index":4583,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5508,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5507,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5514,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":3308,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":168,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4200,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":4458,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":4469,"title":{},"body":{"license.html":{}}}],["before",{"_index":595,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":5876,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":5864,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5251,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4373,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4603,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":5918,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":394,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":2647,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":3582,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":4917,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":5423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4611,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4452,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5496,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5126,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5011,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":1574,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"classes/TaskDomainService.html":{},"classes/TestHelper.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":3059,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4680,"title":{},"body":{"license.html":{}}}],["bind",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":5517,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blue",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["bob",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1665,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4296,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":457,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/MongoSharedConnection.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4151,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":4324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":4101,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":5154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":5863,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bosscloud",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":3641,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":5856,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":2837,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":2980,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":5687,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5494,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":5034,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5032,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["btw",{"_index":283,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5527,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":5405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1039,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["buildandaddorquery",{"_index":625,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["buildandaddorquery(arrayofobjects",{"_index":633,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["building",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":5253,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":3083,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":5433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5044,"title":{},"body":{"todo.html":{}}}],["business",{"_index":337,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":112,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":86,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":100,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":105,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":104,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":103,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":102,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":106,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":108,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["bycourses",{"_index":662,"title":{},"body":{"classes/CoursegroupScope.html":{}}}],["bycourses(courses",{"_index":658,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["byids",{"_index":2490,"title":{},"body":{"classes/TaskScope.html":{}}}],["byids(taskids",{"_index":2496,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonsornone",{"_index":2491,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonsornone(lessonids",{"_index":2497,"title":{},"body":{"classes/TaskScope.html":{}}}],["byparents",{"_index":2492,"title":{},"body":{"classes/TaskScope.html":{}}}],["byparents(parentids",{"_index":2500,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypublic",{"_index":2493,"title":{},"body":{"classes/TaskScope.html":{}}}],["bytargets",{"_index":1877,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1879,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1878,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1881,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":2244,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":2247,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1236,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{}}}],["c.haswritepermission(userid",{"_index":2551,"title":{},"body":{"injectables/TaskUC.html":{}}}],["cache",{"_index":2048,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":3727,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":5555,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":854,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":1592,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":2862,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5481,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":859,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":1072,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":3423,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":5924,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["capabilities",{"_index":5257,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capitalization",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":5465,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":3447,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5521,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":5772,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4658,"title":{},"body":{"license.html":{}}}],["case",{"_index":890,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/Scope.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":4468,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1016,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":1020,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5529,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":2662,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":2665,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5531,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":3242,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":1484,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":167,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":4825,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1148,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":4785,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":4835,"title":{},"body":{"license.html":{}}}],["chain",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":2996,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4203,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5504,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":2771,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1476,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":2762,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changeprivate",{"_index":2264,"title":{},"body":{"classes/Task.html":{}}}],["changeprivate(tovalue",{"_index":1224,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["changes",{"_index":2764,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":2782,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":3054,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":5559,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":4763,"title":{},"body":{"license.html":{}}}],["charge",{"_index":4436,"title":{},"body":{"license.html":{}}}],["chat",{"_index":3206,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":5414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":276,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":5473,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":1114,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4383,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4388,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":3791,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":4348,"title":{},"body":{"index.html":{}}}],["children",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":3854,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":4971,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5478,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4275,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":4609,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4617,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5007,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4875,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4887,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":942,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":1297,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":3643,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":475,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":4714,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5290,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":340,"title":{},"body":{"classes/BusinessError.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":1557,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":4389,"title":{},"body":{"index.html":{}}}],["close",{"_index":1589,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["close(force",{"_index":1599,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["closed",{"_index":5891,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":5003,"title":{},"body":{"license.html":{}}}],["closing",{"_index":3438,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4326,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3001,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":4067,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2169,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4252,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4239,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5064,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":197,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":198,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":200,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":199,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":384,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":943,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":944,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":945,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":1398,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":1399,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1493,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1495,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1494,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1772,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1774,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1773,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1775,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":2148,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":2149,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_providers",{"_index":2150,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":2160,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":2161,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":2391,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":2392,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2723,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2725,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2724,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":5523,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":3759,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":88,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":3772,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":1124,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":4948,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/User-1.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User-1.html":{}}}],["collections",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":411,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"miscellaneous/variables.html":{}}}],["columnnames",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":2343,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["combine",{"_index":4958,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":4675,"title":{},"body":{"license.html":{}}}],["come",{"_index":4463,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4665,"title":{},"body":{"license.html":{}}}],["command",{"_index":2143,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":2136,"title":{},"body":{"classes/ServerConsole.html":{}}}],["commander",{"_index":4209,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4536,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":1245,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["commentschema",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":4749,"title":{},"body":{"license.html":{}}}],["commit",{"_index":3555,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":4900,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4386,"title":{},"body":{"index.html":{}}}],["common",{"_index":4226,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":5373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4579,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4420,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":1036,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5513,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":5966,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4671,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4679,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4932,"title":{},"body":{"license.html":{}}}],["compile",{"_index":848,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4562,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":4382,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completed",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":5452,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":1487,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":4857,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4600,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5286,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":3223,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4363,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":4210,"title":{},"body":{"dependencies.html":{}}}],["compute",{"_index":2344,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["computedtask",{"_index":2364,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["computedtasks",{"_index":2360,"title":{},"body":{"classes/TaskDomainService.html":{},"injectables/TaskUC.html":{}}}],["computer",{"_index":4510,"title":{},"body":{"license.html":{}}}],["computestatusforstudents",{"_index":2307,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["computestatusforstudents(submissionsofstudent",{"_index":2317,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["computestatusforteachers",{"_index":2308,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["computestatusforteachers(submissionsofteacher",{"_index":2321,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["concept",{"_index":2974,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5578,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":4964,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":4212,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":4926,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4480,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1554,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2166,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":2186,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":2187,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":2185,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":5213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":5296,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5220,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":391,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":5577,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":1598,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4364,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1590,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connection.ts",{"_index":1596,"title":{},"body":{"classes/MongoSharedConnection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection.ts:13",{"_index":1602,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connection.ts:22",{"_index":1600,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connectionoptions",{"_index":5104,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":1607,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connections.length",{"_index":1615,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connections.push(this",{"_index":1610,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connections.splice(connections.indexof(this",{"_index":1614,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connector",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":5500,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":3113,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":4846,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4988,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":4813,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":3409,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":375,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console.module.ts",{"_index":2153,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolemodule",{"_index":2154,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":364,"title":{"injectables/ConsoleWriter.html":{}},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{},"overview.html":{}}}],["conspicuously",{"_index":4646,"title":{},"body":{"license.html":{}}}],["const",{"_index":136,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4592,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":140,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"injectables/CourseRepo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('dashboard_repo",{"_index":819,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(@inject(request",{"_index":976,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":1527,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":129,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":2134,"title":{},"body":{"classes/ServerConsole.html":{}}}],["constructor(dashboardrepo",{"_index":813,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":1996,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":300,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":902,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":2755,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(message",{"_index":2750,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":1903,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":19,"title":{},"body":{"classes/Account.html":{}}}],["constructor(private",{"_index":242,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":422,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["constructor(protected",{"_index":323,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["constructor(readonly",{"_index":113,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":992,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":2066,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(submissions",{"_index":2203,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["constructor(taskrepo",{"_index":2526,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(tasks",{"_index":2312,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["constructor(title",{"_index":738,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["constructor(type",{"_index":883,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":342,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":1338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(useridwithwritepermissions",{"_index":2400,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["constructor(userrepo",{"_index":2736,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":2707,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":95,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["constructor(x",{"_index":747,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["construed",{"_index":4936,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4732,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5450,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":3125,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":4933,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":5326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":4378,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":1836,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":531,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":151,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":156,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":4897,"title":{},"body":{"license.html":{}}}],["context",{"_index":861,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":5926,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":3404,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":4757,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":4810,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4942,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4427,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":4884,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4886,"title":{},"body":{"license.html":{}}}],["control",{"_index":3966,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":4889,"title":{},"body":{"license.html":{}}}],["controller",{"_index":700,"title":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('dashboard",{"_index":716,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('news",{"_index":1677,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":2296,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":2586,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":2702,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dashboard.controller",{"_index":1401,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/dto",{"_index":777,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":2741,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":2260,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":1780,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":2396,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":1783,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":702,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":4529,"title":{},"body":{"license.html":{}}}],["convention",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":4516,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4921,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4764,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4524,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4809,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4419,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4413,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3455,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":4481,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4415,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4403,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4488,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4606,"title":{},"body":{"license.html":{}}}],["core",{"_index":390,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":5990,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":2172,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1782,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":382,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2792,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":4983,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3885,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":4565,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2806,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":4701,"title":{},"body":{"license.html":{}}}],["count",{"_index":619,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":610,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1824,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":2459,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":4876,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5129,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":4514,"title":{},"body":{"license.html":{}}}],["country",{"_index":4913,"title":{},"body":{"license.html":{}}}],["counts",{"_index":5125,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5495,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":409,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course._id",{"_index":1462,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["course.entity",{"_index":1450,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["course.id",{"_index":2563,"title":{},"body":{"injectables/TaskUC.html":{}}}],["courseentities",{"_index":2181,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":639,"title":{"classes/Coursegroup.html":{}},"body":{"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":1451,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["coursegroupid",{"_index":2234,"title":{},"body":{"classes/Submission.html":{}}}],["coursegroupinfo",{"_index":507,"title":{"classes/CourseGroupInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroupinfoproperties",{"_index":512,"title":{"interfaces/CoursegroupInfoProperties.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"coverage.html":{}}}],["coursegrouprepo",{"_index":651,"title":{"injectables/CoursegroupRepo.html":{}},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"coverage.html":{}}}],["coursegroups",{"_index":518,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/TaskDomainService.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["coursegroupscope",{"_index":657,"title":{"classes/CoursegroupScope.html":{}},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"coverage.html":{}}}],["coursegroupsofuser",{"_index":2256,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":510,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{}}}],["courseinfo",{"_index":522,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["coursename",{"_index":2479,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":527,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":596,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courserepo",{"_index":603,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["courses",{"_index":482,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursescope",{"_index":613,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["coursetyps",{"_index":1429,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["court",{"_index":4941,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5002,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4903,"title":{},"body":{"license.html":{}}}],["cover",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":3388,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4500,"title":{},"body":{"license.html":{}}}],["covers",{"_index":5916,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1076,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TaskDomainService.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1678,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1641,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1905,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createandadduser",{"_index":1416,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createandadduser(user",{"_index":1440,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createcourse",{"_index":1407,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcourse(type",{"_index":1428,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcoursegroup",{"_index":1408,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcoursegroup(course",{"_index":1431,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcurrenttestuser",{"_index":4146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1481,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["createentityid",{"_index":1417,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createerrorresponse",{"_index":1017,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":1024,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4108,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":1055,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4109,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":1063,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":1044,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":1079,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":1062,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":1083,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":1058,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createid",{"_index":1418,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createid(entityid",{"_index":1443,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createinstance",{"_index":539,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":569,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createlessonwithtask",{"_index":2418,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createmikroormmodule",{"_index":1568,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":1588,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":5922,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":664,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createorqueryfromlist",{"_index":4157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createorqueryfromlist(arrayofobjects",{"_index":2113,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["createparamdecorator((data",{"_index":5151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":1516,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":1522,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":1391,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":1395,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":1041,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createschool",{"_index":1409,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createspinner",{"_index":372,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["createstudentcourse",{"_index":1410,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createsubmission",{"_index":2507,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createsubmission(task",{"_index":2422,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createsubmissionsforeachstudent",{"_index":2508,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createsubmissionsforeachstudent(task",{"_index":2427,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createsubstitutioncourse",{"_index":1411,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createtask",{"_index":2509,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createtask(parentid",{"_index":2415,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createtaskparent",{"_index":2510,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createtaskparent(useridwithwritepermissions",{"_index":2412,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createteachercourse",{"_index":1412,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createteammembersubmission",{"_index":2511,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createteammembersubmission(task",{"_index":2425,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createtestmodule",{"_index":843,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createuser",{"_index":1413,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["creating",{"_index":668,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1120,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":532,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":546,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":5502,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4541,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5462,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":392,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5538,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":4216,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2939,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1101,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1103,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":269,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":4838,"title":{},"body":{"license.html":{}}}],["current",{"_index":1850,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":1576,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1645,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1680,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":2576,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":718,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentvalue",{"_index":2116,"title":{},"body":{"classes/Scope.html":{}}}],["currentvalue[selectedkey",{"_index":2118,"title":{},"body":{"classes/Scope.html":{}}}],["custom",{"_index":892,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4693,"title":{},"body":{"license.html":{}}}],["customary",{"_index":4955,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4698,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":395,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":1491,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5312,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":5351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":469,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":4986,"title":{},"body":{"license.html":{}}}],["dash",{"_index":3587,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dashboard",{"_index":705,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{}}}],["dashboard.getgrid().map((gridelement",{"_index":781,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.id",{"_index":779,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard_repo",{"_index":1402,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":701,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardentity",{"_index":720,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["dashboardgridelementresponse",{"_index":756,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboardmapper",{"_index":713,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"coverage.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":719,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardrepo",{"_index":799,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardresponse",{"_index":712,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboards",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["dashboarduc",{"_index":708,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":783,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":792,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.id",{"_index":786,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":790,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":788,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5424,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1011,"title":{},"body":{"interfaces/GlobalConstants.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":2189,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":1541,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:11",{"_index":1543,"title":{},"body":{"modules/MongoDatabaseModule.html":{}}}],["database.module.ts:48",{"_index":1560,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:58",{"_index":1562,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":1540,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":5967,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5223,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":870,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":5210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":5520,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":2970,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":498,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5499,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":1005,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":1006,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":1007,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":5122,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dbs",{"_index":5487,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1184,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":1188,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":1199,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4365,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":2196,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4629,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1364,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":3081,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":5739,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":356,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":4801,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":1130,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4323,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":29,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/DelayController.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5451,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decryption",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":2893,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4619,"title":{},"body":{"license.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default...what",{"_index":472,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":426,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":428,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":430,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5222,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultgridreference",{"_index":732,"title":{"classes/DefaultGridReference.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["defaultgridreference('exampletitle",{"_index":808,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["defaultmessage",{"_index":118,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":677,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":2649,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":4980,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4453,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4938,"title":{},"body":{"license.html":{}}}],["define",{"_index":273,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":5233,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":282,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":127,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2994,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":836,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":840,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":823,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1637,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1647,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1907,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":1646,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2452,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1696,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":5519,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":3295,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5476,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":4769,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":4901,"title":{},"body":{"license.html":{}}}],["depend",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":173,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":5215,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":972,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":4909,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1181,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5536,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":5944,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":124,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":5327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":5318,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":4709,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4418,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5524,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5558,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":4962,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":135,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":2754,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":2756,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4361,"title":{},"body":{"index.html":{}}}],["details",{"_index":89,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1038,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":5182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":3471,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":4741,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":5978,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5245,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4327,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":2981,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":3522,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":4395,"title":{},"body":{"index.html":{}}}],["di",{"_index":5601,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["diagonalsize",{"_index":805,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dictionary",{"_index":2164,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":3012,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4249,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5092,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":4961,"title":{},"body":{"license.html":{}}}],["different",{"_index":1837,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":4792,"title":{},"body":{"license.html":{}}}],["digits",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1520,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4604,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4715,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4504,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":5048,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":590,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":4639,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4972,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4790,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":267,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":575,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":600,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":4924,"title":{},"body":{"license.html":{}}}],["display",{"_index":2875,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["displayat",{"_index":533,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":729,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":676,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4526,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":3792,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":5237,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":4965,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4411,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5018,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4927,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4482,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":2927,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5080,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":669,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":3356,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":2766,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1803,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doesn't",{"_index":1579,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":5953,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":2358,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domain.addstatustotask(task",{"_index":2362,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["domain.computestatusforstudents(submissionsofstudent",{"_index":2561,"title":{},"body":{"injectables/TaskUC.html":{}}}],["domain.computestatusforteachers(submissionsofteacher",{"_index":2568,"title":{},"body":{"injectables/TaskUC.html":{}}}],["domains",{"_index":4217,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":280,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4385,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":5843,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":5838,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":5846,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":4743,"title":{},"body":{"license.html":{}}}],["down",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":4854,"title":{},"body":{"license.html":{}}}],["driven",{"_index":5670,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":1553,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["driver.ts",{"_index":1618,"title":{},"body":{"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["driver.ts:7",{"_index":1621,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["dropdown",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":667,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5581,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1735,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":2387,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1756,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1751,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1737,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":2389,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":2377,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":2029,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.gridelements",{"_index":780,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":778,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":2031,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":2082,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1760,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":2037,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":1749,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":2035,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":1739,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1741,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":2381,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":1747,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1743,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1745,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1733,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1764,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1758,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1754,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":1031,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":1030,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":2700,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":1686,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":1113,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":5201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1206,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{}}}],["dummy",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":3373,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":279,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":4692,"title":{},"body":{"license.html":{}}}],["duration",{"_index":852,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":849,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2811,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":4740,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4575,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1505,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1090,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":270,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":1092,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":1093,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1786,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":3451,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4499,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":961,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":552,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":5000,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4636,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4620,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5016,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":4869,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":5020,"title":{},"body":{"license.html":{}}}],["element",{"_index":761,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/TestHelper.html":{}}}],["elementdto",{"_index":782,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":791,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":785,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":789,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":787,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":795,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":797,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementreference",{"_index":807,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["elements",{"_index":770,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":303,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseProperties.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":5963,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":5937,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1276,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":5974,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":4688,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5027,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1891,"title":{},"body":{"classes/NewsScope.html":{},"classes/TaskDomainService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1883,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":630,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":1119,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":1115,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":1126,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":4149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4518,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":5375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":4461,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2948,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":5983,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":5989,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2964,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":3495,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":2588,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4641,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":5432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4342,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":1389,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":4934,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4663,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4950,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":69,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":333,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":327,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities/learnroom/dashboard.entity",{"_index":776,"title":{},"body":{"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["entitiyids",{"_index":257,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":52,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity._id",{"_index":2637,"title":{},"body":{"classes/TestHelper.html":{}}}],["entity.id",{"_index":2635,"title":{},"body":{"classes/TestHelper.html":{}}}],["entity.ts",{"_index":5580,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/base.entity",{"_index":2615,"title":{},"body":{"classes/TestHelper.html":{}}}],["entityid",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":301,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2191,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":250,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":254,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":277,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":2791,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1358,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":563,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/TaskDomainService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":4311,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":687,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":2822,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":5057,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":3523,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":4595,"title":{},"body":{"license.html":{}}}],["err",{"_index":2666,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":5844,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":117,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":1190,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":880,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":1014,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":1019,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":1023,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":1025,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":1057,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":941,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":134,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":123,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":132,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":130,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":1096,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":1086,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":405,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":5484,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":385,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":1085,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":109,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":1068,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":363,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":1053,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":128,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":4219,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":589,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":594,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":1087,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5278,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":4559,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":464,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{}}}],["etc",{"_index":4025,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":3888,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2835,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":3088,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":4409,"title":{},"body":{"license.html":{}}}],["everything",{"_index":3441,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":1367,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4498,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":4573,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":3025,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":876,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":1050,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":1045,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1047,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":1081,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":1138,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":1015,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":1049,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1043,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":1512,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":5324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":1518,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":4730,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3284,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":3616,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":4894,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4598,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4943,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4553,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1787,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5535,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1792,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5240,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":2598,"title":{},"body":{"classes/TestHelper.html":{},"license.html":{}}}],["execution",{"_index":2645,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":858,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":4870,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4637,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1211,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1313,"title":{},"body":{"interfaces/JwtConstants.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1360,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exp",{"_index":1318,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":5845,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":5948,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":5848,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":5912,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":5947,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":4747,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":5842,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":3639,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":5834,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":1336,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":1330,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":973,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":4589,"title":{},"body":{"license.html":{}}}],["export",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":3646,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":205,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":2821,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5448,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":970,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":4974,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":1089,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":4820,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1116,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":1382,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4674,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4528,"title":{},"body":{"license.html":{}}}],["external",{"_index":3276,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":1309,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":534,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":1277,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["externaluseridentifier'})@unique",{"_index":2682,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["extract",{"_index":5435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":1135,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":1344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5546,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":4807,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":682,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["f23f76",{"_index":742,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["facade",{"_index":3510,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":4956,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4599,"title":{},"body":{"license.html":{}}}],["factory",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":3244,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":119,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":5984,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":3282,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":4996,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4594,"title":{},"body":{"license.html":{}}}],["fake",{"_index":734,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fallback",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":933,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":4735,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4377,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4496,"title":{},"body":{"license.html":{}}}],["fast",{"_index":5694,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4288,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":4744,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":208,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5457,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":916,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":206,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersapp",{"_index":978,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":990,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":203,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":939,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":1033,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":985,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4165,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4167,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":4168,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":971,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4169,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4170,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":201,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":957,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":964,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":903,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":974,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":2805,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4376,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5287,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":4656,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":5299,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["ffffff",{"_index":2410,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["field",{"_index":2349,"title":{},"body":{"classes/TaskDomainService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["fields",{"_index":5046,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["fileids",{"_index":1258,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":5262,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["filenames",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1001,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["filestorage/security",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["filetaskinfo",{"_index":996,"title":{"classes/FileTaskInfo.html":{}},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filetaskinfoproperties",{"_index":998,"title":{"interfaces/FileTaskInfoProperties.html":{}},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"coverage.html":{}}}],["filled",{"_index":2350,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["filter",{"_index":877,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1699,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1705,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1703,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1709,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1896,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":879,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":626,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":1708,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":4830,"title":{},"body":{"license.html":{}}}],["find",{"_index":960,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/TaskDomainService.html":{},"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":963,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1638,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1650,"title":{},"body":{"controllers/NewsController.html":{}}}],["findall(parentids",{"_index":2437,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findall(targets",{"_index":1797,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbytaskids",{"_index":2245,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":2249,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuserid",{"_index":605,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":607,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/SubmissionRepo.html":{}}}],["findallcompleted",{"_index":2282,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallcompleted(currentuser",{"_index":2284,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallcompletedforstudent",{"_index":2521,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallcompletedforstudent(userid",{"_index":2529,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallcurrentbyids",{"_index":2431,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallcurrentbyids(parentids",{"_index":2441,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallcurrentignoreids",{"_index":2432,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallcurrentignoreids(parentids",{"_index":2443,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforteam",{"_index":2581,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":2582,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":1898,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1909,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopen",{"_index":2283,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallopen(currentuser",{"_index":2287,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallopenforstudent",{"_index":2522,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforstudent(userid",{"_index":2532,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforteacher",{"_index":2523,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforteacher(userid",{"_index":2534,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":5903,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourses",{"_index":653,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["findbycourses(courses",{"_index":655,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["findbyid",{"_index":2049,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":2053,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":2050,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":2055,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findforuser",{"_index":706,"title":{},"body":{"controllers/DashboardController.html":{}}}],["finding",{"_index":1153,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findlessons",{"_index":2433,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findlessons(parentids",{"_index":2447,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findnewsandcount",{"_index":1795,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1800,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1639,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1655,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1796,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1805,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1899,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1915,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2190,"title":{},"body":{"modules/ServerModule.html":{}}}],["findpermittedtaskparents",{"_index":2524,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findpermittedtaskparents(userid",{"_index":2536,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findtasksandcount",{"_index":2434,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":2449,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5491,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1914,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1165,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["fit",{"_index":5419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":4976,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2873,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5275,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":2772,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":3435,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":5872,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1707,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":4580,"title":{},"body":{"license.html":{}}}],["flush",{"_index":291,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["fly",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["fnname",{"_index":2328,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["focus",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":5915,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":4387,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":5576,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":3959,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":3213,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5293,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":623,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":614,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4635,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":1132,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":1601,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"license.html":{}}}],["forcearray",{"_index":4158,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["forcearray(arrayofobjects).reduce(reducer",{"_index":2124,"title":{},"body":{"classes/Scope.html":{}}}],["forcearray(input",{"_index":2107,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["forcefullsync",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":5973,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":3984,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":466,"title":{},"body":{"classes/Course.html":{},"classes/ErrorResponse.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":3695,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4683,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1500,"title":{},"body":{"modules/MailModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1501,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2194,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4406,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5540,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5453,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4404,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4425,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4230,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["fulfilled",{"_index":5459,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4623,"title":{},"body":{"license.html":{}}}],["full",{"_index":3148,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fully",{"_index":736,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["function",{"_index":1054,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":393,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":4758,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4317,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":4711,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":553,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5291,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":5276,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":2897,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":4571,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3448,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4353,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":5282,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":5410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1656,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":2583,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('completed",{"_index":2285,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('me",{"_index":2697,"title":{},"body":{"controllers/UserController.html":{}}}],["get('open",{"_index":2288,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(id",{"_index":967,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getdefaultmaxduedate",{"_index":2435,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getdescriptions",{"_index":416,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["getdetails",{"_index":93,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getduedate",{"_index":1223,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getentitypermissions",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getfirstuser",{"_index":1419,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getgrid",{"_index":723,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gethello",{"_index":826,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getinout",{"_index":2133,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":2139,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getmaxsubmissionsforstudentsbycourseid",{"_index":2309,"title":{},"body":{"classes/TaskDomainService.html":{},"miscellaneous/enumerations.html":{}}}],["getmaxsubmissionsforteachersbycourseid",{"_index":2310,"title":{},"body":{"classes/TaskDomainService.html":{},"miscellaneous/enumerations.html":{}}}],["getmaxsubmissionsforteachersbycourseid(task",{"_index":2325,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["getmetadata",{"_index":731,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getname",{"_index":1222,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getnewspermissions",{"_index":1900,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1917,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getotheruser",{"_index":1420,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getparent",{"_index":1229,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getparentid",{"_index":641,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getpermittedentities",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":235,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":897,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":905,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":898,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":907,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getposition",{"_index":743,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getquery",{"_index":2094,"title":{},"body":{"classes/Scope.html":{}}}],["getrequiredpermissions",{"_index":1901,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1920,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":94,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getschool",{"_index":1421,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getservice",{"_index":991,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":977,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getstudentsnumber",{"_index":417,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["gettargetfilters",{"_index":1902,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1923,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getter",{"_index":470,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":2654,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":2760,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":899,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":909,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusers",{"_index":1422,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getuserschoolpermissions",{"_index":900,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":911,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":801,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":901,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":913,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":2735,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(currentuser",{"_index":2738,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":4333,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":4238,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":4259,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":4251,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":2937,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4653,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1644,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":947,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4659,"title":{},"body":{"license.html":{}}}],["global",{"_index":400,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"classes/TestHelper.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":1003,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":878,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":1105,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":1293,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":1008,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":1108,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":4399,"title":{},"body":{"license.html":{}}}],["go",{"_index":2470,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5088,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4475,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":1507,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":4782,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4476,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":1246,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":1247,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["graded",{"_index":2230,"title":{},"body":{"classes/StatusDomainService.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["gradedusers.add(submission.student.id",{"_index":2225,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["gradedusers.size",{"_index":2231,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["gradefileids",{"_index":1260,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":1248,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":4802,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4584,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4849,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5035,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":4710,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5010,"title":{},"body":{"license.html":{}}}],["grid",{"_index":722,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridarray",{"_index":804,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["gridelement",{"_index":746,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["gridelement.getmetadata",{"_index":784,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["gridelement.getposition",{"_index":794,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["gridelementreferencemetadata",{"_index":727,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":771,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["group",{"_index":462,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{},"coverage.html":{}}}],["grouping",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":465,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gt",{"_index":1894,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":2506,"title":{},"body":{"classes/TaskScope.html":{}}}],["guarantee",{"_index":1690,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5153,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":5604,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5551,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5232,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":5949,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":2674,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":3407,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":338,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":3692,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":1071,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":396,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":5896,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":5358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":72,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["haspermission",{"_index":2575,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":252,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":2525,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":2538,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haswritepermission",{"_index":418,"title":{},"body":{"classes/Course.html":{},"interfaces/ITaskParent.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["haswritepermission(userid",{"_index":442,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["haswritepermissions",{"_index":445,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["having",{"_index":4597,"title":{},"body":{"license.html":{}}}],["header",{"_index":1325,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":5479,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5474,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4460,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":473,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":5861,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":1037,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helper.createandadduser",{"_index":2599,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getfirstuser",{"_index":2595,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getotheruser",{"_index":2597,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getusers",{"_index":2596,"title":{},"body":{"classes/TestHelper.html":{}}}],["helpers",{"_index":3549,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":5835,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5260,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5469,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":275,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":4891,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5568,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":1465,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":5332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":5658,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":3352,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4250,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4253,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":4827,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4789,"title":{},"body":{"license.html":{}}}],["holding",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":3136,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1255,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":1209,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":5338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":3445,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5470,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":3589,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":474,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":1021,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":1102,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":4717,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5081,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":4736,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2167,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":543,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["htmlcontent",{"_index":162,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":164,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["http",{"_index":125,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4408,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/licenses",{"_index":5031,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":341,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":5605,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":5951,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5063,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":5703,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3000,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":5301,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5302,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5304,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5300,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5050,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5305,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpstatus",{"_index":110,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":120,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":357,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["i...properties",{"_index":479,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5463,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":1317,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":5986,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":642,"title":{"interfaces/ICoursegroupProperties.html":{}},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"coverage.html":{}}}],["icourseproperties",{"_index":423,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{}}}],["icreatenews",{"_index":1146,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":1156,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":2007,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":2009,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.tohexstring",{"_index":2636,"title":{},"body":{"classes/TestHelper.html":{}}}],["id.tohexstring()).includes(userid",{"_index":503,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["id.ts",{"_index":5108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardrepo",{"_index":803,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["identical",{"_index":1385,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":4915,"title":{},"body":{"license.html":{}}}],["identified",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":886,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":1384,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":5964,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":237,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["ierrortype",{"_index":343,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifindoptions",{"_index":1170,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["iframe",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":1545,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":1353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoreids",{"_index":2444,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["ignoreids(taskids",{"_index":2502,"title":{},"body":{"classes/TaskScope.html":{}}}],["ignoring",{"_index":2446,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["igridelement",{"_index":725,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["igridelementreference",{"_index":730,"title":{"interfaces/IGridElementReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["ilogger",{"_index":1182,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":969,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":986,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":956,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4343,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":454,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/Logger.html":{},"classes/TestHelper.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":4558,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":5606,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":1314,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":733,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":5962,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":4937,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":444,"title":{},"body":{"classes/Course.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseProperties.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":4882,"title":{},"body":{"license.html":{}}}],["imports",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":4812,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4940,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1890,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":2337,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["improvements",{"_index":4454,"title":{},"body":{"license.html":{}}}],["improves",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5582,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":4990,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4993,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4407,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4987,"title":{},"body":{"license.html":{}}}],["include",{"_index":266,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Scope.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":4554,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4513,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":3586,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4682,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1121,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":4459,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4957,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4739,"title":{},"body":{"license.html":{}}}],["increase",{"_index":3179,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2600,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["increases",{"_index":5437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":4808,"title":{},"body":{"license.html":{}}}],["independant",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4672,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5480,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@property",{"_index":432,"title":{},"body":{"classes/Course.html":{}}}],["index()@property({fieldname",{"_index":434,"title":{},"body":{"classes/Course.html":{}}}],["index({name",{"_index":2686,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["index.ts",{"_index":5043,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":3063,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":4852,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":4818,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3255,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4493,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4750,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":66,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":1154,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":369,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["info.entity",{"_index":517,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":509,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":2714,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:13",{"_index":2733,"title":{},"body":{"classes/UserTaskInfo.html":{}}}],["info.entity.ts:15",{"_index":1468,"title":{},"body":{"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:16",{"_index":515,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:17",{"_index":1000,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:18",{"_index":1467,"title":{},"body":{"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:19",{"_index":513,"title":{},"body":{"classes/CourseGroupInfo.html":{}}}],["info.entity.ts:20",{"_index":999,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:7",{"_index":524,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1729,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":2078,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":2080,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1872,"title":{},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":2085,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":2087,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":2722,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":2086,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":4723,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":893,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":4850,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4879,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4507,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":268,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["inheritances",{"_index":1835,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{}}}],["init",{"_index":1423,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["inital",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":1482,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5545,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":4873,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":5206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":816,"title":{},"body":{"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('mail_service_options",{"_index":1534,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject(mikroorm",{"_index":1585,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":1587,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":210,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":952,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":1478,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5506,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":155,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"classes/TaskDomainService.html":{}}}],["inlineattachment",{"_index":154,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["inner",{"_index":4346,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":1296,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":5950,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4567,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":4754,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4767,"title":{},"body":{"license.html":{}}}],["instance",{"_index":981,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":1035,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":4069,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instant",{"_index":478,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["instead",{"_index":3003,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4362,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4648,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3138,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["integrity",{"_index":499,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["intended",{"_index":4428,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4640,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5022,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":4952,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4521,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4525,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5537,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":856,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":857,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":844,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":408,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":386,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4694,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4866,"title":{},"body":{"license.html":{}}}],["interface",{"_index":146,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":1349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":148,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":4759,"title":{},"body":{"license.html":{}}}],["internal",{"_index":559,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":380,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["internalservererrorexception",{"_index":1026,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":1061,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":450,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["interpreter",{"_index":4564,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4578,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":953,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":3954,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":3919,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5214,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5039,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":4669,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":5565,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5570,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5515,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5490,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":1176,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iparentdescriptionsproperties",{"_index":1201,"title":{"interfaces/IParentDescriptionsProperties.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":1232,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2165,"title":{},"body":{"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":1162,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{}}}],["irole",{"_index":1164,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":1230,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":4586,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1710,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":1034,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":1075,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":694,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":672,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdefined",{"_index":4159,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefined(input",{"_index":2100,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefined(key",{"_index":2111,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object",{"_index":2110,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object[key",{"_index":2112,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(selectedkey",{"_index":2121,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(targetkey",{"_index":2122,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(testeddefinedvalue",{"_index":2105,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue",{"_index":4160,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedobjectvalue(currentvalue",{"_index":2117,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue(object",{"_index":2109,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery",{"_index":4161,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(input",{"_index":2101,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(query",{"_index":2106,"title":{},"body":{"classes/Scope.html":{}}}],["iserv",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":1032,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":1070,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":2201,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["isgraded(submission",{"_index":2208,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["isin",{"_index":1711,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1715,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1988,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1985,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1979,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismember",{"_index":446,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["ismember(userid",{"_index":647,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["ismongoid",{"_index":1712,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["iso",{"_index":77,"title":{},"body":{"classes/Account.html":{}}}],["isolated",{"_index":5571,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":695,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1706,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":2678,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1700,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":2677,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1704,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isprivilegedmember",{"_index":504,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["ispublished",{"_index":1955,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":1321,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":696,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":670,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":685,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":681,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":615,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["issubstitutionteacher",{"_index":420,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["issubstitutionteacher(userid",{"_index":458,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["issue",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":1328,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":3405,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istanbul",{"_index":1544,"title":{},"body":{"modules/MongoDatabaseModule.html":{}}}],["isteacher",{"_index":421,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["isteacher(userid",{"_index":460,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["istechnicalerror",{"_index":1040,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":1078,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":1492,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionproperties",{"_index":1243,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["isubmissionstatus",{"_index":2334,"title":{},"body":{"classes/TaskDomainService.html":{},"miscellaneous/typealiases.html":{}}}],["iswhitelisted",{"_index":1374,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":1377,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":3009,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":5902,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskparent",{"_index":1208,"title":{"interfaces/ITaskParent.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["itaskproperties",{"_index":1205,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["item",{"_index":4539,"title":{},"body":{"license.html":{}}}],["items",{"_index":1234,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":4770,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1152,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":1274,"title":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{}},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["iusertaskinfoproperties",{"_index":1290,"title":{"interfaces/IUserTaskInfoProperties.html":{}},"body":{"interfaces/IUserTaskInfoProperties.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["jest",{"_index":2934,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":4163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":5904,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4370,"title":{},"body":{"index.html":{}}}],["job",{"_index":5510,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":3861,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":3329,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":4233,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":471,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":3507,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.stringify(e.constraints",{"_index":1094,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":4235,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":1323,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":5920,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":1347,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_whitelist_accept_all",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["jwtauthguard",{"_index":1302,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":191,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":1356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":1355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":1308,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1333,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":178,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":179,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":1387,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5455,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1605,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5238,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4560,"title":{},"body":{"license.html":{}}}],["key",{"_index":1961,"title":{},"body":{"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/TaskDomainService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["keyof",{"_index":5130,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":4517,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4416,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":4442,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":4905,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4912,"title":{},"body":{"license.html":{}}}],["known",{"_index":3304,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5530,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":481,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":4380,"title":{},"body":{"index.html":{}}}],["language",{"_index":2968,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4676,"title":{},"body":{"license.html":{}}}],["last",{"_index":2721,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastldapsync",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":1166,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["lasttriedfailedlogin",{"_index":11,"title":{},"body":{"classes/Account.html":{}}}],["later",{"_index":579,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":1913,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5295,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5062,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4509,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4485,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4877,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5525,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5042,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":2785,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":4237,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4240,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":3743,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":5024,"title":{},"body":{"license.html":{}}}],["lean",{"_index":4255,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":2253,"title":{},"body":{"injectables/SubmissionRepo.html":{},"changelog.html":{}}}],["learnroommodule",{"_index":1397,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["learnroomtesthelper",{"_index":1403,"title":{"classes/LearnroomTestHelper.html":{}},"body":{"classes/LearnroomTestHelper.html":{},"coverage.html":{}}}],["leave",{"_index":5098,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":2644,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":948,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":5283,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5264,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5089,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4448,"title":{},"body":{"license.html":{}}}],["length",{"_index":500,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["lern",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":4014,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":1204,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["lessonid",{"_index":1210,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonids",{"_index":2499,"title":{},"body":{"classes/TaskScope.html":{}}}],["lessons",{"_index":1469,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["lessontaskinfo",{"_index":1203,"title":{"classes/LessonTaskInfo.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessontaskinfoproperties",{"_index":1466,"title":{"interfaces/LessonTaskInfoProperties.html":{}},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"coverage.html":{}}}],["letter",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4465,"title":{},"body":{"license.html":{}}}],["level",{"_index":3878,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":4791,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4506,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4552,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":4731,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4398,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4489,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4490,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4492,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4422,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4853,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4799,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":4847,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1178,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"license.html":{}}}],["limitation",{"_index":4984,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2933,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":3006,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":592,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2943,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4576,"title":{},"body":{"license.html":{}}}],["links",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":5077,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":234,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/MongoSharedConnection.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":440,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/StatusDomainService.html":{},"classes/TaskResponse.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":4874,"title":{},"body":{"license.html":{}}}],["living",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":5055,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5590,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":5700,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":5854,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":3139,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5231,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5243,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":2195,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":5652,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":3551,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1028,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":1185,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":1193,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5078,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5556,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4360,"title":{},"body":{"index.html":{}}}],["logger",{"_index":855,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":1018,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":863,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":1098,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":1095,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":1082,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":5839,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":1474,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":1497,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":406,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":1029,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":387,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":398,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":851,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":864,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":860,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":2336,"title":{},"body":{"classes/TaskDomainService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5449,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":3145,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":5041,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4381,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1312,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":4991,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4994,"title":{},"body":{"license.html":{}}}],["lost",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2338,"title":{},"body":{"classes/TaskDomainService.html":{},"changelog.html":{}}}],["low",{"_index":5334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1895,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":5542,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":5972,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4685,"title":{},"body":{"license.html":{}}}],["made",{"_index":4455,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":165,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["mail.interface",{"_index":1533,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":1510,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":1523,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":150,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailcatcher",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":158,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["maildrop",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":1498,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":2184,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":1502,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{}}}],["mails",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":1509,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["mailserviceoptions",{"_index":1529,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["main",{"_index":2836,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":982,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":5489,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":3707,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":3635,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":3040,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4556,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1383,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4614,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2676,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":5897,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":2472,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":3229,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":2841,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4188,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5045,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":4892,"title":{},"body":{"license.html":{}}}],["manual",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":5836,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":3472,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User-1.html":{}}}],["manytomany('role",{"_index":1238,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["manytomany({fieldname",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":540,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":545,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":3250,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((id",{"_index":502,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["mapcreatenewstodomain",{"_index":1717,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1720,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1718,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1722,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":5483,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":2740,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/dashboard.mapper",{"_index":714,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":1675,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":2294,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":5919,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":2619,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":5396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":773,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":774,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":1724,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":2079,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":2259,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":2373,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":2026,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["maptoresponse(userinfo",{"_index":2716,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1719,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1726,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":4935,"title":{},"body":{"license.html":{}}}],["marked",{"_index":4797,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4806,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4487,"title":{},"body":{"license.html":{}}}],["master",{"_index":3402,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":894,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":354,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":5893,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4601,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4771,"title":{},"body":{"license.html":{}}}],["materials",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":3095,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5492,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1989,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1993,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1982,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmission",{"_index":2346,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["maxsubmissions",{"_index":2206,"title":{},"body":{"classes/StatusDomainService.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["maxsubmissionsoperations",{"_index":2329,"title":{},"body":{"classes/TaskDomainService.html":{},"miscellaneous/enumerations.html":{}}}],["maxsubmissionsoperations.student",{"_index":2371,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["maxsubmissionsoperations.teacher",{"_index":2366,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["maxworkers",{"_index":5188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":1573,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5083,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":2703,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":2696,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":4814,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4392,"title":{},"body":{"index.html":{}}}],["means",{"_index":4347,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4622,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4350,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":5569,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4645,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4657,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4540,"title":{},"body":{"license.html":{}}}],["member",{"_index":919,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1559,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4537,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4975,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4520,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4397,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":4863,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":90,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5456,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":4588,"title":{},"body":{"license.html":{}}}],["meta",{"_index":5957,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":4278,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":962,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":92,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metic",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":3489,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":5436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":3738,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4242,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":3979,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1788,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1790,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":55,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":1563,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5076,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":1581,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":1583,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":1584,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":1548,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":1556,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":1569,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":1582,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":1564,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":2658,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":153,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":1990,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1991,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1992,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5503,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1981,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":5977,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4310,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":4796,"title":{},"body":{"license.html":{}}}],["missing",{"_index":980,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1889,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4243,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":3557,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":5869,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":5857,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":5859,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2956,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":688,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1966,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4483,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4543,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4000,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":4662,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4450,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4511,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":5217,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":170,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":5932,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":5935,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":5934,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":5900,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":5899,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5175,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":5853,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":1565,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":5868,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":5867,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":2170,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":5635,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/lernroom/lernroom.module",{"_index":2177,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/mail/mail.module",{"_index":2176,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity",{"_index":2178,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":2175,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":2179,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":2173,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/entity",{"_index":2180,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":2174,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":4245,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":1551,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoclient",{"_index":1603,"title":{},"body":{"classes/MongoSharedConnection.html":{},"miscellaneous/variables.html":{}}}],["mongoclient.connect(this.config.getclienturl",{"_index":1608,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["mongoconnection",{"_index":1597,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["mongod",{"_index":1571,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongod.geturi",{"_index":1572,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodatabasemodule",{"_index":1538,"title":{"modules/MongoDatabaseModule.html":{}},"body":{"modules/MongoDatabaseModule.html":{},"modules.html":{}}}],["mongodatabasemoduleoptions",{"_index":1542,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1567,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongodriver",{"_index":1619,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["mongomemorydatabasemodule",{"_index":1558,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":5882,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":1566,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":2188,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["mongosharedconnection",{"_index":1595,"title":{"classes/MongoSharedConnection.html":{}},"body":{"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["mongosharedconnection(this.config",{"_index":1620,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["mongoshareddriver",{"_index":1550,"title":{"classes/MongoSharedDriver.html":{}},"body":{"modules/MongoDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["monitoring",{"_index":5466,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4261,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1616,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":4836,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":2890,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":4338,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5058,"title":{},"body":{"todo.html":{}}}],["move",{"_index":2640,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":837,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1046,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":3831,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":1136,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":329,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":4390,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1660,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":5097,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4263,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":4281,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4673,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":2504,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":3732,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":2628,"title":{},"body":{"classes/TestHelper.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":4566,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":3366,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":1073,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5087,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5235,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5239,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5258,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5259,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5252,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5254,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5272,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5273,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5234,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5242,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5246,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5244,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5249,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5163,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5267,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5268,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5271,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5165,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5164,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5269,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3914,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":984,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":832,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":374,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriter.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5292,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":111,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IDashboardRepo.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":835,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4178,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4181,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":693,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":834,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":5858,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":1473,"title":{},"body":{"injectables/Logger.html":{}}}],["net",{"_index":4358,"title":{},"body":{"index.html":{}}}],["network",{"_index":4421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5493,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":529,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1736,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":1784,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":2580,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["news.controller.ts:22",{"_index":2584,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":1757,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1938,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1738,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1732,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":666,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":2680,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":690,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":671,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":2679,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":680,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":689,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":684,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1761,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1740,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1742,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1744,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":1746,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1734,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":572,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1759,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1753,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":241,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{}}}],["news:100",{"_index":541,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:106",{"_index":2578,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:30",{"_index":566,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":542,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":548,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":555,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":561,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":562,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:54",{"_index":564,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:57",{"_index":558,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:60",{"_index":547,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:63",{"_index":568,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:65",{"_index":556,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:75",{"_index":570,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:94",{"_index":2088,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":1963,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1789,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1936,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1931,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1857,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1874,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1930,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1635,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1947,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":1830,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":1838,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":1826,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":1651,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsid",{"_index":1649,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":1683,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":1953,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1687,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":1950,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1674,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1681,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1685,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1682,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1695,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1771,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1776,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1673,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsscope",{"_index":1821,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstargetfilter",{"_index":1798,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetinfo",{"_index":571,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetmodel",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":588,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":244,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":597,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":1671,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1957,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1943,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newuser",{"_index":2622,"title":{},"body":{"classes/TestHelper.html":{}}}],["newuser._id",{"_index":2624,"title":{},"body":{"classes/TestHelper.html":{}}}],["newuser.id",{"_index":2626,"title":{},"body":{"classes/TestHelper.html":{}}}],["nexboard",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":591,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":2663,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":871,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":2505,"title":{},"body":{"classes/TaskScope.html":{}}}],["node",{"_index":4085,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4335,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":5543,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4258,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4260,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":3521,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":4705,"title":{},"body":{"license.html":{}}}],["none",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1971,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":3302,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":4734,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":4112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":265,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":5482,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":915,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":2192,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":4848,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4531,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4527,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":4837,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4833,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4786,"title":{},"body":{"license.html":{}}}],["november",{"_index":4401,"title":{},"body":{"license.html":{}}}],["now",{"_index":678,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":873,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3047,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":938,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{}}}],["number",{"_index":99,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskTestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":4967,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":5124,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":3078,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5218,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":5562,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["o._id",{"_index":1456,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["o.id",{"_index":2458,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["oauth",{"_index":3571,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":3359,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":1862,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign",{"_index":67,"title":{},"body":{"classes/Account.html":{}}}],["object.assign(this",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserTaskInfo.html":{}}}],["object.entries(params",{"_index":1962,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.keys(input).length",{"_index":2102,"title":{},"body":{"classes/Scope.html":{}}}],["object.values(constraint",{"_index":145,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":698,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":5207,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid(entityid",{"_index":2617,"title":{},"body":{"classes/TestHelper.html":{}}}],["objectid(id",{"_index":2468,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["objectid(parent.id",{"_index":1228,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["objectid(this.getschool",{"_index":1457,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["objectid(userid",{"_index":616,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["objectid.isvalid(value",{"_index":2013,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":4947,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4719,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4624,"title":{},"body":{"license.html":{}}}],["observable",{"_index":862,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":5418,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":4704,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1048,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":4845,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3415,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":1911,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5119,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4447,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4725,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4708,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5256,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4545,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["ok",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2851,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":3987,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":1515,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1370,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["oneweekago",{"_index":2473,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":2474,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":1561,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":284,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":1606,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3584,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":5247,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":4997,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":4712,"title":{},"body":{"license.html":{}}}],["operates",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4561,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4055,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":463,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":4470,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":4954,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":5959,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":2906,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":5965,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1580,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":5771,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1504,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.exchange",{"_index":1519,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":1945,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":1524,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.ts",{"_index":1172,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":1521,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["ora",{"_index":379,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["orchestration",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1173,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1832,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["ordering",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":4859,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4494,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":3328,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":4003,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":1586,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":5939,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5303,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":1820,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":5873,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":264,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TestHelper.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1549,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["orquery",{"_index":2099,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["others",{"_index":1131,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otheruser",{"_index":1406,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["otherwise",{"_index":1578,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":5612,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5060,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5488,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2137,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":4607,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2340,"title":{},"body":{"classes/TaskDomainService.html":{},"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":5917,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":3659,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":5923,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":5931,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":875,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":399,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5121,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":5036,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":3238,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":4888,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5355,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1853,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5224,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["p.id",{"_index":2356,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["package",{"_index":3690,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":4668,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5051,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4555,"title":{},"body":{"license.html":{}}}],["page",{"_index":1980,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1986,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":932,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1174,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5586,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1652,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1669,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1688,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["paginationresponse(taskresponses",{"_index":2302,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":4267,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5021,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4824,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4898,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":3201,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":243,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":1692,"title":{},"body":{"controllers/NewsController.html":{}}}],["param('teamid",{"_index":2587,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":5849,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":5847,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5585,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":1937,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":1689,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":966,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1767,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1768,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1934,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1770,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1769,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1766,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":5584,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1213,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["parent.getdescriptions",{"_index":2386,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parent.getstudentsnumber",{"_index":2369,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["parent.id",{"_index":2414,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{}}}],["parentdata",{"_index":2385,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentdata.color",{"_index":2390,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentdata.name",{"_index":2388,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentid",{"_index":1207,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{}}}],["parentid.tohexstring",{"_index":2421,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["parentids",{"_index":2439,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["parentids.map((id",{"_index":2467,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["parents",{"_index":2313,"title":{},"body":{"classes/TaskDomainService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parents.find((p",{"_index":2355,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["parents.map((course",{"_index":2562,"title":{},"body":{"injectables/TaskUC.html":{}}}],["parents.map((parent",{"_index":2557,"title":{},"body":{"injectables/TaskUC.html":{}}}],["parse",{"_index":3624,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1668,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4201,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":5516,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":2594,"title":{},"body":{"classes/TestHelper.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":20,"title":{},"body":{"classes/Account.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2673,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4549,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4519,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4581,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":4713,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":4864,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":5613,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":1128,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":5202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":1346,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"classes/Account.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":549,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1666,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1663,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":4823,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4883,"title":{},"body":{"license.html":{}}}],["path",{"_index":995,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2895,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":699,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":1343,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":1335,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":1363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":4928,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4721,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4724,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":5600,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":3180,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":4572,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4832,"title":{},"body":{"license.html":{}}}],["permission",{"_index":449,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1976,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permission.read",{"_index":2553,"title":{},"body":{"injectables/TaskUC.html":{}}}],["permission.write",{"_index":2550,"title":{},"body":{"injectables/TaskUC.html":{}}}],["permissions",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":253,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1975,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":4650,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4681,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4464,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4410,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":4762,"title":{},"body":{"license.html":{}}}],["persist",{"_index":292,"title":{},"body":{"injectables/BaseRepo.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/NewsRepo.html":{},"classes/Task.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":305,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persist/make",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":293,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistall(entities",{"_index":308,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush",{"_index":294,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush(entities",{"_index":310,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush",{"_index":295,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush(entity",{"_index":312,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persisted",{"_index":326,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1537,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":3092,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":4945,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4689,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4702,"title":{},"body":{"license.html":{}}}],["pick",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":4440,"title":{},"body":{"license.html":{}}}],["pin",{"_index":3110,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":1111,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":2758,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":5603,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":2010,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":2793,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":163,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":161,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["platform",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":5447,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4221,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":4868,"title":{},"body":{"license.html":{}}}],["point",{"_index":673,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5017,"title":{},"body":{"license.html":{}}}],["policy",{"_index":3930,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":3468,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1834,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":578,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":5229,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":4728,"title":{},"body":{"license.html":{}}}],["pos",{"_index":793,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["pos.x",{"_index":796,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["pos.y",{"_index":798,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["position",{"_index":767,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["possesses",{"_index":4699,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4666,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4999,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2348,"title":{},"body":{"classes/TaskDomainService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1642,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":5070,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4634,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4368,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4423,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4902,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":5952,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5075,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4414,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4479,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4330,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":4865,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4542,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":704,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":5976,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":5975,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":1485,"title":{},"body":{"injectables/Logger.html":{}}}],["preparestatus",{"_index":2311,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["preparestatus(submissions",{"_index":2327,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["preparing",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":4354,"title":{},"body":{"index.html":{}}}],["present",{"_index":3550,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":5368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4535,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4793,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":3758,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":278,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":3580,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":4867,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4435,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4930,"title":{},"body":{"license.html":{}}}],["primary",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["primaryrolesearchoperation",{"_index":1233,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":2043,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":5871,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":5713,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":4834,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":5961,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":419,"title":{},"body":{"classes/Course.html":{},"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":1393,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":3993,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":3379,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":4755,"title":{},"body":{"license.html":{}}}],["process",{"_index":3734,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5560,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5511,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":4920,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4563,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4690,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2957,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":4931,"title":{},"body":{"license.html":{}}}],["program",{"_index":4430,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4644,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5028,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4550,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4441,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4605,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4631,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4925,"title":{},"body":{"license.html":{}}}],["project",{"_index":2765,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4271,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":3488,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":4538,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4530,"title":{},"body":{"license.html":{}}}],["promise",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":838,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1949,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/UserUC.html":{}}}],["promise.all(ids.map((id",{"_index":2071,"title":{},"body":{"injectables/RoleUC.html":{}}}],["promise.resolve(currentuser.user",{"_index":2704,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4220,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4502,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4851,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4512,"title":{},"body":{"license.html":{}}}],["proper",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":5958,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":1794,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["property",{"_index":30,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":2042,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["property({default",{"_index":427,"title":{},"body":{"classes/Course.html":{}}}],["property({fieldname",{"_index":644,"title":{},"body":{"classes/Coursegroup.html":{},"classes/Task.html":{}}}],["property({onupdate",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["property({persist",{"_index":2270,"title":{},"body":{"classes/Task.html":{}}}],["propertydecorator",{"_index":4325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":425,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.color",{"_index":496,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.comment",{"_index":1264,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":582,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.courseid",{"_index":520,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["props.creator",{"_index":586,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.description",{"_index":486,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":584,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":1215,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.email",{"_index":1284,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["props.firstname",{"_index":1280,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["props.grade",{"_index":1268,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":1270,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid",{"_index":755,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.hidden",{"_index":1471,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["props.lastname",{"_index":1282,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["props.lesson",{"_index":1220,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.name",{"_index":484,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{}}}],["props.parentid",{"_index":1219,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.permissions",{"_index":1240,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":1217,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.roles",{"_index":1242,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/User-1.html":{}}}],["props.school",{"_index":585,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["props.schoolid",{"_index":488,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.student",{"_index":1262,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.studentids",{"_index":490,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["props.students",{"_index":521,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{}}}],["props.substitutionteacherids",{"_index":494,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":587,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":1266,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teacherids",{"_index":492,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":580,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":4443,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1414,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/MongoSharedDriver.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4615,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4655,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":4775,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":4979,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":846,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":239,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":1489,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":1483,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":397,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":4787,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4829,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4969,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4970,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":830,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":4798,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4472,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":2985,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":679,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":3553,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4570,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4737,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":4918,"title":{},"body":{"license.html":{}}}],["push",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":4054,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":3534,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":4841,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4978,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1884,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1888,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5497,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":632,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1763,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1762,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1765,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":2096,"title":{},"body":{"classes/Scope.html":{}}}],["queryelement",{"_index":2119,"title":{},"body":{"classes/Scope.html":{}}}],["queryobject",{"_index":2098,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["queryordermap",{"_index":1819,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":2197,"title":{},"body":{"modules/ServerModule.html":{}}}],["querystring",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1508,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5227,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5221,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":1506,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":1517,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":1514,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":5467,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":4222,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":447,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4686,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":4907,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4778,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":87,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"controllers/NewsController.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":5870,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":467,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"modules/MongoDatabaseModule.html":{}}}],["reason",{"_index":4916,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4700,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":4839,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4438,"title":{},"body":{"license.html":{}}}],["received",{"_index":4670,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":4855,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4922,"title":{},"body":{"license.html":{}}}],["recent",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["recieve",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":4761,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4914,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":166,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4546,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":5988,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":5982,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":5980,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":101,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/Scope.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["red",{"_index":5069,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":1386,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":1394,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5013,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":2846,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reducer",{"_index":2114,"title":{},"body":{"classes/Scope.html":{}}}],["reduces",{"_index":3476,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":5322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2901,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":577,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":565,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":735,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":4434,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4484,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4277,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":4949,"title":{},"body":{"license.html":{}}}],["regard",{"_index":4783,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4351,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4667,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":4582,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3617,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":5719,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":5898,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":4828,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":5969,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":3383,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":4608,"title":{},"body":{"license.html":{}}}],["release",{"_index":3105,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4477,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4466,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4660,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4478,"title":{},"body":{"license.html":{}}}],["relies",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5082,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["rely",{"_index":497,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["relying",{"_index":4906,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4718,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4432,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":4951,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":4953,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4784,"title":{},"body":{"license.html":{}}}],["remove",{"_index":296,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"modules/InterceptorModule.html":{},"classes/MongoSharedConnection.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":314,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall",{"_index":297,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall(entities",{"_index":317,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush",{"_index":298,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush(entities",{"_index":319,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush",{"_index":299,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush(entity",{"_index":321,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removed",{"_index":2620,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["removeing",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2565,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{}}}],["rename_team",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":4992,"title":{},"body":{"license.html":{}}}],["repair",{"_index":3361,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":3271,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":2621,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5072,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":169,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":2070,"title":{},"body":{"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":5875,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1929,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1779,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":3827,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":5890,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":2867,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4329,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":4752,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5280,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":5925,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":5927,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":950,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":5954,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":5945,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":1365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":1366,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":5461,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5468,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2652,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2193,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":1299,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":2659,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":3303,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":1388,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":1310,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":1009,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":5189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1134,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1956,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4661,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4720,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":988,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4497,"title":{},"body":{"license.html":{}}}],["reset",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":2743,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":2747,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":2748,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":1361,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":2024,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":2746,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyidlist",{"_index":2065,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyidlist(ids",{"_index":2068,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":2051,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":2057,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":1802,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":2706,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(currentuser",{"_index":2709,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resort",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["resorting_",{"_index":2339,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["resource",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":5887,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4638,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5093,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":1654,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":126,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":5946,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":1107,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":5404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":4856,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":3097,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":2632,"title":{},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5094,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":853,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5532,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5458,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1959,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":4632,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4815,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3924,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":80,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query",{"_index":2097,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":4156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":4462,"title":{},"body":{"license.html":{}}}],["results",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":4765,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5518,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1658,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5554,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5526,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":143,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":2477,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":107,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5602,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":4384,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5001,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4959,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":4082,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":4444,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":4283,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":4977,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":3653,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1161,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"modules/ServerModule.html":{},"classes/User-1.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1288,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}}}],["role.id",{"_index":2040,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":2039,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":2074,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":2742,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":5460,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":1289,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}}}],["roleidbasedsearches'})@property",{"_index":2692,"title":{},"body":{"classes/User-1.html":{}}}],["roleids",{"_index":3754,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":2046,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":1159,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":2073,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":2038,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":2063,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":4768,"title":{},"body":{"license.html":{}}}],["room",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":274,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":5159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":5183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":5895,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":828,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":2881,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":1513,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["royalty",{"_index":4872,"title":{},"body":{"license.html":{}}}],["rss",{"_index":560,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":3274,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":3048,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":5852,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":2646,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3008,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":5860,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":865,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":867,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":5015,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4357,"title":{},"body":{"index.html":{}}}],["sale",{"_index":4881,"title":{},"body":{"license.html":{}}}],["same",{"_index":3638,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":920,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":983,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":5865,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":5866,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":3307,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":5049,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":249,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":238,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5270,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":4716,"title":{},"body":{"license.html":{}}}],["sc",{"_index":2819,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":5434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":477,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":3108,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":535,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":412,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":557,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schoolinfo.id",{"_index":2081,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":2083,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1728,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1750,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1852,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":601,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":599,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1149,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["schooltype",{"_index":1425,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["schoolyear",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["schoolyears",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":675,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2168,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":841,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":611,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.afterduedateornone(duedate",{"_index":2462,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourses(courses",{"_index":660,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["scope.byids(ids",{"_index":2463,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bylessonsornone(lessons.map((o",{"_index":2457,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byparents(parentids",{"_index":2455,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bypublic",{"_index":2456,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bytargets(targets",{"_index":1822,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1823,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.forallgrouptypes(userid",{"_index":618,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.ignoreids(ignoreids",{"_index":2464,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.query",{"_index":621,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["scope.request",{"_index":975,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":1968,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":2590,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":2591,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":1475,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1876,"title":{},"body":{"classes/NewsScope.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["scope.ts:12",{"_index":2501,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:17",{"_index":2498,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:22",{"_index":1882,"title":{},"body":{"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:27",{"_index":2503,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:32",{"_index":2495,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:7",{"_index":1880,"title":{},"body":{"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:57",{"_index":627,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:67",{"_index":631,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:71",{"_index":637,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":1965,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1942,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":927,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":1659,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4568,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4196,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2545,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":1278,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["searchuserforschool'})@property({fieldname",{"_index":2687,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["second",{"_index":5763,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4505,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4451,"title":{},"body":{"license.html":{}}}],["secret",{"_index":73,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":1354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":4613,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4684,"title":{},"body":{"license.html":{}}}],["secure",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["secures",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":2773,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2818,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seeddata",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":5085,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":5067,"title":{},"body":{"todo.html":{}}}],["selectedkey",{"_index":635,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["selection",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":4093,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":4896,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4880,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":4486,"title":{},"body":{"license.html":{}}}],["send",{"_index":1526,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":1531,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5557,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":889,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":3431,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":4183,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":4727,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1480,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4375,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":3452,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5501,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4337,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4336,"title":{},"body":{"index.html":{}}}],["serialization",{"_index":5047,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":3531,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["serve",{"_index":4287,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5284,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":842,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":2155,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":2171,"title":{},"body":{"modules/ServerModule.html":{}}}],["server.module",{"_index":2156,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server/overview.html",{"_index":5086,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5065,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":2131,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["serverconsolemodule",{"_index":2147,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":2157,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":4113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":2151,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":4012,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":4557,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":377,"title":{},"body":{"injectables/ConsoleWriter.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":930,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":926,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":917,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":959,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":968,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":965,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":993,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":994,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":949,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":4982,"title":{},"body":{"license.html":{}}}],["session",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":1212,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(permissions",{"_index":2075,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submissionsofstudent.map((submission",{"_index":2556,"title":{},"body":{"injectables/TaskUC.html":{}}}],["setcontext",{"_index":1490,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setparent",{"_index":2265,"title":{},"body":{"classes/Task.html":{}}}],["setparent(parent",{"_index":1226,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["sets",{"_index":3480,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":2656,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":839,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":3630,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1112,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":5196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4618,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4426,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":1552,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/TestHelper.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":133,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1670,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":1714,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":5607,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":57,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/JwtPayload.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1817,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/pipes",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":612,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["shared/repo/base.repo",{"_index":1818,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":5608,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":5611,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharedclient",{"_index":1604,"title":{},"body":{"classes/MongoSharedConnection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedclient?.close(force",{"_index":1617,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["sharetoken",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["shit",{"_index":468,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":764,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4257,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":728,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["shouldnt",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1912,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":3333,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5029,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5541,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":4753,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4474,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":5389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5100,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5522,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4352,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":5940,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":4944,"title":{},"body":{"license.html":{}}}],["single",{"_index":1137,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":1177,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":1133,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":5091,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":3591,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":5985,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":1064,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4291,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":4063,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":4405,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":4738,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4596,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4610,"title":{},"body":{"license.html":{}}}],["solid",{"_index":5955,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":452,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"classes/TaskDomainService.html":{},"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5026,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2639,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["solving",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["someid",{"_index":739,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["something",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":5759,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":2202,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sort(submissions",{"_index":2210,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sorted",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["sortedsubmissions",{"_index":2218,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sorting",{"_index":2440,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["sorting.ts",{"_index":5061,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1179,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":2559,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":1946,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":1175,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["sound",{"_index":2471,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["sounds",{"_index":2469,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5579,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":536,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":2999,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1855,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5534,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5548,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":4697,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4433,"title":{},"body":{"license.html":{}}}],["spec",{"_index":1547,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5162,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4776,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4417,"title":{},"body":{"license.html":{}}}],["specification",{"_index":3491,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4548,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":4966,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1577,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":368,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["spirit",{"_index":4960,"title":{},"body":{"license.html":{}}}],["split",{"_index":5369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":5901,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":5892,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5485,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":5968,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5505,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5169,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":352,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":353,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":868,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/entities",{"_index":609,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/TaskUC.html":{}}}],["src/entities/learnroom/dashboard.entity",{"_index":817,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["src/modules/database",{"_index":5880,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/repositories",{"_index":2395,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["src/repositories/learnroom/dashboard.repo",{"_index":818,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{}}}],["sso",{"_index":78,"title":{},"body":{"classes/Account.html":{}}}],["st",{"_index":2104,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["stabilisation",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":5328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":1080,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":4544,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4547,"title":{},"body":{"license.html":{}}}],["start",{"_index":4396,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":2761,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":3846,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5228,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":1066,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":3649,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":3565,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":4587,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":4817,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":4094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":538,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardMapper.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4649,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":2227,"title":{},"body":{"classes/StatusDomainService.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.graded",{"_index":2384,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.maxsubmissions",{"_index":2383,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.submitted",{"_index":2382,"title":{},"body":{"classes/TaskMapper.html":{}}}],["statusdomainservice",{"_index":2198,"title":{"classes/StatusDomainService.html":{}},"body":{"classes/StatusDomainService.html":{},"classes/TaskDomainService.html":{},"coverage.html":{}}}],["statusdomainservice(submissions",{"_index":2359,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["stay",{"_index":5356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4445,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1591,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2840,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":2853,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5550,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":5894,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategie",{"_index":2341,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["strategies",{"_index":4123,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1345,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":5317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1486,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1713,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4295,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":954,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":5987,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5573,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5574,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":1488,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5059,"title":{},"body":{"todo.html":{}}}],["student",{"_index":1249,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":2543,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":1250,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":1256,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentids",{"_index":413,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["studentnumber",{"_index":2368,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["students",{"_index":511,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["students[0",{"_index":2426,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["studio",{"_index":4367,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4394,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1322,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":4862,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":159,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":4893,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4612,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1254,"title":{"classes/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.grade",{"_index":2213,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradecomment",{"_index":2214,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradecomment.length",{"_index":2215,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradefiles",{"_index":2216,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradefiles.length",{"_index":2217,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.task.id",{"_index":2221,"title":{},"body":{"classes/StatusDomainService.html":{},"injectables/TaskUC.html":{}}}],["submissionrepo",{"_index":2242,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["submissions",{"_index":1253,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskDomainService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["submissions].sort((a",{"_index":2219,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submissionsofstudent",{"_index":2319,"title":{},"body":{"classes/TaskDomainService.html":{},"injectables/TaskUC.html":{}}}],["submissionsofteacher",{"_index":2323,"title":{},"body":{"classes/TaskDomainService.html":{},"injectables/TaskUC.html":{}}}],["submitted",{"_index":2228,"title":{},"body":{"classes/StatusDomainService.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["submittedusers.add(submission.student.id",{"_index":2226,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submittedusers.has(submission.student.id",{"_index":2223,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submittedusers.size",{"_index":2229,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["subprograms",{"_index":4577,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":4706,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5266,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["subsitutionteacher",{"_index":1452,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["substantial",{"_index":4748,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4860,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":436,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteacherids",{"_index":414,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["succeed",{"_index":5841,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":3835,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":4467,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":4904,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4756,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5099,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5040,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5265,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":137,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":5855,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":4779,"title":{},"body":{"license.html":{}}}],["support",{"_index":1315,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":1324,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":737,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5216,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":4001,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":1316,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":4431,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4939,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4816,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4995,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5033,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3355,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":3058,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1960,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2786,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["systemid",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":3958,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":306,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":2589,"title":{},"body":{"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":3220,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["tables",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4164,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":4349,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":3446,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":2936,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":4733,"title":{},"body":{"license.html":{}}}],["tap",{"_index":866,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":530,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":936,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":2261,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":2262,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":1887,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1973,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1885,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1886,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":686,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":934,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":1730,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":1748,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":1861,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["targetkey",{"_index":636,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["targetmodel",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1924,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1969,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":925,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":929,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1972,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":935,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":516,"title":{"classes/Task.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.createdat",{"_index":2379,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1252,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["task.getduedate",{"_index":2378,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.getname",{"_index":2376,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.getparent",{"_index":2367,"title":{},"body":{"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{}}}],["task.getparentid",{"_index":2354,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["task.id",{"_index":2222,"title":{},"body":{"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{}}}],["task.setparent(parent",{"_index":2357,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["task.status",{"_index":2345,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["task.updatedat",{"_index":2380,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":2542,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":2544,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["taskcontroller",{"_index":2279,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskdashboardpermission",{"_index":2539,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":2572,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":2570,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdomainservice",{"_index":2304,"title":{"classes/TaskDomainService.html":{}},"body":{"classes/TaskDomainService.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["taskdomainservice(tasks",{"_index":2560,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskentities",{"_index":2182,"title":{},"body":{"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskids",{"_index":2251,"title":{},"body":{"injectables/SubmissionRepo.html":{},"classes/TaskScope.html":{}}}],["taskidswithsubmissions",{"_index":2555,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskmapper",{"_index":2293,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":2301,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":2162,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparenttestentity",{"_index":2398,"title":{"classes/TaskParentTestEntity.html":{}},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["taskparenttestentity(useridwithwritepermissions",{"_index":2413,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["taskpreparations",{"_index":2342,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["taskrepo",{"_index":2393,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":2292,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["taskresponses",{"_index":2299,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":2281,"title":{},"body":{"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.foreach((task",{"_index":2353,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["taskscope",{"_index":2453,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["taskswithstatus",{"_index":2297,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":2300,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasktesthelper",{"_index":2411,"title":{"classes/TaskTestHelper.html":{}},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["taskuc",{"_index":2290,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":2375,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithsubmissionstatus",{"_index":2320,"title":{},"body":{"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["teacher",{"_index":1259,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/Submission.html":{},"classes/TaskDomainService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":2541,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherids",{"_index":415,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["teachers",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":574,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teamid",{"_index":2585,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teaminfo",{"_index":573,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teammembers",{"_index":1251,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["teamnews",{"_index":602,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":598,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":1778,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["teams",{"_index":1150,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5071,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5298,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5552,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":1042,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4621,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5288,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4532,"title":{},"body":{"license.html":{}}}],["temp",{"_index":2638,"title":{},"body":{"classes/TestHelper.html":{}}}],["template",{"_index":1088,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":451,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TestHelper.html":{},"changelog.html":{}}}],["term",{"_index":4585,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":4822,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4840,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4831,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4819,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3450,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":829,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":845,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":825,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":827,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":5695,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":5263,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testeddefinedvalue",{"_index":4322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["testenvironment",{"_index":5180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testhelper",{"_index":1405,"title":{"classes/TestHelper.html":{}},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"coverage.html":{}}}],["testhelper:11",{"_index":1426,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:14",{"_index":1437,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["testhelper:20",{"_index":1433,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["testhelper:31",{"_index":1444,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:34",{"_index":2513,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["testhelper:36",{"_index":1442,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:38",{"_index":2519,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["testhelper:42",{"_index":1441,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:65",{"_index":1445,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:7",{"_index":1427,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:70",{"_index":1446,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:74",{"_index":1448,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:78",{"_index":1447,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:82",{"_index":1439,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:9",{"_index":1424,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:90",{"_index":1449,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelpers",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":1301,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":833,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":5881,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":5889,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":5885,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":5884,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":5883,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":271,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":371,"title":{},"body":{"injectables/ConsoleWriter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":5609,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":272,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":4471,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":3699,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":2333,"title":{},"body":{"classes/TaskDomainService.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4643,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":2126,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":2125,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":2128,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":2127,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":2669,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addid(course",{"_index":1458,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.addid(coursegroup",{"_index":1463,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.addid(lesson",{"_index":2420,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(submission",{"_index":2424,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(task",{"_index":2417,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(user",{"_index":1453,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addparenttotasks(tasks",{"_index":2352,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["this.addquery",{"_index":617,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1892,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(orquery",{"_index":2130,"title":{},"body":{"classes/Scope.html":{}}}],["this.addquery(queries[0",{"_index":1893,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":1535,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":1320,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1958,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1935,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1974,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1970,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.buildandaddorquery(courses",{"_index":659,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["this.byuseridquery(userid",{"_index":2255,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":2061,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.client",{"_index":1611,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.client.db(this.config.get('dbname",{"_index":1613,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.code",{"_index":358,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":495,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.comment",{"_index":1263,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":2145,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":2146,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.content",{"_index":581,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.courseid",{"_index":519,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["this.courserepo.findallbyuserid(userid",{"_index":2547,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.createandadduser",{"_index":2642,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createcourse(coursetyps.student",{"_index":1459,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createcourse(coursetyps.subsitutionteacher",{"_index":1461,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createcourse(coursetyps.teacher",{"_index":1460,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createentityid",{"_index":1454,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createerrorresponse(error",{"_index":1106,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.createid",{"_index":2419,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["this.createid().tohexstring",{"_index":2618,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createid(parentid",{"_index":2416,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createschool",{"_index":2641,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createsubmission(task",{"_index":2429,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createuser",{"_index":2623,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.creator",{"_index":1002,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{}}}],["this.dashboardrepo.getusersdashboard",{"_index":820,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard",{"_index":717,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":2002,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.db",{"_index":1612,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.description",{"_index":485,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":362,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":583,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.duedate",{"_index":1214,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.em.find(coursegroupinfo",{"_index":2257,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(lessontaskinfo",{"_index":2466,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(course",{"_index":620,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":661,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["this.em.findandcount(news",{"_index":1831,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":2254,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":2465,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1827,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":2060,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":2732,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":330,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(entity",{"_index":324,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(n",{"_index":328,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":325,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.populate(coursenews",{"_index":1841,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":1833,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":1828,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":1839,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(teamnews",{"_index":1840,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(entity",{"_index":331,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":332,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":1283,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":258,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":259,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":246,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":247,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":937,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":924,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":928,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findallcompletedforstudent(currentuser.userid",{"_index":2574,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallopenforstudent(currentuser.userid",{"_index":2573,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallopenforteacher(currentuser.userid",{"_index":2571,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":2062,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findlessons(parentids",{"_index":2454,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1825,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findpermittedtaskparents(userid",{"_index":2552,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findtasksandcount(scope.query",{"_index":2460,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.firstname",{"_index":1279,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["this.getconnectionoptions",{"_index":1609,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.getdefaultmaxduedate",{"_index":2461,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.getentitypermissions(userid",{"_index":251,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getfirstuser",{"_index":2423,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.getnewspermissions(userid",{"_index":1951,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1944,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1967,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":918,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.getusers().map((o",{"_index":1455,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.getusers().map((student",{"_index":2428,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.grade",{"_index":1267,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":1269,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":754,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":2569,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":1470,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["this.id",{"_index":501,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.init",{"_index":2616,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.isgraded(submission",{"_index":2224,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["this.issubstitutionteacher(userid",{"_index":506,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.isteacher(userid",{"_index":505,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":1359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.lastname",{"_index":1281,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["this.limit",{"_index":2005,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1933,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1940,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1952,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1941,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1932,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":869,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":872,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":361,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":1594,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":483,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.findall(targets",{"_index":1948,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1954,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":1939,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":1964,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1679,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1697,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1684,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1693,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1694,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.routingkey",{"_index":1536,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.orm.close",{"_index":1593,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.otheruser",{"_index":2633,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.parent",{"_index":1227,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.parentid",{"_index":1218,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.parentid.tohexstring",{"_index":1221,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.permissions",{"_index":1239,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.preparestatus(submissionsofstudent",{"_index":2370,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["this.preparestatus(submissionsofteacher",{"_index":2365,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["this.private",{"_index":1216,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.propertiestopopulate",{"_index":1829,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.reference",{"_index":750,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.reference.getmetadata",{"_index":753,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.request.app.get('feathersapp",{"_index":979,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(id",{"_index":2072,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles",{"_index":1241,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.roleuc.resolvepermissionsbyidlist(currentuser.roles",{"_index":2745,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.school",{"_index":1285,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/TestHelper.html":{},"classes/User.html":{}}}],["this.schoolid",{"_index":487,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.skip",{"_index":2004,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.spinner.info(text",{"_index":381,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["this.student",{"_index":1261,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.studentids",{"_index":489,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.studentids.includes(userid",{"_index":650,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.submissionrepo.findallbytaskids(tasks.map((o",{"_index":2567,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.submissionrepo.findallbyuserid(userid",{"_index":2554,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.submissions",{"_index":2212,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["this.substitutionteacherids",{"_index":493,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.task",{"_index":1265,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.taskrepo.findall(parentids",{"_index":2566,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallcurrentbyids(parentids",{"_index":2564,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallcurrentignoreids(parentids",{"_index":2558,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.tasks",{"_index":2351,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["this.tasks.map((task",{"_index":2361,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["this.taskuc.findallcompleted(currentuser",{"_index":2303,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskuc.findallopen(currentuser",{"_index":2298,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacherids",{"_index":491,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5068,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":5837,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":360,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":740,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.total",{"_index":2003,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":359,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.user",{"_index":2407,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(payload",{"_index":1362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":2744,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.users",{"_index":2634,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.users.push(newuser",{"_index":2630,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.users[0",{"_index":2631,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(currentuser",{"_index":2712,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":138,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["this.xpos",{"_index":748,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.ypos",{"_index":749,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this[fnname](task",{"_index":2363,"title":{},"body":{"classes/TaskDomainService.html":{}}}],["those",{"_index":4072,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":4781,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":3824,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4522,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":255,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":2660,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":2668,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":2667,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":3989,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":248,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":4602,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4369,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":4371,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":674,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsResponse.html":{},"classes/TaskDomainService.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":1298,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":2671,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":2664,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":2661,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1300,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":2670,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":3342,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":3825,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1844,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4299,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":91,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":63,"title":{"todo.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TestHelper.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1702,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":5851,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4331,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1995,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tovalue",{"_index":1225,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["trace",{"_index":1191,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5547,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5572,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":4804,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4803,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4805,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":3436,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5533,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4523,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4760,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":4858,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1122,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":2008,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":1125,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4205,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":1123,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":1477,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4345,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5464,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":4722,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5563,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":4780,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4627,"title":{},"body":{"license.html":{}}}],["tries",{"_index":4018,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5475,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5566,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":4038,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":576,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1069,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/TestHelper.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":5056,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["tt",{"_index":634,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["two",{"_index":2332,"title":{},"body":{"classes/TaskDomainService.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":1326,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":1169,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":5102,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":5956,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1873,"title":{},"body":{"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/TestHelper.html":{}}}],["typeorm",{"_index":5960,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1555,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":4111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/entity",{"_index":2614,"title":{},"body":{"classes/TestHelper.html":{}}}],["typesafety",{"_index":1691,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":593,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":4745,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5509,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":955,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":2397,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1672,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":2291,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":2711,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":4297,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["uidp",{"_index":2629,"title":{},"body":{"classes/TestHelper.html":{}}}],["un",{"_index":5528,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":885,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":240,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":256,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5472,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2892,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":2627,"title":{},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":5840,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":1100,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":5340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":888,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":3002,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":4300,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":1059,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":1060,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":4751,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":5914,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4591,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4501,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2993,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":4777,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1155,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1392,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["unskip",{"_index":1785,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":453,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskUC.html":{},"classes/TestHelper.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unused",{"_index":2408,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["up",{"_index":3010,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1640,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1926,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1661,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1870,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":17,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["updatenewsparams",{"_index":1662,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":537,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":567,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":4048,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1151,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1804,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":4292,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1257,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":5614,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":887,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":1511,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1012,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":3232,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":4303,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":3663,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskDomainService.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["usecase/dashboard.uc",{"_index":709,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["useclass",{"_index":881,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":456,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":1010,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1570,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":5019,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":5145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usequeryifvalueisdefined",{"_index":4162,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["usequeryifvalueisdefined(testeddefinedvalue",{"_index":2103,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"classes/Account.html":{},"modules/AuthModule.html":{},"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"modules/MongoDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user._id",{"_index":2625,"title":{},"body":{"classes/TestHelper.html":{},"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":2033,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":58,"title":{},"body":{"classes/Account.html":{}}}],["user.facade",{"_index":2728,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":2030,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.id",{"_index":2028,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/TestHelper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":2032,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.ldapdn",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":923,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":5629,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.school.tostring",{"_index":2036,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":921,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.uc.ts",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":2034,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":1368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":2694,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentities",{"_index":2183,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade",{"_index":1339,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/JwtConstants.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":5913,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":931,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["useridobject",{"_index":5208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useridobject.tohexstring",{"_index":5209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userids",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["useridwithwritepermissions",{"_index":2402,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["userinfo",{"_index":544,"title":{"classes/UserInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo.firstname",{"_index":2718,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":2717,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":2719,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1731,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1752,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1755,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1846,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":177,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":13,"title":{},"body":{"classes/Account.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":2726,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1160,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"injectables/NewsUc.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["usertaskinfo",{"_index":514,"title":{"classes/UserTaskInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useruc",{"_index":2699,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":3892,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":847,"title":{},"body":{"controllers/DelayController.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":378,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":3664,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":5850,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":3632,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":4035,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":5195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":5090,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5281,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5095,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1129,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":1295,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":1341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":1381,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":1379,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":116,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":1372,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":1378,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":1376,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":85,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":97,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":2759,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":1110,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":1118,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":407,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":2752,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":96,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":141,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":131,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":144,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":98,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":388,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":1117,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":697,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":5610,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":2012,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/DashboardEntity.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueof",{"_index":5117,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":2347,"title":{},"body":{"classes/TaskDomainService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":3951,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":2823,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":2409,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["verbatim",{"_index":4412,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1186,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":1195,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":1200,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":5943,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":5941,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":3176,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":5874,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":2894,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":4429,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4356,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":2478,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1922,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":551,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":4774,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4826,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4256,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5074,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":550,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":4366,"title":{},"body":{"index.html":{}}}],["void",{"_index":316,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LearnroomTestHelper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4677,"title":{},"body":{"license.html":{}}}],["vor",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":649,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4332,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":5981,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5096,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5297,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":5979,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":4306,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":4633,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5006,"title":{},"body":{"license.html":{}}}],["want",{"_index":4439,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":1187,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":1197,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4534,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4533,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5079,"title":{},"body":{"todo.html":{}}}],["way",{"_index":1575,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4687,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":5023,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":2789,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":2142,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5512,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":1479,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":4742,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":1127,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":1357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":2898,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":4729,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4551,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4457,"title":{},"body":{"license.html":{}}}],["wil",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3679,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":4088,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":3600,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":4379,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4626,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4437,"title":{},"body":{"license.html":{}}}],["within",{"_index":339,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3537,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5053,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["wopi",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":4374,"title":{},"body":{"index.html":{}}}],["work",{"_index":281,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/TaskDomainService.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4569,"title":{},"body":{"license.html":{}}}],["workers",{"_index":2935,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflows",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":3994,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1701,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5454,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":4895,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":5878,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wrapped",{"_index":5156,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wraps",{"_index":5443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":448,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":1097,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":1104,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writer",{"_index":376,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer.service",{"_index":2144,"title":{},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["writer.service.ts",{"_index":367,"title":{},"body":{"injectables/ConsoleWriter.html":{},"coverage.html":{}}}],["writer.service.ts:11",{"_index":370,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer.service.ts:9",{"_index":373,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer/console",{"_index":366,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["writes",{"_index":5553,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":1084,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":1099,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":4973,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4695,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1091,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":744,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4308,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":751,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["xposition",{"_index":758,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xss",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":5486,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":745,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["year",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":4696,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":345,"title":{},"body":{"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"classes/LearnroomTestHelper.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":4910,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":752,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["yposition",{"_index":759,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["yyyy",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/account.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lasttriedFailedLogin\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lasttriedFailedLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: User})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToMany, Property, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { User } from './user.entity';\n\n@Entity({ tableName: 'accounts' })\nexport class Account extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\t// TODO not use partial see INewsProperties, use Object.assign for related entities only.\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tusername: string;\n\t/*\n\t@Property()\n\tpassword: string; // hash and secret inside the application\n\t*/\n\n\t@ManyToMany({ fieldName: 'userIds', type: User })\n\tuser = new Collection(this);\n\n\t@Property()\n\tlasttriedFailedLogin: Date; // iso date\n\n\t// sso keys\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { UserModule } from '../user';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriter.html":{"url":"injectables/ConsoleWriter.html","title":"injectable - ConsoleWriter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/console-writer/console-writer.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/console/console-writer/console-writer.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriter {\n\tspinner = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                schoolId\n                            \n                            \n                                studentIds\n                            \n                            \n                                substitutionTeacherIds\n                            \n                            \n                                teacherIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                getStudentsNumber\n                            \n                            \n                                hasWritePermission\n                            \n                            \n                                    Private\n                                isSubstitutionTeacher\n                            \n                            \n                                    Private\n                                isTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property({fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStudentsNumber\n                        \n                    \n                \n            \n            \n                \ngetStudentsNumber()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:98\n                \n            \n\n\n            \n                \n                    Important using hasWritePermissions and isMember as read and write permission interpretation,\nis only a temporary solution until we have implement an authorization interface that can used.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    isSubstitutionTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:82\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\ninterface ICourseProperties {\n\tname: string;\n\tdescription?: string;\n\tschoolId: ObjectId;\n\tteacherIds?: ObjectId[];\n\tsubstitutionTeacherIds?: ObjectId[];\n\tstudentIds?: ObjectId[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname: string = DEFAULT.name;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@Property()\n\tschoolId: ObjectId;\n\n\t@Index()\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property()\n\tteacherIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionTeacherIds: ObjectId[] = [];\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || DEFAULT.name;\n\t\tthis.description = props.description || DEFAULT.description;\n\t\tthis.schoolId = props.schoolId;\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionTeacherIds = props.substitutionTeacherIds || [];\n\t\tthis.color = props.color || DEFAULT.color;\n\n\t\tObject.assign(this, {});\n\t}\n\n\tgetStudentsNumber(): number {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\treturn (this.studentIds || []).length;\n\t}\n\n\tgetDescriptions(): { color: string; id: EntityId; name: string; description: string } {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tcolor: this.color,\n\t\t};\n\t}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tprivate isTeacher(userId: EntityId): boolean {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\tconst isTeacher = (this.teacherIds || []).map((id) => id.toHexString()).includes(userId);\n\t\treturn isTeacher;\n\t}\n\n\tprivate isSubstitutionTeacher(userId: EntityId): boolean {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\tconst isSubstitutionTeacher = (this.substitutionTeacherIds || []).map((id) => id.toHexString()).includes(userId);\n\t\treturn isSubstitutionTeacher;\n\t}\n\n\t/**\n\t * Important using hasWritePermissions and isMember as read and write permission interpretation,\n\t * is only a temporary solution until we have implement an authorization interface that can used.\n\t */\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst isPrivilegedMember = this.isTeacher(userId) || this.isSubstitutionTeacher(userId);\n\t\treturn isPrivilegedMember;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroupInfo.html":{"url":"classes/CourseGroupInfo.html","title":"class - CourseGroupInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroupInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-group-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: CoursegroupInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        CoursegroupInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface CoursegroupInfoProperties {\n\tstudents?: UserTaskInfo[];\n\tcourseId: ObjectId;\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroupInfo extends BaseEntityWithTimestamps {\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: CoursegroupInfoProperties) {\n\t\tsuper();\n\t\tthis.courseId = props.courseId;\n\n\t\tObject.assign(this, { students: props.students });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:100\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/course.repo.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Course } from '@src/entities';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { studentIds: new ObjectId(userId) };\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Course } from '@src/entities';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { studentIds: new ObjectId(userId) };\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coursegroup.html":{"url":"classes/Coursegroup.html","title":"class - Coursegroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coursegroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                studentIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                            \n                                isMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICoursegroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICoursegroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMember\n                        \n                    \n                \n            \n            \n                \nisMember(userId: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport interface ICoursegroupProperties {\n\tcourseId: ObjectId;\n\tstudentIds?: ObjectId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class Coursegroup extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n\n\t// TODO: isMember vs isStudent\n\tisMember(userId: ObjectId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.courseId;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoursegroupInfoProperties.html":{"url":"interfaces/CoursegroupInfoProperties.html","title":"interface - CoursegroupInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoursegroupInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-group-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         UserTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface CoursegroupInfoProperties {\n\tstudents?: UserTaskInfo[];\n\tcourseId: ObjectId;\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroupInfo extends BaseEntityWithTimestamps {\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: CoursegroupInfoProperties) {\n\t\tsuper();\n\t\tthis.courseId = props.courseId;\n\n\t\tObject.assign(this, { students: props.students });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoursegroupRepo.html":{"url":"injectables/CoursegroupRepo.html","title":"injectable - CoursegroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoursegroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourses(courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\nimport { Coursegroup, Course } from '@src/entities';\n\nclass CoursegroupScope extends Scope {\n\tbyCourses(courses: Course[]): CoursegroupScope {\n\t\tthis.buildAndAddOrQuery(courses, 'id', 'courseId');\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CoursegroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourses(courses: Course[]): Promise> {\n\t\tconst scope = new CoursegroupScope();\n\t\tscope.byCourses(courses);\n\t\tconst [coursegroups, count] = await this.em.findAndCount(Coursegroup, scope.query);\n\t\treturn [coursegroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursegroupScope.html":{"url":"classes/CoursegroupScope.html","title":"class - CoursegroupScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursegroupScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourses\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourses\n                        \n                    \n                \n            \n            \n                \nbyCourses(courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CoursegroupScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\nimport { Coursegroup, Course } from '@src/entities';\n\nclass CoursegroupScope extends Scope {\n\tbyCourses(courses: Course[]): CoursegroupScope {\n\t\tthis.buildAndAddOrQuery(courses, 'id', 'courseId');\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CoursegroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourses(courses: Course[]): Promise> {\n\t\tconst scope = new CoursegroupScope();\n\t\tscope.byCourses(courses);\n\t\tconst [coursegroups, count] = await this.em.findAndCount(Coursegroup, scope.query);\n\t\treturn [coursegroups, count];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/controller/dashboard.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DashboardUc } from '../usecase/dashboard.uc';\n\nimport { Authenticate } from '../../authentication/decorator/auth.decorator';\n\nimport { DashboardResponse } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(/* currentUser.userId */);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElement[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElement[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '../../../entities/learnroom/dashboard.entity';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((gridElement) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\tconst data = gridElement.getMetadata();\n\t\t\telementDTO.id = data.id;\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\n\t\t\tconst pos = gridElement.getPosition();\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsersDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { DashboardEntity, DefaultGridReference, GridElement } from '../../entities/learnroom/dashboard.entity';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tgetUsersDashboard(): Promise {\n\t\tconst gridArray: GridElement[] = [];\n\t\tconst diagonalSize = 5;\n\t\tconst elementReference = new DefaultGridReference('exampletitle');\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/usecase/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity } from '@src/entities/learnroom/dashboard.entity';\nimport { IDashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo) {}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard();\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReference.html":{"url":"classes/DefaultGridReference.html","title":"class - DefaultGridReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElementReference\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTaskInfo.html":{"url":"classes/FileTaskInfo.html","title":"class - FileTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: FileTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        FileTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface FileTaskInfoProperties {\n\tname: string;\n\tcreator: UserTaskInfo;\n}\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n\n\tconstructor(props: FileTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileTaskInfoProperties.html":{"url":"interfaces/FileTaskInfoProperties.html","title":"interface - FileTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         UserTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface FileTaskInfoProperties {\n\tname: string;\n\tcreator: UserTaskInfo;\n}\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n\n\tconstructor(props: FileTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reference\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                            \n                                getPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number, reference: IGridElementReference)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reference\n                                                  \n                                                        \n                                                                        IGridElementReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElementReference\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPosition\n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeacherIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacherIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeacherIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacherIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\ninterface ICourseProperties {\n\tname: string;\n\tdescription?: string;\n\tschoolId: ObjectId;\n\tteacherIds?: ObjectId[];\n\tsubstitutionTeacherIds?: ObjectId[];\n\tstudentIds?: ObjectId[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname: string = DEFAULT.name;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@Property()\n\tschoolId: ObjectId;\n\n\t@Index()\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property()\n\tteacherIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionTeacherIds: ObjectId[] = [];\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || DEFAULT.name;\n\t\tthis.description = props.description || DEFAULT.description;\n\t\tthis.schoolId = props.schoolId;\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionTeacherIds = props.substitutionTeacherIds || [];\n\t\tthis.color = props.color || DEFAULT.color;\n\n\t\tObject.assign(this, {});\n\t}\n\n\tgetStudentsNumber(): number {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\treturn (this.studentIds || []).length;\n\t}\n\n\tgetDescriptions(): { color: string; id: EntityId; name: string; description: string } {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tcolor: this.color,\n\t\t};\n\t}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tprivate isTeacher(userId: EntityId): boolean {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\tconst isTeacher = (this.teacherIds || []).map((id) => id.toHexString()).includes(userId);\n\t\treturn isTeacher;\n\t}\n\n\tprivate isSubstitutionTeacher(userId: EntityId): boolean {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\tconst isSubstitutionTeacher = (this.substitutionTeacherIds || []).map((id) => id.toHexString()).includes(userId);\n\t\treturn isSubstitutionTeacher;\n\t}\n\n\t/**\n\t * Important using hasWritePermissions and isMember as read and write permission interpretation,\n\t * is only a temporary solution until we have implement an authorization interface that can used.\n\t */\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst isPrivilegedMember = this.isTeacher(userId) || this.isSubstitutionTeacher(userId);\n\t\treturn isPrivilegedMember;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoursegroupProperties.html":{"url":"interfaces/ICoursegroupProperties.html","title":"interface - ICoursegroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICoursegroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport interface ICoursegroupProperties {\n\tcourseId: ObjectId;\n\tstudentIds?: ObjectId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class Coursegroup extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n\n\t// TODO: isMember vs isStudent\n\tisMember(userId: ObjectId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.courseId;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTargetInfo = SchoolInfo | TeamInfo | CourseInfo;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { DashboardEntity, DefaultGridReference, GridElement } from '../../entities/learnroom/dashboard.entity';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tgetUsersDashboard(): Promise {\n\t\tconst gridArray: GridElement[] = [];\n\t\tconst diagonalSize = 5;\n\t\tconst elementReference = new DefaultGridReference('exampletitle');\n\t\tfor (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                                \n                                        \n                                            getPosition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getPosition:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElementReference.html":{"url":"interfaces/IGridElementReference.html","title":"interface - IGridElementReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElementReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTargetInfo = SchoolInfo | TeamInfo | CourseInfo;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IParentDescriptionsProperties.html":{"url":"interfaces/IParentDescriptionsProperties.html","title":"interface - IParentDescriptionsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IParentDescriptionsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparentId: ObjectId;\n\tlesson?: LessonTaskInfo;\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetStudentsNumber(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate: boolean;\n\n\t@Property({ fieldName: 'courseId' })\n\tparentId: ObjectId;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@Property({ persist: false })\n\tparent?: ITaskParent;\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = props.private || true;\n\t\tthis.parentId = props.parentId;\n\n\t\tconst lesson = props.lesson || null;\n\t\tObject.assign(this, { lesson });\n\t}\n\n\tgetParentId(): EntityId {\n\t\treturn this.parentId.toHexString();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tgetDueDate(): Date | undefined {\n\t\treturn this.dueDate;\n\t}\n\n\tchangePrivate(toValue?: boolean): boolean {\n\t\tif (toValue) {\n\t\t\tthis.private = toValue;\n\t\t} else {\n\t\t\tthis.private = !this.private;\n\t\t}\n\t\treturn this.private;\n\t}\n\n\tsetParent(parent: ITaskParent | undefined): void {\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.parentId = new ObjectId(parent.id);\n\t\t}\n\t}\n\n\tgetParent(): ITaskParent | undefined {\n\t\treturn this.parent;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroupInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroupInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:     FileTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         UserTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:     FileTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         UserTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\nimport { CourseGroupInfo } from './course-group-info.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: UserTaskInfo;\n\tcourseGroup?: CourseGroupInfo[];\n\tteamMembers?: UserTaskInfo[];\n\tcomment: string;\n\tstudentFiles?: FileTaskInfo[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: FileTaskInfo[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo; // (this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskParent.html":{"url":"interfaces/ITaskParent.html","title":"interface - ITaskParent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskParent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDescriptions\n                                    \n                                \n                                \n                                    \n                                        getStudentsNumber\n                                    \n                                \n                                \n                                    \n                                        hasWritePermission\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IParentDescriptionsProperties\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStudentsNumber\n                        \n                    \n                \n            \n            \n                \ngetStudentsNumber()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparentId: ObjectId;\n\tlesson?: LessonTaskInfo;\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetStudentsNumber(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate: boolean;\n\n\t@Property({ fieldName: 'courseId' })\n\tparentId: ObjectId;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@Property({ persist: false })\n\tparent?: ITaskParent;\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = props.private || true;\n\t\tthis.parentId = props.parentId;\n\n\t\tconst lesson = props.lesson || null;\n\t\tObject.assign(this, { lesson });\n\t}\n\n\tgetParentId(): EntityId {\n\t\treturn this.parentId.toHexString();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tgetDueDate(): Date | undefined {\n\t\treturn this.dueDate;\n\t}\n\n\tchangePrivate(toValue?: boolean): boolean {\n\t\tif (toValue) {\n\t\t\tthis.private = toValue;\n\t\t} else {\n\t\t\tthis.private = !this.private;\n\t\t}\n\t\treturn this.private;\n\t}\n\n\tsetParent(parent: ITaskParent | undefined): void {\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.parentId = new ObjectId(parent.id);\n\t\t}\n\t}\n\n\tgetParent(): ITaskParent | undefined {\n\t\treturn this.parent;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            parentId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         LessonTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LessonTaskInfo\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparentId: ObjectId;\n\tlesson?: LessonTaskInfo;\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetStudentsNumber(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate: boolean;\n\n\t@Property({ fieldName: 'courseId' })\n\tparentId: ObjectId;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@Property({ persist: false })\n\tparent?: ITaskParent;\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = props.private || true;\n\t\tthis.parentId = props.parentId;\n\n\t\tconst lesson = props.lesson || null;\n\t\tObject.assign(this, { lesson });\n\t}\n\n\tgetParentId(): EntityId {\n\t\treturn this.parentId.toHexString();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tgetDueDate(): Date | undefined {\n\t\treturn this.dueDate;\n\t}\n\n\tchangePrivate(toValue?: boolean): boolean {\n\t\tif (toValue) {\n\t\t\tthis.private = toValue;\n\t\t} else {\n\t\t\tthis.private = !this.private;\n\t\t}\n\t\treturn this.private;\n\t}\n\n\tsetParent(parent: ITaskParent | undefined): void {\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.parentId = new ObjectId(parent.id);\n\t\t}\n\t}\n\n\tgetParent(): ITaskParent | undefined {\n\t\treturn this.parent;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName: string;\n\tlastName: string;\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties-1.html":{"url":"interfaces/IUserProperties-1.html","title":"interface - IUserProperties-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserTaskInfoProperties.html":{"url":"interfaces/IUserTaskInfoProperties.html","title":"interface - IUserTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\ninterface IUserTaskInfoProperties {\n\tfirstName: string;\n\tlastName: string;\n}\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: IUserTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { UserFacade } from '../../user';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(payload);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/lernroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { DashboardUc } from './usecase/dashboard.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LearnroomTestHelper.html":{"url":"classes/LearnroomTestHelper.html","title":"class - LearnroomTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LearnroomTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/testHelper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TestHelper\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCourse\n                            \n                            \n                                createCoursegroup\n                            \n                            \n                                createSchool\n                            \n                            \n                                createStudentCourse\n                            \n                            \n                                createSubstitutionCourse\n                            \n                            \n                                createTeacherCourse\n                            \n                            \n                                createUser\n                            \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createCourse\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCourse(type: CourseTyps)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                CourseTyps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCoursegroup\n                        \n                    \n                \n            \n            \n                \ncreateCoursegroup(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Coursegroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createStudentCourse\n                        \n                    \n                \n            \n            \n                \ncreateStudentCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubstitutionCourse\n                        \n                    \n                \n            \n            \n                \ncreateSubstitutionCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeacherCourse\n                        \n                    \n                \n            \n            \n                \ncreateTeacherCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntity, EntityId, TestHelper } from '@shared/domain';\n\nimport { Course } from './course.entity';\nimport { Coursegroup } from './coursegroup.entity';\n\nenum CourseTyps {\n\tteacher = 'teacherIds',\n\tstudent = 'studentIds',\n\tsubsitutionTeacher = 'substitutionTeacherIds',\n}\n\nexport class LearnroomTestHelper extends TestHelper {\n\tcreateUser(): BaseEntity {\n\t\tconst user = new BaseEntity();\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tprivate createCourse(type: CourseTyps): Course {\n\t\tconst course = new Course({\n\t\t\t[type]: this.getUsers().map((o) => o._id),\n\t\t\tschoolId: new ObjectId(this.getSchool()),\n\t\t\tname: '',\n\t\t});\n\t\tthis.addId(course);\n\t\treturn course;\n\t}\n\n\tcreateStudentCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.student);\n\t}\n\n\tcreateTeacherCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.teacher);\n\t}\n\n\tcreateSubstitutionCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.subsitutionTeacher);\n\t}\n\n\tcreateCoursegroup(course: Course): Coursegroup {\n\t\tconst studentIds = this.getUsers().map((o) => o._id);\n\t\tconst coursegroup = new Coursegroup({ studentIds, courseId: course._id });\n\t\tthis.addId(coursegroup);\n\t\treturn coursegroup;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonTaskInfo.html":{"url":"classes/LessonTaskInfo.html","title":"class - LessonTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: LessonTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        LessonTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\nimport { BaseEntityWithTimestamps } from '@shared/domain';\n\ninterface LessonTaskInfoProperties {\n\thidden?: boolean;\n\tcourseId: ObjectId;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: LessonTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.hidden = props.hidden || true;\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LessonTaskInfoProperties.html":{"url":"interfaces/LessonTaskInfoProperties.html","title":"interface - LessonTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LessonTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\nimport { BaseEntityWithTimestamps } from '@shared/domain';\n\ninterface LessonTaskInfoProperties {\n\thidden?: boolean;\n\tcourseId: ObjectId;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: LessonTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.hidden = props.hidden || true;\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoDatabaseModule.html":{"url":"modules/MongoDatabaseModule.html","title":"module - MongoDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-database.module.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* istanbul ignore file */\n// TODO add spec when this will be really used\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { MongoSharedDriver } from './mongo-shared-driver';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '../../../config';\nimport { MongoDatabaseModuleOptions } from '../types';\n\n@Module({})\nexport class MongoDatabaseModule {\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoDatabaseModule,\n\t\t\timports: [\n\t\t\t\tMikroOrmModule.forRoot({\n\t\t\t\t\t...(options || {}),\n\t\t\t\t\tdriver: MongoSharedDriver,\n\t\t\t\t\tclientUrl: DB_URL,\n\t\t\t\t\tuser: DB_USERNAME,\n\t\t\t\t\tpassword: DB_PASSWORD,\n\t\t\t\t}),\n\t\t\t],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\nimport { MongoDatabaseModuleOptions } from '../types';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoSharedConnection.html":{"url":"classes/MongoSharedConnection.html","title":"class - MongoSharedConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoSharedConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MongoConnection\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(force?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoConnection } from '@mikro-orm/mongodb';\nimport { MongoClient } from 'mongodb';\n\n// the shared mongo client\nlet sharedClient: MongoClient | undefined;\n\n// keep a list of references to all open mikro-orm mongo connections\nconst connections: Array = [];\n\nexport class MongoSharedConnection extends MongoConnection {\n\tasync connect(): Promise {\n\t\tif (!sharedClient) {\n\t\t\tsharedClient = await MongoClient.connect(this.config.getClientUrl(), this.getConnectionOptions());\n\t\t}\n\t\tconnections.push(this);\n\t\tthis.client = sharedClient;\n\t\tthis.db = this.client.db(this.config.get('dbName'));\n\t}\n\n\tasync close(force?: boolean): Promise {\n\t\t// remove from list of references\n\t\tconnections.splice(connections.indexOf(this), 1);\n\t\tif (connections.length === 0) {\n\t\t\t// close client when there are no more references\n\t\t\tawait sharedClient?.close(force);\n\t\t\tsharedClient = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoSharedDriver.html":{"url":"classes/MongoSharedDriver.html","title":"class - MongoSharedDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoSharedDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MongoDriver\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                connection\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MongoSharedConnection(this.config)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MongoDriver } from '@mikro-orm/mongodb';\nimport { MongoSharedConnection } from './mongo-shared-connection';\n\nexport class MongoSharedDriver extends MongoDriver {\n\tprotected readonly connection = new MongoSharedConnection(this.config);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetInfo\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:50\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:54\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery, PaginationResponse } from '@shared/controller';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetInfo, NewsTargetModel } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:21\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:41\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:34\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { CourseNews, News, SchoolNews, TeamNews } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:55\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions, SortOrder } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResolvedUser } from '../controller/dto';\nimport { User, Role } from '../entity';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { Role } from '../entity';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByIdList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByIdList\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByIdList(ids: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { IPermissionsAndRoles } from '../entity';\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByIdList(ids: EntityId[]): Promise {\n\t\tconst roles = await Promise.all(ids.map((id) => this.roleRepo.resolvePermissionsFromSubRolesById(id)));\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:94\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:71\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\ntype QueryObject = Record>;\ntype OrQuery = { $or: QueryObject[] };\n\nexport function isDefined(input: T): boolean {\n\treturn input !== null && input !== undefined;\n}\n\nexport function isDefinedQuery(input: T): boolean {\n\treturn isDefined(input) && typeof input === 'object' && Object.keys(input).length > 0;\n}\n\n// TODO: EmptyResultQuery only include _id maybe undefined is better in this case\nexport function useQueryIfValueIsDefined(testedDefinedvalue: TT, query: ST): ST | EmptyResultQueryType {\n\tlet result: ST | EmptyResultQueryType = query;\n\n\tif (!isDefined(testedDefinedvalue)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\tif (!isDefinedQuery(query)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\treturn result;\n}\n\nexport function forceArray(input: Array): Array {\n\treturn Array.isArray(input) ? input : [];\n}\n\nfunction isDefinedObjectValue(object: T, key: string): boolean {\n\treturn isDefined(object) && isDefined(key) && isDefined(object[key]);\n}\n\nexport function createOrQueryFromList(arrayOfObjects: Array, selectedKey: string, targetKey: string): OrQuery {\n\tconst reducer = (accumulator: QueryObject[], currentValue: T) => {\n\t\tif (isDefinedObjectValue(currentValue, selectedKey)) {\n\t\t\tconst value = currentValue[selectedKey] as Partial;\n\t\t\tconst queryElement = { [targetKey]: value };\n\t\t\taccumulator.push(queryElement);\n\t\t}\n\t\treturn accumulator;\n\t};\n\n\tif (isDefined(selectedKey) && isDefined(targetKey)) {\n\t\tconst arrayOfQuerys = forceArray(arrayOfObjects).reduce(reducer, []);\n\t\treturn { $or: arrayOfQuerys };\n\t}\n\treturn { $or: [] };\n}\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n\n\tbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string): void {\n\t\tif (arrayOfObjects.length > 0) {\n\t\t\tconst orQuery = createOrQueryFromList(arrayOfObjects, selectedKey, targetKey) as FilterQuery;\n\t\t\tthis.addQuery(orQuery);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriter } from './console-writer/console-writer.service';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriter) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\ncluster_ServerConsoleModule_providers\n\n\n\n\nServerModule\n\nServerModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nServerModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriter\n\nConsoleWriter\n\nServerConsoleModule -->\n\nConsoleWriter->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/server-console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ServerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ServerConsole } from './server.console';\nimport { ServerModule } from '../server.module';\nimport { ConsoleWriter } from './console-writer/console-writer.service';\n\n@Module({\n\timports: [ServerModule, ConsoleModule],\n\tproviders: [\n\t\tConsoleWriter,\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { LearnroomModule } from './modules/lernroom/lernroom.module';\n\nimport { Course, Coursegroup } from './entities';\n\nimport {\n\tCourseNews,\n\tNews,\n\tSchoolInfo,\n\tSchoolNews,\n\tTeamNews,\n\tUserInfo,\n\tCourseInfo,\n\tTeamInfo,\n} from './modules/news/entity';\n\nimport { Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo } from './modules/task/entity';\n\nimport { User, Role, Account } from './modules/user/entity';\n\nconst entities = [Course, Coursegroup];\nconst courseEntities = [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo];\nconst taskEntities = [Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo];\nconst userEntities = [User, Role, Account];\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [...entities, ...courseEntities, ...taskEntities, ...userEntities],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusDomainService.html":{"url":"classes/StatusDomainService.html","title":"class - StatusDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/domain/StatusDomainService.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                submissions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStatusToTask\n                            \n                            \n                                    Private\n                                isGraded\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submissions: Submission[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submissions\n                                                  \n                                                        \n                                                                        Submission[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Submission[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStatusToTask\n                        \n                    \n                \n            \n            \n                \naddStatusToTask(task: Task, maxSubmissions: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxSubmissions\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGraded\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGraded(submission: Submission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submission\n                                    \n                                                Submission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(submissions: Submission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submissions\n                                    \n                                                Submission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Submission, Task } from '../entity';\n\nexport class StatusDomainService {\n\tsubmissions: Submission[];\n\n\tconstructor(submissions: Submission[]) {\n\t\tthis.submissions = submissions;\n\t}\n\n\tprivate isGraded(submission: Submission): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof submission.grade === 'number' && submission.grade >= 0) ||\n\t\t\t(typeof submission.gradeComment === 'string' && submission.gradeComment.length > 0) ||\n\t\t\t(submission.gradeFiles !== undefined && submission.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tprivate sort(submissions: Submission[]): Submission[] {\n\t\tconst sortedSubmissions = [...submissions].sort((a: Submission, b: Submission) => {\n\t\t\tif (a.createdAt  {\n\t\t\tif (submission.task.id === task.id) {\n\t\t\t\tif (!submittedUsers.has(submission.student.id) && this.isGraded(submission)) {\n\t\t\t\t\tgradedUsers.add(submission.student.id);\n\t\t\t\t}\n\t\t\t\tsubmittedUsers.add(submission.student.id);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\ttask,\n\t\t\tstatus: {\n\t\t\t\tsubmitted: submittedUsers.size,\n\t\t\t\tmaxSubmissions,\n\t\t\t\tgraded: gradedUsers.size,\n\t\t\t},\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroupInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'gradeFileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'fileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'teamMembers', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\nimport { CourseGroupInfo } from './course-group-info.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: UserTaskInfo;\n\tcourseGroup?: CourseGroupInfo[];\n\tteamMembers?: UserTaskInfo[];\n\tcomment: string;\n\tstudentFiles?: FileTaskInfo[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: FileTaskInfo[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo; // (this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId } from '@shared/domain';\n\n// CourseGroupInfo must use from learnroom\nimport { CourseGroupInfo, Submission } from '../entity';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroupInfo, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTargetInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTargetInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TargetInfoResponse } from '../controller/dto/target-info.response';\nimport { NewsTargetInfo } from '../entity';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTargetInfo): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parent\n                            \n                            \n                                parentId\n                            \n                            \n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePrivate\n                            \n                            \n                                getDueDate\n                            \n                            \n                                getName\n                            \n                            \n                                getParent\n                            \n                            \n                                getParentId\n                            \n                            \n                                setParent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskParent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({persist: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePrivate\n                        \n                    \n                \n            \n            \n                \nchangePrivate(toValue?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDueDate\n                        \n                    \n                \n            \n            \n                \ngetDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Date | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParent\n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ITaskParent | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setParent\n                        \n                    \n                \n            \n            \n                \nsetParent(parent: ITaskParent | undefined)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                ITaskParent | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparentId: ObjectId;\n\tlesson?: LessonTaskInfo;\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetStudentsNumber(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate: boolean;\n\n\t@Property({ fieldName: 'courseId' })\n\tparentId: ObjectId;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@Property({ persist: false })\n\tparent?: ITaskParent;\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = props.private || true;\n\t\tthis.parentId = props.parentId;\n\n\t\tconst lesson = props.lesson || null;\n\t\tObject.assign(this, { lesson });\n\t}\n\n\tgetParentId(): EntityId {\n\t\treturn this.parentId.toHexString();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tgetDueDate(): Date | undefined {\n\t\treturn this.dueDate;\n\t}\n\n\tchangePrivate(toValue?: boolean): boolean {\n\t\tif (toValue) {\n\t\t\tthis.private = toValue;\n\t\t} else {\n\t\t\tthis.private = !this.private;\n\t\t}\n\t\treturn this.private;\n\t}\n\n\tsetParent(parent: ITaskParent | undefined): void {\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.parentId = new ObjectId(parent.id);\n\t\t}\n\t}\n\n\tgetParent(): ITaskParent | undefined {\n\t\treturn this.parent;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllCompleted\n                            \n                            \n                                    Async\n                                findAllOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCompleted(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('completed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllOpen\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpen(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('open')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationResponse, PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('open')\n\tasync findAllOpen(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAllOpen(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n\n\t@Get('completed')\n\tasync findAllCompleted(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAllCompleted(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskDomainService.html":{"url":"classes/TaskDomainService.html","title":"class - TaskDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/domain/TaskDomainService.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addParentToTasks\n                            \n                            \n                                computeStatusForStudents\n                            \n                            \n                                computeStatusForTeachers\n                            \n                            \n                                    Private\n                                getMaxSubmissionsForStudentsByCourseId\n                            \n                            \n                                    Private\n                                getMaxSubmissionsForTeachersByCourseId\n                            \n                            \n                                    Private\n                                prepareStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasks: Task[], parents: ITaskParent[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/domain/TaskDomainService.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasks\n                                                  \n                                                        \n                                                                        Task[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parents\n                                                  \n                                                        \n                                                                        ITaskParent[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/domain/TaskDomainService.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addParentToTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    addParentToTasks(tasks: Task[], parents: ITaskParent[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/TaskDomainService.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parents\n                                    \n                                                ITaskParent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        computeStatusForStudents\n                        \n                    \n                \n            \n            \n                \ncomputeStatusForStudents(submissionsOfStudent: Submission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/TaskDomainService.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submissionsOfStudent\n                                    \n                                                Submission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithSubmissionStatus[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        computeStatusForTeachers\n                        \n                    \n                \n            \n            \n                \ncomputeStatusForTeachers(submissionsOfTeacher: Submission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/TaskDomainService.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submissionsOfTeacher\n                                    \n                                                Submission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithSubmissionStatus[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMaxSubmissionsForStudentsByCourseId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaxSubmissionsForStudentsByCourseId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/TaskDomainService.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMaxSubmissionsForTeachersByCourseId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaxSubmissionsForTeachersByCourseId(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/TaskDomainService.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        prepareStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareStatus(submissions: Submission[], fnName: MaxSubmissionsOperations)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/TaskDomainService.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submissions\n                                    \n                                                Submission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fnName\n                                    \n                                                MaxSubmissionsOperations\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithSubmissionStatus[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Task, Submission, ITaskParent } from '../entity';\n\nimport { StatusDomainService } from './StatusDomainService';\n\n// That is bad with this two type i think...\ntype ISubmissionStatus = {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n};\n\nexport type TaskWithSubmissionStatus = {\n\ttask: Task;\n\tstatus: ISubmissionStatus;\n};\n\n// _THIS FILE AND LOGIC CAN IMPROVED A LOT BY RESORTING_\n// find better solution over inline strategie in TaskPreparations\n// it is all the time a combination of compute Task.status and compute maxSubmission values\n// create a additional class with interface for it\n// also status a possible key field in task that we can use task as return type with filled or empty status\nenum MaxSubmissionsOperations {\n\tteacher = 'getMaxSubmissionsForTeachersByCourseId',\n\tstudent = 'getMaxSubmissionsForStudentsByCourseId',\n}\n\nexport class TaskDomainService {\n\ttasks: Task[];\n\n\tconstructor(tasks: Task[], parents: ITaskParent[]) {\n\t\tthis.tasks = this.addParentToTasks(tasks, parents);\n\t}\n\n\tprivate addParentToTasks(tasks: Task[], parents: ITaskParent[]): Task[] {\n\t\ttasks.forEach((task) => {\n\t\t\tconst parentId = task.getParentId();\n\t\t\tconst parent = parents.find((p) => p.id === parentId);\n\t\t\ttask.setParent(parent);\n\t\t});\n\t\treturn tasks;\n\t}\n\n\tprivate prepareStatus(submissions: Submission[], fnName: MaxSubmissionsOperations): TaskWithSubmissionStatus[] {\n\t\tconst domain = new StatusDomainService(submissions);\n\t\tconst computedTasks = this.tasks.map((task) => domain.addStatusToTask(task, this[fnName](task)));\n\t\treturn computedTasks;\n\t}\n\n\t// teacher\n\t// TODO: is must also work with coursegroups\n\tcomputeStatusForTeachers(submissionsOfTeacher: Submission[]): TaskWithSubmissionStatus[] {\n\t\tconst computedTask = this.prepareStatus(submissionsOfTeacher, MaxSubmissionsOperations.teacher);\n\t\treturn computedTask;\n\t}\n\n\tprivate getMaxSubmissionsForTeachersByCourseId(task: Task): number {\n\t\tconst parent = task.getParent();\n\t\tconst studentNumber = parent !== undefined ? parent.getStudentsNumber() : 0;\n\t\treturn studentNumber;\n\t}\n\n\t// students\n\tcomputeStatusForStudents(submissionsOfStudent: Submission[]): TaskWithSubmissionStatus[] {\n\t\tconst computedTask = this.prepareStatus(submissionsOfStudent, MaxSubmissionsOperations.student);\n\t\treturn computedTask;\n\t}\n\n\tprivate getMaxSubmissionsForStudentsByCourseId(): number {\n\t\treturn 1;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithSubmissionStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithSubmissionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { TaskWithSubmissionStatus } from '../domain';\n\nexport class TaskMapper {\n\t// TODO: add status to task\n\tstatic mapToResponse(taskWithStatus: TaskWithSubmissionStatus): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst dto = new TaskResponse();\n\n\t\tdto.id = task.id;\n\t\tdto.name = task.getName();\n\t\tdto.duedate = task.getDueDate();\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = {\n\t\t\tsubmitted: status.submitted,\n\t\t\tmaxSubmissions: status.maxSubmissions,\n\t\t\tgraded: status.graded,\n\t\t};\n\n\t\tconst parent = task.getParent();\n\t\tif (parent !== undefined) {\n\t\t\tconst parentData = parent.getDescriptions();\n\t\t\tdto.courseName = parentData.name;\n\t\t\tdto.displayColor = parentData.color;\n\t\t}\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            SubmissionRepo\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo } from '@src/repositories';\n\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { SubmissionRepo, TaskRepo } from './repo';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, SubmissionRepo, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskParentTestEntity.html":{"url":"classes/TaskParentTestEntity.html","title":"class - TaskParentTestEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskParentTestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/utils/TestHelper.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITaskParent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                getStudentsNumber\n                            \n                            \n                                hasWritePermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userIdWithWritePermissions?: EntityId)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userIdWithWritePermissions\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IParentDescriptionsProperties\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStudentsNumber\n                        \n                    \n                \n            \n            \n                \ngetStudentsNumber()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, TestHelper } from '@shared/domain';\n\nimport { Submission, Task, UserTaskInfo, LessonTaskInfo, ITaskParent, IParentDescriptionsProperties } from '../entity';\n\nexport class TaskParentTestEntity implements ITaskParent {\n\tid: EntityId;\n\n\tuser?: EntityId;\n\n\tconstructor(userIdWithWritePermissions?: EntityId) {\n\t\tthis.user = userIdWithWritePermissions;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst hasWritePermission = this.user !== undefined ? this.user === userId : false;\n\t\treturn hasWritePermission;\n\t}\n\n\tgetDescriptions(): IParentDescriptionsProperties {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tcolor: 'FFFFFF',\n\t\t\tname: 'Parent',\n\t\t};\n\t}\n\n\tgetStudentsNumber(): number {\n\t\treturn 10;\n\t}\n}\n\nexport class TaskTestHelper extends TestHelper {\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tcreateUser(): UserTaskInfo {\n\t\tconst user = new UserTaskInfo({ lastName: '', firstName: '' });\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateTaskParent(userIdWithWritePermissions?: EntityId): TaskParentTestEntity {\n\t\tconst parent = new TaskParentTestEntity(userIdWithWritePermissions);\n\t\tparent.id = this.createEntityId();\n\t\treturn parent;\n\t}\n\n\tcreateTask(parentId?: EntityId, dueDate?: Date): Task {\n\t\tconst id = this.createId(parentId);\n\t\tconst task = new Task({ name: '', parentId: id, dueDate });\n\t\tthis.addId(task);\n\t\treturn task;\n\t}\n\n\tcreateLessonWithTask(): { task: Task; lesson: LessonTaskInfo; parentId: EntityId } {\n\t\tconst parentId = this.createId();\n\t\tconst lesson = new LessonTaskInfo({ courseId: parentId });\n\t\tthis.addId(lesson);\n\t\tconst task = new Task({ name: '', parentId, lesson });\n\t\tthis.addId(task);\n\t\treturn { task, lesson, parentId: parentId.toHexString() };\n\t}\n\n\tcreateSubmission(task: Task, student?: UserTaskInfo): Submission {\n\t\tconst user = (student || this.getFirstUser()) as UserTaskInfo;\n\t\tconst submission = new Submission({ student: user, comment: '', task });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateTeamMemberSubmission(task: Task, students: UserTaskInfo[]): Submission {\n\t\tconst submission = new Submission({ student: students[0], comment: '', task, teamMembers: students });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateSubmissionsForEachStudent(task: Task): Submission[] {\n\t\tconst submissions = this.getUsers().map((student) => {\n\t\t\tconst submission = this.createSubmission(task, student as UserTaskInfo);\n\t\t\treturn submission;\n\t\t});\n\t\treturn submissions;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllCurrentByIds\n                            \n                            \n                                    Async\n                                findAllCurrentIgnoreIds\n                            \n                            \n                                    Private\n                                    Async\n                                findLessons\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(parentIds: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:23\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCurrentByIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCurrentByIds(parentIds: EntityId[], ids: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:43\n                \n            \n\n\n            \n                \n                    Find all currently active tasks by their parent ids and a list of task ids.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    ids\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task ids to include\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCurrentIgnoreIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCurrentIgnoreIds(parentIds: EntityId[], ignoreIds: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:71\n                \n            \n\n\n            \n                \n                    Find all currently active tasks by their parent ids ignoring a list of task ids.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    ignoreIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        task ids to ignore\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findLessons\n                        \n                    \n                \n            \n            \n                \n                    \n                    findLessons(parentIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, FilterQuery, QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\n\n// TODO lessonTaskInfo must deleted\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { Task, LessonTaskInfo } from '../entity';\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * Find all tasks by their parents.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAll(parentIds: EntityId[], options?: IFindOptions): Promise> {\n\t\tconst lessons = await this.findLessons(parentIds);\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParents(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(lessons.map((o) => o.id));\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\t/**\n\t * Find all currently active tasks by their parent ids and a list of task ids.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param ids task ids to include\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllCurrentByIds(\n\t\tparentIds: EntityId[],\n\t\tids: EntityId[],\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst lessons = await this.findLessons(parentIds);\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParents(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(lessons.map((o) => o.id));\n\t\tscope.afterDueDateOrNone(dueDate);\n\n\t\tscope.byIds(ids);\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\t/**\n\t * Find all currently active tasks by their parent ids ignoring a list of task ids.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param ignoreIds task ids to ignore\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllCurrentIgnoreIds(\n\t\tparentIds: EntityId[],\n\t\tignoreIds: EntityId[] = [],\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst lessons = await this.findLessons(parentIds);\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParents(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(lessons.map((o) => o.id));\n\t\tscope.afterDueDateOrNone(dueDate);\n\n\t\tscope.ignoreIds(ignoreIds);\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\treturn [taskEntities, count];\n\t}\n\n\tprivate async findLessons(parentIds: EntityId[]): Promise {\n\t\tconst lessons = await this.em.find(LessonTaskInfo, {\n\t\t\tcourseId: { $in: parentIds.map((id) => new ObjectId(id)) },\n\t\t\thidden: false,\n\t\t});\n\t\treturn lessons;\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\t// TODO: date sounds like domain logic if this go out, after it student and teacher has only different order logic\n\t\t// that also sound like it should manage over scope helper in uc.\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byIds\n                            \n                            \n                                byLessonsOrNone\n                            \n                            \n                                byParents\n                            \n                            \n                                byPublic\n                            \n                            \n                                ignoreIds\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byIds\n                        \n                    \n                \n            \n            \n                \nbyIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonsOrNone\n                        \n                    \n                \n            \n            \n                \nbyLessonsOrNone(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byParents\n                        \n                    \n                \n            \n            \n                \nbyParents(parentIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byPublic\n                        \n                    \n                \n            \n            \n                \nbyPublic()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ignoreIds\n                        \n                    \n                \n            \n            \n                \nignoreIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { Scope } from '@shared/repo';\nimport { Task } from '../entity';\n\nexport class TaskScope extends Scope {\n\tbyParents(parentIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ parentId: { $in: parentIds.map((id) => new ObjectId(id)) } });\n\t\treturn this;\n\t}\n\n\tbyPublic(): TaskScope {\n\t\tthis.addQuery({ private: { $ne: true } });\n\t\treturn this;\n\t}\n\n\tbyLessonsOrNone(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ $or: [{ lesson: { $in: lessonIds } }, { lesson: null }] });\n\t\treturn this;\n\t}\n\n\tbyIds(taskIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ id: { $in: taskIds } });\n\t\treturn this;\n\t}\n\n\tignoreIds(taskIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ id: { $nin: taskIds } });\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskTestHelper.html":{"url":"classes/TaskTestHelper.html","title":"class - TaskTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/utils/TestHelper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TestHelper\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLessonWithTask\n                            \n                            \n                                createSchool\n                            \n                            \n                                createSubmission\n                            \n                            \n                                createSubmissionsForEachStudent\n                            \n                            \n                                createTask\n                            \n                            \n                                createTaskParent\n                            \n                            \n                                createTeamMemberSubmission\n                            \n                            \n                                createUser\n                            \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLessonWithTask\n                        \n                    \n                \n            \n            \n                \ncreateLessonWithTask()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubmission\n                        \n                    \n                \n            \n            \n                \ncreateSubmission(task: Task, student?: UserTaskInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    student\n                                    \n                                                UserTaskInfo\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubmissionsForEachStudent\n                        \n                    \n                \n            \n            \n                \ncreateSubmissionsForEachStudent(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask(parentId?: EntityId, dueDate?: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTaskParent\n                        \n                    \n                \n            \n            \n                \ncreateTaskParent(userIdWithWritePermissions?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIdWithWritePermissions\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskParentTestEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeamMemberSubmission\n                        \n                    \n                \n            \n            \n                \ncreateTeamMemberSubmission(task: Task, students: UserTaskInfo[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    students\n                                    \n                                                UserTaskInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         UserTaskInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, TestHelper } from '@shared/domain';\n\nimport { Submission, Task, UserTaskInfo, LessonTaskInfo, ITaskParent, IParentDescriptionsProperties } from '../entity';\n\nexport class TaskParentTestEntity implements ITaskParent {\n\tid: EntityId;\n\n\tuser?: EntityId;\n\n\tconstructor(userIdWithWritePermissions?: EntityId) {\n\t\tthis.user = userIdWithWritePermissions;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst hasWritePermission = this.user !== undefined ? this.user === userId : false;\n\t\treturn hasWritePermission;\n\t}\n\n\tgetDescriptions(): IParentDescriptionsProperties {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tcolor: 'FFFFFF',\n\t\t\tname: 'Parent',\n\t\t};\n\t}\n\n\tgetStudentsNumber(): number {\n\t\treturn 10;\n\t}\n}\n\nexport class TaskTestHelper extends TestHelper {\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tcreateUser(): UserTaskInfo {\n\t\tconst user = new UserTaskInfo({ lastName: '', firstName: '' });\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateTaskParent(userIdWithWritePermissions?: EntityId): TaskParentTestEntity {\n\t\tconst parent = new TaskParentTestEntity(userIdWithWritePermissions);\n\t\tparent.id = this.createEntityId();\n\t\treturn parent;\n\t}\n\n\tcreateTask(parentId?: EntityId, dueDate?: Date): Task {\n\t\tconst id = this.createId(parentId);\n\t\tconst task = new Task({ name: '', parentId: id, dueDate });\n\t\tthis.addId(task);\n\t\treturn task;\n\t}\n\n\tcreateLessonWithTask(): { task: Task; lesson: LessonTaskInfo; parentId: EntityId } {\n\t\tconst parentId = this.createId();\n\t\tconst lesson = new LessonTaskInfo({ courseId: parentId });\n\t\tthis.addId(lesson);\n\t\tconst task = new Task({ name: '', parentId, lesson });\n\t\tthis.addId(task);\n\t\treturn { task, lesson, parentId: parentId.toHexString() };\n\t}\n\n\tcreateSubmission(task: Task, student?: UserTaskInfo): Submission {\n\t\tconst user = (student || this.getFirstUser()) as UserTaskInfo;\n\t\tconst submission = new Submission({ student: user, comment: '', task });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateTeamMemberSubmission(task: Task, students: UserTaskInfo[]): Submission {\n\t\tconst submission = new Submission({ student: students[0], comment: '', task, teamMembers: students });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateSubmissionsForEachStudent(task: Task): Submission[] {\n\t\tconst submissions = this.getUsers().map((student) => {\n\t\t\tconst submission = this.createSubmission(task, student as UserTaskInfo);\n\t\t\treturn submission;\n\t\t});\n\t\treturn submissions;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllCompleted\n                            \n                            \n                                    Async\n                                findAllCompletedForStudent\n                            \n                            \n                                    Async\n                                findAllOpen\n                            \n                            \n                                    Async\n                                findAllOpenForStudent\n                            \n                            \n                                    Async\n                                findAllOpenForTeacher\n                            \n                            \n                                    Private\n                                    Async\n                                findPermittedTaskParents\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, submissionRepo: SubmissionRepo, courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        submissionRepo\n                                                  \n                                                        \n                                                                        SubmissionRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCompleted(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCompletedForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCompletedForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllOpen\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpen(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllOpenForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllOpenForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findPermittedTaskParents\n                        \n                    \n                \n            \n            \n                \n                    \n                    findPermittedTaskParents(userId: EntityId, permission: Permission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                Permission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder } from '@shared/domain';\nimport { CourseRepo } from '@src/repositories';\nimport { Course } from '@src/entities';\n\nimport { TaskRepo, SubmissionRepo } from '../repo';\nimport { TaskDomainService, TaskWithSubmissionStatus } from '../domain';\n\nenum Permission {\n\tread,\n\twrite,\n}\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly submissionRepo: SubmissionRepo,\n\t\tprivate readonly courseRepo: CourseRepo\n\t) {}\n\n\t// coursegroups are missing\n\t// lessons are missing -> only search for hidden: false,\n\tprivate async findPermittedTaskParents(userId: EntityId, permission: Permission): Promise {\n\t\tconst [allCourses] = await this.courseRepo.findAllByUserId(userId);\n\n\t\t// !!! Add Authorization service or logic until it is avaible !!!\n\t\tconst parents = allCourses.filter((c) =>\n\t\t\tpermission === Permission.write ? c.hasWritePermission(userId) : !c.hasWritePermission(userId)\n\t\t);\n\n\t\treturn parents;\n\t}\n\n\tasync findAllOpenForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst parents = await this.findPermittedTaskParents(userId, Permission.read);\n\n\t\tconst [submissionsOfStudent] = await this.submissionRepo.findAllByUserId(userId);\n\t\tconst taskIdsWithSubmissions = [...new Set(submissionsOfStudent.map((submission) => submission.task.id))];\n\n\t\tconst parentIds = parents.map((parent) => parent.id);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllCurrentIgnoreIds(parentIds, taskIdsWithSubmissions, {\n\t\t\tpagination,\n\t\t\torder: { dueDate: SortOrder.asc },\n\t\t});\n\n\t\tconst domain = new TaskDomainService(tasks, parents);\n\t\tconst computedTasks = domain.computeStatusForStudents(submissionsOfStudent);\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tasync findAllCompletedForStudent(\n\t\tuserId: EntityId,\n\t\tpagination: IPagination\n\t): Promise> {\n\t\tconst parents = await this.findPermittedTaskParents(userId, Permission.read);\n\n\t\tconst [submissionsOfStudent] = await this.submissionRepo.findAllByUserId(userId);\n\t\tconst taskIdsWithSubmissions = [...new Set(submissionsOfStudent.map((submission) => submission.task.id))];\n\n\t\tconst parentIds = parents.map((course) => course.id);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllCurrentByIds(parentIds, taskIdsWithSubmissions, {\n\t\t\tpagination,\n\t\t\torder: { dueDate: SortOrder.asc },\n\t\t});\n\n\t\tconst domain = new TaskDomainService(tasks, parents);\n\t\tconst computedTasks = domain.computeStatusForStudents(submissionsOfStudent);\n\n\t\treturn [computedTasks, total];\n\t}\n\n\t// TODO: rename teacher and student\n\tasync findAllOpenForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst parents = await this.findPermittedTaskParents(userId, Permission.write);\n\n\t\tconst parentIds = parents.map((parent) => parent.id);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAll(parentIds, { pagination, order: { createdAt: SortOrder.desc } });\n\t\tconst [submissionsOfTeacher] = await this.submissionRepo.findAllByTaskIds(tasks.map((o) => o.id));\n\n\t\tconst domain = new TaskDomainService(tasks, parents);\n\t\tconst computedTasks = domain.computeStatusForTeachers(submissionsOfTeacher);\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tasync findAllOpen(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllOpenForTeacher(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllOpenForStudent(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tasync findAllCompleted(\n\t\tcurrentUser: ICurrentUser,\n\t\tpagination: IPagination\n\t): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllCompletedForStudent(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\t\treturn hasPermission;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, PaginationResponse, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestHelper.html":{"url":"classes/TestHelper.html","title":"class - TestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/test/helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                    Abstract\n                                createSchool\n                            \n                            \n                                    Abstract\n                                createUser\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/test/helper.ts:11\n                            \n                        \n\n                \n                    \n                            Create two user one that are used for create operations.\nThe other is created for all is not part of created element operations.\nIt also create a school that is used for this two user and all new added users.\nYou get the the user over helper.getFirstUser(), or helper.getUsers(); and helper.getOtherUser();\nBy executing helper.createAndAddUser() the getUsers() list is increased and all create operations will use it.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\n\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntity } from '../entity/base.entity';\n\nexport abstract class TestHelper {\n\tusers: BaseEntity[] = [];\n\n\totherUser: BaseEntity;\n\n\tschool: SchoolType;\n\n\t/**\n\t * Create two user one that are used for create operations.\n\t * The other is created for all is not part of created element operations.\n\t * It also create a school that is used for this two user and all new added users.\n\t *\n\t * You get the the user over helper.getFirstUser(), or helper.getUsers(); and helper.getOtherUser();\n\t * By executing helper.createAndAddUser() the getUsers() list is increased and all create operations will use it.\n\t */\n\tconstructor() {\n\t\tthis.init();\n\t}\n\n\t// That any helper must implement this is a temporary solution until\n\t// user and school entity is avaible in global or shared scope.\n\tabstract createUser(): BaseEntity;\n\n\tabstract createSchool(): SchoolType;\n\n\tcreateId(entityId?: EntityId): ObjectId {\n\t\tconst id = new ObjectId(entityId);\n\t\treturn id;\n\t}\n\n\tcreateEntityId(): EntityId {\n\t\tconst entityId = this.createId().toHexString();\n\t\treturn entityId;\n\t}\n\n\t// If else mapping can removed after the abstract createUser() is replaced by createUser from global user entity.\n\tcreateAndAddUser(user?: BaseEntity | EntityId): void {\n\t\tconst newUser = this.createUser();\n\t\tif (user instanceof BaseEntity) {\n\t\t\tnewUser._id = user._id;\n\t\t\tnewUser.id = user.id;\n\t\t} else if (typeof user === 'string') {\n\t\t\tnewUser.id = user;\n\t\t}\n\n\t\t// TODO try to understand why we need that (uidp)\n\t\t// if (newUser instanceof BaseEntity && user instanceof BaseEntity && user.id) {\n\t\t// \tnewUser.id = user.id;\n\t\t// } else if (newUser instanceof BaseEntity && typeof user === 'string') {\n\t\t// \tnewUser.id = user;\n\t\t// } else if (typeof newUser === 'string' && user instanceof BaseEntity && user.id) {\n\t\t// \tnewUser = user.id;\n\t\t// } else if (typeof newUser === 'string' && typeof user === 'string') {\n\t\t// \tnewUser = user;\n\t\t// }\n\n\t\tthis.users.push(newUser);\n\t}\n\n\tgetFirstUser(): BaseEntity {\n\t\treturn this.users[0];\n\t}\n\n\t// TODO: find better name for existing user that is not part of the ressources\n\tgetOtherUser(): BaseEntity {\n\t\treturn this.otherUser;\n\t}\n\n\tgetUsers(): BaseEntity[] {\n\t\treturn this.users;\n\t}\n\n\tgetSchool(): SchoolType {\n\t\treturn this.school;\n\t}\n\n\tprotected addId(entity: BaseEntity): void {\n\t\tconst id = this.createId();\n\t\tentity.id = id.toHexString();\n\t\tentity._id = id;\n\t}\n\n\t// Temp solution until abstract createUser and createSchool is solved.\n\t// It can move to constructor\n\tprivate init(): void {\n\t\tthis.school = this.createSchool();\n\t\tthis.createAndAddUser();\n\t\tthis.otherUser = this.createUser();\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/user.entity.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName: string;\n\tlastName: string;\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(currentUser: ICurrentUser): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(currentUser);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { User } from '../entity';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTaskInfo.html":{"url":"classes/UserTaskInfo.html","title":"class - UserTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\ninterface IUserTaskInfoProperties {\n\tfirstName: string;\n\tlastName: string;\n}\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: IUserTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(currentUser: ICurrentUser): Promise {\n\t\tconst [user, resolved] = await Promise.all([\n\t\t\tthis.userRepo.findById(currentUser.userId),\n\t\t\tthis.roleUC.resolvePermissionsByIdList(currentUser.roles),\n\t\t]);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\n[Unreleased]\nChanged\nAdded\n\nBC-279 - introduce console application interface to call providers via console command\nBC-9 add entity and repo for course dashboards\nBC-9 add a route to recieve dummy data for course dashboards\n\nFixed\n\nBC-232 prevent users from changing schoolyears\nBC-233 - when an LDAP system is removed from a school, the ldapschoolidentifier and lastLdapSync are removed as well\nmoved some changelog entries into their correct place\n\nRemoved\n\nBC-262 - remove S3 lifecycle configuration code\n\n[26.10.3] - 2021-09-09\nFixed\n\nBC-267 - skip whitelist-check for api requests on /wopi\n\n[26.10.2] - 2021-09-03\nAdded\n\nBC-120 - add feature flag for S3 CORS\nBS-112 - insert missing attribute during school creation\n\n[26.10.1] - 2021-09-03\nFixed\n\nBC-187 - secures the system route\n\n[26.10.0] - 2021-09-03\nFixed\n\nremove broken systemid from seed data\nSC-9083 - expose env variables for school administration\nBC-44 - remove JWT_WHITELIST_ACCEPT_ALL feature flag\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store\nBC-119 - remove malfunction S3 lifecycle migration\nBC-38 - BC-124 - Add ansible files for Bosscloud (default)\nBC-110 - fileStorage/security should only be called from within the cluster\n\nAdded\n\nBC-5 - Show completed tasks for students\n\nChanged\n\nRefactor nestjs task module and resort imports for course and coursegroup entities and repositories. Add testHelpers.\n\n[26.9.2] - 2021-08-27\nChanged\n\nBC-137 - fix bug with display of Blue Bar\n\n[26.9.1] - 2021-08-18\nchanged\n\nSC-9192 - enable cors for nestjs app routes\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n[26.9.0] - 2021-08-14\nchanged\n\nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nAdded\n\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9231 - add permissions to SuperHero to edit admin role\n\nChanged\n\nOPS-2491 - Change the hydra service url\n\n[26.8.0] - 2021-08-10\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/console-writer/console-writer.service.ts\n            \n            injectable\n            ConsoleWriter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/console/console.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/server.console.ts\n            \n            class\n            ServerConsole\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            class\n            Course\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            interface\n            ICourseProperties\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            variable\n            DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/coursegroup.entity.ts\n            \n            class\n            Coursegroup\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/coursegroup.entity.ts\n            \n            interface\n            ICoursegroupProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            DashboardEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            DefaultGridReference\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            GridElement\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            interface\n            IGridElement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            interface\n            IGridElementReference\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/testHelper.ts\n            \n            class\n            LearnroomTestHelper\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                apps/server/src/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/entities/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            injectable\n            JwtValidationAdapter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            class\n            MongoSharedConnection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            variable\n            connections\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            variable\n            sharedClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts\n            \n            class\n            MongoSharedDriver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardGridElementResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts\n            \n            class\n            DashboardMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/usecase/dashboard.uc.ts\n            \n            injectable\n            DashboardUc\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            AppendedAttachment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            HtmlMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            InlineAttachment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            Mail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailAttachment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            PlainTextMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            interface\n            MailModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            variable\n            createRabbitMqModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            interface\n            MailServiceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/target-info.response.ts\n            \n            class\n            TargetInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/team-news.controller.ts\n            \n            controller\n            TeamNewsController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/target-info.mapper.ts\n            \n            class\n            TargetInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/domain/StatusDomainService.ts\n            \n            class\n            StatusDomainService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/domain/TaskDomainService.ts\n            \n            class\n            TaskDomainService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-group-info.entity.ts\n            \n            class\n            CourseGroupInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-group-info.entity.ts\n            \n            interface\n            CoursegroupInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            class\n            FileTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            interface\n            FileTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            class\n            LessonTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            interface\n            LessonTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            interface\n            ISubmissionProperties\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            IParentDescriptionsProperties\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            ITaskParent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            ITaskProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            class\n            UserTaskInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            interface\n            IUserTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task-scope.ts\n            \n            class\n            TaskScope\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/utils/TestHelper.ts\n            \n            class\n            TaskParentTestEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/utils/TestHelper.ts\n            \n            class\n            TaskTestHelper\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n            \n            class\n            ResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            class\n            CourseScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            injectable\n            CourseRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/coursegroup.repo.ts\n            \n            class\n            CoursegroupScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/coursegroup.repo.ts\n            \n            injectable\n            CoursegroupRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            injectable\n            DashboardRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            interface\n            IDashboardRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            courseEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            entities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            taskEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            userEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/validation.error.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IFindOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/test/helper.ts\n            \n            class\n            TestHelper\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/base.repo.ts\n            \n            injectable\n            BaseRepo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            class\n            Scope\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            createOrQueryFromList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            forceArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedObjectValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            useQueryIfValueIsDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.17\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^7.2.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.0\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^5.0.1\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CourseTyps   (apps/.../testHelper.ts)\n                        \n                        \n                            MaxSubmissionsOperations   (apps/.../TaskDomainService.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../task.uc.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/entities/learnroom/testHelper.ts\n    \n        \n            \n                \n                    \n                        \n                        CourseTyps\n                    \n                \n                        \n                            \n                                 teacher\n                            \n                        \n                        \n                            \n                                Value : teacherIds\n                            \n                        \n                        \n                            \n                                 student\n                            \n                        \n                        \n                            \n                                Value : studentIds\n                            \n                        \n                        \n                            \n                                 subsitutionTeacher\n                            \n                        \n                        \n                            \n                                Value : substitutionTeacherIds\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/domain/TaskDomainService.ts\n    \n        \n            \n                \n                    \n                        \n                        MaxSubmissionsOperations\n                    \n                \n                        \n                            \n                                 teacher\n                            \n                        \n                        \n                            \n                                Value : getMaxSubmissionsForTeachersByCourseId\n                            \n                        \n                        \n                            \n                                 student\n                            \n                        \n                        \n                            \n                                Value : getMaxSubmissionsForStudentsByCourseId\n                            \n                        \n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createOrQueryFromList   (apps/.../scope.ts)\n                        \n                        \n                            forceArray   (apps/.../scope.ts)\n                        \n                        \n                            isDefined   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedObjectValue   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedQuery   (apps/.../scope.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                        \n                            useQueryIfValueIsDefined   (apps/.../scope.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n            \n                \ncreateOrQueryFromList(arrayOfObjects, selectedKey, targetKey)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OrQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceArray\n                        \n                    \n                \n            \n            \n                \nforceArray(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefined\n                        \n                    \n                \n            \n            \n                \nisDefined(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedObjectValue\n                        \n                    \n                \n            \n            \n                \nisDefinedObjectValue(object, key)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n            \n                \nisDefinedQuery(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \nuseQueryIfValueIsDefined(testedDefinedvalue, query)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedDefinedvalue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ST | EmptyResultQueryType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\ncluster_ServerConsoleModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nServerModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriter\n\nConsoleWriter\n\nServerConsoleModule -->\n\nConsoleWriter->ServerConsoleModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    27 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    67 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    42 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with  \n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GridElementReferenceMetadata   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../role.entity.ts)\n                        \n                        \n                            ISubmissionStatus   (apps/.../TaskDomainService.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTargetInfo   (apps/.../news.types.ts)\n                        \n                        \n                            OrQuery   (apps/.../scope.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            QueryObject   (apps/.../scope.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskWithSubmissionStatus   (apps/.../TaskDomainService.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrQuery\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryObject\n                \n            \n            \n                \n                        Record>\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/entities/learnroom/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    GridElementReferenceMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/user/entity/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/task/domain/TaskDomainService.ts\n    \n    \n        \n            \n                \n                    \n                    ISubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaskWithSubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetInfo\n                \n            \n            \n                \n                        SchoolInfo | TeamInfo | CourseInfo\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            connections   (apps/.../mongo-shared-connection.ts)\n                        \n                        \n                            courseEntities   (apps/.../server.module.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            entities   (apps/.../server.module.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            sharedClient   (apps/.../mongo-shared-connection.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                            userEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connections\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharedClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoClient | undefined\n\n                    \n                \n\n\n        \n    \n\n    apps/server/src/server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Course, Coursegroup]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [User, Role, Account]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst schoolId = new ObjectId().toHexString();\n\tconst userIdObject = new ObjectId();\n\tconst userId = userIdObject.toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school: schoolId });\n\tuser._id = userIdObject;\n\tuser.id = userId;\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId, roles: roleIds, schoolId, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/entities/learnroom/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login). \n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details. \n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/ \n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\n It will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\n A request is received\n A hook initializes the request context\n A hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\n After the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
