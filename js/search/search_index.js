var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.136,1,2.829]],["body/classes/Account.html",[0,0.148,1,4.068,2,1.041,3,0.129,4,0.108,5,0.088,6,4.772,7,1.49,8,3.02,9,0.255,10,0.826,11,7.951,12,2.36,13,6.542,14,2.831,15,2.888,16,1.49,17,2.947,18,1.249,19,7.086,20,5.561,21,0.964,22,5.342,23,0.812,24,0.006,25,0.47,26,0.4,27,0.539,28,2.739,29,2.484,30,2.825,31,5.342,32,2.171,33,2.513,34,1.576,35,3.83,36,4.396,37,4.701,38,5.342,39,0.953,40,5.342,41,1.776,42,2.268,43,3.193,44,2.663,45,2.663,46,2.268,47,2.663,48,2.598,49,2.134,50,2.663,51,0.333,52,1.221,53,4.351,54,2.536,55,1.249,56,1.555,57,0.994,58,5.342,59,2.014,60,4.772,61,0.122,62,1.53,63,2.134,64,2.528,65,2.808,66,3.404,67,5.342,68,3.404,69,2.663,70,2.014,71,3.891,72,4.772,73,3.891,74,3.28,75,2.536,76,2.134,77,5.342,78,5.342,79,4.115,80,0.003,81,0.004,82,0.003]],["title/classes/ApiValidationError.html",[0,0.136,83,3.27]],["body/classes/ApiValidationError.html",[0,0.16,2,1.129,3,0.14,4,0.117,5,0.095,7,1.571,9,0.276,10,0.871,18,1.355,21,0.981,23,0.881,24,0.006,25,0.51,26,0.418,27,0.584,39,0.931,43,3.553,51,0.313,61,0.132,62,1.66,65,3.045,80,0.003,81,0.004,82,0.003,83,4.958,84,6.675,85,5.175,86,6.453,87,3.534,88,3.312,89,4.906,90,4.29,91,3.178,92,1.391,93,6.806,94,6.806,95,5.794,96,6.059,97,5.794,98,7.388,99,1.831,100,5.175,101,4.958,102,5.175,103,5.175,104,5.175,105,5.175,106,5.175,107,1.37,108,5.175,109,3.436,110,4.463,111,1.256,112,5.175,113,4.768,114,4.768,115,3.634,116,4.039,117,2.686,118,4.22,119,4.22,120,5.175]],["title/classes/ApiValidationErrorResponse.html",[0,0.136,121,3.797]],["body/classes/ApiValidationErrorResponse.html",[0,0.167,2,1.173,3,0.145,4,0.122,5,0.099,7,1.61,9,0.287,10,0.893,18,1.408,21,0.787,23,0.916,24,0.006,25,0.53,26,0.365,27,0.607,34,1.426,51,0.353,61,0.137,80,0.004,81,0.004,82,0.004,83,6.206,88,3.394,90,4.396,91,2.943,98,7.523,109,4.995,115,3.724,116,5.138,117,2.791,119,4.385,121,5.899,122,7.523,123,5.378,124,2.002,125,5.081,126,4.396,127,4.88,128,4.791,129,7.659,130,6.021,131,6.487,132,6.021,133,4.638,134,5.378,135,6.021,136,1.744,137,6.021,138,6.021,139,6.021,140,7.659,141,7.659,142,6.021,143,1.32,144,7.659,145,6.021]],["title/interfaces/AppendedAttachment.html",[146,0.434,147,3.026]],["body/interfaces/AppendedAttachment.html",[3,0.156,4,0.131,5,0.106,7,1.965,9,0.308,10,0.934,24,0.006,25,0.569,39,1.133,61,0.147,80,0.004,81,0.005,82,0.004,146,0.85,147,5.342,148,1.765,149,4.119,150,5.583,151,6.201,152,4.288,153,4.288,154,4.916,155,4.288,156,4.288,157,4.288,158,5.342,159,4.119,160,4.288,161,4.916,162,5.312,163,5.312,164,4.916,165,4.328,166,4.119,167,4.288,168,4.288,169,4.288]],["title/modules/AuthModule.html",[170,1.458,171,3.59]],["body/modules/AuthModule.html",[0,0.179,3,0.156,4,0.131,5,0.106,12,1.687,24,0.006,51,0.405,61,0.148,80,0.004,81,0.005,82,0.004,111,1.404,170,2.372,171,7.212,172,2.693,173,3.717,174,5.785,175,5.785,176,5.785,177,6.607,178,6.94,179,6.607,180,4.462,181,3.404,182,2.935,183,6.476,184,3.633,185,3.898,186,8.017,187,4.989,188,6.476,189,5.785,190,6.476,191,4.49,192,5.329,193,6.476,194,5.785,195,6.476]],["title/modules/AuthorizationModule.html",[170,1.458,196,3.418]],["body/modules/AuthorizationModule.html",[0,0.182,3,0.158,4,0.133,5,0.108,24,0.006,51,0.383,61,0.15,80,0.004,81,0.005,82,0.004,111,1.422,170,2.39,172,2.728,173,3.746,180,4.498,181,3.447,182,2.972,184,3.662,185,3.929,196,6.915,197,5.858,198,5.858,199,5.858,200,5.858,201,6.627,202,6.15,203,6.341,204,6.559,205,4.498,206,6.559,207,6.559,208,3.447,209,5.858]],["title/injectables/AuthorizationService.html",[202,3.026,210,1.068]],["body/injectables/AuthorizationService.html",[0,0.12,3,0.104,4,0.087,5,0.071,9,0.206,12,2.397,18,1.011,21,0.796,23,1.178,24,0.006,25,0.682,26,0.336,27,0.781,34,0.805,39,0.956,51,0.324,52,1.464,57,0.805,61,0.099,69,3.861,80,0.003,81,0.004,82,0.003,92,1.141,107,1.499,111,0.937,136,1.604,143,1.056,202,3.762,203,5.633,208,2.272,209,3.861,210,1.328,211,1.63,212,3.861,213,2.966,214,6.358,215,5.473,216,7.118,217,4.323,218,4.323,219,4.323,220,2.81,221,4.718,222,4.587,223,5.715,224,4.118,225,4.323,226,3.634,227,6.128,228,4.59,229,4.136,230,2.639,231,4.249,232,6.128,233,4.323,234,4.935,235,3.861,236,4.323,237,4.065,238,5.473,239,3.905,240,5.042,241,3.861,242,1.835,243,5.121,244,4.249,245,2.865,246,4.323,247,4.323,248,3.557,249,4.323,250,4.323,251,4.323,252,6.128,253,4.323,254,4.323,255,2.482,256,4.323,257,6.128,258,4.323,259,4.323]],["title/classes/BaseEntity.html",[0,0.136,260,2.522]],["body/classes/BaseEntity.html",[0,0.235,2,1.197,3,0.148,4,0.124,5,0.101,8,2.535,9,0.293,10,0.991,14,3.567,15,2.502,16,1.877,17,2.554,21,0.797,24,0.006,26,0.336,28,2.641,29,2.285,30,2.598,34,1.582,39,0.957,41,2.969,42,3.791,46,3.791,51,0.325,52,1.539,55,1.814,56,1.787,61,0.177,63,2.453,64,2.191,80,0.004,81,0.005,82,0.004,88,2.722,260,4.349,261,5.053,262,6.141,263,6.141,264,2.663,265,4.73,266,4.472,267,5.053,268,5.053,269,5.485,270,4.074,271,3.319,272,5.485,273,3.418,274,4.73,275,3.77,276,3.525,277,5.485,278,5.053,279,5.485,280,4.258,281,3.913,282,4.73,283,5.053,284,5.485]],["title/classes/BaseEntityWithTimestamps.html",[0,0.136,8,1.611]],["body/classes/BaseEntityWithTimestamps.html",[0,0.23,2,1.14,3,0.141,4,0.118,5,0.096,8,2.716,9,0.279,10,0.969,14,3.503,15,3.386,16,1.844,17,3.455,21,0.901,24,0.006,26,0.326,28,2.819,29,2.438,30,2.681,32,2.053,33,2.376,34,1.689,39,0.935,41,2.916,42,3.724,46,3.724,48,2.844,49,2.337,51,0.315,52,1.512,55,1.758,56,1.703,61,0.172,63,2.337,64,2.087,80,0.003,81,0.004,82,0.003,88,2.592,260,3.847,261,4.813,264,2.537,265,4.506,266,4.26,267,4.813,268,4.813,269,5.225,270,3.881,271,3.162,272,5.225,273,3.256,274,4.506,275,3.592,276,3.358,277,5.225,278,4.813,279,5.225,280,4.056,281,3.728,282,4.506,283,4.813,284,5.225,285,5.849,286,5.849,287,5.849,288,5.849]],["title/injectables/BaseRepo.html",[210,1.068,289,3.797]],["body/injectables/BaseRepo.html",[0,0.126,3,0.11,4,0.092,5,0.075,9,0.217,18,1.066,21,0.956,23,1.397,24,0.006,25,0.809,26,0.398,27,0.927,51,0.307,52,1.489,55,1.066,57,0.849,61,0.104,69,3.953,80,0.003,81,0.004,82,0.003,87,1.657,92,1.184,107,1.684,111,0.988,136,1.317,143,1.489,210,1.379,211,1.719,213,3.163,230,2.891,245,2.923,260,2.333,264,1.977,289,4.9,290,4.072,291,7.082,292,4.633,293,5.682,294,5.682,295,5.682,296,3.439,297,5.682,298,5.682,299,5.682,300,3.025,301,4.868,302,4.56,303,3.541,304,4.56,305,5.682,306,6.969,307,4.56,308,5.682,309,4.56,310,5.682,311,4.56,312,5.682,313,4.56,314,5.682,315,4.56,316,4.057,317,5.682,318,4.56,319,5.682,320,4.56,321,5.682,322,4.56,323,4.56,324,4.56,325,4.56,326,6.107,327,6.362,328,6.362,329,6.362,330,7.327,331,7.327,332,4.56,333,6.362]],["title/classes/BusinessError.html",[0,0.136,86,3.27]],["body/classes/BusinessError.html",[0,0.214,2,0.983,3,0.122,4,0.102,5,0.083,7,1.434,9,0.241,10,0.795,18,1.595,21,0.952,23,0.767,24,0.006,25,0.444,26,0.421,27,0.509,34,0.939,39,1.003,51,0.324,61,0.115,62,1.445,74,4.187,75,3.237,80,0.003,81,0.004,82,0.003,86,4.524,87,3.564,88,4.161,89,5.402,90,4.75,91,3.423,92,1.269,93,6.809,94,6.809,99,2.155,101,6.043,107,1.25,109,4.582,110,6.374,111,1.093,116,2.727,118,5.626,124,1.677,128,4.473,143,1.176,334,4.506,335,4.582,336,4.967,337,4.044,338,4.728,339,4.044,340,4.346,341,6.809,342,5.045,343,6.027,344,6.819,345,2.651,346,5.045,347,5.045,348,5.045,349,5.045,350,5.045,351,5.045,352,5.045,353,5.045,354,5.045,355,3.498,356,5.045,357,4.506,358,6.819,359,5.045,360,3.915,361,6.819,362,6.819,363,5.045]],["title/injectables/ConsoleWriter.html",[210,1.068,364,3.418]],["body/injectables/ConsoleWriter.html",[0,0.184,3,0.212,4,0.134,5,0.109,9,0.317,10,0.95,21,0.837,23,1.01,24,0.006,25,0.585,26,0.288,27,0.67,32,1.814,33,2.1,39,0.991,51,0.341,61,0.152,80,0.004,81,0.005,82,0.004,92,1.516,107,1.218,111,1.44,210,1.765,211,2.505,316,4.167,364,5.647,365,7.867,366,6.784,367,5.934,368,9.181,369,8.144,370,6.644,371,5.467,372,8.807,373,6.644,374,3.231,375,5.19,376,6.644,377,3.312,378,3.399,379,6.644,380,6.644,381,6.644]],["title/modules/CoreModule.html",[170,1.458,382,3.59]],["body/modules/CoreModule.html",[0,0.168,3,0.146,4,0.122,5,0.099,24,0.006,51,0.384,61,0.138,75,3.649,80,0.004,81,0.004,82,0.004,111,1.313,117,3.564,124,2.014,170,2.628,172,2.519,173,3.564,180,4.279,181,3.183,182,2.744,185,3.738,382,7.218,383,5.409,384,5.409,385,6.824,386,6.824,387,5.971,388,6.824,389,6.056,390,5.1,391,7.687,392,5.1,393,5.921,394,6.325,395,7.687,396,4.559,397,5.921,398,5.1,399,7.687,400,4.559,401,5.599,402,6.866,403,7.687,404,5.921,405,6.056,406,6.056,407,6.056,408,6.056]],["title/classes/Course.html",[0,0.136,409,1.759]],["body/classes/Course.html",[0,0.106,2,0.747,3,0.092,4,0.078,5,0.063,7,1.181,8,2.753,9,0.389,10,0.655,14,2.245,15,2.29,16,1.54,17,2.337,18,1.314,21,0.961,23,0.583,24,0.006,25,0.76,26,0.393,27,0.387,28,1.746,29,2.441,30,2.694,32,2.555,33,2.729,34,1.046,37,3.728,39,1.053,41,3.111,42,1.628,43,2.762,44,1.911,45,1.911,46,1.628,47,1.911,48,1.864,49,2.926,50,1.911,51,0.279,52,0.969,55,1.314,56,1.116,57,0.714,59,1.445,61,0.087,62,1.098,63,2.657,70,1.445,76,2.245,80,0.002,81,0.003,82,0.002,92,1.046,99,1.776,107,1.03,124,2.8,136,0.794,143,0.969,146,0.337,220,1.636,264,1.663,296,2.072,303,2.134,396,2.273,409,2.005,410,2.953,411,5.059,412,3.047,413,4.668,414,5.079,415,5.079,416,4.668,417,4.668,418,1.806,419,5.643,420,5.619,421,1.594,422,6.543,423,6.652,424,6.543,425,3.833,426,6.543,427,3.833,428,5.619,429,3.833,430,5.619,431,3.833,432,5.019,433,3.833,434,3.833,435,3.833,436,1.961,437,3.833,438,3.728,439,5.019,440,3.424,441,2.953,442,3.424,443,2.658,444,3.424,445,3.424,446,3.154,447,2.792,448,2.792,449,3.896,450,3.424,451,3.424,452,3.154,453,3.154,454,1.961,455,3.037,456,2.072,457,5.019,458,3.424,459,3.424,460,3.424,461,4.328,462,2.953,463,3.424,464,3.424,465,3.424,466,3.424,467,5.019,468,3.424,469,3.424,470,2.354,471,3.424,472,3.424,473,2.953]],["title/classes/CourseGroupInfo.html",[0,0.136,474,3.026]],["body/classes/CourseGroupInfo.html",[0,0.15,2,1.057,3,0.131,4,0.11,5,0.089,7,1.505,8,3.032,9,0.259,10,0.835,12,1.414,14,2.86,15,2.918,16,1.505,17,2.978,18,1.269,21,0.953,23,0.825,24,0.006,25,0.478,26,0.394,27,0.547,28,2.225,29,2.445,30,2.605,32,2.188,33,2.532,34,1.586,35,3.87,36,4.465,37,4.75,39,0.611,41,2.945,42,2.304,43,3.213,44,2.706,45,2.706,46,2.304,47,2.706,48,2.639,49,2.168,50,2.706,51,0.357,52,1.234,53,4.396,54,2.576,55,1.675,56,1.58,57,1.01,59,2.046,61,0.124,62,1.554,70,2.046,76,2.168,80,0.003,81,0.004,82,0.003,146,0.478,264,2.354,418,2.301,421,2.257,474,4.396,475,7.011,476,5.653,477,2.933,478,4.743,479,5.876,480,6.563,481,7.16,482,4.478,483,4.847,484,1.936,485,2.639,486,3.6,487,4.18,488,4.18,489,4.847]],["title/classes/CourseInfo.html",[0,0.136,490,2.664]],["body/classes/CourseInfo.html",[0,0.176,2,1.236,3,0.153,4,0.128,5,0.104,7,1.664,9,0.302,10,0.923,14,3.162,16,1.664,18,1.483,21,0.928,23,0.965,24,0.006,25,0.818,26,0.411,27,0.64,29,2.319,30,2.637,39,1.017,41,2.109,42,2.693,43,2.984,46,2.693,51,0.332,52,1.364,55,1.483,56,1.846,57,1.181,59,2.392,61,0.145,62,1.817,80,0.004,81,0.005,82,0.004,260,4.756,418,2.543,421,2.638,436,4.049,454,3.245,455,3.429,456,3.429,477,3.429,490,4.278,491,7.705,492,6.096,493,4.62,494,4.62]],["title/classes/CourseNews.html",[0,0.136,495,2.829]],["body/classes/CourseNews.html",[0,0.186,2,0.63,3,0.078,4,0.147,5,0.053,7,1.525,8,2.5,9,0.154,10,0.577,12,0.843,14,1.976,15,2.016,16,1.263,17,2.057,21,0.955,23,0.492,24,0.006,25,0.592,26,0.396,27,0.849,28,2.254,29,2.459,30,2.77,32,1.641,33,1.899,34,1.35,39,1.029,41,1.075,42,1.373,43,3.502,44,1.612,45,1.612,46,1.373,47,1.612,48,1.572,49,1.292,50,1.612,51,0.333,52,1.25,54,2.852,55,0.756,56,0.941,57,0.602,61,0.165,62,0.926,64,2.144,66,4.622,70,1.219,76,2.4,80,0.002,81,0.003,82,0.002,91,2.939,92,0.921,107,0.593,143,0.557,146,0.285,220,2.111,221,3.87,222,3.813,224,2.499,244,2.242,273,3.344,335,2.934,360,1.856,409,1.154,412,2.057,418,1.039,421,2.499,485,3.272,490,3.247,495,2.84,496,2.242,497,3.865,498,3.891,499,3.813,500,3.92,501,3.637,502,4.901,503,2.996,504,4.666,505,4.465,506,2.785,507,3.811,508,4.437,509,3.234,510,2.661,511,3.43,512,4.163,513,3.986,514,3.43,515,2.661,516,2.661,517,3.603,518,4.288,519,3.603,520,3.43,521,2.466,522,3.282,523,3.43,524,2.661,525,2.661,526,3.537,527,2.661,528,3.449,529,3.829,530,2.661,531,2.661,532,2.921,533,2.661,534,3.282,535,2.661,536,3.603,537,2.661,538,3.603,539,2.661,540,2.934,541,2.355,542,2.674,543,1.748,544,2.242,545,1.465,546,1.8,547,2.145,548,2.061,549,2.355,550,2.355,551,2.355,552,2.355,553,2.355,554,1.986,555,2.145,556,2.355,557,3.603,558,2.852,559,2.921,560,2.785,561,2.785,562,2.852,563,3.449,564,3.449,565,2.355,566,3.603,567,2.355,568,2.355,569,4.376,570,1.918,571,1.918]],["title/injectables/CourseRepo.html",[210,1.068,572,3.27]],["body/injectables/CourseRepo.html",[0,0.185,3,0.118,4,0.099,5,0.08,7,1.029,9,0.233,18,1.144,21,0.84,23,1.243,24,0.006,25,0.719,26,0.354,27,0.824,34,1.682,41,1.627,51,0.358,55,1.144,57,0.911,61,0.112,80,0.003,81,0.004,82,0.003,87,1.778,92,1.243,107,1.394,111,1.06,136,1.972,143,1.408,210,1.447,211,1.845,213,3.049,220,2.772,229,3.788,230,2.743,242,2.077,245,2.665,264,2.122,300,3.246,301,5.017,303,3.718,409,1.746,413,4.256,414,4.631,415,4.631,454,4.517,572,4.431,573,4.026,574,5.966,575,5.966,576,5.966,577,4.893,578,5.496,579,4.893,580,5.496,581,4.893,582,5.496,583,4.893,584,2.809,585,3.004,586,3.298,587,3.769,588,5.857,589,4.37,590,5.145,591,7.885,592,7.298,593,7.298,594,3.769,595,4.37,596,5.626,597,6.792,598,4.37,599,3.703]],["title/classes/CourseScope.html",[0,0.136,588,3.797]],["body/classes/CourseScope.html",[0,0.181,2,0.923,3,0.114,4,0.096,5,0.078,7,1.373,9,0.226,10,0.761,21,0.828,23,1.226,24,0.006,25,0.658,26,0.366,27,0.754,32,1.293,33,1.496,34,1.667,39,0.907,41,1.574,43,2.819,51,0.354,55,1.107,57,0.881,61,0.108,80,0.003,81,0.004,82,0.003,87,1.72,92,1.216,107,1.37,111,1.026,136,1.961,143,1.389,210,1.415,213,2.443,220,2.607,229,3.028,230,2.323,242,2.01,245,2.62,264,2.053,301,4.01,303,2.635,316,3.341,409,1.689,413,4.162,414,4.528,415,4.528,454,4.472,572,3.141,573,3.896,578,3.896,580,3.896,582,3.896,584,2.718,585,2.907,586,3.884,587,3.647,588,6.512,589,5.833,590,5.03,591,7.807,592,7.198,593,7.198,594,3.647,595,4.229,596,5.57,597,6.677,598,4.229,599,3.831,600,2.373,601,5.03,602,6.53,603,5.03,604,5.03,605,4.959,606,3.896,607,4.735,608,3.647,609,4.528,610,3.896,611,3.647,612,5.758,613,4.756,614,4.756,615,3.896,616,3.448]],["title/classes/Coursegroup.html",[0,0.136,617,2.743]],["body/classes/Coursegroup.html",[0,0.142,2,1.001,3,0.124,4,0.104,5,0.084,7,1.451,8,2.991,9,0.245,10,0.805,14,2.758,15,2.813,16,1.451,17,2.871,18,1.201,21,0.968,23,1.05,24,0.006,25,0.608,26,0.388,27,0.696,28,2.145,29,2.407,30,2.659,32,2.129,33,2.464,34,1.285,37,4.58,39,0.578,41,3.237,42,2.181,43,3.143,44,2.561,45,2.561,46,2.181,47,2.561,48,2.498,49,2.052,50,2.561,51,0.327,52,1.19,55,1.615,56,1.495,57,0.956,59,1.937,61,0.157,62,1.471,63,2.052,70,1.937,76,2.052,80,0.003,81,0.004,82,0.003,92,1.285,107,1.266,136,1.064,143,1.19,146,0.452,229,2.382,264,2.228,413,5.313,418,2.219,421,2.137,461,3.957,462,3.957,478,4.64,486,3.408,487,5.317,488,3.957,590,6.006,617,3.843,618,4.227,619,7.446,620,6.964,621,6.421,622,6.904,623,5.137,624,5.137,625,5.137,626,6.166,627,5.137,628,2.994,629,3.742,630,4.589]],["title/interfaces/CoursegroupInfoProperties.html",[146,0.434,480,3.797]],["body/interfaces/CoursegroupInfoProperties.html",[0,0.176,3,0.153,4,0.128,5,0.104,7,1.334,8,2.587,9,0.302,10,0.923,12,1.653,24,0.006,26,0.374,27,0.798,30,2.419,34,1.181,35,3.429,37,4.208,41,3.091,51,0.378,52,1.364,53,4.859,54,3.011,55,1.851,56,1.846,57,1.181,59,2.392,61,0.145,62,1.817,70,2.392,76,2.534,80,0.004,81,0.005,82,0.004,146,0.558,148,1.732,264,2.751,418,2.038,474,3.895,475,5.219,476,4.208,477,3.429,478,5.174,479,6.289,480,6.645,482,4.886,484,2.263,485,3.084,486,4.208,487,4.886,488,4.886,489,5.666]],["title/injectables/CoursegroupRepo.html",[210,1.068,631,4.056]],["body/injectables/CoursegroupRepo.html",[0,0.176,3,0.154,4,0.129,5,0.104,9,0.304,18,1.49,21,0.815,23,1.207,24,0.006,25,0.698,26,0.344,27,0.8,34,1.186,41,2.118,51,0.379,55,1.49,57,1.186,61,0.145,80,0.004,81,0.005,82,0.004,87,2.314,92,1.477,107,1.168,111,1.38,136,1.319,143,1.098,210,1.72,211,2.402,213,2.825,220,2.633,230,2.466,242,2.704,245,2.232,264,2.762,300,4.226,301,5.554,303,4.417,478,3.545,486,5.264,584,3.656,585,3.911,596,5.056,617,3.545,631,6.529,632,5.689,633,7.935,634,6.369,635,7.935,636,6.369,637,6.369,638,6.369,639,6.369,640,6.369]],["title/classes/CreateNewsParams.html",[0,0.136,641,3.418]],["body/classes/CreateNewsParams.html",[0,0.193,2,1.013,3,0.125,4,0.105,5,0.085,9,0.248,10,0.811,16,1.463,21,0.897,24,0.006,26,0.378,27,0.702,28,2.162,29,2.347,39,1.05,51,0.329,52,1.659,61,0.119,68,5.338,80,0.003,81,0.004,82,0.003,91,3.355,124,3.101,136,1.076,221,3.814,222,3.91,223,4.816,228,3.761,497,3.84,498,3.796,499,4.353,501,4.239,532,2.528,641,4.824,642,7.394,643,4.004,644,3.302,645,5.36,646,4.127,647,6.958,648,4.643,649,5.198,650,5.725,651,4.272,652,5.725,653,5.36,654,5.725,655,4.824,656,4.824,657,5.198,658,5.198,659,4.434,660,4.434,661,5.198,662,5.198,663,5.712,664,5.725,665,4.272,666,5.198,667,5.198,668,4.86,669,4.824,670,2.467,671,6.215,672,5.725,673,7.185,674,3.192,675,3.786,676,3.083]],["title/controllers/DashboardController.html",[677,2.184,678,3.797]],["body/controllers/DashboardController.html",[0,0.183,3,0.16,4,0.134,5,0.109,9,0.316,21,0.681,24,0.006,29,1.782,51,0.394,61,0.151,80,0.004,81,0.005,82,0.004,87,2.409,92,1.514,107,1.215,111,1.437,136,1.684,143,1.143,213,2.876,230,2.528,242,2.815,245,2.323,644,4.176,677,2.938,678,6.265,679,3.305,680,5.922,681,4.225,682,5.924,683,9.174,684,6.63,685,6.101,686,5.922,687,4.225,688,4.828,689,4.597,690,5.107,691,6.63,692,4.828,693,6.63,694,6.63,695,5.107,696,6.63]],["title/classes/DashboardEntity.html",[0,0.136,697,2.829]],["body/classes/DashboardEntity.html",[0,0.223,2,0.921,3,0.114,4,0.096,5,0.078,7,1.371,8,2.926,9,0.225,10,0.761,14,2.606,15,2.658,16,1.693,17,2.713,18,1.106,21,0.92,23,0.719,24,0.006,25,0.416,26,0.388,27,0.477,28,2.027,29,2.165,30,1.445,32,1.781,33,2.061,34,1.214,39,1.008,41,1.572,42,2.007,43,3.036,44,2.357,45,2.357,46,2.007,47,2.357,48,2.299,49,1.888,50,2.357,51,0.198,57,0.88,61,0.199,62,1.354,64,1.687,70,1.782,80,0.003,81,0.004,82,0.003,91,3.095,92,1.214,99,2.883,107,0.867,143,1.388,146,0.574,360,3.745,418,2.096,421,1.966,436,3.338,454,2.419,546,4.158,697,3.745,698,3.136,699,5.343,700,5.865,701,6.523,702,5.94,703,4.727,704,5.859,705,4.328,706,4.157,707,5.343,708,5.865,709,2.903,710,3.252,711,3.013,712,3.443,713,2.903,714,2.903,715,3.443,716,3.136,717,3.443,718,3.443,719,3.443,720,2.903,721,3.443,722,4.751,723,5.132,724,5.606,725,2.903,726,3.443,727,4.751,728,4.751,729,3.443,730,3.443,731,3.443,732,3.443,733,4.751,734,3.443]],["title/classes/DashboardGridElementResponse.html",[0,0.136,735,3.59]],["body/classes/DashboardGridElementResponse.html",[0,0.198,2,1.056,3,0.131,4,0.11,5,0.089,9,0.258,10,0.834,16,1.949,21,0.935,24,0.006,26,0.394,29,2.444,39,1.072,51,0.227,52,0.934,61,0.163,80,0.003,81,0.004,82,0.003,91,3.563,99,2.691,124,3.13,234,3.452,411,4.106,518,3.452,659,5.102,660,5.102,668,5.301,670,2.571,676,4.748,682,5.209,689,3.756,699,6.471,705,5.312,706,5.102,723,4.558,724,4.745,735,5.831,736,4.458,737,7.151,738,7.151,739,6.305,740,8.026,741,5.417,742,5.417,743,6.388,744,5.417,745,5.417,746,7.605,747,5.417,748,5.417,749,4.173,750,4.839]],["title/classes/DashboardMapper.html",[0,0.136,690,3.797]],["body/classes/DashboardMapper.html",[0,0.176,2,1.239,3,0.153,4,0.129,5,0.104,9,0.303,21,0.653,23,0.967,24,0.006,25,0.56,26,0.275,27,0.641,34,1.475,51,0.332,61,0.145,80,0.004,81,0.005,82,0.004,92,1.475,107,1.165,136,1.872,143,1.366,506,4.003,644,3.761,682,4.629,689,6.268,690,6.104,697,5.189,735,5.771,751,5.677,752,5.257,753,7.925,754,6.356,755,5.23,756,4.217,757,4.217,758,6.356,759,6.356,760,6.356,761,7.925,762,3.169,763,6.356,764,6.356,765,6.356,766,6.356,767,6.356,768,6.356,769,6.356,770,6.356,771,6.356,772,6.356,773,6.356,774,6.356,775,6.356,776,6.356,777,6.356]],["title/injectables/DashboardRepo.html",[210,1.068,778,3.418]],["body/injectables/DashboardRepo.html",[0,0.19,3,0.166,4,0.139,5,0.113,9,0.327,21,0.706,24,0.006,34,1.278,51,0.348,61,0.19,80,0.004,81,0.005,82,0.004,92,1.547,107,1.259,111,1.488,136,1.85,146,0.604,210,1.801,211,2.589,230,2.777,697,3.941,709,4.216,710,3.423,725,5.102,755,5.65,778,5.761,779,5.65,780,7.823,781,6.866,782,6.052,783,6.133,784,6.133,785,5.001,786,6.133,787,6.133,788,3.339]],["title/classes/DashboardResponse.html",[0,0.136,689,3.418]],["body/classes/DashboardResponse.html",[0,0.211,2,1.166,3,0.144,4,0.121,5,0.098,9,0.285,10,0.89,16,1.996,21,0.784,24,0.006,26,0.331,29,2.051,39,1.051,51,0.251,52,1.315,61,0.174,80,0.004,81,0.004,82,0.004,91,3.227,99,2.411,124,3.196,234,4.862,411,3.436,518,4.862,659,5.353,660,5.353,668,5.401,670,2.841,676,4.981,682,6.442,689,5.29,699,6.197,705,3.971,706,3.814,723,3.814,724,3.971,735,6.117,736,4.925,737,5.346,738,5.346,739,5.29,740,7.686,743,5.346,746,6.815,749,5.877,750,7.502,789,5.986,790,5.986]],["title/injectables/DashboardUc.html",[210,1.068,685,3.418]],["body/injectables/DashboardUc.html",[0,0.186,3,0.162,4,0.136,5,0.11,9,0.321,18,1.574,21,0.844,23,1.024,24,0.006,25,0.593,26,0.292,27,0.679,51,0.371,61,0.154,80,0.004,81,0.005,82,0.004,87,2.446,92,1.528,107,1.234,111,1.459,136,1.394,143,1.16,210,1.779,211,2.538,213,2.895,230,2.551,245,2.359,600,2.446,682,5.979,685,5.692,697,3.864,778,5.692,780,7.588,782,6.717,791,6.012,792,6.731,793,6.731,794,6.731,795,4.133,796,6.731,797,6.012,798,6.731,799,6.731]],["title/classes/DefaultGridReference.html",[0,0.136,709,3.026]],["body/classes/DefaultGridReference.html",[0,0.231,2,1.006,3,0.125,4,0.104,5,0.085,7,1.085,8,2.264,9,0.246,10,0.808,16,1.456,18,1.208,21,0.803,23,0.785,24,0.006,25,0.455,26,0.339,27,0.521,39,1.062,51,0.216,57,0.961,61,0.205,62,1.479,64,1.842,70,1.947,80,0.003,81,0.004,82,0.003,91,3.521,92,1.289,99,2.943,107,0.946,143,1.44,146,0.61,360,3.976,418,1.659,454,2.642,546,4.351,697,2.964,698,3.425,699,4.595,700,3.76,702,5.78,704,6.219,705,4.595,706,4.414,707,5.78,708,6.673,709,4.253,710,3.897,711,3.29,712,3.76,713,3.17,714,3.17,715,3.76,716,3.425,717,5.045,718,3.76,719,3.76,720,3.17,721,3.76,722,5.045,723,5.323,724,5.78,725,3.17,726,3.76,727,5.045,728,5.045,729,3.76,730,3.76,731,3.76,732,3.76,733,5.045,734,3.76,800,6.927,801,5.163]],["title/controllers/DelayController.html",[677,2.184,802,3.797]],["body/controllers/DelayController.html",[0,0.174,3,0.152,4,0.127,5,0.103,9,0.301,21,0.648,24,0.006,29,1.695,32,2.153,34,1.173,51,0.36,61,0.144,80,0.004,81,0.005,82,0.004,92,1.468,107,1.156,111,1.366,115,3.065,136,1.633,143,1.359,184,2.857,213,2.812,230,2.673,245,2.209,401,5.742,677,3.494,679,3.931,802,6.626,803,6.487,804,5.187,805,7.416,806,6.304,807,5.466,808,4.65,809,5.23,810,4.526,811,6.073,812,5.631,813,6.304,814,4.017,815,5.187,816,6.487,817,5.631,818,5.631,819,6.304,820,4.856,821,3.225,822,5.187,823,5.466,824,5.187,825,3.313,826,4.591,827,4.856]],["title/injectables/DurationLoggingInterceptor.html",[210,1.068,828,4.056]],["body/injectables/DurationLoggingInterceptor.html",[0,0.17,3,0.148,4,0.124,5,0.1,9,0.292,10,0.903,21,0.796,23,0.932,24,0.006,25,0.539,26,0.266,27,0.618,32,1.674,33,1.937,34,1.442,51,0.374,61,0.14,80,0.004,81,0.005,82,0.004,87,3.085,92,1.442,107,1.123,111,1.328,124,2.038,136,1.269,143,1.056,210,1.679,211,2.311,398,5.138,560,3.937,600,3.085,655,4.249,710,3.055,811,5.966,823,5.37,828,6.373,829,7.585,830,5.474,831,7.745,832,5.966,833,5.138,834,5.122,835,6.918,836,6.918,837,6.872,838,7.969,839,6.129,840,3.313,841,7.585,842,7.745,843,6.129,844,5.043,845,6.129,846,5.474,847,5.474,848,6.129,849,7.745,850,6.129,851,6.129,852,6.129]],["title/modules/ErrorModule.html",[170,1.458,385,3.59]],["body/modules/ErrorModule.html",[0,0.192,3,0.167,4,0.14,5,0.114,24,0.006,32,2.284,51,0.376,61,0.158,80,0.004,81,0.005,82,0.004,111,1.505,124,2.309,170,2.475,172,2.888,184,3.147,239,5.331,374,4.068,385,6.093,400,4.961,404,7.179,814,4.425,825,3.649,853,6.944,854,7.472,855,5.136,856,5.331,857,6.093,858,6.944,859,6.944,860,5.348]],["title/classes/ErrorResponse.html",[0,0.136,109,2.923]],["body/classes/ErrorResponse.html",[0,0.175,2,1.231,3,0.152,4,0.128,5,0.104,18,1.846,21,0.649,23,0.961,24,0.006,25,0.556,26,0.402,27,0.637,39,1.103,51,0.265,61,0.144,80,0.004,81,0.005,82,0.004,87,3.277,88,3.998,90,4.943,91,3.309,99,2.721,109,4.682,110,4.866,111,1.369,117,3.992,124,2.625,125,5.713,126,4.532,127,5.031,128,4.267,357,5.642,438,5.237,861,5.642,862,6.317,863,6.317,864,6.317,865,5.198,866,6.317,867,3.746,868,5.642,869,3.746,870,3.072,871,3.879,872,4.38,873,4.866]],["title/injectables/FeathersAuthProvider.html",[203,3.27,210,1.068]],["body/injectables/FeathersAuthProvider.html",[0,0.118,3,0.103,4,0.086,5,0.07,9,0.203,12,2.314,14,1.698,18,0.994,21,0.868,23,1.284,24,0.006,25,0.743,26,0.366,27,0.852,34,0.791,39,0.914,41,2.345,51,0.34,55,0.994,57,0.791,61,0.097,80,0.002,81,0.004,82,0.002,92,1.127,107,1.489,111,0.921,136,1.898,143,1.456,146,0.374,203,4.017,210,1.312,211,1.603,213,3.131,220,2.878,221,4.106,222,4.332,223,4.72,224,3.379,229,4.029,230,2.849,231,4.199,241,3.797,242,1.805,245,2.847,255,2.44,260,3.098,264,1.844,377,3.516,412,3.379,503,1.665,599,1.926,600,2.563,807,4.199,808,2.298,874,7.761,875,3.498,876,6.055,877,6.3,878,6.055,879,6.055,880,6.3,881,4.251,882,5.382,883,4.251,884,6.055,885,4.251,886,3.797,887,4.251,888,6.055,889,4.251,890,6.055,891,4.251,892,4.251,893,4.251,894,5.409,895,4.251,896,3.797,897,6.055,898,3.797,899,6.055,900,6.055,901,4.251,902,4.251,903,4.251,904,6.055,905,6.055,906,6.055,907,4.251,908,3.096,909,4.251,910,4.251,911,4.251,912,2.298,913,4.983,914,3.797,915,4.251,916,4.251,917,2.366]],["title/interfaces/FeathersError.html",[146,0.434,918,3.59]],["body/interfaces/FeathersError.html",[3,0.172,4,0.144,5,0.117,7,1.785,9,0.34,10,0.99,24,0.006,26,0.427,39,1.097,61,0.162,80,0.004,81,0.005,82,0.004,88,4.165,99,2.868,117,3.937,146,0.627,148,1.944,918,6.185,919,6.359,920,6.359,921,8.394]],["title/modules/FeathersModule.html",[170,1.458,201,3.418]],["body/modules/FeathersModule.html",[0,0.178,3,0.156,4,0.13,5,0.106,24,0.006,51,0.335,61,0.147,80,0.004,81,0.005,82,0.004,111,1.398,124,2.145,170,2.688,172,3.615,173,3.707,180,4.451,181,3.39,182,2.923,184,3.624,201,6.691,205,4.451,208,4.568,377,3.987,378,4.091,810,4.59,882,6.369,896,5.76,922,5.76,923,5.76,924,5.76,925,6.449,926,5.305,927,4.742,928,4.451,929,4.203,930,5.096,931,5.544,932,5.544,933,5.544,934,5.544,935,6.58]],["title/interfaces/FeathersService.html",[146,0.434,936,3.797]],["body/interfaces/FeathersService.html",[0,0.137,3,0.119,4,0.1,5,0.081,9,0.236,16,1.413,21,0.785,23,1.022,24,0.006,25,0.592,26,0.355,27,0.678,34,0.919,39,0.556,51,0.36,57,0.919,61,0.187,65,2.596,75,3.191,80,0.003,81,0.004,82,0.003,92,1.251,101,4.46,107,1.232,111,1.071,127,3.148,136,1.392,143,0.851,146,0.435,148,1.349,170,1.461,172,2.054,208,4.017,210,1.457,220,2.388,230,2.549,243,4.254,255,2.836,281,3.148,345,3.533,377,4.596,378,2.527,558,3.191,559,3.269,560,3.117,561,3.117,562,3.191,563,3.859,586,2.916,600,1.795,795,3.033,810,4.926,814,3.148,882,3.148,917,2.749,926,3.277,927,5.089,928,2.749,929,4.51,930,3.148,931,3.425,932,3.425,933,3.425,934,3.425,935,4.064,936,6.319,937,5.887,938,3.598,939,4.197,940,7.327,941,5.442,942,6.005,943,7.453,944,4.94,945,5.436,946,6.005,947,4.94,948,4.412,949,3.148,950,4.064,951,5.178,952,5.532,953,4.064,954,3.425,955,4.412,956,4.412,957,4.412,958,6.005,959,4.412,960,3.598,961,4.284,962,3.805,963,3.277,964,4.412,965,4.412,966,4.412,967,3.805,968,3.277,969,3.033,970,4.412]],["title/injectables/FeathersServiceProvider.html",[210,1.068,882,3.141]],["body/injectables/FeathersServiceProvider.html",[0,0.137,3,0.119,4,0.1,5,0.081,9,0.236,16,1.04,18,1.157,21,0.786,23,1.024,24,0.006,25,0.592,26,0.356,27,0.679,34,0.921,39,0.861,51,0.36,57,0.921,61,0.187,65,2.6,75,3.194,80,0.003,81,0.004,82,0.003,92,1.253,101,4.465,107,0.907,111,1.072,124,1.645,127,3.153,136,1.394,143,0.853,146,0.436,170,1.464,172,2.799,208,4.314,210,1.459,211,1.865,220,1.959,230,2.092,243,4.257,255,2.84,281,3.153,377,4.598,378,3.443,558,3.194,559,3.272,560,3.12,561,3.12,562,3.194,563,3.863,586,2.919,600,1.798,795,3.038,810,4.712,814,3.153,882,4.289,917,2.754,926,4.465,927,4.868,928,3.746,929,4.914,930,4.289,931,4.666,932,4.666,933,4.666,934,4.666,935,5.538,936,6.323,937,5.891,938,3.603,939,2.531,940,6.011,941,4.465,942,4.419,943,6.293,945,4.696,946,4.419,948,4.419,949,3.153,950,4.071,951,5.184,952,5.538,953,4.071,954,4.666,955,4.419,956,4.419,957,6.011,958,6.011,959,4.419,960,3.603,961,4.289,962,3.811,963,3.282,964,4.419,965,4.419,966,4.419,967,3.811,968,3.282,969,3.038,970,4.419,971,6.73,972,4.948,973,4.948,974,4.948,975,3.43]],["title/classes/FileTaskInfo.html",[0,0.136,976,3.141]],["body/classes/FileTaskInfo.html",[0,0.156,2,1.096,3,0.136,4,0.114,5,0.092,7,1.541,8,3.058,9,0.268,10,0.855,12,1.465,14,2.928,15,2.987,16,1.541,17,3.049,18,1.316,21,0.962,23,0.855,24,0.006,25,0.789,26,0.388,27,0.567,28,2.278,29,2.47,30,2.808,32,2.002,33,2.316,34,1.365,39,0.972,41,1.87,42,2.388,43,3.258,44,2.804,45,2.804,46,2.388,47,2.804,48,2.735,49,2.247,50,2.804,51,0.342,52,1.264,55,1.316,56,1.637,57,1.047,59,2.121,61,0.128,62,1.611,70,2.121,80,0.003,81,0.004,82,0.003,146,0.495,418,2.356,421,2.339,455,3.04,456,3.04,477,3.04,482,4.541,484,3.197,485,2.735,500,4.67,555,3.732,976,4.671,977,7.109,978,6.655,979,7.331,980,5.024,981,3.454,982,5.024]],["title/interfaces/FileTaskInfoProperties.html",[146,0.434,978,3.797]],["body/interfaces/FileTaskInfoProperties.html",[0,0.182,3,0.159,4,0.133,5,0.108,7,1.382,8,2.645,9,0.313,10,0.943,12,1.712,24,0.006,25,0.827,26,0.351,30,2.679,39,1.029,51,0.367,52,1.395,55,1.537,56,1.913,57,1.224,59,2.478,61,0.15,62,1.883,70,2.478,80,0.004,81,0.005,82,0.004,146,0.579,148,1.795,418,2.112,455,3.553,456,3.553,477,3.553,482,4.936,484,2.887,485,3.196,500,5.077,555,4.361,976,4.189,977,5.408,978,6.752,981,4.036,982,5.871]],["title/interfaces/GlobalConstants.html",[146,0.434,983,3.797]],["body/interfaces/GlobalConstants.html",[3,0.164,4,0.138,5,0.112,9,0.325,10,0.964,24,0.006,26,0.386,27,0.934,39,1.116,51,0.285,61,0.155,80,0.004,81,0.005,82,0.004,136,1.711,146,0.599,148,1.858,983,6.856,984,5.6,985,8.472,986,8.472,987,8.472,988,6.8,989,6.805,990,6.8,991,3.678,992,4.956]],["title/classes/GlobalErrorFilter.html",[0,0.136,857,3.59]],["body/classes/GlobalErrorFilter.html",[0,0.141,2,0.652,3,0.081,4,0.068,5,0.055,9,0.16,10,0.592,21,0.631,23,0.772,24,0.006,25,0.54,26,0.319,27,0.512,30,1.023,32,0.914,33,1.057,34,1.443,49,1.337,51,0.348,61,0.076,64,1.194,80,0.002,81,0.003,82,0.002,83,4.544,86,4.544,87,2.229,88,3.036,90,2.915,91,2.358,92,1.142,107,1.256,109,5.222,111,0.725,115,1.627,116,2.744,117,4.629,121,2.578,125,2.22,126,5.124,128,1.809,133,2.578,134,2.989,136,2,143,1.587,146,0.295,208,3.225,243,2.826,306,5.374,316,3.139,337,3.011,341,5.636,374,2.469,378,1.712,506,2.845,558,2.41,559,2.469,560,2.354,561,2.354,562,1.588,600,2.229,710,2.531,834,5.054,855,4.521,857,3.698,912,1.809,918,4.988,921,2.989,928,1.863,949,2.132,993,5.276,994,2.437,995,6.136,996,5.672,997,5.048,998,5.078,999,3.346,1000,5.078,1001,6.136,1002,6.849,1003,3.346,1004,6.136,1005,3.346,1006,3.346,1007,2.989,1008,2.989,1009,3.346,1010,3.346,1011,3.346,1012,2.753,1013,2.989,1014,2.753,1015,5.865,1016,2.753,1017,2.22,1018,2.989,1019,3.521,1020,2.753,1021,2.437,1022,4.071,1023,2.22,1024,2.753,1025,2.989,1026,4.535,1027,2.989,1028,2.753,1029,2.989,1030,2.989,1031,2.989,1032,2.989,1033,2.989,1034,3.639,1035,4.178,1036,3.346,1037,3.346,1038,4.178,1039,5.672,1040,3.346,1041,3.346,1042,3.346,1043,4.178,1044,3.346,1045,3.346,1046,5.078,1047,3.346,1048,3.346,1049,2.32,1050,4.535,1051,2.437,1052,2.989,1053,2.22,1054,2.132,1055,4.535,1056,3.522,1057,2.753,1058,4.535,1059,2.989,1060,3.911,1061,2.989,1062,2.989,1063,2.578,1064,2.753,1065,2.989,1066,2.989,1067,2.753,1068,2.753,1069,2.753,1070,2.578,1071,2.578,1072,2.989,1073,2.989,1074,2.989,1075,2.989,1076,6.577,1077,2.753,1078,6.577,1079,2.989,1080,2.753,1081,2.989,1082,3.346,1083,3.346,1084,3.346,1085,5.078,1086,3.346,1087,3.346]],["title/classes/GlobalValidationPipe.html",[0,0.136,1088,3.797]],["body/classes/GlobalValidationPipe.html",[0,0.232,2,1.157,3,0.143,4,0.12,5,0.097,7,1.596,10,0.692,18,1.957,21,0.61,24,0.006,26,0.363,29,2.041,32,2.073,34,1.106,51,0.318,61,0.136,62,1.701,64,2.709,80,0.003,81,0.004,82,0.003,83,3.941,96,5.264,111,1.287,116,4.767,124,1.975,128,3.21,133,4.575,143,1.024,296,3.21,336,5.53,400,4.503,545,3.792,599,2.692,644,3.972,668,3.306,674,4.662,762,2.961,870,2.888,912,3.21,945,3.647,961,3.785,968,3.941,1088,5.848,1089,6.781,1090,5.305,1091,6.247,1092,4.662,1093,6.247,1094,6.247,1095,6.247,1096,4.838,1097,8.369,1098,5.94,1099,5.264,1100,4.887,1101,5.94,1102,4.118,1103,5.94,1104,5.94,1105,5.94,1106,5.94,1107,4.575,1108,4.326,1109,4.326,1110,5.94,1111,4.326,1112,5.94,1113,4.887,1114,3.647,1115,5.305,1116,4.326,1117,3.523,1118,5.94,1119,5.94]],["title/classes/GridElement.html",[0,0.136,725,3.026]],["body/classes/GridElement.html",[0,0.226,2,0.956,3,0.118,4,0.099,5,0.08,7,1.032,8,2.188,9,0.234,10,0.78,16,1.407,18,1.148,21,0.908,23,0.746,24,0.006,25,0.432,26,0.383,27,0.495,39,0.995,51,0.206,57,0.914,61,0.202,62,1.406,64,1.751,70,1.851,80,0.003,81,0.004,82,0.003,91,3.144,92,1.246,99,3.073,107,1.227,143,1.41,146,0.589,360,3.842,418,1.577,436,2.511,454,2.511,546,5.033,697,2.818,698,3.256,699,4.441,700,3.575,702,5.862,704,6.127,705,4.441,706,4.266,707,5.999,708,6.586,709,3.014,710,3.798,711,3.128,712,3.575,713,3.014,714,3.014,715,3.575,716,3.256,717,3.575,718,3.575,719,3.575,720,3.014,721,3.575,722,6.236,723,5.456,724,5.999,725,4.11,726,4.875,727,4.875,728,4.875,729,3.575,730,5.547,731,5.547,732,3.575,733,4.875,734,3.575,1120,4.908,1121,4.908,1122,4.908,1123,4.908,1124,4.908,1125,4.908]],["title/interfaces/HtmlMailContent.html",[146,0.434,164,3.026]],["body/interfaces/HtmlMailContent.html",[3,0.152,4,0.127,5,0.103,7,1.95,9,0.3,10,0.918,24,0.006,25,0.554,26,0.341,27,0.794,39,1.141,61,0.144,80,0.004,81,0.005,82,0.004,146,0.845,147,4.835,148,1.718,149,4.009,150,5.277,151,5.224,152,4.174,153,4.174,154,4.835,155,4.174,156,4.174,157,4.174,158,5.53,159,4.009,160,4.174,161,4.835,162,6.152,163,6.152,164,5.277,165,4.256,166,4.009,167,4.174,168,4.174,169,4.174]],["title/interfaces/ICourseProperties.html",[146,0.434,419,3.797]],["body/interfaces/ICourseProperties.html",[0,0.125,3,0.109,4,0.092,5,0.074,7,0.953,8,2.071,9,0.411,10,0.739,16,1.332,18,1.06,24,0.006,25,0.795,26,0.383,27,0.956,30,2.76,32,2.354,37,3.007,39,1.094,41,3.246,51,0.306,52,1.092,55,1.482,56,1.319,57,0.844,59,1.709,61,0.103,62,1.298,63,2.918,70,1.709,76,2.531,80,0.003,81,0.004,82,0.003,99,1.432,124,3.002,136,0.939,143,1.092,146,0.399,148,1.238,220,1.844,264,1.966,296,2.45,303,2.523,396,2.688,409,1.617,410,3.491,411,5.334,412,3.461,413,5.303,414,5.77,415,5.77,416,2.889,417,2.889,418,1.457,419,5.626,422,6.524,424,6.524,426,6.524,432,4.049,438,4.203,439,5.659,440,4.049,441,3.491,442,4.049,443,3.143,444,4.049,445,4.049,446,3.73,447,3.301,448,3.301,449,4.393,450,4.049,451,4.049,452,3.73,453,3.73,454,2.319,455,3.425,456,2.45,457,5.659,458,4.049,459,4.049,460,4.049,461,4.88,462,3.491,463,4.049,464,4.049,465,4.049,466,4.049,467,5.659,468,4.049,469,4.049,470,2.783,471,4.049,472,4.049,473,3.491]],["title/interfaces/ICoursegroupProperties.html",[146,0.434,621,3.797]],["body/interfaces/ICoursegroupProperties.html",[0,0.171,3,0.149,4,0.125,5,0.102,7,1.301,8,2.548,9,0.295,10,0.909,24,0.006,26,0.338,27,0.786,30,2.608,37,4.107,41,3.289,51,0.357,52,1.344,55,1.823,56,1.802,57,1.152,59,2.334,61,0.178,62,1.773,63,2.473,70,2.334,76,2.473,80,0.004,81,0.005,82,0.004,136,1.282,143,1.344,146,0.545,148,1.69,264,2.685,413,5.881,418,1.989,461,4.768,462,4.768,478,5.137,486,4.107,487,6.004,488,4.768,590,6.571,617,3.446,618,5.093,619,5.529,620,5.529,621,6.571,626,5.529,628,2.685,629,4.508,630,5.529]],["title/interfaces/ICreateNews.html",[146,0.434,1126,3.418]],["body/interfaces/ICreateNews.html",[3,0.139,4,0.117,5,0.094,9,0.275,10,0.868,20,3.538,24,0.006,26,0.413,27,0.832,28,2.564,39,1.041,51,0.365,57,1.073,61,0.206,80,0.003,81,0.004,82,0.003,91,3.351,124,1.916,146,0.814,148,1.573,220,2.401,221,3.62,222,4.113,223,5.065,409,2.657,436,3.809,454,2.948,485,4.011,490,4.025,497,3.686,498,4.092,499,4.347,501,4.713,503,2.917,526,3.913,532,2.802,540,3.417,542,4.025,543,4.025,628,2.499,1126,5.163,1127,4.196,1128,6.65,1129,3.995,1130,3.995,1131,4.196,1132,4.196,1133,5.146,1134,3.995,1135,3.823]],["title/interfaces/ICurrentUser.html",[146,0.434,1136,2.522]],["body/interfaces/ICurrentUser.html",[1,4.407,3,0.146,4,0.122,5,0.099,9,0.288,10,0.895,12,2.313,15,2.463,16,1.969,17,2.514,24,0.006,25,0.532,26,0.397,28,2.386,39,1.15,61,0.192,80,0.004,81,0.004,82,0.004,146,0.743,148,1.651,224,2.514,229,4.115,237,5.094,412,3.957,1136,3.928,1137,4.656,1138,5.657,1139,4.816,1140,4.445,1141,3.644,1142,6.155,1143,5.323,1144,5.094,1145,3.177,1146,3.177]],["title/interfaces/IDashboardRepo.html",[146,0.434,782,3.59]],["body/interfaces/IDashboardRepo.html",[0,0.19,3,0.166,4,0.139,5,0.113,9,0.327,21,0.706,24,0.006,34,1.278,51,0.348,61,0.19,80,0.004,81,0.005,82,0.004,92,1.547,107,1.259,111,1.488,136,1.85,146,0.604,148,1.875,210,1.801,230,2.777,697,3.941,709,4.216,710,3.423,725,5.102,755,5.65,778,4.761,779,5.65,780,7.823,782,6.507,783,6.133,784,6.133,785,5.001,786,6.133,787,6.133,788,3.339,1147,6.866]],["title/interfaces/IErrorType.html",[146,0.434,343,3.59]],["body/interfaces/IErrorType.html",[3,0.172,4,0.144,5,0.117,9,0.34,10,0.991,24,0.006,26,0.427,39,1.125,61,0.163,80,0.004,81,0.005,82,0.004,87,3.301,91,3.614,118,6.85,146,0.628,148,1.949,343,6.194,1148,6.374,1149,6.374]],["title/interfaces/IFindOptions.html",[146,0.434,1150,3.27]],["body/interfaces/IFindOptions.html",[3,0.166,4,0.139,5,0.113,9,0.327,10,0.969,20,4.216,24,0.006,26,0.387,27,0.937,61,0.212,80,0.004,81,0.005,82,0.004,99,2.626,146,0.731,148,1.875,532,3.339,1150,5.513,1151,5.001,1152,5.001,1153,5.507,1154,5.33,1155,7.64,1156,6.762,1157,4.555,1158,4.761,1159,5.001,1160,6.837,1161,6.837]],["title/interfaces/IGridElement.html",[146,0.434,702,3.27]],["body/interfaces/IGridElement.html",[0,0.234,3,0.128,4,0.107,5,0.087,7,1.117,8,2.308,9,0.253,10,0.823,16,1.485,24,0.006,26,0.344,39,1.018,51,0.223,57,0.989,61,0.206,62,1.522,64,1.896,70,2.004,80,0.003,81,0.004,82,0.003,91,3.247,99,2.962,143,1.457,146,0.622,148,1.451,360,4.054,418,1.708,454,2.719,546,4.414,697,3.051,698,3.526,699,4.685,700,3.871,702,6,704,6.099,705,4.685,706,4.5,707,5.607,708,6.721,709,3.263,710,3.521,711,3.387,712,3.871,713,3.263,714,3.263,715,3.871,716,3.526,717,3.871,718,3.871,719,3.871,720,3.263,721,3.871,722,6.407,723,5.385,724,5.836,725,3.263,726,3.871,727,5.143,728,5.143,729,3.871,730,3.871,731,3.871,732,3.871,733,5.143,734,3.871,1034,5.012]],["title/interfaces/IGridElementReference.html",[146,0.434,707,3.27]],["body/interfaces/IGridElementReference.html",[0,0.235,3,0.13,4,0.109,5,0.088,7,1.131,8,2.327,9,0.257,10,0.83,16,1.497,24,0.006,26,0.308,39,1.021,51,0.225,57,1.001,61,0.207,62,1.541,64,1.919,70,2.028,80,0.003,81,0.004,82,0.003,91,3.263,99,2.97,143,1.464,146,0.627,148,1.469,360,4.087,418,1.729,454,2.752,546,4.441,697,3.088,698,3.569,699,4.723,700,3.918,702,5.86,704,6.124,705,4.723,706,4.537,707,5.86,708,6.741,709,3.303,710,3.549,711,3.428,712,3.918,713,3.303,714,3.303,715,3.918,716,3.569,717,3.918,718,3.918,719,3.918,720,3.303,721,3.918,722,5.185,723,5.411,724,5.86,725,3.303,726,3.918,727,5.185,728,5.185,729,3.918,730,3.918,731,3.918,732,3.918,733,5.185,734,3.918,1034,4.222]],["title/interfaces/ILogger.html",[146,0.434,1162,3.797]],["body/interfaces/ILogger.html",[3,0.144,4,0.121,5,0.098,9,0.284,21,0.938,23,1.388,24,0.006,25,0.803,26,0.395,27,0.978,39,1.136,61,0.136,80,0.003,81,0.004,82,0.003,90,5.238,92,1.417,107,1.673,117,3.529,146,0.525,148,1.628,345,4.904,840,5.411,1162,5.863,1163,5.326,1164,5.863,1165,5.05,1166,7.611,1167,7.611,1168,5.963,1169,5.963,1170,6.798,1171,6.898,1172,5.963,1173,6.798,1174,5.963,1175,5.963,1176,5.963,1177,6.798,1178,5.963,1179,5.326,1180,5.326]],["title/interfaces/INewsProperties.html",[66,3.141,146,0.434]],["body/interfaces/INewsProperties.html",[0,0.206,3,0.096,4,0.167,5,0.065,7,1.565,8,1.883,9,0.189,10,0.672,12,1.033,16,0.834,24,0.006,25,0.507,26,0.391,27,0.88,28,2.314,30,2.602,34,1.263,39,1.079,51,0.357,52,1.363,54,2.734,55,0.928,56,1.155,57,0.738,61,0.18,62,1.136,64,2.421,66,4.744,70,1.496,76,2.71,80,0.002,81,0.003,82,0.002,91,3.17,143,0.684,146,0.349,148,1.083,220,2.717,221,3.62,222,3.382,224,1.65,244,2.75,273,3.776,335,3.417,360,2.277,409,1.415,412,1.65,418,1.275,421,1.65,485,3.62,490,3.114,495,2.277,496,2.75,497,3.712,498,4.091,499,4.112,500,4.459,501,4.274,502,5.759,503,3.334,504,5.483,505,5.246,506,1.839,508,4.601,511,2.75,512,3.894,514,2.75,517,2.889,518,3.671,519,2.889,520,2.75,521,1.978,522,2.632,523,2.75,526,3.566,528,4.274,529,4.744,532,2.801,534,2.632,536,2.889,538,2.889,540,3.417,541,2.889,542,3.114,543,2.144,544,2.75,545,1.798,546,2.208,547,2.632,548,2.528,549,2.889,550,2.889,551,2.889,552,2.889,553,2.889,554,2.436,555,2.632,556,2.889,557,4.196,558,3.22,559,3.299,560,3.145,561,3.145,562,3.22,563,3.894,564,3.894,565,2.889,566,4.196,567,2.889,568,2.889,569,4.941,570,2.353,571,2.353]],["title/interfaces/INewsScope.html",[146,0.434,1134,3.418]],["body/interfaces/INewsScope.html",[3,0.142,4,0.119,5,0.096,9,0.281,10,0.88,20,3.612,24,0.006,26,0.403,27,0.938,28,1.828,39,0.849,51,0.368,57,1.095,61,0.207,80,0.003,81,0.004,82,0.003,91,2.261,124,1.956,146,0.819,148,1.606,220,2.425,221,3.669,222,4.153,223,5.396,409,2.692,436,3.861,454,3.01,485,4.051,490,4.079,497,3.642,498,4.118,499,2.933,501,3.18,503,2.956,526,3.966,532,2.861,540,3.489,542,4.079,543,4.079,628,3.613,1126,4.079,1127,4.284,1128,5.254,1129,4.079,1130,4.079,1131,4.284,1132,4.284,1133,6.74,1134,5.232,1135,5.83]],["title/interfaces/IPagination.html",[146,0.434,1156,3.59]],["body/interfaces/IPagination.html",[3,0.166,4,0.139,5,0.113,9,0.327,10,0.969,20,4.216,24,0.006,26,0.387,27,0.937,61,0.212,80,0.004,81,0.005,82,0.004,99,3.054,146,0.731,148,1.875,532,3.339,1150,4.555,1151,5.001,1152,5.001,1153,4.072,1154,3.941,1155,6.837,1156,6.507,1157,6.16,1158,6.438,1159,5.001,1160,6.837,1161,6.837]],["title/interfaces/IParentDescriptionsProperties.html",[146,0.434,1181,3.141]],["body/interfaces/IParentDescriptionsProperties.html",[0,0.149,3,0.13,4,0.109,5,0.088,7,1.129,8,2.324,9,0.256,10,0.829,16,1.856,24,0.006,25,0.798,26,0.382,27,0.717,28,2.21,30,2.594,34,1.324,35,3.843,39,1.089,51,0.37,52,1.226,54,2.549,55,1.256,56,1.563,57,1,59,2.025,61,0.182,62,1.538,76,2.841,80,0.003,81,0.004,82,0.003,99,1.697,124,2.822,146,0.702,148,1.466,220,2.64,409,2.844,411,4.871,416,3.422,417,3.422,418,1.726,455,2.903,456,2.903,478,2.989,484,2.844,485,2.611,508,4.309,545,2.434,584,3.083,600,2.583,628,3.084,917,2.989,991,2.903,1181,5.08,1182,3.911,1183,4.136,1184,3.638,1185,4.136,1186,4.309,1187,4.895,1188,4.93,1189,4.217,1190,4.366,1191,3.958,1192,3.422,1193,3.723,1194,3.911,1195,4.136,1196,3.723,1197,2.748,1198,4.136,1199,4.136,1200,4.136,1201,4.136,1202,4.136,1203,4.136,1204,4.136,1205,4.136,1206,4.136,1207,3.911,1208,4.136]],["title/interfaces/IResolvedUser.html",[146,0.434,1142,3.418]],["body/interfaces/IResolvedUser.html",[1,3.416,3,0.144,4,0.12,5,0.098,9,0.284,10,0.886,12,1.55,15,3.597,16,1.993,17,3.671,24,0.006,25,0.524,26,0.416,28,2.898,39,1.147,61,0.191,80,0.003,81,0.004,82,0.003,146,0.737,148,1.625,224,3.671,229,2.759,237,3.948,412,3.879,1136,3.045,1137,4.584,1138,3.792,1139,4.793,1140,3.976,1141,2.825,1142,5.808,1143,4.126,1144,5.856,1145,4.639,1146,4.639]],["title/interfaces/IRole.html",[146,0.434,1144,3.27]],["body/interfaces/IRole.html",[1,3.718,3,0.156,4,0.131,5,0.106,9,0.309,10,0.935,12,1.687,15,2.639,16,2.031,17,2.693,24,0.006,25,0.801,26,0.347,28,2.492,39,1.144,61,0.199,80,0.004,81,0.005,82,0.004,146,0.767,148,1.769,224,2.693,229,3.003,237,4.297,412,3.621,1136,3.314,1137,4.989,1138,4.127,1139,4.214,1140,4.133,1141,3.074,1142,5.559,1143,4.49,1144,5.777,1145,3.404,1146,3.404]],["title/interfaces/IRoleProperties.html",[146,0.434,1209,3.797]],["body/interfaces/IRoleProperties.html",[0,0.157,3,0.136,4,0.114,5,0.093,7,1.189,8,2.405,9,0.39,10,0.858,24,0.006,25,0.81,26,0.389,27,0.873,30,2.647,34,1.369,35,3.976,39,1.081,51,0.308,52,1.268,53,3.473,55,1.323,56,1.646,57,1.053,59,2.133,61,0.187,62,1.62,63,2.259,70,2.133,76,2.259,80,0.003,81,0.004,82,0.003,146,0.498,148,1.545,220,2.613,224,3.827,418,1.818,455,3.057,456,3.057,521,2.82,532,3.577,674,3.473,867,4.363,1034,3.354,1109,4.119,1139,5.159,1141,3.881,1209,6.298,1210,4.357,1211,4.357,1212,5.052,1213,4.357,1214,3.922,1215,4.654,1216,4.119,1217,5.052,1218,5.052,1219,5.052,1220,5.052,1221,5.667]],["title/interfaces/ISubmissionProperties.html",[146,0.434,1222,3.797]],["body/interfaces/ISubmissionProperties.html",[0,0.126,3,0.109,4,0.092,5,0.104,7,0.954,8,2.073,9,0.216,10,0.739,12,1.183,24,0.006,26,0.407,27,0.956,30,2.419,34,1.181,35,3.428,39,1.033,49,1.813,51,0.361,52,1.093,53,4.488,54,2.155,55,1.062,56,1.321,57,0.845,59,1.712,61,0.104,62,1.3,70,1.712,76,3.161,80,0.003,81,0.004,82,0.003,99,2.631,136,1.313,143,0.782,146,0.4,148,1.24,409,1.62,418,1.459,421,1.888,474,4.859,476,3.012,482,4.747,484,3.382,485,3.554,508,3.951,617,4.801,628,1.969,788,3.554,917,4.634,976,5.848,1184,2.322,1191,2.527,1222,5.63,1223,3.735,1224,6.413,1225,6.851,1226,7.437,1227,7.908,1228,4.952,1229,7.908,1230,6.282,1231,3.497,1232,4.054,1233,3.735,1234,5.218,1235,4.054,1236,3.012,1237,4.054,1238,6.015,1239,4.397,1240,6.529,1241,5.665,1242,4.054,1243,4.054,1244,4.054,1245,4.054,1246,4.054,1247,4.054,1248,4.054,1249,3.497,1250,4.054,1251,4.054,1252,4.054]],["title/interfaces/ITaskParent.html",[146,0.434,1192,3.141]],["body/interfaces/ITaskParent.html",[0,0.146,3,0.127,4,0.107,5,0.086,7,1.108,8,2.295,9,0.251,10,0.819,16,1.844,21,0.812,23,0.801,24,0.006,25,0.741,26,0.342,27,0.532,28,2.182,30,2.574,34,1.307,35,3.795,39,0.987,51,0.368,52,1.21,54,2.501,55,1.232,56,1.534,57,0.981,59,1.987,61,0.18,62,1.509,76,2.805,80,0.003,81,0.004,82,0.003,92,1.307,99,2.219,107,1.448,124,1.752,146,0.695,148,1.439,220,2.723,229,2.443,409,2.818,411,3.025,416,5.367,417,5.367,418,1.693,455,2.848,456,2.848,478,2.933,484,2.818,485,2.562,508,4.268,545,2.388,584,3.025,600,2.551,628,3.425,917,2.933,991,2.848,1181,5.032,1182,3.837,1183,4.059,1184,3.592,1185,4.059,1186,4.268,1187,4.849,1188,4.868,1189,4.164,1190,4.311,1191,3.908,1192,4.475,1193,4.868,1194,3.837,1195,4.059,1196,3.653,1197,2.696,1198,4.059,1199,4.059,1200,4.059,1201,4.059,1202,4.059,1203,4.059,1204,4.059,1205,4.059,1206,4.059,1207,3.837,1208,4.059,1253,5.777,1254,5.269,1255,5.269,1256,5.269]],["title/interfaces/ITaskProperties.html",[146,0.434,1188,3.418]],["body/interfaces/ITaskProperties.html",[0,0.143,3,0.125,4,0.105,5,0.085,7,1.087,8,2.267,9,0.247,10,0.809,16,1.458,24,0.006,25,0.79,26,0.397,27,0.962,28,2.598,30,2.555,34,1.291,35,3.748,39,1.032,51,0.365,52,1.195,54,2.455,55,1.21,56,1.505,57,0.963,59,1.95,61,0.178,62,1.481,76,2.77,80,0.003,81,0.004,82,0.003,99,1.634,124,1.72,146,0.689,148,1.412,220,2.433,409,3.11,411,2.969,416,3.296,417,3.296,418,1.662,455,2.795,456,2.795,478,2.879,484,2.791,485,2.515,508,4.229,545,2.344,584,2.969,600,3.167,628,3.625,917,2.879,991,2.795,1181,4.419,1182,3.767,1183,3.984,1184,4.277,1185,3.984,1186,4.712,1187,5.51,1188,5.424,1189,5.17,1190,5.352,1191,4.852,1192,3.296,1193,3.586,1194,3.767,1195,3.984,1196,3.586,1197,2.646,1198,3.984,1199,3.984,1200,3.984,1201,3.984,1202,3.984,1203,3.984,1204,3.984,1205,3.984,1206,3.984,1207,3.767,1208,3.984]],["title/interfaces/ITaskStatus.html",[146,0.434,1257,3.797]],["body/interfaces/ITaskStatus.html",[0,0.188,3,0.164,4,0.137,5,0.111,9,0.324,10,0.962,24,0.006,26,0.385,51,0.285,61,0.155,80,0.004,81,0.005,82,0.004,99,3.133,146,0.598,148,1.854,484,3.382,1231,5.23,1249,5.23,1257,7.125,1258,5.587,1259,5.587,1260,6.414,1261,6.414,1262,6.414,1263,4.945,1264,5.667,1265,6.065,1266,6.065]],["title/interfaces/IUserProperties.html",[146,0.434,1267,3.27]],["body/interfaces/IUserProperties.html",[0,0.169,3,0.147,4,0.123,5,0.1,7,1.281,8,2.522,9,0.425,10,0.9,12,1.587,24,0.006,25,0.679,26,0.386,30,2.808,39,1.116,51,0.323,52,1.33,55,1.425,56,1.773,57,1.134,59,2.297,61,0.176,62,1.745,70,2.297,76,2.434,80,0.004,81,0.005,82,0.004,146,0.536,148,1.664,220,2.674,412,2.534,418,1.958,503,3.598,554,3.741,867,4.576,1140,2.892,1145,4.827,1146,4.827,1267,5.618,1268,5.013,1269,5.853,1270,4.693,1271,4.693,1272,4.042,1273,4.042,1274,4.042,1275,4.042,1276,4.693,1277,4.693,1278,5.013]],["title/interfaces/IUserProperties-1.html",[146,0.363,1267,2.735,1279,2.445]],["body/interfaces/IUserProperties-1.html",[0,0.155,3,0.135,4,0.113,5,0.092,7,1.176,8,2.388,9,0.437,10,0.852,12,1.457,24,0.006,25,0.716,26,0.398,27,0.87,30,2.804,34,1.041,35,3.024,39,1.103,51,0.341,52,1.259,53,3.435,54,2.655,55,1.308,56,1.628,57,1.041,59,2.109,61,0.167,62,1.602,70,2.109,76,2.918,80,0.003,81,0.004,82,0.003,146,0.492,148,1.528,220,2.67,412,2.327,418,1.798,503,3.594,554,3.435,867,4.332,1139,4.981,1140,2.655,1141,4.246,1145,4.701,1146,4.701,1221,4.309,1267,5.396,1269,5.7,1270,4.309,1271,4.309,1272,3.712,1273,3.712,1274,3.712,1275,3.712,1276,4.309,1277,4.309,1280,4.603,1281,4.997,1282,4.997]],["title/interfaces/IUserTaskInfoProperties.html",[146,0.434,1283,3.797]],["body/interfaces/IUserTaskInfoProperties.html",[0,0.185,3,0.161,4,0.135,5,0.109,7,1.403,9,0.318,10,0.952,24,0.006,26,0.354,30,2.697,39,1.104,51,0.342,52,1.408,55,1.561,56,1.942,57,1.242,59,2.516,61,0.152,62,1.911,70,2.516,80,0.004,81,0.005,82,0.004,146,0.587,148,1.822,260,4.178,418,2.144,477,3.607,482,3.507,484,2.381,1140,3.167,1145,4.957,1146,4.957,1272,4.427,1273,4.427,1274,4.427,1275,4.427,1283,6.797,1284,5.49]],["title/interfaces/InlineAttachment.html",[146,0.434,154,3.026]],["body/interfaces/InlineAttachment.html",[3,0.154,4,0.129,5,0.104,7,1.957,9,0.304,10,0.925,24,0.006,25,0.561,26,0.276,39,1.138,61,0.145,80,0.004,81,0.005,82,0.004,146,0.847,147,4.872,148,1.739,149,4.059,150,5.554,151,6.175,152,4.226,153,4.226,154,5.307,155,4.226,156,6.002,157,4.226,158,5.307,159,4.059,160,4.226,161,4.872,162,5.264,163,5.264,164,4.872,165,4.289,166,4.059,167,4.226,168,4.226,169,4.226]],["title/modules/InterceptorModule.html",[170,1.458,386,3.59]],["body/modules/InterceptorModule.html",[0,0.179,3,0.156,4,0.131,5,0.106,24,0.006,51,0.365,61,0.148,63,2.587,80,0.004,81,0.005,82,0.004,111,1.404,124,2.154,133,4.989,170,2.372,172,2.693,184,2.935,275,4.923,296,3.501,378,4.656,386,5.839,400,4.755,401,6.342,762,3.997,814,4.127,823,5.559,825,4.214,860,6.175,1092,4.923,1197,4.102,1285,6.476,1286,6.597,1287,5.559,1288,6.175,1289,4.755,1290,9.1,1291,5.559,1292,6.597,1293,7.009,1294,4.297]],["title/injectables/JwtAuthGuard.html",[210,1.068,1295,3.797]],["body/injectables/JwtAuthGuard.html",[0,0.208,3,0.181,4,0.152,5,0.123,7,1.577,24,0.006,51,0.367,61,0.171,80,0.004,81,0.005,82,0.004,111,1.626,187,5.778,210,1.898,211,2.828,1295,6.746,1296,6.7,1297,6.7,1298,7.501,1299,7.501]],["title/interfaces/JwtConstants.html",[146,0.434,191,3.418]],["body/interfaces/JwtConstants.html",[3,0.155,4,0.13,5,0.105,9,0.306,10,0.929,24,0.006,26,0.393,39,1.105,51,0.269,61,0.182,63,2.56,73,6.791,79,6.135,80,0.004,81,0.005,82,0.004,136,1.649,146,0.564,148,1.75,191,6.286,208,3.368,229,2.971,436,4.075,545,2.904,629,4.668,1138,5.076,1300,5.273,1301,8.328,1302,7.115,1303,6.409,1304,6.409,1305,5.273,1306,4.252,1307,4.668,1308,4.252,1309,6.409,1310,5.724,1311,5.724,1312,5.724,1313,6.409,1314,5.724,1315,4.668,1316,4.937,1317,6.409,1318,5.273,1319,6.409,1320,5.273,1321,5.724,1322,6.409,1323,6.409,1324,5.724,1325,5.724]],["title/interfaces/JwtPayload.html",[146,0.434,1326,3.797]],["body/interfaces/JwtPayload.html",[3,0.152,4,0.127,5,0.103,7,1.657,9,0.301,10,0.919,24,0.006,26,0.41,39,1.122,51,0.264,57,1.173,61,0.144,63,3.601,80,0.004,81,0.005,82,0.004,99,2.991,146,0.555,148,1.722,1136,4.401,1310,8.05,1311,8.05,1312,8.05,1314,8.05,1315,6.564,1316,6.943,1320,6.487,1321,7.042,1326,6.073,1327,5.631,1328,5.631,1329,6.487]],["title/injectables/JwtStrategy.html",[178,3.59,210,1.068]],["body/injectables/JwtStrategy.html",[0,0.156,3,0.136,4,0.114,5,0.092,7,1.185,9,0.269,12,1.912,18,1.318,21,0.754,23,1.116,24,0.006,25,0.646,26,0.318,27,0.74,51,0.392,61,0.129,62,1.614,63,2.932,80,0.003,81,0.004,82,0.003,87,2.667,92,1.366,107,1.033,111,1.221,136,1.52,143,0.971,178,5.345,179,6.491,187,4.341,191,3.907,192,4.637,194,5.033,210,1.591,211,2.125,213,2.668,230,2.281,242,2.393,245,2.572,276,4.685,600,2.047,912,3.046,1096,3.591,1107,4.341,1138,3.591,1141,2.675,1288,5.653,1316,5.653,1326,6.66,1330,5.033,1331,5.635,1332,6.374,1333,5.635,1334,7.339,1335,5.635,1336,7.723,1337,5.635,1338,4.341,1339,5.033,1340,5.415,1341,5.635,1342,5.635,1343,5.635,1344,5.635,1345,5.635,1346,5.635,1347,5.635,1348,5.635,1349,5.635,1350,5.635,1351,5.033,1352,5.635,1353,4.341,1354,4.506,1355,5.635,1356,5.635,1357,4.637,1358,5.635,1359,5.033,1360,2.883,1361,5.033,1362,5.635,1363,5.033,1364,3.235]],["title/injectables/JwtValidationAdapter.html",[179,3.418,210,1.068]],["body/injectables/JwtValidationAdapter.html",[0,0.149,1,4.087,3,0.13,4,0.109,5,0.088,9,0.257,16,1.785,21,0.732,23,1.083,24,0.006,25,0.627,26,0.308,27,0.718,39,1.097,51,0.298,61,0.123,80,0.003,81,0.004,82,0.003,92,1.325,107,1.305,111,1.166,124,1.789,136,1.474,179,4.936,210,1.543,211,2.028,213,2.966,230,2.639,243,3.962,245,2.495,275,5.214,276,4.087,558,3.379,559,3.462,560,3.3,561,3.3,562,3.379,563,4.087,651,4.371,833,5.634,912,2.908,1107,5.483,1114,4.371,1138,5.411,1140,3.379,1316,7.325,1329,5.857,1340,6.235,1365,6.565,1366,4.426,1367,7.119,1368,7.119,1369,7.119,1370,5.38,1371,7.119,1372,5.38,1373,7.119,1374,4.087,1375,5.857,1376,5.483,1377,5.185,1378,7.119,1379,7.119,1380,6.358,1381,6.358,1382,5.38,1383,7.119,1384,5.38,1385,5.38,1386,7.119,1387,5.38,1388,5.38,1389,5.38,1390,5.38]],["title/modules/LearnroomModule.html",[170,1.458,1391,3.59]],["body/modules/LearnroomModule.html",[0,0.188,3,0.164,4,0.138,5,0.112,24,0.006,51,0.388,61,0.155,80,0.004,81,0.005,82,0.004,111,1.475,170,2.445,172,2.83,173,3.832,180,4.6,181,3.577,182,3.084,184,3.745,185,3.309,678,6.856,679,4.12,685,6.686,686,6.078,778,5.73,797,6.078,825,3.577,860,5.242,1391,7.023,1392,6.078,1393,6.078,1394,6.805,1395,6.805,1396,6.805]],["title/classes/LearnroomTestHelper.html",[0,0.136,1397,4.056]],["body/classes/LearnroomTestHelper.html",[0,0.112,2,0.791,3,0.098,4,0.082,5,0.067,7,1.232,9,0.194,10,0.683,12,1.791,21,0.998,23,1.214,24,0.006,25,0.732,26,0.393,27,0.805,32,1.109,33,1.283,34,1.401,41,1.948,43,3.562,51,0.315,52,0.7,55,0.95,57,0.756,61,0.093,80,0.002,81,0.003,82,0.002,92,1.091,107,1.754,136,1.559,143,1.478,220,2.602,260,4.796,264,1.761,316,3.517,345,3.08,409,3.414,412,1.689,413,4.381,414,2.816,415,2.816,478,2.26,503,2.295,532,1.975,600,2.9,617,4.629,1140,2.781,1228,2.331,1236,2.694,1397,4.821,1398,3.341,1399,6.67,1400,4.821,1401,5.86,1402,5.86,1403,5.798,1404,7.527,1405,7.527,1406,7.527,1407,5.798,1408,4.513,1409,4.821,1410,4.821,1411,5.657,1412,4.821,1413,5.657,1414,5.657,1415,5.657,1416,5.657,1417,5.657,1418,3.627,1419,4.821,1420,3.627,1421,3.627,1422,5.86,1423,6.723,1424,4.061,1425,5.86,1426,4.061,1427,4.061,1428,4.061,1429,4.061,1430,4.061,1431,4.061,1432,3.341,1433,3.627,1434,3.341,1435,3.627,1436,3.627,1437,3.341,1438,3.627,1439,3.627,1440,3.627,1441,3.627,1442,3.627,1443,3.627,1444,4.061,1445,4.061,1446,3.627,1447,3.341,1448,3.341,1449,5.86,1450,5.86,1451,4.061,1452,4.061,1453,4.061,1454,4.061,1455,4.061,1456,4.061,1457,4.061]],["title/classes/LessonTaskInfo.html",[0,0.136,1186,2.664]],["body/classes/LessonTaskInfo.html",[0,0.155,2,1.094,3,0.135,4,0.114,5,0.092,7,1.539,8,3.057,9,0.268,10,0.854,14,2.925,15,2.984,16,1.539,17,3.045,18,1.313,21,0.961,23,0.854,24,0.006,25,0.494,26,0.388,27,0.566,28,2.275,29,2.468,30,2.639,32,1.999,33,2.314,34,1.363,39,0.632,41,1.867,42,2.384,43,3.256,44,2.799,45,2.799,46,2.384,47,2.799,48,2.73,49,2.243,50,2.799,51,0.341,52,1.262,55,1.313,56,1.634,57,1.045,59,2.117,61,0.128,62,1.608,76,2.243,80,0.003,81,0.004,82,0.003,146,0.494,409,3.384,418,2.353,421,2.335,477,3.035,478,4.075,484,3.081,508,3.958,513,3.725,584,3.223,628,3.534,980,6.54,1186,3.958,1458,7.104,1459,5.987,1460,6.651,1461,5.615,1462,4.089,1463,5.015,1464,5.015,1465,5.015,1466,5.015]],["title/interfaces/LessonTaskInfoProperties.html",[146,0.434,1460,3.797]],["body/interfaces/LessonTaskInfoProperties.html",[0,0.181,3,0.158,4,0.132,5,0.107,7,1.376,8,2.638,9,0.312,10,0.941,24,0.006,26,0.35,27,0.814,30,2.467,51,0.367,52,1.391,55,1.531,56,1.905,57,1.218,59,2.468,61,0.149,62,1.875,76,2.615,80,0.004,81,0.005,82,0.004,146,0.576,148,1.787,409,3.539,418,2.103,477,3.538,478,3.643,484,2.335,508,4.362,584,3.757,628,3.961,1186,3.538,1458,5.386,1459,6.504,1460,6.739,1462,4.767,1463,5.846,1464,5.846,1465,5.846,1466,5.846]],["title/injectables/Logger.html",[210,1.068,834,2.829]],["body/injectables/Logger.html",[0,0.177,3,0.155,4,0.13,5,0.105,7,1.675,24,0.006,32,1.75,51,0.334,61,0.146,64,2.287,75,3.042,80,0.004,81,0.005,82,0.004,92,1.193,111,1.389,210,1.726,211,2.417,239,4.084,243,4.434,377,3.195,586,3.455,710,3.971,762,3.971,821,3.279,834,5.456,840,4.685,871,3.935,931,4.444,961,4.084,1096,4.084,1162,6.983,1165,5.75,1374,3.679,1467,5.724,1468,9.066,1469,6.409,1470,6.409,1471,4.444,1472,4.937,1473,5.724,1474,4.937,1475,5.724,1476,4.252,1477,4.084,1478,7.115,1479,4.668,1480,6.409,1481,6.409,1482,5.724,1483,4.668,1484,5.724,1485,4.084,1486,6.409,1487,6.409,1488,6.409]],["title/modules/LoggerModule.html",[170,1.458,387,3.141]],["body/modules/LoggerModule.html",[0,0.194,3,0.169,4,0.142,5,0.115,24,0.006,51,0.352,61,0.16,80,0.004,81,0.005,82,0.004,111,1.518,170,2.488,172,2.914,173,3.9,180,4.682,181,3.683,182,3.175,184,3.812,205,4.682,387,6.256,834,5.797,1489,6.258,1490,6.258,1491,6.258,1492,7.007,1493,7.007]],["title/interfaces/Mail.html",[146,0.434,165,2.664]],["body/interfaces/Mail.html",[3,0.142,4,0.119,5,0.097,7,1.849,9,0.281,10,0.881,24,0.006,25,0.519,26,0.403,27,0.966,39,1.147,61,0.134,80,0.003,81,0.004,82,0.003,146,0.833,147,4.639,148,1.61,149,3.756,150,5.12,151,5.012,152,3.91,153,3.91,154,4.639,155,3.91,156,3.91,157,3.91,158,5.12,159,3.756,160,3.91,161,5.4,162,5.012,163,5.012,164,5.4,165,5.029,166,5.604,167,5.835,168,5.835,169,5.835]],["title/interfaces/MailAttachment.html",[146,0.434,150,3.026]],["body/interfaces/MailAttachment.html",[3,0.151,4,0.126,5,0.103,7,1.889,9,0.298,10,0.915,24,0.006,25,0.791,26,0.371,39,1.145,61,0.143,80,0.004,81,0.005,82,0.004,146,0.844,147,4.816,148,1.708,149,3.985,150,5.518,151,5.204,152,5.962,153,5.962,154,4.816,155,4.148,156,4.148,157,4.148,158,5.262,159,3.985,160,4.148,161,4.816,162,5.204,163,5.204,164,4.816,165,4.24,166,3.985,167,4.148,168,4.148,169,4.148]],["title/interfaces/MailContent.html",[146,0.434,158,3.026]],["body/interfaces/MailContent.html",[3,0.151,4,0.127,5,0.103,7,1.891,9,0.299,10,0.916,24,0.006,25,0.552,26,0.34,27,0.792,39,1.136,61,0.143,80,0.004,81,0.005,82,0.004,146,0.844,147,5.522,148,1.711,149,3.993,150,5.267,151,5.21,152,4.157,153,4.157,154,5.522,155,4.157,156,4.157,157,4.157,158,5.522,159,5.731,160,5.967,161,4.822,162,5.21,163,5.21,164,4.822,165,4.245,166,3.993,167,4.157,168,4.157,169,4.157]],["title/modules/MailModule.html",[170,1.458,1494,3.418]],["body/modules/MailModule.html",[0,0.169,3,0.148,4,0.124,5,0.1,21,0.629,23,0.93,24,0.006,25,0.681,26,0.368,27,0.617,39,0.955,51,0.355,61,0.14,80,0.004,81,0.005,82,0.004,92,1.139,107,1.121,111,1.326,136,1.602,143,1.333,146,0.538,170,2.51,172,2.544,184,2.772,185,2.974,205,3.404,506,3.586,825,3.215,826,4.455,1494,5.883,1495,4.455,1496,5.463,1497,6.365,1498,6.867,1499,6.116,1500,4.066,1501,6.535,1502,6.981,1503,4.455,1504,4.058,1505,5.883,1506,5.463,1507,5.634,1508,5.634,1509,5.634,1510,5.958,1511,5.033,1512,4.711,1513,5.033,1514,5.033,1515,6.365,1516,4.711,1517,5.033,1518,5.463,1519,5.463,1520,5.463]],["title/interfaces/MailModuleOptions.html",[146,0.434,1498,3.797]],["body/interfaces/MailModuleOptions.html",[0,0.167,3,0.146,4,0.122,5,0.099,9,0.288,10,0.894,24,0.006,25,0.531,26,0.397,39,1.094,51,0.353,61,0.138,80,0.004,81,0.004,82,0.004,111,1.307,136,1.588,143,1.322,146,0.531,148,1.647,170,2.494,184,2.734,185,2.933,205,3.358,506,2.797,825,3.171,826,4.394,1494,5.317,1495,4.394,1497,4.964,1498,6.493,1500,3.171,1501,5.906,1502,6.936,1503,4.394,1504,4.002,1505,5.845,1506,5.388,1507,6.67,1508,6.67,1509,6.67,1510,5.906,1511,4.964,1512,4.647,1513,4.964,1514,4.964,1515,6.309,1516,4.647,1517,4.964,1518,5.388,1519,5.388,1520,5.388]],["title/injectables/MailService.html",[210,1.068,1505,3.418]],["body/injectables/MailService.html",[0,0.174,3,0.152,4,0.127,5,0.103,9,0.3,18,1.841,21,0.809,23,1.197,24,0.006,25,0.693,26,0.341,27,0.794,39,0.886,51,0.36,61,0.144,80,0.004,81,0.005,82,0.004,87,2.861,92,1.466,107,1.153,111,1.363,146,0.554,165,4.868,210,1.706,211,2.372,213,2.809,230,2.447,245,2.205,545,2.851,600,2.861,762,3.926,795,3.863,809,5.702,1500,4.517,1503,4.582,1504,4.174,1505,5.459,1508,4.582,1509,4.582,1521,5.177,1522,6.479,1523,6.291,1524,8.45,1525,6.937,1526,6.291,1527,7.033,1528,6.291,1529,5.619,1530,5.619,1531,5.619,1532,5.619,1533,4.846]],["title/interfaces/MailServiceOptions.html",[146,0.434,1525,3.797]],["body/interfaces/MailServiceOptions.html",[0,0.182,3,0.159,4,0.133,5,0.108,9,0.314,10,0.945,18,1.541,24,0.006,26,0.351,39,1.077,51,0.368,61,0.15,80,0.004,81,0.005,82,0.004,87,2.944,111,1.428,146,0.58,148,1.799,165,4.379,210,1.756,213,2.153,230,2.047,245,2.309,545,2.985,600,2.944,762,3.284,795,4.045,809,4.37,1500,3.462,1503,4.797,1504,4.37,1505,4.567,1508,6.667,1509,6.667,1521,5.42,1524,7.837,1525,6.758,1527,5.884,1529,5.884,1530,5.884,1531,5.884,1532,5.884,1533,5.074]],["title/modules/MongoMemoryDatabaseModule.html",[170,1.458,1534,3.797]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.138,3,0.12,4,0.101,5,0.082,18,1.165,21,0.695,23,0.757,24,0.006,25,0.438,26,0.293,27,0.502,34,0.927,51,0.372,55,1.581,56,1.449,61,0.188,63,1.989,80,0.003,81,0.004,82,0.003,87,1.809,92,0.927,107,1.239,111,1.079,136,1.704,143,1.419,170,2.435,172,2.071,184,2.257,185,2.421,205,2.772,213,2.508,230,2.101,245,2.689,265,3.836,345,2.617,470,3.057,506,3.134,600,2.788,710,2.483,788,2.421,795,4.15,814,3.173,821,3.458,825,3.553,833,4.485,939,2.548,1053,3.304,1377,3.627,1485,3.173,1496,4.448,1497,5.562,1500,4.033,1501,6.628,1534,5.911,1535,6.314,1536,6.294,1537,6.314,1538,4.097,1539,7.351,1540,4.98,1541,8.605,1542,4.98,1543,6.038,1544,6.772,1545,6.854,1546,4.097,1547,6.854,1548,8.108,1549,3.304,1550,3.627,1551,4.097,1552,4.448,1553,6.038,1554,5.562,1555,5.207,1556,4.448,1557,4.687,1558,3.836,1559,3.173,1560,3.627,1561,3.453,1562,4.097,1563,3.453,1564,4.097,1565,3.836,1566,6.038,1567,4.448,1568,4.448,1569,4.448,1570,4.98,1571,3.627,1572,4.98,1573,4.98,1574,5.562,1575,3.453,1576,3.627,1577,4.448,1578,4.98,1579,4.98]],["title/classes/News.html",[0,0.136,497,1.931]],["body/classes/News.html",[0,0.187,2,0.637,3,0.079,4,0.147,5,0.054,7,1.533,8,2.612,9,0.156,10,0.582,12,0.852,14,1.994,15,2.034,16,1.423,17,2.076,18,0.765,21,0.963,23,0.759,24,0.006,25,0.676,26,0.4,27,0.869,28,2.266,29,2.442,30,2.776,32,1.652,33,1.912,34,1.357,39,1.032,41,1.088,42,1.389,43,2.553,44,1.631,45,1.631,46,1.389,47,1.631,48,1.591,49,1.307,50,1.631,51,0.335,52,1.257,54,3.213,55,0.765,56,0.952,57,0.609,61,0.166,62,0.937,64,2.159,66,5.092,70,1.234,76,2.417,80,0.002,81,0.003,82,0.002,91,2.952,92,0.929,107,0.6,143,0.564,146,0.288,220,2.122,221,3.886,222,3.83,224,2.517,244,2.268,273,3.368,335,2.96,360,1.878,409,1.167,412,2.076,418,1.604,421,2.816,485,3.292,490,2.698,495,1.878,496,2.268,497,3.728,498,3.903,499,3.83,500,3.94,501,3.659,502,4.931,503,3.01,504,4.694,505,4.492,506,2.805,507,3.844,508,4.319,511,3.461,512,4.185,513,4.015,514,3.461,517,3.635,518,4.314,519,3.635,520,3.461,521,2.488,522,3.311,523,3.461,526,3.558,528,3.474,529,3.856,532,2.942,534,3.311,536,3.635,538,3.635,540,3.589,541,2.383,542,2.698,543,1.768,544,2.268,545,1.483,546,2.778,547,3.311,548,3.181,549,2.383,550,2.383,551,2.383,552,2.383,553,2.383,554,2.009,555,2.171,556,2.383,557,3.635,558,2.872,559,2.942,560,2.805,561,2.805,562,2.872,563,3.474,564,3.474,565,2.383,566,3.635,567,2.383,568,2.383,569,4.407,570,1.94,571,1.94,1580,4.991,1581,3.272,1582,3.272,1583,3.272,1584,3.272,1585,3.272,1586,3.272,1587,3.272,1588,3.272,1589,3.272,1590,3.272,1591,3.272,1592,3.272]],["title/controllers/NewsController.html",[677,2.184,1593,3.797]],["body/controllers/NewsController.html",[0,0.103,3,0.09,4,0.075,5,0.061,9,0.177,10,0.641,12,2.231,16,1.155,21,0.792,23,1.171,24,0.006,25,0.678,26,0.334,27,0.777,29,2.07,34,0.692,39,0.984,51,0.359,52,0.947,57,0.692,61,0.085,80,0.002,81,0.003,82,0.002,87,1.351,92,1.023,107,1.412,111,0.806,126,3.154,136,1.841,143,1.328,213,3.065,228,2.97,230,2.764,242,1.579,243,3.058,245,2.699,497,3.741,503,2.828,521,2.739,543,2.97,547,3.645,586,3.34,596,3.501,599,2.961,641,5.005,644,3.958,670,1.765,677,1.648,679,1.853,681,2.369,687,2.369,688,2.708,692,2.708,695,5.932,926,2.466,945,4.95,1056,4.144,1091,3.059,1136,4.83,1154,4.144,1351,4.907,1593,4.232,1594,3.321,1595,6.21,1596,4.531,1597,6.535,1598,5.609,1599,3.718,1600,5.033,1601,3.718,1602,3.645,1603,5.664,1604,3.718,1605,5.494,1606,3.718,1607,7.201,1608,3.059,1609,5.005,1610,4.789,1611,3.718,1612,4.521,1613,3.718,1614,5.494,1615,3.718,1616,4.907,1617,4.6,1618,5.494,1619,3.809,1620,3.718,1621,5.257,1622,5.494,1623,3.718,1624,5.033,1625,3.321,1626,2.864,1627,5.34,1628,2.466,1629,3.059,1630,4.164,1631,3.321,1632,2.578,1633,2.708,1634,3.321,1635,3.321,1636,3.718,1637,3.321,1638,3.321,1639,3.321,1640,3.321,1641,5.939,1642,3.059,1643,3.321,1644,3.321,1645,3.321,1646,3.321,1647,3.321,1648,3.059,1649,3.059,1650,3.718,1651,6.535,1652,3.718,1653,3.718,1654,3.718,1655,5.494,1656,3.718]],["title/classes/NewsFilterQuery.html",[0,0.136,1609,3.418]],["body/classes/NewsFilterQuery.html",[0,0.205,2,1.114,3,0.138,4,0.116,5,0.094,9,0.273,10,0.864,16,1.558,21,0.845,24,0.006,26,0.356,27,0.931,29,2.21,39,0.979,51,0.364,52,0.986,61,0.13,68,5.541,80,0.003,81,0.004,82,0.003,124,2.995,136,1.184,221,4.38,222,4.098,223,5.047,228,4.005,497,3.615,498,3.94,532,2.781,628,3.214,656,5.138,659,4.722,660,4.722,663,5.987,664,6.097,665,4.55,669,6.029,670,2.714,672,7.155,673,6.097,674,3.512,675,4.165,676,3.392,1135,5.453,1609,5.138,1657,7.155,1658,4.706,1659,5.719,1660,5.397,1661,6.618,1662,5.719,1663,5.719,1664,5.719,1665,5.719,1666,6.618,1667,7.41,1668,5.719,1669,7.41,1670,5.719,1671,7.41,1672,6.097,1673,5.719,1674,5.719]],["title/classes/NewsMapper.html",[0,0.136,1633,3.59]],["body/classes/NewsMapper.html",[0,0.132,2,0.927,3,0.115,4,0.096,5,0.078,9,0.227,12,1.239,21,0.83,23,1.228,24,0.006,25,0.711,26,0.35,27,0.814,34,0.885,51,0.355,52,0.82,61,0.109,80,0.003,81,0.004,82,0.003,91,2.517,92,1.219,107,1.48,136,1.672,143,1.392,221,3.185,222,3.736,223,4.022,497,3.317,498,2.969,499,3.266,501,3.541,503,1.863,506,4.43,540,2.821,599,2.969,641,5.598,644,4.336,752,4.346,756,3.156,757,3.156,945,4.022,1126,5.196,1132,5.458,1134,5.598,1135,3.156,1609,5.598,1621,5.88,1632,5.598,1633,4.771,1675,4.249,1676,6.551,1677,6.551,1678,6.551,1679,6.551,1680,4.757,1681,6.551,1682,4.757,1683,6.551,1684,4.757,1685,6.551,1686,4.757,1687,3.664,1688,7.494,1689,3.664,1690,3.664,1691,4.249,1692,4.757,1693,4.757,1694,4.757,1695,4.757,1696,4.757,1697,4.249,1698,4.757,1699,4.757,1700,4.757,1701,4.757,1702,4.757,1703,4.249,1704,4.757,1705,4.249,1706,6.551,1707,4.757,1708,4.757,1709,4.757,1710,4.757,1711,4.757,1712,4.757,1713,4.757,1714,4.757,1715,3.914,1716,4.757,1717,3.914,1718,4.757,1719,4.249,1720,4.249,1721,6.551,1722,4.757,1723,4.757,1724,4.757,1725,6.551,1726,6.551,1727,6.551,1728,4.757,1729,4.757]],["title/modules/NewsModule.html",[170,1.458,1730,3.59]],["body/modules/NewsModule.html",[0,0.164,3,0.143,4,0.12,5,0.097,24,0.006,51,0.397,61,0.136,80,0.003,81,0.004,82,0.003,111,1.287,170,2.246,172,2.47,173,3.52,180,4.226,181,3.122,182,2.692,184,3.441,185,3.692,196,6.464,205,4.226,271,3.21,387,5.941,470,3.647,679,3.785,1099,4.118,1593,6.793,1598,4.326,1630,6.299,1631,5.305,1730,7.233,1731,5.305,1732,5.94,1733,5.305,1734,5.305,1735,6.185,1736,5.94,1737,6.446,1738,5.305,1739,5.94,1740,5.94,1741,5.305,1742,5.94,1743,5.94,1744,5.94,1745,3.941,1746,3.941,1747,6.781,1748,5.94,1749,5.94,1750,5.94,1751,4.118]],["title/injectables/NewsRepo.html",[210,1.068,1735,3.27]],["body/injectables/NewsRepo.html",[0,0.095,3,0.082,4,0.069,5,0.056,7,1.084,9,0.163,10,0.601,16,1.084,21,0.932,23,1.346,24,0.006,25,0.779,26,0.389,27,0.893,32,0.933,33,1.08,34,0.636,43,3.222,51,0.358,52,1.281,55,1.206,56,0.995,57,0.636,61,0.078,69,3.451,80,0.002,81,0.003,82,0.002,92,0.96,107,1.644,111,0.74,136,1.77,143,1.071,210,1.118,211,1.288,213,3.1,220,2.015,230,2.75,234,3.96,243,3.459,245,2.926,289,6.907,291,5.55,292,3.757,293,4.607,294,4.607,295,4.607,296,2.788,297,4.607,298,4.607,299,4.607,305,3.052,306,6.539,308,3.052,310,3.052,312,3.052,314,3.052,316,2.639,317,3.052,319,3.052,321,3.052,345,2.711,355,4.8,495,3.567,497,3.553,498,3.873,500,2.788,503,3.061,505,3.422,544,4.8,547,4.593,570,3.685,571,3.685,585,2.098,586,2.237,596,3.287,599,2.338,600,2.258,605,4.593,628,2.695,646,3.059,749,5.332,856,2.177,908,4.526,939,2.639,1015,4.526,1135,4.593,1150,5.381,1153,3.059,1154,2.961,1500,4.492,1550,2.488,1596,4.309,1660,2.488,1735,3.422,1752,3.052,1753,6.214,1754,5.158,1755,5.158,1756,3.417,1757,4.8,1758,3.417,1759,5.158,1760,3.417,1761,6.922,1762,4.607,1763,6.922,1764,5.158,1765,3.417,1766,3.417,1767,3.417,1768,3.417,1769,3.417,1770,3.417,1771,3.417,1772,3.417,1773,3.417,1774,3.417,1775,3.417,1776,2.811,1777,3.417,1778,4.607,1779,3.417,1780,3.973,1781,3.417,1782,3.417,1783,5.158,1784,3.417,1785,5.158,1786,3.417,1787,3.417,1788,5.158,1789,5.158,1790,3.417,1791,3.052,1792,3.417,1793,2.811,1794,3.417,1795,2.488,1796,2.026,1797,6.214,1798,3.417,1799,3.417,1800,3.417]],["title/classes/NewsResponse.html",[0,0.136,1632,3.418]],["body/classes/NewsResponse.html",[0,0.103,2,0.722,3,0.089,4,0.173,5,0.061,9,0.177,10,0.639,12,2.17,15,2.657,16,1.836,17,2.712,21,0.963,24,0.006,25,0.634,26,0.416,27,0.812,28,2.502,29,2.519,39,1.062,51,0.322,52,1.679,61,0.085,68,4.592,80,0.002,81,0.003,82,0.002,91,2.955,124,3.203,136,1.35,221,3.171,222,3.251,223,4.004,224,3.198,228,2.962,234,3.492,409,1.955,497,3.803,498,4.026,499,3.834,500,3.525,501,3.525,503,3.35,504,4.521,505,4.326,528,2.126,529,2.361,532,3.171,543,2.962,546,4.011,650,4.508,651,3.364,652,4.508,653,4.221,659,4.592,660,4.592,663,4.749,664,4.508,665,3.364,668,5.13,669,4.996,670,1.758,675,2.698,676,3.867,739,6.161,1100,4.508,1239,2.568,1477,3.492,1598,3.991,1632,3.799,1801,2.853,1802,3.704,1803,6.436,1804,3.704,1805,5.601,1806,3.704,1807,3.704,1808,3.704,1809,4.508,1810,3.704,1811,4.749,1812,4.894,1813,3.704,1814,5.824,1815,3.704,1816,5.365,1817,3.704,1818,5.479,1819,3.704,1820,4.749,1821,3.05,1822,3.704,1823,2.853,1824,3.704,1825,3.704,1826,3.704,1827,3.704,1828,3.704,1829,4.221,1830,3.704,1831,5.824,1832,3.704]],["title/classes/NewsScope.html",[0,0.136,1780,3.797]],["body/classes/NewsScope.html",[0,0.14,2,0.988,3,0.122,4,0.103,5,0.083,7,1.438,9,0.242,10,0.798,21,0.89,23,1.317,24,0.006,25,0.73,26,0.387,27,0.836,28,1.576,32,1.384,33,1.602,34,0.944,39,0.933,43,2.92,51,0.347,52,0.874,55,1.186,56,1.476,61,0.116,80,0.004,81,0.004,82,0.003,92,1.274,107,1.52,136,1.417,143,1.335,221,2.465,226,3.007,316,3.501,497,2.68,498,2.297,501,2.74,586,3.869,587,3.905,594,5.27,599,3.51,600,2.486,601,5.27,603,5.27,604,5.27,605,5.744,606,4.171,608,3.905,609,4.744,610,4.171,611,3.905,612,5.965,613,4.983,614,4.983,615,4.171,616,3.692,628,3.359,655,5.37,788,2.465,856,3.231,908,3.692,914,4.528,1135,4.539,1279,3.007,1757,5.749,1780,6.872,1833,6.372,1834,4.171,1835,6.842,1836,6.842,1837,6.842,1838,5.07,1839,6.842,1840,5.07,1841,3.905,1842,4.744,1843,5.07,1844,5.07,1845,5.07,1846,6.842,1847,5.07,1848,5.07,1849,3.515,1850,5.07,1851,5.07,1852,5.07,1853,5.07]],["title/interfaces/NewsTargetFilter.html",[146,0.434,1757,3.418]],["body/interfaces/NewsTargetFilter.html",[3,0.173,4,0.145,5,0.117,9,0.341,10,0.993,24,0.006,26,0.369,51,0.357,52,1.233,57,1.331,61,0.163,80,0.004,81,0.005,82,0.004,146,0.63,148,1.953,220,2.74,221,4.577,222,4.693,498,3.241,913,7.745,1757,5.905,1833,5.886,1854,6.389]],["title/injectables/NewsUc.html",[210,1.068,1630,3.141]],["body/injectables/NewsUc.html",[0,0.069,3,0.06,4,0.05,5,0.041,9,0.118,12,1.778,16,1.67,18,0.579,21,0.816,23,1.208,24,0.006,25,0.699,26,0.352,27,0.801,28,1.805,32,1.742,33,1.597,34,0.746,39,0.569,49,2.018,51,0.314,52,0.427,57,0.461,61,0.057,80,0.001,81,0.002,82,0.001,92,0.746,107,1.565,111,0.537,124,0.824,136,1.846,143,1.369,202,4.413,210,0.869,211,0.934,213,3.029,220,2.815,221,3.862,222,2.895,223,4.413,224,3.501,228,1.339,229,4.336,230,2.654,242,1.052,243,4.753,245,3.193,296,1.339,345,2.108,412,2.653,421,1.668,497,3.762,498,3.093,500,1.339,501,4.045,503,0.97,506,2.342,521,3.731,522,2.66,558,1.176,559,1.205,560,1.148,561,1.148,585,1.521,586,3.245,600,3.103,628,2.191,656,4.026,665,1.521,675,1.804,788,1.205,834,4.126,847,2.213,856,1.579,877,3.582,886,3.582,908,5.234,913,3.3,917,2.812,939,2.052,945,4.747,1039,1.908,1056,2.302,1117,1.469,1126,4.026,1132,4.229,1134,4.983,1135,4.232,1140,1.903,1150,3.852,1154,1.422,1159,1.804,1197,2.585,1364,1.422,1477,1.579,1479,2.921,1500,3.588,1595,3.089,1598,3.68,1630,2.556,1642,3.3,1691,2.213,1697,2.213,1703,5.187,1705,5.187,1720,3.582,1735,4.529,1738,2.213,1757,2.78,1776,2.038,1855,2.038,1856,4.01,1857,4.01,1858,4.01,1859,4.01,1860,5.052,1861,2.477,1862,2.477,1863,4.01,1864,2.477,1865,4.01,1866,2.477,1867,4.01,1868,2.477,1869,4.01,1870,4.513,1871,4.513,1872,3.352,1873,4.01,1874,2.477,1875,4.01,1876,2.477,1877,2.477,1878,4.01,1879,2.477,1880,2.921,1881,2.477,1882,5.052,1883,2.477,1884,4.01,1885,2.477,1886,2.477,1887,2.477,1888,3.3,1889,4.778,1890,2.477,1891,2.213,1892,2.477,1893,5.807,1894,2.477,1895,4.01,1896,2.477,1897,4.01,1898,2.477,1899,5.187,1900,2.477,1901,2.477,1902,2.477,1903,4.01,1904,2.213,1905,4.01,1906,2.477,1907,3.582,1908,2.477,1909,4.01,1910,2.477,1911,2.477,1912,5.052,1913,2.477,1914,4.01,1915,2.477,1916,2.477,1917,2.477,1918,2.213,1919,1.804,1920,2.477,1921,2.477,1922,2.477,1923,2.477,1924,2.213,1925,4.01,1926,2.477,1927,2.477,1928,2.477,1929,4.01,1930,2.477,1931,2.477,1932,2.477,1933,2.477,1934,2.477]],["title/classes/PaginationQuery.html",[0,0.136,1610,3.27]],["body/classes/PaginationQuery.html",[0,0.218,2,1.228,3,0.152,4,0.127,5,0.103,9,0.301,10,0.919,21,0.81,24,0.006,26,0.342,27,0.909,29,2.119,32,2.153,33,2.491,51,0.33,61,0.144,80,0.004,81,0.005,82,0.004,99,2.991,124,2.622,654,6.487,669,5.965,670,2.992,674,3.871,749,6.073,788,3.834,1113,6.487,1157,5.707,1158,6.434,1279,4.676,1610,5.23,1935,5.631,1936,6.249,1937,6.304,1938,4.261,1939,7.884,1940,7.884,1941,7.884,1942,6.304,1943,6.304,1944,7.042,1945,6.304,1946,8.603,1947,5.631,1948,6.304,1949,6.304,1950,6.304,1951,6.304]],["title/classes/PaginationResponse.html",[0,0.136,1628,3.27]],["body/classes/PaginationResponse.html",[0,0.167,2,1.178,3,0.146,4,0.122,5,0.099,9,0.288,10,0.895,18,1.414,21,0.942,23,0.919,24,0.006,25,0.532,26,0.397,27,0.924,29,2.386,51,0.253,61,0.138,80,0.004,81,0.004,82,0.004,99,3.168,306,6.353,345,4.035,668,5.41,670,2.869,762,4.568,1157,6.312,1158,6.596,1628,5.094,1952,5.399,1953,6.929,1954,7.678,1955,6.044,1956,6.044,1957,6.044,1958,6.044,1959,6.044,1960,6.044,1961,6.044,1962,6.044,1963,6.044]],["title/injectables/ParseObjectIdPipe.html",[210,1.068,1627,3.418]],["body/injectables/ParseObjectIdPipe.html",[0,0.185,3,0.162,4,0.136,5,0.11,9,0.32,21,0.689,23,1.019,24,0.006,25,0.59,26,0.29,27,0.676,33,2.587,34,1.247,39,1.063,41,2.723,51,0.37,55,1.567,57,1.247,61,0.153,80,0.004,81,0.005,82,0.004,92,1.524,107,1.229,111,1.452,136,1.388,143,1.155,210,1.774,211,2.527,220,1.951,255,3.847,264,2.907,710,3.341,1102,5.677,1627,5.677,1821,4.557,1964,7.313,1965,5.514,1966,8.188,1967,6.702,1968,8.188,1969,6.702,1970,8.188,1971,6.702,1972,6.702]],["title/interfaces/PlainTextMailContent.html",[146,0.434,161,3.026]],["body/interfaces/PlainTextMailContent.html",[3,0.152,4,0.127,5,0.103,7,1.95,9,0.3,10,0.918,24,0.006,25,0.554,26,0.341,27,0.794,39,1.141,61,0.144,80,0.004,81,0.005,82,0.004,146,0.845,147,4.835,148,1.718,149,4.009,150,5.277,151,5.224,152,4.174,153,4.174,154,4.835,155,4.174,156,4.174,157,4.174,158,5.53,159,4.009,160,4.174,161,5.277,162,6.152,163,6.152,164,4.835,165,4.256,166,4.009,167,4.174,168,4.174,169,4.174]],["title/classes/ResolvedUser.html",[0,0.136,1354,3.026]],["body/classes/ResolvedUser.html",[0,0.162,2,1.144,3,0.142,4,0.119,5,0.096,9,0.28,10,0.879,15,3.392,16,1.75,17,3.462,21,0.984,24,0.006,26,0.419,28,2.729,29,2.573,39,1.097,51,0.316,57,1.093,61,0.172,80,0.003,81,0.004,82,0.003,224,3.462,412,3.462,668,5.595,670,2.787,710,3.757,1139,4.375,1141,3.951,1142,5.771,1144,5,1145,4.375,1146,4.375,1354,4.628,1973,4.831,1974,5.872,1975,5.872,1976,5.872,1977,5.872,1978,5.872,1979,5.872,1980,5.872,1981,5.872]],["title/classes/ResolvedUserMapper.html",[0,0.136,1982,3.797]],["body/classes/ResolvedUserMapper.html",[0,0.171,2,1.206,3,0.149,4,0.125,5,0.102,9,0.295,12,2.404,16,1.301,21,0.636,23,0.941,24,0.006,25,0.686,26,0.268,27,0.624,32,1.69,33,1.956,34,1.152,39,0.96,51,0.327,52,1.067,61,0.141,80,0.004,81,0.005,82,0.004,92,1.451,107,1.135,136,1.282,143,1.067,224,3.724,506,3.955,644,3.699,752,5.171,756,4.107,757,4.107,1139,4.484,1141,4.25,1354,5.498,1715,5.093,1717,5.093,1719,5.529,1982,6.004,1983,5.529,1984,7.794,1985,6.19,1986,4.768,1987,5.529,1988,6.19,1989,5.529,1990,6.19,1991,6.19,1992,6.19,1993,6.19,1994,6.19,1995,6.19,1996,5.529,1997,6.19,1998,5.529]],["title/classes/Role.html",[0,0.136,1141,2.339]],["body/classes/Role.html",[0,0.136,2,0.959,3,0.119,4,0.1,5,0.081,7,1.41,8,2.958,9,0.364,10,0.782,14,2.68,15,2.734,16,1.41,17,2.79,18,1.152,21,0.947,23,0.749,24,0.006,25,0.779,26,0.399,27,0.497,28,2.085,29,2.433,30,2.767,32,2.237,33,2.589,34,1.525,35,3.626,39,1.037,41,1.637,42,2.091,43,3.089,44,2.455,45,2.455,46,2.091,47,2.455,48,2.394,49,1.967,50,2.455,51,0.281,52,1.156,53,3.023,55,1.152,56,1.433,57,0.917,59,1.857,61,0.174,62,1.41,63,1.967,70,1.857,76,1.967,80,0.003,81,0.004,82,0.003,146,0.433,220,2.385,224,3.565,418,2.156,421,2.048,455,2.661,456,2.661,521,2.455,532,3.262,674,3.023,867,3.978,1034,2.92,1109,3.586,1139,5.011,1141,3.888,1209,6.31,1210,3.793,1211,3.793,1212,4.398,1213,3.793,1214,3.414,1215,4.051,1216,3.586,1217,4.398,1218,4.398,1219,4.398,1220,4.398,1221,5.167,1999,6.708,2000,4.051,2001,4.924,2002,4.924,2003,4.924]],["title/injectables/RoleRepo.html",[210,1.068,2004,3.418]],["body/injectables/RoleRepo.html",[0,0.153,3,0.133,4,0.112,5,0.091,9,0.263,10,0.845,16,1.699,18,1.292,21,0.916,23,1.305,24,0.006,25,0.805,26,0.372,27,0.866,39,0.91,51,0.36,52,0.952,55,1.292,57,1.028,61,0.126,80,0.003,81,0.004,82,0.003,87,2.007,92,1.348,107,1.482,111,1.197,136,1.674,143,1.249,210,1.57,211,2.083,213,3.125,220,2.712,224,2.297,230,2.841,242,2.346,245,2.833,264,2.396,300,3.665,301,5.268,303,4.032,788,2.686,1141,4.422,2004,5.023,2005,4.934,2006,8.909,2007,6.471,2008,7.244,2009,7.244,2010,7.244,2011,6.471,2012,5.524,2013,7.244,2014,5.524,2015,7.244,2016,5.524,2017,5.524,2018,7.244,2019,7.244,2020,5.524]],["title/injectables/RoleUC.html",[210,1.068,2021,3.418]],["body/injectables/RoleUC.html",[0,0.174,3,0.151,4,0.127,5,0.103,9,0.299,18,1.468,21,0.808,23,1.196,24,0.006,25,0.692,26,0.341,27,0.793,34,1.169,39,0.707,51,0.377,52,1.082,57,1.169,61,0.143,80,0.004,81,0.005,82,0.004,87,2.281,92,1.464,107,1.151,111,1.361,136,1.3,143,1.082,210,1.704,211,2.367,213,2.807,220,2.62,224,3.854,230,2.444,237,4.165,242,2.666,245,2.2,1139,4.133,1211,4.836,2004,6.556,2021,5.452,2022,5.608,2023,7.864,2024,6.278,2025,6.278,2026,7.864,2027,6.278,2028,3.724,2029,6.278,2030,6.278,2031,6.278,2032,6.278,2033,6.278]],["title/classes/SchoolInfo.html",[0,0.136,526,2.591]],["body/classes/SchoolInfo.html",[0,0.176,2,1.236,3,0.153,4,0.128,5,0.104,7,1.664,9,0.302,10,0.923,14,3.162,16,1.664,18,1.483,21,0.928,23,0.965,24,0.006,25,0.818,26,0.411,27,0.64,29,2.319,30,2.637,39,1.017,41,2.109,42,2.693,43,2.984,46,2.693,51,0.332,52,1.364,55,1.483,56,1.846,57,1.181,59,2.392,61,0.145,62,1.817,80,0.004,81,0.005,82,0.004,260,4.756,418,2.543,421,2.638,436,4.049,455,3.429,456,3.429,477,3.429,492,6.096,493,4.62,494,4.62,526,4.16,1129,4.398,2034,7.705]],["title/classes/SchoolInfoMapper.html",[0,0.136,1687,3.797]],["body/classes/SchoolInfoMapper.html",[0,0.19,2,1.335,3,0.165,4,0.139,5,0.112,9,0.327,21,0.704,23,1.042,24,0.006,25,0.603,26,0.297,27,0.691,34,1.275,51,0.348,52,1.181,61,0.156,80,0.004,81,0.005,82,0.004,92,1.545,107,1.256,136,1.419,143,1.181,506,4.138,526,4.994,644,3.938,752,5.505,756,4.545,757,4.545,1687,6.392,1811,6.757,2035,7.412,2036,5.277,2037,8.298,2038,5.637,2039,6.851,2040,5.637,2041,6.851]],["title/classes/SchoolInfoResponse.html",[0,0.136,1811,3.59]],["body/classes/SchoolInfoResponse.html",[0,0.187,2,1.314,3,0.163,4,0.136,5,0.111,9,0.322,10,0.958,16,1.989,21,0.845,24,0.006,25,0.833,26,0.356,29,2.21,39,1.039,51,0.283,52,1.591,61,0.154,80,0.004,81,0.005,82,0.004,124,2.948,503,3.615,659,5.239,660,5.239,668,4.935,670,3.202,676,4.001,739,4.677,1811,5.987,1823,5.196,2042,7.919,2043,5.196,2044,5.551,2045,5.551]],["title/classes/SchoolNews.html",[0,0.136,570,2.923]],["body/classes/SchoolNews.html",[0,0.186,2,0.63,3,0.078,4,0.147,5,0.053,7,1.525,8,2.5,9,0.154,10,0.577,12,0.843,14,1.976,15,2.016,16,1.263,17,2.057,21,0.955,23,0.492,24,0.006,25,0.592,26,0.396,27,0.849,28,2.254,29,2.459,30,2.77,32,1.641,33,1.899,34,1.35,39,1.029,41,1.075,42,1.373,43,3.502,44,1.612,45,1.612,46,1.373,47,1.612,48,1.572,49,1.292,50,1.612,51,0.333,52,1.25,54,2.852,55,0.756,56,0.941,57,0.602,61,0.165,62,0.926,64,2.144,66,4.622,70,1.219,76,2.4,80,0.002,81,0.003,82,0.002,91,2.939,92,0.921,107,0.593,143,0.557,146,0.285,220,2.111,221,3.87,222,3.813,224,2.499,244,2.242,273,3.344,335,2.934,360,1.856,409,1.154,412,2.057,418,1.039,421,2.499,485,3.272,490,2.674,495,1.856,496,2.242,497,3.865,498,3.891,499,3.813,500,3.92,501,3.637,502,4.901,503,2.996,504,4.666,505,4.465,506,2.785,507,3.811,508,4.437,510,2.661,511,3.43,512,4.163,513,3.986,514,3.43,515,2.661,516,2.661,517,3.603,518,4.288,519,3.603,520,3.43,521,2.466,522,3.282,523,3.43,524,2.661,525,2.661,526,3.812,527,2.661,528,3.449,529,3.829,530,2.661,531,2.661,532,2.921,533,2.661,534,3.282,535,2.661,536,3.603,537,2.661,538,3.603,539,2.661,540,2.934,541,2.355,542,2.674,543,1.748,544,2.242,545,1.465,546,1.8,547,2.145,548,2.061,549,2.355,550,2.355,551,2.355,552,2.355,553,2.355,554,1.986,555,2.145,556,2.355,557,3.603,558,2.852,559,2.921,560,2.785,561,2.785,562,2.852,563,3.449,564,3.449,565,2.355,566,3.603,567,2.355,568,2.355,569,4.376,570,2.934,571,1.918,2046,3.234]],["title/classes/Scope.html",[0,0.136,586,2.138]],["body/classes/Scope.html",[0,0.119,2,0.836,3,0.104,4,0.087,5,0.07,9,0.205,10,0.711,14,1.715,20,2.636,21,0.793,23,1.078,24,0.006,25,0.537,26,0.378,27,0.615,32,1.172,33,2.241,39,1.02,49,2.436,51,0.255,55,1.004,56,1.25,61,0.193,63,1.715,80,0.005,81,0.004,82,0.003,92,1.135,101,2.848,107,1.118,136,1.754,143,1.584,266,3.126,306,5.353,316,3.95,586,2.644,599,4.036,600,2.576,601,5.462,603,4.697,604,4.697,605,6.095,608,4.697,609,5.874,611,4.697,612,6.281,613,6.17,614,6.17,616,3.126,628,3.075,788,3.448,869,2.546,917,2.389,1034,5.024,1216,5.164,1239,4.228,1279,2.546,1289,4.579,1558,3.307,1559,2.736,1821,2.389,1841,6.526,1919,3.126,2047,3.307,2048,5.446,2049,4.293,2050,4.293,2051,4.293,2052,4.293,2053,4.293,2054,4.293,2055,4.293,2056,6.334,2057,5.835,2058,5.446,2059,3.834,2060,4.293,2061,3.834,2062,6.334,2063,4.293,2064,4.293,2065,3.834,2066,4.293,2067,3.834,2068,4.293,2069,4.293,2070,4.293,2071,5.446,2072,4.293,2073,6.097,2074,4.293,2075,4.293,2076,4.293,2077,4.293,2078,4.293,2079,4.293,2080,4.293,2081,6.097,2082,4.293,2083,6.097,2084,4.293,2085,4.293,2086,4.293,2087,4.293,2088,4.293]],["title/classes/ServerConsole.html",[0,0.136,2089,3.797]],["body/classes/ServerConsole.html",[0,0.161,2,1.131,3,0.14,4,0.117,5,0.095,9,0.277,18,1.358,21,0.851,23,1.138,24,0.006,25,0.659,26,0.324,27,0.755,29,2.011,39,0.932,51,0.313,61,0.132,80,0.003,81,0.004,82,0.003,92,1.393,107,1.372,115,2.823,124,3.009,143,1.29,182,3.39,242,2.465,316,4.474,364,6.425,366,4.472,374,2.823,375,6.149,805,7.195,808,5.162,821,4.236,941,5.801,963,5.492,1289,5.186,2089,5.763,2090,5.185,2091,7.482,2092,5.805,2093,5.805,2094,7.482,2095,6.369,2096,5.805,2097,7.482,2098,6.683,2099,5.805,2100,6.683,2101,7.137,2102,5.185,2103,5.805,2104,5.805]],["title/modules/ServerConsoleModule.html",[170,1.458,2105,3.59]],["body/modules/ServerConsoleModule.html",[0,0.182,3,0.159,4,0.133,5,0.108,24,0.006,51,0.394,61,0.15,80,0.004,81,0.005,82,0.004,111,1.425,170,2.394,172,2.734,173,3.751,180,4.504,181,3.455,182,2.979,184,3.972,185,3.934,364,6.631,366,5.063,374,3.196,375,5.586,928,3.659,2089,6.232,2102,5.871,2105,7.127,2106,5.871,2107,5.871,2108,5.871,2109,6.631,2110,6.573,2111,6.573,2112,8.091,2113,6.573,2114,6.573,2115,3.659]],["title/controllers/ServerController.html",[677,2.184,2116,3.797]],["body/controllers/ServerController.html",[0,0.195,3,0.17,4,0.143,5,0.116,9,0.336,21,0.725,24,0.006,29,1.896,32,2.306,39,0.951,51,0.296,61,0.161,80,0.004,81,0.005,82,0.004,92,1.572,107,1.293,111,1.529,115,3.43,143,1.216,677,3.743,679,3.517,805,7.709,807,5.856,808,4.565,809,5.603,810,4.848,820,5.434,821,3.609,2116,6.505,2117,6.301,2118,7.055]],["title/modules/ServerModule.html",[170,1.458,2109,3.418]],["body/modules/ServerModule.html",[0,0.126,1,3.644,3,0.11,4,0.092,5,0.075,12,1.906,24,0.006,26,0.197,34,0.846,39,0.891,51,0.409,55,1.485,56,1.323,61,0.104,63,1.816,64,1.622,65,2.389,69,3.948,71,3.311,80,0.003,81,0.004,82,0.003,111,0.985,136,1.64,143,0.784,170,1.878,171,6.285,172,1.891,173,2.943,177,5.984,180,3.534,181,2.389,182,2.06,185,3.087,382,6.285,409,2.265,474,3.898,482,3.337,484,2.265,490,3.432,495,3.644,497,2.487,512,3.644,526,3.337,542,3.432,545,2.06,558,2.158,559,2.211,560,2.108,561,2.108,562,2.158,570,3.765,571,3.765,617,3.534,679,3.165,894,4.06,976,4.046,985,5.671,986,5.671,987,5.671,1067,3.741,1068,3.741,1069,3.741,1141,3.013,1164,3.502,1184,3.248,1186,3.432,1391,6.285,1494,5.776,1500,3.337,1507,3.311,1508,3.311,1509,3.311,1544,3.741,1546,3.741,1555,3.502,1557,4.402,1730,6.285,2109,6.798,2115,2.53,2116,5.635,2119,4.06,2120,4.06,2121,6.285,2122,3.741,2123,6.349,2124,6.349,2125,3.311,2126,3.016,2127,2.897,2128,3.741,2129,4.546,2130,4.546,2131,3.152,2132,4.546,2133,4.546,2134,4.546,2135,4.546,2136,4.546,2137,4.546,2138,4.546,2139,4.546,2140,4.546,2141,5.224,2142,4.89,2143,5.224,2144,4.546,2145,4.546,2146,4.546,2147,4.546,2148,4.06,2149,3.152,2150,4.546,2151,4.546,2152,6.349,2153,4.546,2154,3.741,2155,3.016,2156,4.06,2157,3.741,2158,4.546]],["title/classes/StatusDomainService.html",[0,0.136,2159,4.056]],["body/classes/StatusDomainService.html",[0,0.149,2,1.05,3,0.13,4,0.109,5,0.088,9,0.257,10,0.831,18,1.26,21,0.908,23,1.292,24,0.006,25,0.748,26,0.393,27,0.857,39,0.607,49,2.153,51,0.226,52,0.929,61,0.123,80,0.003,81,0.004,82,0.003,92,1.327,99,2.523,107,1.464,136,1.476,143,1.229,436,2.757,484,3.153,600,3.299,628,3.091,788,3.883,1184,5.097,1191,5.054,1207,3.925,1214,3.736,1238,6.992,1239,4.942,1260,3.736,1261,5.537,1262,3.736,1264,3.434,2159,5.864,2160,4.813,2161,7.127,2162,7.127,2163,7.127,2164,7.127,2165,5.389,2166,5.389,2167,7.127,2168,5.389,2169,7.127,2170,5.389,2171,7.127,2172,5.389,2173,5.389,2174,5.389,2175,5.389,2176,5.389,2177,5.389,2178,5.389,2179,5.389,2180,4.813,2181,5.389,2182,5.389,2183,5.389,2184,5.389,2185,5.389,2186,5.389]],["title/classes/Submission.html",[0,0.136,1184,2.522]],["body/classes/Submission.html",[0,0.107,2,0.754,3,0.093,4,0.078,5,0.093,7,1.189,8,2.76,9,0.184,10,0.659,12,1.007,14,2.259,15,2.305,16,1.189,17,2.352,18,0.904,21,0.97,23,0.588,24,0.006,25,0.34,26,0.406,27,0.674,28,1.758,29,2.497,30,2.647,32,2.137,33,2.473,34,1.572,35,4.231,36,5.501,39,0.974,41,1.286,42,1.642,43,2.774,44,1.928,45,1.928,46,1.642,47,1.928,48,1.88,49,2.259,50,1.928,51,0.343,52,0.975,53,4.105,54,1.835,55,0.904,56,1.126,57,0.72,59,1.458,61,0.088,62,1.108,70,1.458,76,2.939,80,0.002,81,0.003,82,0.002,92,1.053,99,2.325,107,0.709,136,1.171,143,0.667,146,0.34,409,1.38,418,1.817,421,2.352,474,4.105,476,2.566,482,4.297,484,3.203,485,3.251,508,3.614,513,4.436,617,4.357,628,2.453,788,3.251,917,4.819,976,5.381,1184,2.893,1191,2.152,1222,5.666,1223,3.182,1224,5.666,1225,6.053,1226,6.57,1227,7.302,1228,4.493,1229,7.302,1230,5.954,1231,2.979,1232,5.051,1233,4.653,1234,4.653,1235,5.051,1236,2.566,1237,5.051,1238,6.727,1239,3.921,1240,5.972,1241,5.051,1242,3.454,1243,3.454,1244,3.454,1245,3.454,1246,3.454,1247,3.454,1248,3.454,1249,2.979,1250,3.454,1251,3.454,1252,3.454,2187,3.867,2188,3.867,2189,3.867,2190,3.867,2191,3.867,2192,3.867,2193,3.867,2194,3.867,2195,3.867,2196,3.867,2197,3.867,2198,3.867]],["title/injectables/SubmissionRepo.html",[210,1.068,2199,4.056]],["body/injectables/SubmissionRepo.html",[0,0.146,3,0.127,4,0.106,5,0.086,9,0.251,18,1.23,21,0.865,23,1.28,24,0.006,25,0.741,26,0.365,27,0.849,51,0.367,52,0.907,55,1.64,56,1.531,57,0.979,61,0.12,63,2.101,64,1.877,80,0.005,81,0.004,82,0.003,87,1.911,92,1.305,107,1.446,111,1.14,136,1.743,143,1.36,210,1.52,211,1.983,213,3.095,220,2.784,229,4.064,230,2.802,242,2.233,245,2.949,264,2.281,300,3.49,301,5.168,303,3.904,474,4.306,479,3.49,484,1.877,574,6.264,578,5.771,585,3.23,586,2.281,596,4.469,599,3.178,600,2.867,605,3.49,617,2.928,1017,3.49,1184,2.691,1191,3.904,1228,3.02,1230,3.831,2115,2.928,2199,5.771,2200,4.698,2201,7.014,2202,7.014,2203,5.26,2204,7.014,2205,5.26,2206,7.014,2207,5.26,2208,7.014,2209,5.26,2210,4.698,2211,7.014,2212,5.26,2213,7.014,2214,5.26]],["title/classes/TargetInfoMapper.html",[0,0.136,1689,3.797]],["body/classes/TargetInfoMapper.html",[0,0.189,2,1.332,3,0.165,4,0.138,5,0.112,9,0.326,21,0.703,23,1.04,24,0.006,25,0.602,26,0.296,27,0.69,34,1.272,51,0.347,52,1.178,61,0.156,80,0.004,81,0.005,82,0.004,92,1.543,107,1.253,136,1.415,143,1.178,498,3.098,506,4.134,540,5.498,644,3.933,752,5.498,757,4.535,1689,6.383,1820,6.752,1831,6.105,2036,5.265,2038,5.624,2040,5.624,2215,7.402,2216,8.287,2217,6.836,2218,6.836,2219,6.836]],["title/classes/TargetInfoResponse.html",[0,0.136,1820,3.59]],["body/classes/TargetInfoResponse.html",[0,0.187,2,1.314,3,0.163,4,0.136,5,0.111,9,0.322,10,0.958,16,1.989,21,0.845,24,0.006,25,0.833,26,0.356,29,2.21,39,1.039,51,0.283,52,1.591,61,0.154,80,0.004,81,0.005,82,0.004,124,2.948,498,4.182,659,5.239,660,5.239,668,4.935,670,3.202,676,4.001,739,4.677,1820,5.987,1823,5.196,2043,5.196,2044,5.551,2045,5.551,2220,7.919]],["title/classes/Task.html",[0,0.136,484,1.759]],["body/classes/Task.html",[0,0.125,2,0.879,3,0.109,4,0.091,5,0.074,7,1.328,8,2.889,9,0.215,10,0.736,14,2.523,15,2.574,16,1.659,17,2.627,18,1.055,21,0.964,23,0.686,24,0.006,25,0.758,26,0.391,27,0.892,28,2.582,29,2.496,30,2.757,32,2.155,33,2.494,34,1.546,35,3.939,39,0.995,41,1.501,42,1.916,43,2.976,44,2.25,45,2.25,46,1.916,47,2.25,48,2.194,49,1.803,50,2.25,51,0.348,52,1.089,54,2.142,55,1.055,56,1.314,57,0.84,59,1.702,61,0.166,62,1.293,76,2.523,80,0.003,81,0.004,82,0.003,99,1.426,124,1.501,146,0.641,220,2.298,409,2.816,411,2.591,416,2.876,417,2.876,418,2.03,421,1.877,455,2.439,456,2.439,478,3.516,484,2.964,485,2.194,508,3.939,513,4.19,545,2.862,584,2.591,600,2.868,628,2.739,917,2.512,991,2.439,1181,4.025,1182,3.287,1183,3.476,1184,3.232,1185,3.476,1186,4.266,1187,5.101,1188,5.473,1189,4.681,1190,4.847,1191,4.393,1192,2.876,1193,3.129,1194,3.287,1195,4.865,1196,3.129,1197,2.309,1198,4.865,1199,3.476,1200,3.476,1201,3.476,1202,3.476,1203,3.476,1204,3.476,1205,3.476,1206,3.476,1207,3.287,1208,3.476,2221,6.316,2222,4.513,2223,4.513,2224,4.513,2225,4.513,2226,4.513]],["title/injectables/TaskAuthorizationService.html",[210,1.068,2227,3.418]],["body/injectables/TaskAuthorizationService.html",[0,0.163,3,0.142,4,0.119,5,0.097,9,0.282,12,1.971,18,1.381,21,0.777,23,1.15,24,0.006,25,0.666,26,0.328,27,0.763,51,0.35,57,1.099,61,0.173,80,0.003,81,0.004,82,0.003,87,2.146,92,1.408,107,1.083,111,1.28,136,1.566,143,1.018,210,1.639,211,2.227,213,2.728,220,2.562,229,2.738,230,2.351,242,2.507,245,2.651,476,5.019,486,3.918,521,4.388,532,2.871,572,6.175,711,4.821,713,4.645,912,3.192,954,5.245,960,5.509,1459,4.095,1462,4.301,1617,3.763,2227,5.245,2228,4.859,2229,7.565,2230,5.905,2231,5.905,2232,7.565,2233,7.241,2234,5.905,2235,5.827,2236,5.509,2237,6.756,2238,7.565,2239,5.275,2240,4.549,2241,4.549,2242,5.905,2243,5.275,2244,5.905,2245,5.905,2246,7.565,2247,5.905,2248,5.275]],["title/controllers/TaskController.html",[677,2.184,2249,3.797]],["body/controllers/TaskController.html",[0,0.163,3,0.142,4,0.119,5,0.097,9,0.281,21,0.606,23,0.896,24,0.006,25,0.519,26,0.255,27,0.595,29,1.584,34,1.097,51,0.401,57,1.097,61,0.134,80,0.005,81,0.004,82,0.003,87,2.141,92,1.406,107,1.08,111,1.277,136,1.821,143,1.302,213,2.726,230,2.348,242,2.503,245,2.066,599,3.424,644,2.797,670,2.797,677,2.612,679,2.939,681,3.756,687,3.756,688,4.293,692,4.293,1136,4.5,1157,5.012,1158,5.239,1596,5.782,1603,5.216,1608,4.85,1610,6.42,1626,4.54,1628,3.91,1629,4.85,1953,5.502,2249,5.82,2250,5.264,2251,4.087,2252,5.894,2253,5.782,2254,5.894,2255,4.293,2256,4.54,2257,5.894,2258,5.894,2259,5.894,2260,5.894,2261,5.894,2262,5.894,2263,5.894,2264,5.894,2265,5.894]],["title/classes/TaskMapper.html",[0,0.136,2256,3.797]],["body/classes/TaskMapper.html",[0,0.173,2,1.216,3,0.151,4,0.126,5,0.102,9,0.298,21,0.641,23,0.949,24,0.006,25,0.549,26,0.27,27,0.629,34,1.162,49,2.493,51,0.328,61,0.142,63,2.493,80,0.004,81,0.005,82,0.004,92,1.458,107,1.144,136,1.773,143,1.076,484,2.795,506,3.97,644,3.718,752,5.197,756,4.14,757,4.14,1260,4.327,1261,4.327,1262,4.327,1264,4.992,1715,5.135,1717,5.135,2040,5.135,2115,3.473,2180,5.574,2255,6.54,2256,6.034,2266,5.574,2267,7.834,2268,8.021,2269,6.24,2270,7.834,2271,4.14,2272,6.24,2273,6.24,2274,6.24,2275,6.24,2276,6.24,2277,6.24,2278,6.24,2279,6.24,2280,6.24,2281,5.574,2282,6.24,2283,6.24,2284,6.24,2285,6.24,2286,6.24,2287,6.24]],["title/modules/TaskModule.html",[170,1.458,2121,3.59]],["body/modules/TaskModule.html",[0,0.178,3,0.155,4,0.13,5,0.106,24,0.006,51,0.399,61,0.147,80,0.004,81,0.005,82,0.004,111,1.395,170,2.363,172,2.677,173,3.702,180,4.445,181,3.383,182,2.916,184,3.619,185,3.129,572,6.312,679,3.981,2028,3.817,2121,7.277,2227,6.597,2239,5.748,2249,6.688,2253,6.597,2288,5.748,2289,5.748,2290,6.597,2291,6.436,2292,6.436,2293,4.101,2294,6.436]],["title/classes/TaskParentTestEntity.html",[0,0.136,2295,3.797]],["body/classes/TaskParentTestEntity.html",[0,0.162,2,0.792,3,0.098,4,0.082,5,0.067,7,0.855,9,0.194,10,0.684,12,2.234,16,1.749,18,0.951,21,0.855,23,0.892,24,0.006,25,0.703,26,0.326,27,0.76,28,1.264,34,1.711,41,2.288,49,1.624,51,0.316,52,0.701,55,0.951,57,0.757,61,0.134,80,0.002,81,0.003,82,0.002,92,1.092,99,1.853,107,1.261,136,1.957,143,1.602,220,2.769,229,2.719,264,1.763,345,2.137,409,2.687,411,2.334,412,2.439,416,4.8,417,4.8,473,3.132,479,3.891,482,4.507,484,3.394,558,1.93,559,1.977,560,1.885,561,1.885,562,1.93,563,2.334,584,2.334,628,2.544,710,2.924,912,2.198,1145,2.137,1146,2.137,1181,4.384,1184,4.754,1186,3.719,1187,4.624,1189,3.479,1190,5.39,1191,3.265,1192,4.384,1193,4.067,1224,4.518,1228,4.584,1230,2.961,1253,6.197,1399,4.067,1403,3.132,1407,3.132,1447,3.346,1448,4.826,1936,2.819,2295,5.299,2296,3.346,2297,5.239,2298,5.865,2299,5.239,2300,4.066,2301,4.066,2302,4.066,2303,4.066,2304,6.145,2305,3.632,2306,3.632,2307,3.632,2308,3.132,2309,3.632,2310,3.632,2311,6.145,2312,3.632,2313,3.632,2314,3.632,2315,3.346,2316,5.239,2317,3.632,2318,5.239,2319,3.632,2320,3.632,2321,3.632,2322,3.632,2323,5.239,2324,3.632,2325,3.632,2326,3.632,2327,3.632,2328,3.632]],["title/injectables/TaskRepo.html",[210,1.068,2290,3.418]],["body/injectables/TaskRepo.html",[0,0.108,3,0.094,4,0.079,5,0.064,9,0.186,18,0.911,21,0.843,23,1.194,24,0.006,25,0.691,26,0.34,27,0.792,28,2.294,34,1.25,51,0.343,52,0.672,55,0.911,56,1.134,57,0.725,61,0.089,63,2.682,69,3.681,80,0.002,81,0.003,82,0.002,87,1.416,92,1.059,107,1.552,111,0.844,124,1.891,136,1.887,143,1.353,182,1.766,210,1.232,211,1.469,213,3.012,220,2.617,230,2.696,237,5.439,242,1.654,243,4.109,245,2.966,300,2.585,301,4.533,303,3.165,345,3.529,409,1.39,484,2.029,585,2.392,586,3.202,596,3.624,599,2.577,600,3.215,605,4.898,912,2.106,939,3.777,1017,2.585,1150,5.965,1153,3.983,1154,4.706,1186,3.074,1187,3.492,1189,2.311,1190,5.197,1191,2.169,1228,2.237,1236,2.585,1363,5.079,1459,2.702,1462,4.142,1500,4.93,1561,3.943,1596,3.943,1776,3.206,1778,5.079,1791,3.48,1796,2.311,2028,2.311,2142,4.38,2248,5.079,2251,5.119,2271,2.585,2290,3.943,2293,2.483,2329,3.48,2330,5.687,2331,5.687,2332,5.687,2333,7.383,2334,3.896,2335,5.687,2336,3.896,2337,4.679,2338,6.745,2339,6.594,2340,5.687,2341,3.896,2342,5.687,2343,3.896,2344,5.687,2345,3.896,2346,3.896,2347,3.206,2348,5.172,2349,5.687,2350,5.687,2351,5.687,2352,5.687,2353,5.687,2354,7.383,2355,5.687,2356,3.896,2357,3.896,2358,3.896,2359,3.896,2360,3.001,2361,3.896,2362,3.896,2363,3.943,2364,3.001,2365,3.896,2366,3.206,2367,2.838,2368,5.687,2369,3.896,2370,3.001]],["title/classes/TaskResponse.html",[0,0.136,2255,3.59]],["body/classes/TaskResponse.html",[0,0.158,2,1.11,3,0.137,4,0.115,5,0.093,9,0.272,10,0.862,15,3.344,16,1.725,17,3.412,21,0.978,24,0.006,25,0.722,26,0.417,27,0.93,28,2.865,29,2.557,39,1.071,51,0.239,61,0.13,80,0.003,81,0.004,82,0.003,99,2.593,115,3.594,124,1.895,436,2.915,484,2.637,644,3.508,646,4.384,668,5.498,669,6.238,670,2.704,706,5.229,1189,4.866,1260,3.951,1261,3.951,1262,3.951,1264,5.229,2255,5.384,2371,5.089,2372,6.602,2373,4.539,2374,8.205,2375,5.698,2376,5.698,2377,5.698,2378,5.698,2379,5.698,2380,5.698,2381,5.698,2382,5.698]],["title/classes/TaskScope.html",[0,0.136,2348,3.797]],["body/classes/TaskScope.html",[0,0.14,2,0.983,3,0.122,4,0.102,5,0.083,7,1.434,9,0.241,10,0.795,21,0.936,23,1.355,24,0.006,25,0.761,26,0.395,27,0.872,28,2.401,32,1.378,33,1.594,39,0.931,43,2.913,51,0.324,52,0.87,57,0.939,61,0.115,80,0.003,81,0.004,82,0.003,92,1.269,107,1.633,143,1.426,220,2.651,316,3.489,484,1.8,545,2.286,586,3.864,587,3.886,594,6.374,599,2.286,600,2.807,601,5.253,603,5.253,604,5.253,605,5.125,606,4.151,608,3.886,609,4.728,610,4.151,611,3.886,612,5.95,613,4.967,614,4.967,615,4.151,616,3.674,917,3.796,1187,4.187,1189,4.908,1190,3.098,1834,4.151,2338,5.611,2348,7.31,2383,7.721,2384,6.819,2385,6.819,2386,6.819,2387,8.275,2388,6.819,2389,5.045,2390,6.819,2391,5.045,2392,6.819,2393,6.819,2394,5.045,2395,5.045,2396,5.045,2397,5.045]],["title/classes/TaskTestHelper.html",[0,0.136,2308,3.797]],["body/classes/TaskTestHelper.html",[0,0.134,2,0.615,3,0.076,4,0.064,5,0.052,7,1.02,9,0.15,10,0.566,12,1.973,16,1.397,21,0.968,23,1.238,24,0.006,25,0.764,26,0.382,27,0.821,28,1.838,32,0.861,33,0.997,34,1.615,41,2.209,43,3.4,49,1.26,51,0.278,52,0.837,55,0.738,57,0.587,61,0.111,80,0.002,81,0.003,82,0.002,92,0.903,99,0.997,107,1.696,136,1.867,143,1.518,220,2.742,229,1.462,260,4.274,264,1.368,316,3.027,345,3.98,409,2.37,411,1.811,412,2.019,416,2.01,417,2.01,436,1.614,473,2.43,479,4.407,482,4.628,484,3.433,503,1.901,558,1.497,559,1.534,560,1.462,561,1.462,562,1.497,563,1.811,584,1.811,600,1.763,628,1.368,710,1.573,912,1.705,1140,2.304,1145,1.658,1146,1.658,1181,3.093,1184,4.657,1186,3.198,1187,4.079,1189,3.939,1190,5,1191,2.702,1192,3.093,1193,2.187,1224,3.738,1228,4.528,1230,2.297,1253,3.994,1399,6.413,1400,3.994,1403,5.116,1407,5.116,1408,3.738,1409,3.994,1410,3.994,1411,4.868,1412,3.994,1413,4.868,1414,4.868,1415,4.868,1416,4.868,1417,4.868,1418,2.817,1419,3.994,1420,2.817,1421,2.817,1432,2.596,1433,2.817,1434,2.596,1435,4.335,1436,2.817,1437,2.596,1438,2.817,1439,2.817,1440,2.817,1441,2.817,1442,2.817,1443,2.817,1447,2.596,1448,3.994,1936,2.187,2295,4.557,2296,2.596,2297,2.817,2299,4.335,2304,5.284,2305,2.817,2306,2.817,2307,2.817,2308,3.738,2309,4.335,2310,2.817,2311,5.284,2312,4.335,2313,2.817,2314,2.817,2315,2.596,2316,4.335,2317,5.933,2318,5.284,2319,2.817,2320,2.817,2321,4.335,2322,2.817,2323,4.335,2324,4.335,2325,2.817,2326,4.335,2327,2.817,2328,2.817,2398,4.854,2399,4.854,2400,4.854,2401,4.854,2402,4.854,2403,3.154,2404,3.154,2405,3.154,2406,3.154,2407,3.154,2408,3.154,2409,3.154]],["title/injectables/TaskUC.html",[210,1.068,2253,3.418]],["body/injectables/TaskUC.html",[0,0.101,3,0.088,4,0.074,5,0.06,9,0.174,15,1.486,18,0.853,21,0.852,23,1.261,24,0.006,25,0.73,26,0.359,27,0.836,34,1.422,51,0.335,52,0.629,57,0.679,61,0.124,63,1.457,64,1.301,74,2.239,80,0.002,81,0.003,82,0.002,87,1.968,92,1.008,107,1.468,111,0.79,126,4.105,136,1.949,143,1.38,202,3.967,210,1.174,211,1.375,213,2.843,220,2.577,224,1.517,229,3.948,230,2.488,240,4.457,242,1.549,245,2.806,255,2.094,377,1.818,484,3.104,521,3.221,532,1.774,575,4.838,576,4.838,580,4.457,582,4.457,585,3.326,600,3.42,628,2.349,788,3.142,867,3.212,869,2.163,968,2.42,1136,4.241,1153,3.212,1154,5.275,1156,6.447,1159,2.656,1189,2.163,1233,4.457,1260,4.958,1261,4.958,1262,4.958,1263,5.565,1279,3.212,1596,3.756,1603,3.212,1608,4.457,1904,3.258,1953,5.208,2028,2.163,2227,4.958,2233,3.001,2243,3.258,2251,3.756,2253,3.756,2281,3.258,2290,5.551,2338,4.457,2410,3.001,2411,5.417,2412,5.417,2413,5.417,2414,3.647,2415,3.647,2416,5.417,2417,3.647,2418,5.417,2419,3.647,2420,3.647,2421,3.647,2422,3.647,2423,5.417,2424,6.387,2425,3.647,2426,3.647,2427,3.647,2428,3.647,2429,3.258,2430,3.258,2431,3.258,2432,3.001,2433,3.001,2434,3.647,2435,3.258,2436,2.809,2437,5.417,2438,3.647,2439,3.647,2440,3.647,2441,3.647,2442,5.417,2443,3.647,2444,3.647,2445,3.647,2446,7.151,2447,5.417,2448,3.647,2449,3.647,2450,3.647,2451,5.417,2452,3.647,2453,3.647,2454,3.647,2455,6.462,2456,3.647,2457,3.647,2458,3.647,2459,5.417,2460,3.647,2461,3.647,2462,3.647,2463,3.647,2464,3.647,2465,3.647,2466,3.647,2467,3.647,2468,3.647,2469,3.647,2470,3.647]],["title/classes/TaskWithStatusVo.html",[0,0.136,1263,3.59]],["body/classes/TaskWithStatusVo.html",[0,0.183,2,1.289,3,0.16,4,0.134,5,0.108,9,0.315,10,0.947,18,1.547,21,0.903,23,1.006,24,0.006,25,0.582,26,0.381,27,0.667,51,0.277,61,0.151,80,0.004,81,0.005,82,0.004,99,2.778,146,0.582,484,3.562,1231,5.096,1249,5.096,1257,7.378,1258,7.543,1259,5.443,1260,4.587,1261,4.587,1262,4.587,1263,5.916,1264,6.183,1265,7.255,1266,5.909,2471,8.123,2472,6.616]],["title/classes/TeamInfo.html",[0,0.136,542,2.664]],["body/classes/TeamInfo.html",[0,0.176,2,1.236,3,0.153,4,0.128,5,0.104,7,1.664,9,0.302,10,0.923,14,3.162,16,1.664,18,1.483,21,0.928,23,0.965,24,0.006,25,0.818,26,0.411,27,0.64,29,2.319,30,2.637,39,1.017,41,2.109,42,2.693,43,2.984,46,2.693,51,0.332,52,1.364,55,1.483,56,1.846,57,1.181,59,2.392,61,0.145,62,1.817,80,0.004,81,0.005,82,0.004,260,4.756,418,2.543,421,2.638,436,4.049,455,3.429,456,3.429,477,3.429,492,6.096,493,4.62,494,4.62,542,4.278,1130,4.398,2473,7.705]],["title/classes/TeamNews.html",[0,0.136,571,2.923]],["body/classes/TeamNews.html",[0,0.186,2,0.63,3,0.078,4,0.147,5,0.053,7,1.525,8,2.5,9,0.154,10,0.577,12,0.843,14,1.976,15,2.016,16,1.263,17,2.057,21,0.955,23,0.492,24,0.006,25,0.592,26,0.396,27,0.849,28,2.254,29,2.459,30,2.77,32,1.641,33,1.899,34,1.35,39,1.029,41,1.075,42,1.373,43,3.502,44,1.612,45,1.612,46,1.373,47,1.612,48,1.572,49,1.292,50,1.612,51,0.333,52,1.25,54,2.852,55,0.756,56,0.941,57,0.602,61,0.165,62,0.926,64,2.144,66,4.622,70,1.219,76,2.4,80,0.002,81,0.003,82,0.002,91,2.939,92,0.921,107,0.593,143,0.557,146,0.285,220,2.111,221,3.87,222,3.813,224,2.499,244,2.242,273,3.344,335,2.934,360,1.856,409,1.154,412,2.057,418,1.039,421,2.499,485,3.272,490,2.674,495,1.856,496,2.242,497,3.865,498,3.891,499,3.813,500,3.92,501,3.637,502,4.901,503,2.996,504,4.666,505,4.465,506,2.785,507,3.811,508,4.437,510,2.661,511,3.43,512,4.163,513,3.986,514,3.43,515,2.661,516,2.661,517,3.603,518,4.288,519,3.603,520,3.43,521,2.466,522,3.282,523,3.43,524,2.661,525,2.661,526,3.537,527,2.661,528,3.449,529,3.829,530,2.661,531,2.661,532,2.921,533,2.661,534,3.282,535,2.661,536,3.603,537,2.661,538,3.603,539,2.661,540,2.934,541,2.355,542,3.247,543,1.748,544,2.242,545,1.465,546,1.8,547,2.145,548,2.061,549,2.355,550,2.355,551,2.355,552,2.355,553,2.355,554,1.986,555,2.145,556,2.355,557,3.603,558,2.852,559,2.921,560,2.785,561,2.785,562,2.852,563,3.449,564,3.449,565,2.355,566,3.603,567,2.355,568,2.355,569,4.376,570,1.918,571,2.934,2474,3.234]],["title/controllers/TeamNewsController.html",[677,2.184,1737,3.797]],["body/controllers/TeamNewsController.html",[0,0.151,3,0.132,4,0.11,5,0.089,9,0.26,12,1.872,21,0.561,23,0.83,24,0.006,25,0.48,26,0.236,27,0.55,29,1.467,34,1.016,39,0.904,51,0.395,57,1.016,61,0.124,80,0.003,81,0.004,82,0.003,87,1.982,92,1.337,107,1,111,1.182,126,4.125,136,1.664,143,0.94,213,2.626,230,2.233,242,2.316,243,3.037,245,1.912,497,2.815,543,4.796,586,3.484,596,4.579,599,3.641,644,2.589,670,2.589,677,2.418,679,2.72,681,3.477,687,3.477,688,3.973,692,3.973,695,4.202,856,3.477,1130,3.783,1136,4.369,1154,4.902,1360,2.791,1602,5.33,1603,5.262,1609,5.92,1610,5.665,1612,5.912,1626,4.202,1627,4.982,1628,3.62,1629,4.489,1630,5.12,1632,3.783,1633,3.973,1634,4.873,1635,4.873,1641,4.489,1642,4.489,1643,4.873,1644,4.873,1645,4.873,1646,4.873,1647,4.873,1737,5.535,2293,3.477,2475,6.418,2476,4.873,2477,8.034,2478,5.456,2479,7.185,2480,5.456,2481,8.034,2482,5.456,2483,5.456,2484,4.873,2485,4.873,2486,5.456,2487,5.456]],["title/classes/TestHelper.html",[0,0.136,1399,3.418]],["body/classes/TestHelper.html",[0,0.096,2,0.676,3,0.084,4,0.07,5,0.057,9,0.165,10,0.608,12,2.476,16,1.572,18,1.631,21,0.952,23,0.953,24,0.006,25,0.614,26,0.34,27,0.632,32,0.947,33,1.095,34,1.167,39,0.842,41,2.084,51,0.263,52,1.081,55,0.811,61,0.079,63,2.083,64,1.861,80,0.002,81,0.003,82,0.002,92,0.971,107,1.627,136,1.444,143,1.354,220,2.618,234,3.323,260,4.962,264,1.504,316,4.019,335,5.089,345,2.741,400,3.093,503,3.077,586,1.504,600,2.278,711,2.209,713,3.202,740,4.291,939,1.774,1015,5.446,1017,2.3,1049,2.404,1056,4.815,1140,3.549,1239,5.185,1278,4.291,1306,2.3,1360,3.568,1364,2.994,1374,2.994,1399,3.616,1400,5.158,1403,5.76,1407,6.278,1408,4.829,1409,4.291,1410,4.291,1411,5.738,1412,4.291,1413,5.738,1414,5.738,1415,5.738,1416,6.464,1417,5.738,1419,6.464,1432,4.291,1434,4.291,1437,4.291,1471,2.404,1477,4.444,1559,2.209,1986,5.76,2235,6.051,2236,3.798,2315,2.853,2360,2.67,2367,3.798,2488,3.096,2489,5.215,2490,5.079,2491,3.995,2492,5.215,2493,5.215,2494,5.215,2495,4.658,2496,5.215,2497,4.658,2498,3.467,2499,3.467,2500,3.467,2501,3.467,2502,3.467,2503,3.467,2504,3.467,2505,3.467,2506,3.467,2507,3.467,2508,3.467,2509,3.467,2510,3.467,2511,3.467,2512,3.467,2513,3.467,2514,3.467,2515,2.3,2516,3.467,2517,3.467,2518,2.404,2519,3.096,2520,2.525,2521,8.151,2522,5.215,2523,3.467,2524,3.096,2525,6.973,2526,2.853,2527,2.525,2528,3.467,2529,3.467,2530,3.467,2531,3.096,2532,5.215,2533,3.467,2534,3.467,2535,3.467,2536,3.467,2537,3.467,2538,3.096,2539,3.467,2540,3.467]],["title/injectables/TimeoutInterceptor.html",[210,1.068,1293,3.797]],["body/injectables/TimeoutInterceptor.html",[0,0.146,3,0.128,4,0.107,5,0.087,9,0.252,10,0.821,21,0.903,23,1.07,24,0.006,25,0.62,26,0.343,27,0.851,32,1.444,33,1.671,51,0.353,61,0.121,80,0.003,81,0.004,82,0.003,92,1.31,99,2.854,107,1.29,111,1.146,124,1.758,143,1.454,192,4.35,210,1.525,211,1.994,316,2.705,506,3.667,558,2.509,559,2.571,560,3.91,561,2.451,562,2.509,563,3.035,600,2.874,677,3.119,710,2.636,811,5.421,816,5.791,823,4.88,835,6.286,836,6.286,837,6.496,838,7.533,840,2.858,841,7.065,844,4.35,846,4.722,928,3.917,929,3.699,952,4.35,1015,3.851,1197,2.705,1291,6.261,1293,5.421,1408,6.093,1576,5.125,1602,4.669,2048,6.286,2541,4.722,2542,7.038,2543,5.125,2544,4.88,2545,5.791,2546,7.91,2547,7.91,2548,5.287,2549,5.287,2550,6.093,2551,5.287,2552,5.287,2553,5.287,2554,5.287,2555,5.287,2556,7.038,2557,7.038,2558,5.287,2559,7.038,2560,5.287,2561,5.287,2562,5.287,2563,5.287,2564,5.287,2565,5.287,2566,5.287,2567,7.038,2568,5.287,2569,5.287]],["title/classes/UpdateNewsParams.html",[0,0.136,1621,3.59]],["body/classes/UpdateNewsParams.html",[0,0.243,2,1.146,3,0.142,4,0.119,5,0.096,9,0.281,10,1.025,21,0.856,24,0.006,26,0.361,27,0.761,28,2.345,29,2.239,39,0.989,51,0.316,52,1.603,61,0.134,80,0.003,81,0.004,82,0.003,91,3.492,124,2.922,497,3.751,499,4.531,501,4.503,643,4.531,644,3.582,646,4.475,648,5.254,650,6.209,651,4.633,652,6.209,653,5.812,669,6.093,670,2.792,671,6.74,672,7.231,673,6.855,674,3.612,1096,4.809,1131,5.496,1306,5.006,1621,5.496,2570,7.85,2571,7.546,2572,7.546,2573,5.496,2574,6.74,2575,7.546,2576,5.883,2577,5.883,2578,5.883]],["title/classes/User.html",[0,0.136,12,1.284]],["body/classes/User.html",[0,0.145,2,1.021,3,0.126,4,0.106,5,0.086,7,1.471,8,3.006,9,0.401,10,0.816,12,1.823,14,2.795,15,2.852,16,1.471,17,2.91,18,1.226,21,0.972,23,0.797,24,0.006,25,0.693,26,0.399,27,0.529,28,2.175,29,2.512,30,2.856,32,1.911,33,2.211,34,1.303,39,1.076,41,1.743,42,2.226,43,3.169,44,2.614,45,2.614,46,2.226,47,2.614,48,2.549,49,2.094,50,2.614,51,0.293,52,1.206,55,1.226,56,1.526,57,0.976,59,1.977,61,0.16,62,1.502,70,1.977,76,2.094,80,0.003,81,0.004,82,0.003,146,0.461,220,2.446,412,2.91,418,2.249,421,2.18,503,3.292,554,3.219,867,4.15,1140,2.488,1145,4.417,1146,4.417,1267,5.576,1268,4.313,1269,5.356,1270,4.038,1271,4.038,1272,3.478,1273,3.478,1274,3.478,1275,3.478,1276,4.038,1277,4.038,1278,4.313,2000,4.313,2579,6.998,2580,4.682,2581,5.242,2582,5.242,2583,5.242,2584,4.682,2585,4.682]],["title/classes/User-1.html",[0,0.114,12,1.074,1279,2.445]],["body/classes/User-1.html",[0,0.133,2,0.937,3,0.116,4,0.097,5,0.079,7,1.388,8,2.94,9,0.419,10,0.77,12,1.72,14,2.637,15,2.69,16,1.388,17,2.745,18,1.125,21,0.966,23,0.731,24,0.006,25,0.714,26,0.403,27,0.858,28,2.051,29,2.498,30,2.841,32,2.058,33,2.381,34,1.403,35,2.599,39,1.058,41,1.599,42,2.042,43,3.058,44,2.397,45,2.397,46,2.042,47,2.397,48,2.338,49,1.921,50,2.397,51,0.316,52,1.138,53,2.952,54,2.282,55,1.125,56,1.4,57,0.895,59,1.813,61,0.151,62,1.377,70,1.813,76,2.637,80,0.003,81,0.004,82,0.003,146,0.423,220,2.556,412,2.745,418,2.121,421,2,503,3.33,554,2.952,867,3.914,1139,4.727,1140,2.282,1141,3.577,1145,4.263,1146,4.263,1221,3.704,1267,5.381,1269,5.169,1270,3.704,1271,3.704,1272,3.19,1273,3.19,1274,3.19,1275,3.19,1276,3.704,1277,3.704,1280,3.957,1281,4.295,1282,4.295,2000,3.957,2580,4.295,2584,5.895,2585,4.295,2586,6.6,2587,4.809,2588,4.809,2589,4.809,2590,4.809,2591,4.809]],["title/controllers/UserController.html",[677,2.184,2592,3.797]],["body/controllers/UserController.html",[0,0.181,3,0.158,4,0.132,5,0.107,9,0.312,12,1.705,21,0.673,23,0.995,24,0.006,25,0.576,26,0.284,27,0.66,29,1.759,51,0.4,57,1.218,61,0.149,80,0.004,81,0.005,82,0.004,87,2.378,92,1.502,107,1.2,111,1.418,143,1.128,213,2.86,230,2.508,242,2.779,670,3.107,677,2.901,679,3.263,681,4.171,687,4.171,688,4.767,692,4.767,1136,4.673,1354,4.019,1603,5.189,1626,5.042,2293,4.171,2592,6.216,2593,5.846,2594,6.545,2595,8.07,2596,6.545,2597,5.804,2598,6.545,2599,6.545,2600,6.545,2601,6.545,2602,6.545]],["title/injectables/UserFacade.html",[210,1.068,1332,3.418]],["body/injectables/UserFacade.html",[0,0.182,3,0.158,4,0.133,5,0.108,9,0.313,18,1.534,21,0.83,23,1.229,24,0.006,25,0.711,26,0.35,27,0.815,51,0.383,57,1.221,61,0.15,80,0.004,81,0.005,82,0.004,87,2.383,92,1.504,107,1.202,111,1.422,136,1.358,143,1.131,210,1.751,211,2.473,213,2.862,230,2.511,242,2.785,245,2.299,756,4.352,1136,4.676,1332,5.603,1354,5.377,1603,3.89,2597,6.341,2603,5.858,2604,8.08,2605,6.559,2606,6.559,2607,8.08,2608,6.559,2609,6.559,2610,6.559]],["title/classes/UserInfo.html",[0,0.136,512,2.829]],["body/classes/UserInfo.html",[0,0.169,2,1.189,3,0.147,4,0.123,5,0.1,7,1.624,9,0.291,10,0.901,14,3.086,16,1.624,18,1.428,21,0.945,23,0.928,24,0.006,25,0.537,26,0.413,27,0.616,29,2.395,30,2.809,39,1.073,41,2.03,42,2.592,43,2.913,46,2.592,51,0.324,52,1.332,55,1.428,56,1.777,57,1.136,59,2.302,61,0.139,62,1.748,80,0.004,81,0.005,82,0.004,260,4.702,418,2.483,421,2.539,436,3.953,477,3.299,492,4.702,493,4.446,494,4.446,512,4.435,1140,2.897,1145,4.682,1146,4.682,1272,4.05,1273,4.05,1274,4.05,1275,4.05,2611,7.957,2612,7.726]],["title/classes/UserInfoMapper.html",[0,0.136,1690,3.797]],["body/classes/UserInfoMapper.html",[0,0.188,2,1.326,3,0.164,4,0.138,5,0.112,9,0.325,21,0.699,23,1.035,24,0.006,25,0.599,26,0.295,27,0.686,34,1.267,51,0.346,52,1.173,61,0.155,80,0.004,81,0.005,82,0.004,92,1.538,107,1.248,136,1.409,143,1.173,506,4.127,512,5.445,644,3.923,752,5.483,756,4.515,757,4.515,1690,6.366,1805,6.742,1987,6.078,1989,6.078,2036,5.242,2038,5.6,2613,7.382,2614,8.265,2615,6.805,2616,6.805,2617,6.805]],["title/classes/UserInfoResponse.html",[0,0.136,1805,3.59]],["body/classes/UserInfoResponse.html",[0,0.178,2,1.254,3,0.155,4,0.13,5,0.106,9,0.307,10,0.931,12,2.479,16,1.963,21,0.892,24,0.006,25,0.799,26,0.376,29,2.334,39,1.071,51,0.27,52,1.377,61,0.147,80,0.004,81,0.005,82,0.004,124,3.019,659,5.089,660,5.089,668,5.054,670,3.055,676,3.817,739,5.537,1145,4.564,1146,4.564,1805,5.816,1823,4.957,1872,5.298,2043,4.957,2044,5.296,2045,5.296,2618,8.11,2619,7.133,2620,6.436]],["title/modules/UserModule.html",[170,1.458,177,3.418]],["body/modules/UserModule.html",[0,0.173,3,0.151,4,0.126,5,0.103,24,0.006,51,0.388,61,0.143,80,0.004,81,0.005,82,0.004,111,1.355,170,2.32,172,2.601,173,3.637,177,6.977,180,4.366,181,3.286,182,2.834,184,3.554,205,4.366,677,2.771,679,3.911,1332,6.902,2004,6.549,2021,6.549,2028,3.708,2293,3.985,2592,6.602,2597,6.267,2621,5.585,2622,5.585,2623,5.585,2624,6.267,2625,6.253,2626,6.253]],["title/injectables/UserRepo.html",[210,1.068,2624,3.27]],["body/injectables/UserRepo.html",[0,0.18,3,0.157,4,0.132,5,0.107,9,0.31,12,2.273,16,1.69,18,1.521,21,0.826,23,1.222,24,0.006,25,0.708,26,0.348,27,0.811,51,0.382,52,1.121,55,1.521,57,1.211,61,0.148,80,0.004,81,0.005,82,0.004,87,2.363,92,1.496,107,1.192,111,1.41,136,1.347,143,1.121,210,1.742,211,2.452,213,2.852,220,2.653,230,2.498,242,2.761,245,2.279,264,2.821,300,4.315,301,5.596,303,4.474,2007,7.18,2011,7.18,2624,5.333,2627,5.809,2628,6.504,2629,6.504,2630,6.504]],["title/classes/UserTaskInfo.html",[0,0.136,482,2.591]],["body/classes/UserTaskInfo.html",[0,0.167,2,1.173,3,0.145,4,0.122,5,0.099,7,1.61,9,0.287,10,0.893,14,3.059,16,1.61,18,1.408,21,0.941,23,0.916,24,0.006,25,0.53,26,0.397,27,0.607,29,2.383,30,2.798,39,1.07,41,2.002,42,2.556,43,2.888,46,2.556,51,0.321,52,1.32,55,1.408,56,1.753,57,1.121,59,2.27,61,0.137,62,1.725,70,2.27,80,0.004,81,0.004,82,0.004,146,0.53,260,4.683,418,2.461,421,2.504,477,3.254,482,4.025,483,6.84,484,3.163,493,4.385,494,4.385,1140,2.858,1145,4.659,1146,4.659,1272,3.994,1273,3.994,1274,3.994,1275,3.994,1283,6.828,1284,7.294,2631,6.021]],["title/injectables/UserUC.html",[210,1.068,2597,3.27]],["body/injectables/UserUC.html",[0,0.171,3,0.149,4,0.125,5,0.102,9,0.295,12,1.613,18,1.448,21,0.801,23,1.185,24,0.006,25,0.686,26,0.338,27,0.786,51,0.395,57,1.152,61,0.141,80,0.004,81,0.005,82,0.004,87,2.832,92,1.451,107,1.135,111,1.342,136,1.614,143,1.067,210,1.689,211,2.334,213,2.789,230,2.422,242,2.628,245,2.169,600,2.249,1136,4.581,1354,5.238,1603,3.671,1907,5.529,1982,4.768,2021,6.632,2028,3.671,2597,5.171,2624,6.251,2632,5.529,2633,7.794,2634,6.19,2635,6.19,2636,7.794,2637,6.19,2638,5.093,2639,6.19,2640,6.19,2641,5.529,2642,6.19,2643,6.19,2644,5.529,2645,6.19,2646,6.19]],["title/classes/ValidationError.html",[0,0.136,96,3.418]],["body/classes/ValidationError.html",[0,0.161,2,1.135,3,0.141,4,0.118,5,0.096,7,1.577,9,0.278,10,0.874,18,1.363,21,0.982,23,0.886,24,0.006,25,0.513,26,0.418,27,0.588,39,1.044,43,3.557,51,0.314,61,0.133,62,1.669,80,0.003,81,0.004,82,0.003,86,6.459,87,3.537,88,3.324,89,5.501,90,5.201,91,3.187,92,1.396,93,6.824,94,6.824,96,5.2,99,1.841,100,5.205,101,6.011,102,5.205,103,5.205,104,5.205,105,5.205,106,5.205,107,1.375,108,5.205,109,3.456,110,4.488,111,1.263,112,5.205,113,4.795,116,3.15,117,2.702,118,4.244,120,5.205,345,3.063,2647,5.205,2648,5.827,2649,5.827,2650,5.827]],["title/classes/ValidationErrorDetailResponse.html",[0,0.136,131,3.797]],["body/classes/ValidationErrorDetailResponse.html",[0,0.201,2,1.413,3,0.175,4,0.147,5,0.119,18,1.697,21,0.746,23,1.103,24,0.006,25,0.639,26,0.314,27,0.732,39,1.101,61,0.165,80,0.004,81,0.005,82,0.004,87,2.636,113,5.969,117,3.981,128,4.944,131,6.614,2651,7.67,2652,6.479,2653,7.254,2654,7.254,2655,7.066]],["title/modules/ValidationModule.html",[170,1.458,388,3.59]],["body/modules/ValidationModule.html",[0,0.201,3,0.175,4,0.147,5,0.119,24,0.006,51,0.384,61,0.166,80,0.004,81,0.005,82,0.004,111,1.576,170,2.544,172,3.024,184,3.295,388,6.263,402,7.68,814,4.634,825,3.822,860,5.601,1088,6.624,2656,7.271,2657,7.271,2658,7.271]],["title/changelog.html",[2659,3.176,2660,2.859,2661,3.683]],["body/changelog.html",[0,0.055,1,1.93,2,0.805,3,0.014,4,0.012,5,0.075,9,0.028,12,1.877,13,0.91,16,0.421,20,0.358,21,0.206,24,0.001,25,0.139,27,0.159,28,0.852,32,0.918,33,0.349,34,1.058,51,0.084,52,0.191,54,0.95,60,1.787,64,1.694,65,0.828,68,0.705,69,1.367,71,0.805,72,0.521,73,0.425,74,0.679,75,0.525,80,0.001,81,0.001,82,0.001,88,1.358,89,0.935,90,0.335,99,0.349,107,0.289,115,2.825,116,1.818,117,2.572,119,1.148,128,2.104,143,0.101,146,0.097,165,0.852,170,0.907,173,0.513,181,0.581,182,0.501,184,0.264,185,0.284,205,0.325,208,1.255,213,0.191,224,1.513,226,0.656,228,0.315,229,0.513,230,0.49,231,0.767,234,0.372,237,1.045,243,0.325,245,0.205,255,0.335,266,0.425,270,0.387,271,2.841,274,0.449,276,2.37,278,2.993,280,0.767,281,0.705,292,0.425,296,2.755,326,0.449,337,0.346,338,0.405,339,1.187,340,1.747,355,0.767,371,0.48,374,1.333,375,0.705,377,3.871,378,1.568,390,0.734,394,0.48,396,2.449,398,2.231,409,1.389,412,0.243,438,1.045,447,0.805,448,1.739,449,0.405,454,1.024,470,1.229,476,1.328,479,2.413,484,0.852,486,0.387,497,0.433,498,0.264,499,0.998,500,0.852,503,2.798,520,0.767,521,1.941,528,0.905,534,0.387,543,1.482,545,0.264,558,0.95,559,0.538,560,0.271,562,0.525,564,0.335,586,0.253,599,1.082,617,0.325,645,1.214,646,0.656,651,1.683,654,0.48,655,4.761,665,1.229,681,0.372,687,0.372,711,0.372,714,0.358,716,0.387,720,0.679,762,2.271,785,0.805,788,0.538,807,3.847,808,2.462,809,1.045,810,1.759,820,0.449,821,2.429,825,0.828,833,0.734,840,0.315,856,1.004,867,0.346,869,1.187,870,0.538,871,0.679,872,0.767,898,0.988,912,0.598,927,0.346,928,0.325,929,1.767,930,2.143,932,2.125,939,1.024,941,2.231,945,0.358,949,0.372,951,0.449,960,2.232,961,1.004,967,1.214,969,0.358,975,0.767,981,2.065,988,0.48,991,1.082,992,0.805,996,0.449,1016,0.48,1017,0.734,1019,0.767,1021,0.425,1023,0.734,1034,0.346,1039,0.852,1049,1.388,1051,0.805,1054,0.372,1056,2.088,1070,0.449,1071,1.214,1080,0.48,1092,1.683,1094,0.48,1095,1.647,1096,1.522,1099,2.699,1100,3.203,1107,0.852,1109,1.996,1113,0.48,1114,0.968,1116,1.739,1117,0.656,1129,3.291,1130,1.388,1131,0.425,1139,1.441,1140,3.502,1141,0.95,1143,0.767,1153,0.656,1154,0.635,1157,0.387,1165,1.045,1184,0.566,1187,0.679,1190,1.683,1191,1.329,1194,1.148,1196,0.405,1197,1.402,1213,0.449,1216,0.805,1225,0.91,1228,0.905,1234,0.48,1236,0.734,1264,0.705,1269,1.004,1279,0.935,1289,0.346,1291,0.405,1292,3.203,1294,0.734,1305,0.48,1306,1.328,1307,0.425,1308,1.819,1315,1.148,1318,0.48,1320,0.48,1329,0.48,1336,1.408,1338,2.361,1340,2.033,1353,0.852,1360,1.222,1364,1.149,1374,5.021,1377,1.148,1462,1.148,1472,6.499,1474,0.449,1477,1.004,1482,0.521,1485,1.953,1500,0.307,1504,1.584,1522,1.297,1533,0.449,1536,0.767,1549,0.734,1550,0.805,1557,0.405,1561,0.405,1563,0.405,1565,0.449,1574,0.91,1575,2.332,1576,0.805,1595,2.361,1598,1.996,1602,0.734,1617,1.004,1619,1.388,1625,2.448,1648,0.48,1660,0.425,1666,3.249,1745,1.045,1746,1.045,1747,4.694,1751,0.767,1762,0.988,1793,0.48,1796,0.346,1809,1.297,1821,1.114,1829,2.361,1842,0.767,1849,1.093,1870,1.787,1872,1.045,1880,0.805,1918,0.521,1919,1.996,1936,4.112,1938,1.082,1947,0.988,2028,0.935,2095,0.425,2101,0.449,2115,4.594,2125,2.449,2126,0.387,2127,1.004,2128,0.48,2131,2.332,2149,1.656,2154,1.297,2155,0.387,2210,0.521,2235,1.839,2237,1.787,2241,2.998,2251,1.901,2337,0.91,2339,0.988,2347,1.297,2360,2.361,2363,0.767,2364,0.449,2367,0.805,2370,0.852,2372,0.521,2373,2.065,2432,0.91,2433,0.91,2490,0.425,2497,0.988,2515,1.328,2519,5.497,2520,1.148,2538,0.521,2543,1.148,2550,0.449,2573,1.996,2619,1.408,2655,0.91,2661,2.737,2662,0.584,2663,1.388,2664,0.91,2665,0.521,2666,1.457,2667,0.584,2668,0.584,2669,1.576,2670,0.767,2671,4.041,2672,8.254,2673,4.193,2674,0.584,2675,6.258,2676,0.584,2677,1.106,2678,0.852,2679,0.584,2680,0.584,2681,0.584,2682,0.584,2683,0.988,2684,1.106,2685,0.584,2686,0.584,2687,0.584,2688,2.255,2689,0.584,2690,0.584,2691,7.319,2692,1.901,2693,1.106,2694,0.584,2695,0.425,2696,2.001,2697,0.521,2698,1.457,2699,0.988,2700,0.584,2701,3.892,2702,1.576,2703,0.584,2704,8.309,2705,5.406,2706,0.584,2707,0.584,2708,0.584,2709,5.548,2710,0.584,2711,4.048,2712,0.988,2713,0.584,2714,0.584,2715,0.584,2716,3.065,2717,2.255,2718,0.584,2719,0.584,2720,0.584,2721,0.584,2722,1.576,2723,0.584,2724,1.787,2725,8.957,2726,0.584,2727,0.48,2728,1.787,2729,2.449,2730,1.576,2731,1.106,2732,0.584,2733,0.584,2734,1.901,2735,0.584,2736,0.584,2737,1.106,2738,0.584,2739,0.521,2740,0.584,2741,1.787,2742,0.48,2743,1.408,2744,0.584,2745,2.133,2746,3.249,2747,0.48,2748,0.584,2749,0.584,2750,0.584,2751,0.584,2752,1.408,2753,0.584,2754,0.584,2755,0.584,2756,0.584,2757,1.965,2758,3.065,2759,2.737,2760,0.584,2761,0.584,2762,0.584,2763,0.584,2764,1.106,2765,0.584,2766,0.584,2767,0.584,2768,0.767,2769,1.576,2770,0.584,2771,0.584,2772,0.405,2773,0.584,2774,0.584,2775,5.548,2776,0.584,2777,1.106,2778,5.768,2779,2.388,2780,0.521,2781,0.584,2782,0.584,2783,0.584,2784,2.001,2785,1.106,2786,2.361,2787,0.584,2788,0.584,2789,0.584,2790,2.001,2791,0.584,2792,2.001,2793,0.584,2794,1.106,2795,0.521,2796,0.521,2797,0.449,2798,0.521,2799,1.965,2800,0.91,2801,2.59,2802,1.457,2803,0.405,2804,1.106,2805,0.584,2806,1.408,2807,0.584,2808,0.584,2809,1.576,2810,3.203,2811,4.068,2812,0.584,2813,0.584,2814,0.584,2815,0.584,2816,0.584,2817,1.576,2818,1.106,2819,0.584,2820,0.584,2821,5.548,2822,1.839,2823,1.106,2824,1.106,2825,1.106,2826,1.787,2827,0.584,2828,3.363,2829,2.001,2830,0.584,2831,0.584,2832,0.584,2833,1.787,2834,1.106,2835,0.584,2836,0.584,2837,1.576,2838,0.584,2839,0.48,2840,0.767,2841,2.133,2842,0.521,2843,1.214,2844,0.584,2845,2.737,2846,0.584,2847,1.576,2848,5.256,2849,2.522,2850,0.584,2851,0.584,2852,0.584,2853,1.106,2854,1.148,2855,0.584,2856,2.133,2857,1.106,2858,0.584,2859,0.584,2860,2.001,2861,2.388,2862,1.647,2863,0.91,2864,0.584,2865,0.584,2866,2.993,2867,0.584,2868,0.584,2869,0.584,2870,0.988,2871,0.584,2872,0.584,2873,1.576,2874,0.91,2875,0.584,2876,0.988,2877,4.747,2878,0.584,2879,3.363,2880,3.203,2881,1.106,2882,2.388,2883,0.584,2884,0.584,2885,0.584,2886,1.787,2887,0.521,2888,0.584,2889,0.584,2890,0.584,2891,0.48,2892,0.584,2893,0.584,2894,0.584,2895,0.584,2896,2.741,2897,2.001,2898,0.584,2899,0.988,2900,0.449,2901,2.737,2902,0.48,2903,2.001,2904,1.106,2905,0.988,2906,0.988,2907,0.988,2908,1.275,2909,1.819,2910,0.584,2911,0.584,2912,0.521,2913,0.584,2914,0.48,2915,0.425,2916,2.125,2917,0.584,2918,0.521,2919,0.584,2920,2.001,2921,0.584,2922,6.357,2923,0.584,2924,0.584,2925,0.584,2926,0.584,2927,0.584,2928,2.388,2929,1.576,2930,0.584,2931,1.297,2932,0.584,2933,0.584,2934,0.584,2935,2.133,2936,0.584,2937,1.106,2938,0.584,2939,0.584,2940,1.106,2941,0.584,2942,2.001,2943,0.91,2944,0.584,2945,0.584,2946,0.988,2947,0.584,2948,0.584,2949,1.996,2950,1.576,2951,0.584,2952,0.584,2953,0.584,2954,0.425,2955,1.819,2956,0.584,2957,2.001,2958,0.584,2959,3.004,2960,0.584,2961,0.521,2962,0.584,2963,3.397,2964,1.106,2965,5.928,2966,1.148,2967,1.106,2968,0.584,2969,0.584,2970,3.884,2971,0.584,2972,0.584,2973,0.584,2974,0.584,2975,3.892,2976,3.363,2977,0.584,2978,4.747,2979,0.584,2980,0.584,2981,0.584,2982,2.388,2983,0.584,2984,0.584,2985,1.647,2986,0.48,2987,0.584,2988,0.521,2989,0.584,2990,1.787,2991,0.584,2992,0.584,2993,1.576,2994,0.584,2995,1.787,2996,0.584,2997,0.584,2998,1.576,2999,0.988,3000,0.988,3001,1.106,3002,1.106,3003,1.787,3004,1.106,3005,0.521,3006,0.584,3007,1.106,3008,1.106,3009,1.576,3010,1.106,3011,1.787,3012,0.584,3013,0.988,3014,0.584,3015,1.106,3016,0.988,3017,0.584,3018,2.737,3019,1.106,3020,0.584,3021,2.133,3022,0.584,3023,2.741,3024,3.065,3025,0.584,3026,0.584,3027,1.106,3028,0.584,3029,0.48,3030,0.584,3031,0.584,3032,0.584,3033,0.521,3034,0.584,3035,0.584,3036,0.584,3037,0.584,3038,0.584,3039,0.584,3040,0.584,3041,0.584,3042,0.584,3043,1.106,3044,3.249,3045,0.584,3046,1.408,3047,0.91,3048,0.584,3049,0.584,3050,1.106,3051,1.106,3052,0.584,3053,1.647,3054,0.584,3055,0.584,3056,1.093,3057,0.584,3058,0.584,3059,0.584,3060,0.584,3061,2.001,3062,3.638,3063,0.584,3064,0.584,3065,0.584,3066,1.297,3067,0.48,3068,0.584,3069,0.584,3070,0.584,3071,1.106,3072,1.106,3073,1.106,3074,0.988,3075,1.106,3076,0.584,3077,1.408,3078,0.584,3079,0.584,3080,0.584,3081,2.143,3082,0.584,3083,1.106,3084,0.584,3085,0.584,3086,0.988,3087,0.584,3088,0.584,3089,1.408,3090,1.787,3091,0.584,3092,0.584,3093,0.988,3094,0.584,3095,0.584,3096,0.584,3097,0.584,3098,0.584,3099,2.741,3100,1.106,3101,0.584,3102,0.584,3103,0.584,3104,0.584,3105,0.584,3106,0.584,3107,0.988,3108,0.584,3109,3.892,3110,0.584,3111,2.448,3112,0.584,3113,1.408,3114,0.584,3115,0.584,3116,0.988,3117,0.584,3118,0.584,3119,2.388,3120,1.106,3121,0.584,3122,1.576,3123,1.148,3124,0.584,3125,0.584,3126,0.584,3127,1.106,3128,0.584,3129,0.584,3130,0.988,3131,0.584,3132,0.584,3133,0.852,3134,1.106,3135,2.741,3136,0.584,3137,0.584,3138,0.584,3139,0.48,3140,0.584,3141,1.106,3142,0.988,3143,0.584,3144,0.584,3145,0.584,3146,0.584,3147,2.388,3148,0.521,3149,0.584,3150,0.988,3151,0.584,3152,0.521,3153,2.001,3154,0.91,3155,0.584,3156,1.106,3157,1.576,3158,0.584,3159,0.584,3160,0.425,3161,0.584,3162,0.584,3163,1.106,3164,0.584,3165,0.48,3166,0.584,3167,0.584,3168,0.584,3169,1.576,3170,0.584,3171,0.584,3172,1.106,3173,0.584,3174,0.584,3175,0.584,3176,0.584,3177,1.106,3178,0.584,3179,1.576,3180,0.449,3181,0.584,3182,0.584,3183,1.148,3184,1.106,3185,1.457,3186,0.584,3187,0.584,3188,0.584,3189,0.584,3190,1.576,3191,1.541,3192,0.584,3193,0.521,3194,0.584,3195,1.576,3196,0.584,3197,0.584,3198,0.584,3199,1.576,3200,0.584,3201,0.584,3202,1.106,3203,0.584,3204,1.408,3205,1.106,3206,0.584,3207,0.584,3208,0.584,3209,0.584,3210,0.584,3211,0.449,3212,0.852,3213,0.449,3214,0.584,3215,0.584,3216,0.521,3217,0.988,3218,0.584,3219,0.584,3220,0.584,3221,0.584,3222,1.576,3223,0.584,3224,0.584,3225,0.584,3226,2.001,3227,0.584,3228,1.106,3229,1.106,3230,0.584,3231,0.584,3232,0.584,3233,1.106,3234,0.584,3235,0.584,3236,0.584,3237,0.521,3238,0.521,3239,0.584,3240,0.584,3241,0.584,3242,0.521,3243,0.584,3244,0.584,3245,0.584,3246,0.584,3247,0.584,3248,0.584,3249,0.584,3250,0.584,3251,0.521,3252,0.584,3253,0.584,3254,0.584,3255,0.584,3256,0.584,3257,0.584,3258,1.106,3259,0.584,3260,0.584,3261,0.521,3262,1.106,3263,0.584,3264,0.91,3265,1.388,3266,0.584,3267,1.106,3268,0.521,3269,0.584,3270,0.521,3271,0.584,3272,1.106,3273,0.584,3274,0.584,3275,0.48,3276,0.584,3277,2.388,3278,0.584,3279,0.584,3280,0.584,3281,0.584,3282,0.521,3283,0.584,3284,0.584,3285,0.584,3286,0.584,3287,0.584,3288,0.449,3289,0.584,3290,1.576,3291,0.584,3292,0.584,3293,0.584,3294,0.584,3295,0.584,3296,0.734,3297,1.106,3298,0.584,3299,1.576,3300,0.584,3301,0.584,3302,0.584,3303,0.584,3304,0.584,3305,0.584,3306,0.584,3307,0.584,3308,0.584,3309,1.106,3310,0.48,3311,1.106,3312,0.521,3313,1.297,3314,0.584,3315,0.852,3316,0.584,3317,0.48,3318,0.584,3319,8.309,3320,3.065,3321,0.584,3322,0.584,3323,0.48,3324,0.584,3325,0.584,3326,0.584,3327,0.584,3328,0.584,3329,2.741,3330,0.584,3331,1.148,3332,0.584,3333,0.584,3334,0.584,3335,0.584,3336,0.584,3337,2.001,3338,2.001,3339,1.457,3340,1.408,3341,2.388,3342,1.106,3343,1.106,3344,3.004,3345,1.541,3346,3.065,3347,0.988,3348,1.106,3349,1.106,3350,0.91,3351,1.106,3352,0.584,3353,0.584,3354,2.737,3355,0.48,3356,0.405,3357,0.91,3358,0.584,3359,0.449,3360,0.405,3361,0.449,3362,0.584,3363,0.584,3364,0.521,3365,0.584,3366,0.584,3367,0.584,3368,0.584,3369,0.584,3370,1.106,3371,0.584,3372,0.584,3373,1.106,3374,0.584,3375,0.584,3376,0.584,3377,0.521,3378,0.584,3379,0.584,3380,0.988,3381,0.48,3382,0.584,3383,1.576,3384,0.584,3385,0.521,3386,1.106,3387,0.584,3388,0.584,3389,0.521,3390,0.584,3391,1.106,3392,0.584,3393,0.584,3394,0.584,3395,0.584,3396,0.584,3397,0.988,3398,0.988,3399,2.001,3400,1.647,3401,0.584,3402,0.584,3403,0.584,3404,1.297,3405,0.584,3406,0.584,3407,0.584,3408,1.106,3409,1.576,3410,0.584,3411,0.584,3412,0.584,3413,0.584,3414,1.106,3415,0.584,3416,0.852,3417,0.521,3418,1.106,3419,0.584,3420,0.521,3421,0.584,3422,0.584,3423,1.106,3424,1.106,3425,0.584,3426,0.584,3427,0.584,3428,0.584,3429,1.576,3430,1.576,3431,1.541,3432,0.405,3433,1.965,3434,0.584,3435,1.106,3436,0.584,3437,0.584,3438,0.521,3439,1.106,3440,1.576,3441,0.988,3442,0.584,3443,0.584,3444,0.521,3445,0.584,3446,0.584,3447,1.656,3448,0.584,3449,0.584,3450,0.584,3451,0.584,3452,0.584,3453,0.584,3454,0.584,3455,0.584,3456,0.584,3457,0.584,3458,1.106,3459,0.521,3460,0.48,3461,0.521,3462,0.584,3463,0.48,3464,0.584,3465,0.48,3466,0.584,3467,1.297,3468,0.584,3469,0.584,3470,0.584,3471,1.106,3472,0.584,3473,0.584,3474,0.584,3475,0.91,3476,0.584,3477,0.584,3478,0.584,3479,0.584,3480,0.584,3481,0.521,3482,0.584,3483,1.106,3484,0.584,3485,0.584,3486,1.106,3487,1.106,3488,1.106,3489,1.576,3490,1.787,3491,1.106,3492,1.297,3493,0.91,3494,0.405,3495,0.584,3496,0.48,3497,0.521,3498,0.584,3499,0.805,3500,0.584,3501,1.408,3502,0.584,3503,0.584,3504,0.584,3505,0.584,3506,0.521,3507,0.584,3508,1.106,3509,1.576,3510,0.988,3511,0.584,3512,0.584,3513,0.584,3514,1.106,3515,0.988,3516,1.106,3517,0.584,3518,0.584,3519,0.584,3520,0.584,3521,0.584,3522,0.584,3523,0.584,3524,0.584,3525,0.584,3526,0.521,3527,0.521,3528,0.584,3529,0.584,3530,1.576,3531,0.584,3532,1.106,3533,0.584,3534,0.988,3535,0.584,3536,1.106,3537,0.584,3538,1.106,3539,0.584,3540,0.91,3541,0.584,3542,0.521,3543,0.584,3544,0.584,3545,0.521,3546,1.576,3547,1.106,3548,0.767,3549,0.988,3550,1.106,3551,0.988,3552,1.106,3553,0.805,3554,0.584,3555,1.106,3556,0.521,3557,0.584,3558,1.106,3559,0.988,3560,0.584,3561,0.521,3562,0.584,3563,0.521,3564,0.584,3565,0.584,3566,1.106,3567,0.584,3568,0.584,3569,0.91,3570,0.584,3571,3.363,3572,0.584,3573,0.521,3574,0.521,3575,0.584,3576,0.584,3577,0.584,3578,0.584,3579,0.584,3580,0.584,3581,0.584,3582,0.584,3583,0.584,3584,0.584,3585,0.584,3586,0.584,3587,0.584,3588,0.584,3589,0.91,3590,0.584,3591,0.584,3592,0.584,3593,0.584,3594,0.584,3595,0.584,3596,0.584,3597,0.584,3598,0.584,3599,0.584,3600,0.48,3601,0.584,3602,0.48,3603,0.584,3604,0.584,3605,0.521,3606,0.584,3607,0.584,3608,0.584,3609,0.521,3610,0.584,3611,0.584,3612,0.584,3613,0.584,3614,0.584,3615,0.584,3616,0.584,3617,0.48,3618,0.584,3619,0.584,3620,0.584,3621,0.584,3622,1.576,3623,0.584,3624,1.106,3625,1.576,3626,1.106,3627,1.106,3628,1.106,3629,1.106,3630,0.584,3631,1.106,3632,0.584,3633,0.584,3634,0.584,3635,0.584,3636,0.584,3637,0.521,3638,0.584,3639,1.106,3640,0.584,3641,0.584,3642,0.449,3643,0.584,3644,0.48,3645,0.584,3646,1.106,3647,0.584,3648,0.449,3649,0.584,3650,0.584,3651,0.584,3652,0.584,3653,0.48,3654,0.584,3655,1.576,3656,1.576,3657,0.584,3658,0.584,3659,0.584,3660,0.584,3661,0.584,3662,0.584,3663,0.584,3664,0.521,3665,0.584,3666,0.584,3667,1.106,3668,0.521,3669,0.521,3670,0.521,3671,0.584,3672,0.584,3673,0.584,3674,0.584,3675,0.584,3676,0.584,3677,0.584,3678,0.584,3679,0.584,3680,1.106,3681,1.106,3682,0.584,3683,0.521,3684,0.584,3685,0.584,3686,0.584,3687,1.106,3688,0.584,3689,0.584,3690,1.106,3691,0.584,3692,1.106,3693,0.584,3694,0.584,3695,1.106,3696,2.001,3697,0.584,3698,0.584,3699,0.584,3700,0.584,3701,0.584,3702,0.852,3703,0.521,3704,1.106,3705,0.584,3706,0.584,3707,0.584,3708,0.584,3709,0.584,3710,0.584,3711,0.584,3712,0.584,3713,0.584,3714,0.584,3715,0.584,3716,0.584,3717,0.584,3718,0.584,3719,1.576,3720,0.584,3721,0.584,3722,0.584,3723,0.584,3724,0.584,3725,0.584,3726,0.584,3727,1.106,3728,1.106,3729,0.584,3730,0.584,3731,0.584,3732,2.001,3733,4.349,3734,1.106,3735,0.91,3736,0.988,3737,1.106,3738,0.988,3739,1.106,3740,0.584,3741,1.106,3742,0.988,3743,1.106,3744,1.106,3745,1.106,3746,0.91,3747,1.106,3748,2.001,3749,1.106,3750,2.001,3751,1.106,3752,1.106,3753,0.988,3754,0.988,3755,1.576,3756,1.106,3757,0.584,3758,0.48,3759,0.852,3760,0.449,3761,1.106,3762,0.584,3763,2.388,3764,1.106,3765,0.584,3766,0.48,3767,0.584,3768,2.001,3769,0.584,3770,0.584,3771,0.584,3772,0.584,3773,0.521,3774,0.584,3775,0.584,3776,0.584,3777,1.106,3778,1.106,3779,1.106,3780,0.584,3781,0.584,3782,0.584,3783,0.584,3784,0.584,3785,1.106,3786,1.106,3787,0.584,3788,0.584,3789,0.584,3790,0.449,3791,0.584,3792,0.584,3793,0.584,3794,1.106,3795,0.584,3796,1.576,3797,1.408,3798,0.584,3799,0.584,3800,0.48,3801,1.106,3802,1.106,3803,0.584,3804,0.449,3805,0.584,3806,0.584,3807,1.576,3808,1.106,3809,1.106,3810,0.584,3811,1.106,3812,0.584,3813,0.584,3814,0.584,3815,2.001,3816,0.584,3817,0.584,3818,0.584,3819,0.584,3820,0.584,3821,0.584,3822,0.584,3823,1.106,3824,0.584,3825,0.584,3826,0.584,3827,0.521,3828,0.584,3829,1.106,3830,0.584,3831,0.584,3832,0.48,3833,0.584,3834,1.106,3835,2.001,3836,0.584,3837,0.521,3838,0.584,3839,1.106,3840,1.106,3841,0.584,3842,0.584,3843,0.521,3844,1.106,3845,0.584,3846,0.584,3847,1.106,3848,1.106,3849,0.584,3850,0.584,3851,0.584,3852,1.106,3853,1.106,3854,0.584,3855,0.584,3856,1.106,3857,0.584,3858,0.584,3859,0.584,3860,0.584,3861,1.106,3862,0.584,3863,0.584,3864,0.48,3865,0.584,3866,2.001,3867,0.48,3868,0.584,3869,0.584,3870,1.106,3871,0.521,3872,0.449,3873,1.106,3874,0.584,3875,2.388,3876,1.106,3877,0.584,3878,0.584,3879,0.48,3880,0.584,3881,0.584,3882,0.584,3883,0.584,3884,0.584,3885,0.584,3886,0.584,3887,0.584,3888,0.584,3889,0.584,3890,0.584,3891,0.584,3892,0.988,3893,0.584,3894,0.584,3895,0.584,3896,0.584,3897,0.48,3898,0.584,3899,0.584,3900,0.521,3901,0.584,3902,0.521,3903,0.584,3904,0.584,3905,0.584,3906,0.48,3907,0.449,3908,0.584,3909,0.584,3910,0.521,3911,1.576,3912,0.584,3913,0.521,3914,0.521,3915,0.584,3916,0.521,3917,0.584,3918,0.584,3919,0.584,3920,0.584,3921,0.584,3922,2.001,3923,0.584,3924,0.584,3925,0.521,3926,0.584,3927,1.408,3928,0.584,3929,0.584,3930,0.584,3931,0.584,3932,0.521,3933,0.584,3934,0.584,3935,1.106,3936,0.584,3937,0.584,3938,0.584,3939,0.449,3940,1.106,3941,0.584,3942,0.584,3943,0.584,3944,0.584,3945,1.576,3946,1.106,3947,1.106,3948,0.584,3949,0.521,3950,0.584,3951,1.106,3952,0.521,3953,1.576,3954,0.584,3955,0.584,3956,0.584,3957,0.584,3958,0.584,3959,1.106,3960,1.106,3961,1.106,3962,1.408,3963,1.106,3964,0.584,3965,1.106,3966,0.584,3967,1.106,3968,0.405,3969,0.521,3970,1.576,3971,0.584,3972,0.584,3973,0.584,3974,0.584,3975,2.388,3976,0.584,3977,0.521,3978,0.584,3979,0.584,3980,0.584,3981,0.521,3982,0.584,3983,0.91,3984,0.584,3985,0.521,3986,0.449,3987,0.584,3988,0.584,3989,0.584,3990,0.584,3991,1.106,3992,0.584,3993,0.584,3994,0.584,3995,0.584,3996,0.521,3997,0.584,3998,0.584,3999,0.48,4000,0.584,4001,0.584,4002,0.48,4003,0.584,4004,0.584,4005,0.584,4006,1.106,4007,0.521]],["title/coverage.html",[3296,4.453]],["body/coverage.html",[0,0.272,1,1.079,5,0.031,6,1.678,8,0.614,12,1.082,24,0.006,26,0.081,32,0.513,34,0.35,66,1.197,69,0.937,80,0.001,81,0.002,82,0.001,83,1.247,84,1.678,85,1.678,86,1.247,96,1.303,109,1.114,116,1.016,117,2.269,121,1.447,122,1.678,123,1.678,131,1.447,146,0.837,147,1.154,149,4.046,150,1.154,154,1.154,158,1.154,161,1.154,164,1.154,165,1.016,178,1.368,179,1.303,191,2.211,202,1.154,203,1.247,210,1.958,212,1.678,260,0.961,261,2.624,289,1.447,290,1.678,334,1.678,343,1.368,364,1.303,365,1.678,366,1.447,367,1.678,409,0.67,410,3.199,419,1.447,474,1.154,475,2.624,476,2.115,477,4.111,480,1.447,482,0.988,484,2.265,490,1.016,491,1.678,495,1.079,496,3.8,497,0.736,498,0.851,512,1.079,526,0.988,542,1.016,570,1.114,571,1.114,572,1.247,573,2.624,586,0.815,588,1.447,617,1.046,618,2.624,621,1.447,631,1.546,632,1.678,641,1.303,642,2.624,643,3.199,663,3.025,677,2.814,678,1.447,680,1.678,685,1.303,687,1.197,689,1.303,690,1.447,697,1.079,698,3.636,702,1.247,707,1.247,709,1.154,725,1.154,735,1.368,736,2.624,751,1.678,778,1.303,779,2.624,782,1.368,788,4.968,791,1.678,802,1.447,803,3.417,804,3.417,815,1.546,822,1.546,828,1.546,829,1.678,830,1.678,834,1.079,857,1.368,861,1.678,865,1.546,874,2.848,875,2.624,882,1.197,918,1.368,919,1.678,920,1.678,936,1.447,937,2.456,938,2.322,976,1.197,977,2.624,978,1.447,983,1.447,984,3.417,990,1.546,993,5.714,994,5.403,997,1.546,1012,1.546,1014,1.546,1020,1.546,1024,1.546,1034,4.4,1063,1.447,1064,1.546,1077,1.546,1088,1.447,1089,1.678,1090,1.678,1126,1.303,1127,2.322,1134,1.303,1136,0.961,1137,3.199,1141,0.892,1142,1.303,1144,1.247,1148,1.678,1149,1.678,1150,1.247,1151,2.322,1152,2.322,1156,1.368,1162,1.447,1163,1.678,1181,1.197,1182,3.564,1184,0.961,1186,1.016,1188,1.303,1192,1.197,1209,1.447,1210,2.456,1222,1.447,1223,2.624,1257,1.447,1258,2.624,1259,2.624,1263,1.368,1267,2.115,1268,2.624,1280,2.624,1283,1.447,1284,2.624,1293,1.447,1295,1.447,1296,1.678,1297,1.678,1300,3.417,1326,1.447,1327,1.678,1328,1.678,1330,1.678,1332,1.303,1354,1.154,1365,2.624,1366,2.624,1397,1.546,1398,1.546,1399,1.303,1458,2.624,1460,1.447,1467,1.678,1495,2.322,1498,1.447,1505,1.303,1512,1.447,1521,2.624,1525,1.447,1535,1.546,1536,2.211,1537,1.546,1538,1.546,1551,1.546,1593,1.447,1594,1.678,1603,1.114,1609,1.303,1610,1.247,1621,1.368,1627,1.303,1628,1.247,1630,1.197,1632,1.303,1633,1.368,1657,2.624,1658,2.624,1672,1.546,1675,1.678,1687,1.447,1689,1.447,1690,1.447,1735,1.247,1737,1.447,1752,1.678,1757,1.303,1780,1.447,1801,3.199,1805,1.368,1811,1.368,1816,1.546,1820,1.368,1821,1.046,1833,2.624,1834,2.624,1841,1.447,1854,1.678,1855,1.546,1935,1.678,1952,1.678,1964,1.678,1965,1.546,1973,1.546,1982,1.447,1983,1.678,2004,1.303,2005,1.678,2021,1.303,2022,1.678,2034,1.678,2035,1.678,2036,3.199,2042,1.678,2043,3.199,2047,4.89,2089,1.447,2090,1.678,2116,1.447,2117,1.678,2122,4.027,2131,2.211,2141,1.546,2142,1.447,2143,1.546,2159,1.546,2160,1.678,2199,1.546,2200,1.678,2215,1.678,2220,1.678,2227,1.303,2228,1.546,2249,1.447,2250,1.678,2253,1.303,2255,1.368,2256,1.447,2266,1.678,2290,1.303,2295,1.447,2296,2.624,2308,1.447,2329,1.678,2348,1.447,2371,1.678,2383,1.678,2410,1.546,2473,1.678,2475,1.678,2476,1.678,2488,1.678,2541,1.678,2550,1.447,2570,1.678,2592,1.447,2593,1.678,2597,1.247,2603,1.678,2611,1.678,2613,1.678,2618,1.678,2624,1.247,2627,1.678,2632,1.678,2647,1.678,2651,1.678,2652,1.678,2683,1.678,2822,1.447,2856,1.678,2866,1.546,2935,3.71,2949,1.368,2963,2.624,3029,1.546,3113,2.848,3130,1.678,3150,1.678,3265,1.303,3296,1.247,3864,7.783,4008,1.546,4009,7.919,4010,9.545,4011,6.962,4012,6.962,4013,9.161,4014,1.678,4015,2.624,4016,5.955,4017,1.879,4018,5.955,4019,5.955,4020,5.48,4021,8.052,4022,1.678,4023,1.678,4024,3.71,4025,3.71,4026,1.678,4027,1.678,4028,6.68,4029,1.879,4030,6.349,4031,4.153,4032,5.955,4033,1.879,4034,7.419,4035,1.678,4036,3.417,4037,1.546,4038,1.879,4039,1.879,4040,1.678,4041,1.879,4042,1.879,4043,3.188,4044,3.188,4045,1.879,4046,1.879,4047,4.153,4048,1.879,4049,4.153,4050,1.879,4051,1.879,4052,1.879,4053,3.188,4054,1.879,4055,1.879,4056,1.879,4057,5.955,4058,1.678,4059,1.678,4060,2.848,4061,2.848,4062,1.678,4063,1.678,4064,1.678,4065,1.879,4066,1.879,4067,1.879,4068,1.678,4069,1.678,4070,1.678,4071,1.678,4072,1.678,4073,1.678,4074,1.678,4075,1.678,4076,3.417,4077,1.879]],["title/dependencies.html",[173,2.747,3600,3.392]],["body/dependencies.html",[0,0.16,4,0.081,5,0.095,16,0.84,24,0.006,26,0.173,55,1.594,56,1.164,69,1.993,80,0.002,81,0.003,82,0.002,111,0.866,115,1.944,173,1.853,187,3.079,189,3.571,208,3.581,213,1.894,230,2.322,264,1.734,340,4.342,374,1.944,375,2.547,377,1.993,390,2.652,392,2.652,443,2.772,511,4.017,529,2.547,558,2.75,670,1.897,674,4.184,814,2.547,844,3.289,929,3.045,949,4.762,950,3.289,1008,3.571,1269,2.547,1308,2.652,1339,6.086,1340,2.652,1380,3.571,1503,2.911,1504,2.652,1507,2.911,1546,3.289,1549,2.652,1575,2.772,1617,2.547,1624,3.079,1871,3.571,2098,3.571,2126,2.652,2127,3.692,2128,3.289,2149,6.059,2712,3.571,2728,3.571,3047,4.767,3074,3.571,3160,2.911,3216,3.571,3217,3.571,3264,4.767,3268,3.571,3377,3.571,3397,3.571,3398,3.571,3438,3.571,3444,3.571,3481,3.571,3494,2.772,3499,4.219,3510,3.571,3703,3.571,3949,3.571,3985,3.571,4078,5.794,4079,8.532,4080,3.998,4081,3.998,4082,3.998,4083,3.998,4084,3.998,4085,3.998,4086,5.794,4087,5.794,4088,3.998,4089,5.794,4090,5.794,4091,3.998,4092,3.998,4093,3.998,4094,3.998,4095,3.998,4096,3.998,4097,3.998,4098,3.998,4099,3.998,4100,3.998,4101,3.289,4102,3.998,4103,3.998,4104,6.814,4105,3.998,4106,3.998,4107,6.814,4108,3.998,4109,3.998,4110,3.998,4111,3.998,4112,5.794,4113,3.998,4114,5.794,4115,3.998,4116,3.998,4117,7.932,4118,3.998,4119,3.998,4120,3.998,4121,3.998,4122,3.571,4123,3.998,4124,3.998,4125,3.998,4126,3.998,4127,3.998,4128,5.794,4129,3.998,4130,3.998,4131,3.998,4132,5.794,4133,3.998,4134,5.794,4135,5.794,4136,3.998,4137,3.998,4138,3.998,4139,3.079,4140,3.998,4141,3.998,4142,3.998,4143,3.998,4144,3.998,4145,5.794,4146,3.998,4147,3.998,4148,3.998,4149,3.998,4150,3.998,4151,3.998,4152,3.998,4153,3.998,4154,3.998,4155,3.998,4156,3.998,4157,3.998,4158,3.998,4159,3.998,4160,3.998,4161,3.998,4162,5.794,4163,5.175,4164,3.998,4165,3.998,4166,3.998,4167,3.998,4168,3.571,4169,3.998,4170,5.794,4171,3.998,4172,3.998,4173,3.998,4174,3.998,4175,3.998,4176,3.998,4177,3.998,4178,3.998,4179,3.998,4180,3.998,4181,3.998,4182,3.998,4183,5.794,4184,3.998,4185,3.998,4186,3.998,4187,3.998,4188,3.998,4189,5.794,4190,3.571,4191,3.289,4192,3.998,4193,3.998,4194,3.998,4195,3.998,4196,3.998,4197,3.998,4198,3.998,4199,3.998,4200,3.571,4201,3.998,4202,3.998,4203,3.998,4204,3.998,4205,3.998,4206,3.998,4207,3.998,4208,3.998,4209,3.998,4210,3.289,4211,3.998,4212,3.998,4213,3.998,4214,3.998,4215,3.998,4216,3.998,4217,3.998,4218,3.998,4219,3.998,4220,3.998,4221,3.998,4222,3.998]],["title/miscellaneous/enumerations.html",[4223,2.627,4224,5.291]],["body/miscellaneous/enumerations.html",[9,0.324,24,0.006,33,3.151,80,0.004,81,0.005,82,0.004,222,4.115,409,2.423,413,4.327,414,4.708,415,4.708,454,3.474,503,2.66,543,3.67,1127,4.945,1129,4.708,1130,4.708,1151,4.945,1152,6.011,1159,6.011,1160,6.791,1161,6.791,1228,3.898,1236,4.505,1398,5.587,1423,7.372,1446,6.065,1617,4.327,2228,5.587,2233,6.791,2240,5.23,2410,5.587,2424,7.372,2429,6.065,2430,6.065,2431,6.065,2432,5.587,4223,4.327,4224,6.065,4225,6.79,4226,6.065,4227,6.065,4228,6.79,4229,6.79]],["title/miscellaneous/functions.html",[4223,2.627,4230,4.315]],["body/miscellaneous/functions.html",[9,0.272,23,1.463,24,0.006,25,0.847,26,0.247,27,0.97,33,1.804,39,0.833,80,0.003,81,0.004,82,0.003,107,1.763,109,4.389,117,3.808,345,3,545,2.587,599,3.354,609,3.958,613,5.39,614,5.39,616,4.157,628,3.768,788,2.776,912,3.086,993,4.397,994,6.328,1035,4.697,1038,4.697,1043,4.697,1063,5.701,1102,3.958,1216,4.157,1279,3.386,1289,4.871,1672,6.758,1821,3.177,1919,5.39,2047,4.397,2057,4.697,2058,5.099,2059,5.099,2061,5.099,2062,5.099,2065,5.099,2067,5.099,2071,5.099,3910,5.099,4015,6.758,4022,6.61,4023,6.61,4035,5.099,4063,5.099,4064,6.61,4070,6.61,4071,6.61,4072,6.61,4073,6.61,4074,6.61,4075,6.61,4223,3.638,4230,4.157,4231,5.708,4232,7.335,4233,8.239,4234,5.708,4235,5.708,4236,4.697,4237,5.708,4238,5.708]],["title/index.html",[9,0.197,2659,3.176,2660,2.859]],["body/index.html",[16,0.906,24,0.005,25,0.538,32,1.177,34,0.802,64,1.538,65,3.214,74,3.755,75,4.495,80,0.003,81,0.004,82,0.003,88,3.15,89,2.557,90,2.475,91,1.656,99,2.246,115,2.974,117,2.835,124,1.433,127,2.747,173,1.999,208,4.292,239,2.747,265,3.32,270,5.132,271,3.306,274,4.711,275,2.647,276,2.475,280,2.989,296,2.33,374,3.971,396,2.557,398,2.86,449,2.989,497,2.396,523,2.989,528,2.475,564,3.511,646,2.557,651,2.647,681,4.529,807,2.989,808,2.33,821,3.129,840,2.33,872,4.928,873,3.32,927,2.557,929,3.214,930,3.897,939,2.205,949,4.929,951,3.32,961,3.897,975,6.181,1054,3.897,1056,4.08,1060,3.32,1092,5.209,1108,3.139,1153,2.557,1197,2.205,1294,2.86,1305,3.547,1374,3.511,1564,3.547,1617,2.747,1660,3.139,1795,4.454,1796,2.557,1872,2.86,1944,3.85,2125,3.139,2126,2.86,2127,3.897,2155,2.86,2364,3.32,2491,2.747,2663,2.989,2664,3.547,2666,4.454,2692,2.989,2711,4.711,2725,3.85,2734,2.989,2743,7.793,2757,3.547,2768,2.989,2786,3.32,2795,5.462,2797,4.711,2800,6.364,2803,2.989,2843,3.32,2914,3.547,2916,2.989,2955,4.715,3081,4.529,3089,3.85,3142,6.348,3185,4.454,3265,2.989,3296,2.86,3310,5.032,3331,4.454,3339,3.139,3359,3.32,3360,5.363,3432,2.989,3447,2.989,3463,5.848,3465,5.032,3497,3.85,3648,3.32,3670,3.85,3758,3.547,3759,4.711,3760,3.32,3800,3.547,3906,3.547,3939,3.32,3981,3.85,3983,3.547,4139,3.32,4239,3.32,4240,6.98,4241,4.454,4242,2.989,4243,3.32,4244,3.547,4245,3.32,4246,5.032,4247,4.057,4248,3.85,4249,4.311,4250,5.462,4251,5.462,4252,4.311,4253,4.311,4254,4.311,4255,3.32,4256,3.85,4257,6.116,4258,3.85,4259,3.85,4260,3.139,4261,7.108,4262,4.928,4263,3.85,4264,4.311,4265,3.85,4266,5.032,4267,4.311,4268,3.547,4269,3.32,4270,4.311,4271,4.311,4272,3.547,4273,4.311,4274,4.311,4275,3.85,4276,3.32,4277,4.311,4278,3.85,4279,6.116,4280,6.116,4281,8.167,4282,7.735,4283,4.311,4284,4.311,4285,6.116,4286,3.85,4287,4.311,4288,3.547,4289,6.116,4290,4.311,4291,3.85,4292,6.116,4293,6.116,4294,3.139,4295,3.85,4296,4.311,4297,4.311,4298,3.32,4299,4.311,4300,3.32,4301,3.85,4302,4.311,4303,3.547,4304,4.711,4305,4.311,4306,4.311,4307,3.85,4308,4.311,4309,2.86,4310,3.547]],["title/license.html",[2659,3.176,2660,2.859,4311,3.683]],["body/license.html",[0,0.026,4,0.177,5,0.028,12,1.621,21,0.095,24,0.001,28,0.288,30,0.283,34,0.853,51,0.039,52,0.293,64,2.513,65,1.539,71,0.674,75,0.439,79,0.713,80,0.001,81,0.001,82,0.001,88,3.663,89,0.549,92,0.172,99,0.538,127,1.084,143,0.159,146,0.373,148,0.645,159,0.59,165,0.5,166,2.457,182,0.419,224,2.148,226,1.737,228,1.583,234,1.084,238,2.108,239,3.729,266,3.088,281,6.051,296,0.919,316,0.473,337,0.549,339,1.009,355,0.642,377,0.848,378,1.498,392,0.614,397,0.713,438,0.614,441,1.818,446,0.761,499,0.461,503,0.362,518,0.59,521,2.575,522,0.614,548,2.181,560,0.429,561,0.429,586,0.401,600,0.336,646,1.4,651,1.798,653,0.713,656,2.03,665,0.568,713,0.568,720,2.101,762,1.177,785,0.674,809,5.187,810,2.63,821,2.771,825,2.027,840,0.5,869,1.737,870,2.939,872,3.177,926,1.566,930,2.457,939,0.87,949,1.084,968,0.614,969,3.325,981,1.798,1023,1.128,1070,1.31,1096,0.59,1099,0.642,1109,2.133,1111,1.239,1114,1.798,1117,1.009,1140,2.57,1153,1.009,1158,1.179,1214,2.674,1215,2.816,1264,0.59,1279,2.03,1287,3.913,1308,1.566,1357,0.761,1360,2.887,1364,2.214,1374,1.355,1376,0.713,1377,4.11,1471,0.642,1476,0.614,1479,0.674,1500,0.486,1559,0.59,1560,3.088,1562,0.761,1563,2.674,1565,1.818,1575,2.03,1602,1.566,1619,1.179,1624,0.713,1649,0.761,1660,4.11,1746,0.614,1795,1.239,1796,2.287,1821,3.92,1872,0.614,1880,0.674,1919,0.674,1936,1.637,2095,1.239,2100,0.826,2115,1.63,2155,0.614,2370,1.818,2436,0.713,2484,1.519,2490,0.674,2491,3.291,2495,0.826,2515,0.614,2527,2.133,2544,2.03,2574,4.366,2641,0.826,2665,0.826,2666,1.719,2670,1.637,2671,2.133,2672,1.519,2688,0.761,2692,2.373,2695,0.674,2699,3.057,2711,0.713,2741,0.826,2746,0.826,2768,2.03,2780,2.108,2797,6.558,2799,6.678,2802,5.281,2803,1.637,2822,0.713,2839,1.4,2849,1.4,2854,0.674,2862,0.761,2866,0.761,2874,1.4,2876,1.519,2887,2.616,2891,1.4,2899,0.826,2900,0.713,2912,2.108,2914,0.761,2931,2.41,2943,0.761,2949,1.239,2955,2.813,2959,1.519,2963,1.4,2966,0.674,2986,0.761,2999,1.519,3011,0.826,3033,0.826,3047,1.4,3056,0.642,3077,0.826,3081,2.457,3090,0.826,3093,0.826,3107,0.826,3123,2.133,3133,2.636,3152,1.519,3154,0.761,3165,1.4,3180,3.266,3183,0.674,3191,0.713,3193,0.826,3211,0.713,3212,2.636,3237,0.826,3270,0.826,3288,0.713,3296,1.128,3312,1.519,3317,1.4,3323,0.761,3339,0.674,3345,3.266,3357,0.761,3359,6.072,3360,3.581,3361,1.818,3364,6.642,3381,1.4,3417,0.826,3431,3.529,3447,3.177,3460,0.761,3475,0.761,3490,0.826,3492,1.4,3493,1.4,3496,3.77,3526,0.826,3548,2.03,3549,0.826,3551,0.826,3589,0.761,3609,0.826,3617,0.761,3642,1.31,3735,1.4,3759,2.256,3760,1.818,3766,1.4,3800,1.4,3804,1.818,3837,1.519,3872,1.818,3879,3.173,3897,4.456,3900,0.826,3907,0.713,3913,5.836,3914,1.519,3916,1.519,3925,0.826,3962,0.826,3969,1.519,3986,4.171,3996,2.108,4040,0.826,4139,0.713,4240,0.761,4244,0.761,4260,4.957,4262,0.642,4263,2.108,4268,3.488,4291,0.826,4294,1.719,4304,1.818,4309,0.614,4311,8.544,4312,6.534,4313,6.383,4314,0.925,4315,2.361,4316,7.749,4317,5.252,4318,5.658,4319,3.422,4320,0.925,4321,0.925,4322,1.701,4323,3.422,4324,2.361,4325,2.361,4326,5.644,4327,0.925,4328,0.925,4329,1.519,4330,3.422,4331,3.488,4332,1.701,4333,1.701,4334,5.398,4335,4.582,4336,0.925,4337,0.925,4338,3.856,4339,1.519,4340,0.826,4341,0.826,4342,4.837,4343,8.476,4344,2.361,4345,2.108,4346,0.925,4347,0.925,4348,2.928,4349,4.888,4350,0.925,4351,4.888,4352,1.31,4353,0.925,4354,3.422,4355,0.713,4356,0.761,4357,5.556,4358,0.826,4359,0.826,4360,5.165,4361,5.415,4362,3.422,4363,5.644,4364,0.925,4365,1.701,4366,0.925,4367,0.925,4368,2.108,4369,0.925,4370,0.925,4371,0.925,4372,0.925,4373,0.925,4374,0.925,4375,2.928,4376,0.925,4377,2.361,4378,0.925,4379,0.925,4380,5.6,4381,1.818,4382,0.925,4383,0.925,4384,1.942,4385,2.361,4386,0.925,4387,2.108,4388,0.713,4389,1.701,4390,1.701,4391,2.361,4392,0.925,4393,4.815,4394,3.422,4395,3.422,4396,3.856,4397,2.361,4398,1.701,4399,0.925,4400,0.925,4401,0.925,4402,2.361,4403,0.925,4404,0.925,4405,1.701,4406,0.925,4407,1.701,4408,0.925,4409,0.925,4410,2.928,4411,0.826,4412,1.701,4413,8.437,4414,2.361,4415,4.888,4416,2.616,4417,1.31,4418,0.925,4419,1.701,4420,2.361,4421,4.888,4422,5.165,4423,2.928,4424,1.701,4425,2.928,4426,2.616,4427,0.925,4428,2.361,4429,7.521,4430,1.519,4431,0.925,4432,4.582,4433,0.925,4434,2.108,4435,2.674,4436,0.925,4437,6.22,4438,2.108,4439,1.701,4440,5.415,4441,3.856,4442,0.925,4443,1.701,4444,4.24,4445,0.925,4446,5.852,4447,1.701,4448,0.925,4449,0.761,4450,0.925,4451,2.361,4452,0.925,4453,0.925,4454,0.925,4455,0.761,4456,2.361,4457,2.616,4458,0.925,4459,0.925,4460,0.925,4461,1.519,4462,5.165,4463,0.826,4464,0.761,4465,2.108,4466,2.361,4467,2.361,4468,0.925,4469,3.057,4470,0.826,4471,1.179,4472,2.108,4473,0.925,4474,0.925,4475,0.925,4476,1.519,4477,0.925,4478,6.789,4479,1.519,4480,2.108,4481,0.674,4482,1.701,4483,2.928,4484,0.925,4485,1.701,4486,2.816,4487,0.925,4488,0.925,4489,0.925,4490,1.701,4491,0.925,4492,1.4,4493,0.925,4494,2.816,4495,0.925,4496,0.761,4497,4.24,4498,2.41,4499,0.925,4500,3.057,4501,0.925,4502,1.701,4503,0.925,4504,0.925,4505,0.925,4506,0.925,4507,0.925,4508,2.361,4509,0.925,4510,1.701,4511,1.701,4512,1.701,4513,0.925,4514,5.852,4515,1.519,4516,0.925,4517,0.925,4518,0.826,4519,0.925,4520,0.674,4521,0.925,4522,0.925,4523,2.361,4524,0.826,4525,0.925,4526,5.556,4527,0.713,4528,0.925,4529,0.925,4530,3.422,4531,3.444,4532,0.925,4533,0.925,4534,2.361,4535,0.925,4536,0.925,4537,2.928,4538,0.925,4539,0.925,4540,0.925,4541,0.925,4542,0.925,4543,0.925,4544,1.701,4545,0.925,4546,0.925,4547,0.925,4548,1.701,4549,0.925,4550,0.925,4551,0.925,4552,0.925,4553,0.925,4554,1.701,4555,1.239,4556,4.366,4557,0.925,4558,3.856,4559,0.925,4560,0.925,4561,2.361,4562,2.928,4563,2.928,4564,2.928,4565,0.925,4566,3.057,4567,3.057,4568,0.925,4569,2.361,4570,0.925,4571,1.701,4572,0.925,4573,1.519,4574,3.422,4575,1.701,4576,2.928,4577,2.928,4578,0.925,4579,2.361,4580,3.057,4581,0.925,4582,0.925,4583,3.488,4584,1.701,4585,0.674,4586,0.925,4587,0.826,4588,2.361,4589,0.925,4590,0.925,4591,2.108,4592,0.925,4593,0.925,4594,0.925,4595,0.925,4596,0.925,4597,2.361,4598,0.925,4599,0.826,4600,2.108,4601,1.701,4602,3.856,4603,6.29,4604,2.361,4605,1.701,4606,1.701,4607,1.701,4608,2.928,4609,0.826,4610,0.925,4611,0.925,4612,0.925,4613,3.444,4614,1.701,4615,0.925,4616,0.925,4617,0.925,4618,0.925,4619,1.701,4620,0.925,4621,1.701,4622,0.925,4623,0.925,4624,3.337,4625,0.925,4626,4.837,4627,0.925,4628,0.925,4629,0.925,4630,0.925,4631,1.701,4632,0.925,4633,2.493,4634,2.928,4635,1.701,4636,0.826,4637,0.925,4638,0.925,4639,0.925,4640,0.925,4641,1.701,4642,0.925,4643,0.925,4644,0.761,4645,2.616,4646,0.925,4647,1.701,4648,0.925,4649,0.925,4650,2.108,4651,0.925,4652,0.925,4653,0.925,4654,0.925,4655,2.928,4656,0.925,4657,0.925,4658,0.826,4659,0.826,4660,0.826,4661,0.925,4662,0.925,4663,0.925,4664,3.422,4665,0.925,4666,0.925,4667,2.928,4668,0.925,4669,0.925,4670,0.925,4671,0.925,4672,0.925,4673,0.925,4674,2.928,4675,0.925,4676,0.925,4677,2.361,4678,0.925,4679,0.761,4680,2.361,4681,0.925,4682,0.925,4683,0.925,4684,0.925,4685,0.925,4686,0.925,4687,0.925,4688,0.826,4689,1.519,4690,0.925,4691,0.674,4692,1.701,4693,0.826,4694,0.925,4695,2.928,4696,0.925,4697,0.925,4698,1.701,4699,2.361,4700,2.361,4701,0.761,4702,1.701,4703,0.925,4704,4.24,4705,0.925,4706,0.925,4707,1.701,4708,0.925,4709,0.925,4710,0.925,4711,0.925,4712,2.928,4713,2.361,4714,0.925,4715,3.422,4716,0.925,4717,0.925,4718,0.925,4719,0.925,4720,0.826,4721,0.925,4722,1.701,4723,1.701,4724,1.519,4725,2.361,4726,0.826,4727,0.925,4728,2.361,4729,0.925,4730,1.4,4731,0.925,4732,1.701,4733,0.925,4734,0.925,4735,1.701,4736,7.251,4737,2.361,4738,0.925,4739,3.422,4740,5.165,4741,2.361,4742,0.925,4743,0.925,4744,0.925,4745,2.928,4746,0.925,4747,2.361,4748,0.925,4749,0.925,4750,0.925,4751,0.925,4752,0.925,4753,0.925,4754,0.925,4755,2.928,4756,1.701,4757,0.925,4758,0.925,4759,2.361,4760,0.925,4761,1.701,4762,2.361,4763,1.701,4764,0.925,4765,0.925,4766,0.925,4767,1.701,4768,2.361,4769,0.826,4770,0.925,4771,0.925,4772,1.701,4773,0.925,4774,0.826,4775,0.925,4776,0.925,4777,0.925,4778,2.361,4779,1.701,4780,0.826,4781,0.925,4782,0.925,4783,2.928,4784,0.925,4785,2.361,4786,0.925,4787,0.925,4788,1.701,4789,0.925,4790,0.925,4791,0.925,4792,2.361,4793,1.701,4794,1.701,4795,0.925,4796,1.701,4797,4.24,4798,1.519,4799,2.361,4800,2.928,4801,0.826,4802,0.925,4803,1.701,4804,0.925,4805,2.361,4806,0.925,4807,0.925,4808,0.925,4809,0.925,4810,0.925,4811,0.925,4812,2.361,4813,1.701,4814,0.925,4815,0.826,4816,0.925,4817,0.925,4818,1.701,4819,1.701,4820,0.925,4821,1.519,4822,0.925,4823,0.925,4824,0.761,4825,0.925,4826,2.361,4827,0.925,4828,0.925,4829,0.925,4830,0.925,4831,1.701,4832,2.361,4833,0.925,4834,0.925,4835,0.925,4836,0.925,4837,1.701,4838,0.925,4839,0.925,4840,0.925,4841,0.925,4842,0.925,4843,0.925,4844,0.925,4845,0.925,4846,0.713,4847,0.925,4848,0.925,4849,0.925,4850,2.928,4851,0.925,4852,0.925,4853,1.701,4854,0.925,4855,0.925,4856,0.925,4857,0.925,4858,0.925,4859,0.925,4860,0.925,4861,0.761,4862,0.925,4863,0.925,4864,0.925,4865,0.826,4866,1.701,4867,0.925,4868,0.925,4869,0.925,4870,0.925,4871,0.826,4872,1.701,4873,0.925,4874,0.925,4875,0.826,4876,0.826,4877,0.642,4878,0.925,4879,1.701,4880,1.701,4881,0.925,4882,0.925,4883,0.925,4884,0.925,4885,2.361,4886,1.4,4887,0.925,4888,1.701,4889,1.701,4890,0.925,4891,0.761,4892,0.826,4893,0.925,4894,0.826,4895,0.925,4896,0.925,4897,1.701,4898,0.925,4899,2.361,4900,0.925,4901,0.925,4902,0.925,4903,0.925,4904,0.925,4905,0.925,4906,0.925,4907,0.925,4908,0.925,4909,0.925,4910,0.826,4911,0.925,4912,0.761,4913,0.925,4914,0.925,4915,0.925,4916,0.925,4917,0.925,4918,0.925,4919,0.925,4920,0.925,4921,0.925,4922,0.925,4923,0.925,4924,0.925,4925,0.713,4926,0.826,4927,1.701,4928,1.519,4929,0.925,4930,0.925,4931,0.925,4932,0.925,4933,0.925,4934,0.925,4935,0.925,4936,0.826,4937,0.713,4938,0.925,4939,0.925,4940,0.761,4941,0.925,4942,0.925,4943,0.925,4944,0.925,4945,0.925]],["title/modules.html",[172,2.792]],["body/modules.html",[24,0.005,80,0.004,81,0.005,82,0.004,171,4.849,172,2.769,177,4.617,196,4.617,201,4.617,382,4.849,385,4.849,386,4.849,387,4.243,388,4.849,969,5.788,1308,6.63,1391,4.849,1494,4.617,1534,5.129,1730,4.849,2105,4.849,2109,4.617,2121,4.849,4946,9.993,4947,9.993,4948,9.068,4949,9.427]],["title/overview.html",[4950,5.171]],["body/overview.html",[2,0.894,24,0.006,80,0.003,81,0.004,82,0.003,148,1.253,171,6.699,172,1.908,173,2.962,174,4.097,175,4.097,176,4.097,177,6.715,178,5.353,179,5.097,180,3.556,181,2.411,182,2.079,196,6.459,197,4.097,198,4.097,199,4.097,200,4.097,201,6.001,202,5.452,203,4.877,211,1.729,364,5.097,382,6.856,383,4.097,384,4.097,385,5.353,386,5.353,387,5.658,388,5.353,572,4.877,679,2.287,685,5.097,834,5.097,882,5.658,922,4.097,923,4.097,924,4.097,1332,6.157,1391,6.087,1392,4.097,1393,4.097,1489,4.097,1490,4.097,1491,4.097,1494,5.097,1630,5.658,1730,6.916,1731,4.097,1733,4.097,1734,4.097,1735,4.877,2004,5.097,2021,5.097,2105,6.303,2106,4.097,2107,4.097,2108,4.097,2109,6.778,2119,4.097,2120,4.097,2121,6.856,2227,5.097,2253,5.097,2288,4.097,2289,4.097,2290,5.097,2370,3.533,2597,4.877,2621,4.097,2622,4.097,2623,4.097,2624,4.877,2739,4.097,2822,3.533,2949,3.34,4950,3.533,4951,4.587]],["title/todo.html",[63,1.647,2659,3.176,2660,2.859]],["body/todo.html",[0,0.114,5,0.067,10,0.48,12,1.541,16,1.244,18,0.962,24,0.005,25,0.521,26,0.256,32,2.068,39,0.463,52,1.518,57,0.766,63,1.644,64,2.702,65,4.216,69,2.052,80,0.003,81,0.003,82,0.002,88,1.824,115,3.368,116,2.224,117,2.743,119,2.997,128,2.224,148,1.124,170,2.373,182,2.681,185,2.001,205,2.29,208,3.109,213,2.264,228,2.224,230,1.279,267,5.699,270,3.925,271,4.76,276,3.976,296,4.981,303,3.293,336,4.309,378,2.105,390,3.925,396,3.509,400,2.44,401,2.997,404,3.17,447,5.044,470,4.253,497,1.612,500,2.224,559,2.877,564,2.362,629,2.997,644,2.808,646,3.509,677,1.824,681,2.622,795,2.527,808,4.652,821,2.105,834,2.362,840,3.198,855,2.527,856,2.622,871,3.632,927,4.108,929,3.109,939,3.544,962,4.557,975,4.803,981,4.926,991,2.224,992,2.997,994,2.997,1019,2.853,1022,2.73,1053,5.323,1054,3.77,1092,2.527,1093,6.601,1096,2.622,1099,2.853,1114,2.527,1116,2.997,1117,2.44,1165,3.925,1287,2.853,1291,2.853,1308,2.73,1338,3.17,1340,2.73,1357,4.868,1359,3.675,1360,2.105,1364,2.362,1471,2.853,1485,2.622,1500,3.64,1543,6.187,1557,2.853,1559,2.622,1560,2.997,1571,2.997,1575,2.853,1619,2.853,1745,2.73,1746,2.73,1796,2.44,1821,2.29,1829,3.17,2028,2.44,2125,2.997,2127,3.77,2149,4.803,2271,5.024,2293,2.622,2515,4.595,2520,2.997,2666,4.309,2671,2.997,2691,3.675,2717,3.386,2727,4.868,2772,2.853,2778,6.601,2786,3.17,2811,3.675,2840,2.853,2863,3.386,2891,3.386,2902,3.386,2906,3.675,2907,3.675,2909,2.73,2931,3.386,2954,2.997,2965,3.386,2970,3.675,3191,3.17,3265,4.102,3340,3.675,3344,3.675,3416,4.557,3431,3.17,3432,2.853,3589,3.386,3600,3.386,3602,3.386,3648,3.17,3907,3.17,3939,3.17,3968,4.102,3999,3.386,4002,3.386,4163,3.675,4190,3.675,4191,3.386,4242,2.853,4288,3.386,4298,3.17,4309,2.73,4310,3.386,4352,3.17,4355,3.17,4481,2.997,4518,3.675,4644,3.386,4925,4.557,4952,3.386,4953,4.115,4954,3.675,4955,3.675,4956,3.17,4957,3.386,4958,4.115,4959,4.115,4960,3.675,4961,4.115,4962,4.115,4963,4.115,4964,4.115,4965,4.115,4966,4.115,4967,4.115,4968,4.115,4969,4.115,4970,3.386,4971,4.115,4972,4.115,4973,4.115,4974,4.115,4975,4.115,4976,4.115,4977,4.115,4978,4.115,4979,4.115,4980,4.115,4981,4.115,4982,4.115,4983,4.115,4984,4.115,4985,3.675,4986,4.115,4987,4.115,4988,4.115,4989,4.115,4990,4.115,4991,3.675,4992,4.115,4993,4.115,4994,3.675,4995,3.675,4996,3.675,4997,4.115,4998,3.675,4999,4.115,5000,4.115,5001,4.115,5002,3.386,5003,4.115,5004,6.187,5005,4.115,5006,4.115,5007,4.115,5008,4.115,5009,4.115,5010,4.115,5011,3.386,5012,4.115,5013,5.916,5014,3.675,5015,4.115]],["title/miscellaneous/typealiases.html",[4223,2.627,5016,5.924]],["body/miscellaneous/typealiases.html",[9,0.265,12,1.45,16,1.17,20,4.469,24,0.006,26,0.415,39,0.626,52,0.959,71,4.052,80,0.003,81,0.004,82,0.003,99,1.758,101,5.382,146,0.49,170,2.153,220,2.119,306,5.624,436,4.569,470,3.416,490,3.008,497,2.851,521,3.629,526,2.924,540,4.317,542,3.008,585,4.981,609,5.047,698,3.691,704,5.047,937,4.286,938,5.908,943,5.989,953,5.989,1127,4.052,1131,4.052,1132,5.301,1141,3.455,1144,3.691,1151,4.052,1152,5.301,1155,5.989,1210,4.286,1211,5.606,1213,4.286,1360,2.847,1495,4.052,1500,3.825,1510,5.606,1511,5.989,1536,3.858,1539,6.501,1555,4.286,1575,5.047,1801,4.286,1814,6.501,1855,4.578,1888,4.578,1889,4.578,1953,4.052,1973,4.578,2047,4.286,2056,6.501,2057,5.989,2268,6.501,3066,4.578,3067,4.578,4036,4.578,4037,5.989,4223,3.546,4226,6.501,4227,4.97,4233,7.245,4636,4.97,5017,5.564,5018,7.279,5019,7.279,5020,5.564,5021,5.564,5022,7.279,5023,7.279,5024,5.564,5025,5.564,5026,7.279,5027,7.279,5028,5.564,5029,4.97,5030,5.564,5031,4.97,5032,4.97,5033,7.279,5034,5.564,5035,7.279,5036,5.564,5037,4.97,5038,5.564,5039,5.564,5040,5.564,5041,5.564,5042,5.564,5043,3.858,5044,5.564,5045,5.564,5046,5.564,5047,5.564,5048,5.564]],["title/miscellaneous/variables.html",[2729,4.315,4223,2.627]],["body/miscellaneous/variables.html",[1,1.137,9,0.094,10,0.231,12,2.016,14,0.791,24,0.006,25,0.446,26,0.368,29,0.532,30,0.605,32,2.616,33,3.008,34,1.441,39,0.486,41,0.659,49,0.791,61,0.098,63,0.791,64,0.707,69,1.662,73,1.442,75,0.94,80,0.002,81,0.002,82,0.001,83,2.211,86,2.211,88,1.477,91,1.659,92,0.369,99,0.626,107,0.363,109,2.56,115,1.621,116,1.07,117,4.392,118,1.442,124,0.659,125,2.211,126,2.906,128,1.07,136,1.869,143,1.463,170,0.586,184,1.511,191,2.993,208,2.268,213,0.647,224,1.795,226,1.175,229,2.001,230,0.615,240,1.63,245,0.694,255,1.913,271,1.802,275,1.216,316,1.705,337,1.977,339,1.175,341,3.551,343,1.442,374,1.621,375,2.124,378,1.013,400,1.175,401,1.442,409,0.707,410,1.525,411,1.137,412,1.795,436,1.013,443,1.373,448,1.442,452,1.63,453,1.63,474,1.216,482,1.041,484,0.707,490,1.07,495,1.137,497,0.776,503,0.776,512,1.137,526,1.041,528,1.137,529,1.262,542,1.07,545,1.956,558,0.94,559,0.963,560,0.918,561,0.918,562,0.94,570,1.175,571,1.175,599,1.511,617,1.102,642,1.63,643,2.568,646,1.977,663,4.458,668,1.102,675,3.143,677,0.878,679,0.987,687,2.124,720,1.216,723,1.262,788,0.963,795,1.216,802,1.525,803,1.63,804,3.551,807,1.373,808,1.802,811,1.525,815,2.743,816,2.743,817,1.769,818,1.769,821,1.705,822,2.743,823,2.311,824,1.63,825,2.268,826,1.442,827,1.525,834,3.737,837,1.525,840,1.802,855,3.108,871,1.216,912,1.802,918,2.428,927,1.175,928,1.102,929,1.752,939,1.013,960,1.442,962,1.525,967,1.525,968,1.314,975,1.373,976,1.262,981,1.216,983,1.525,984,1.63,988,1.63,990,3.551,991,1.07,992,1.442,993,1.525,994,4.978,996,1.525,997,2.743,1012,2.743,1013,1.769,1014,2.743,1015,4.458,1016,1.63,1017,1.314,1018,1.769,1019,2.993,1020,2.743,1021,1.442,1022,2.864,1023,1.314,1024,2.743,1025,1.769,1026,2.977,1027,1.769,1028,1.63,1029,1.769,1030,1.769,1031,1.769,1032,1.769,1033,1.769,1035,1.63,1038,1.63,1039,4.351,1043,1.63,1049,1.373,1050,2.977,1051,1.442,1052,1.769,1053,1.314,1054,2.751,1055,2.977,1056,2.478,1057,1.63,1058,2.977,1059,1.769,1060,2.568,1061,1.769,1062,1.769,1063,1.525,1064,2.743,1065,1.769,1066,1.769,1067,1.63,1068,1.63,1069,1.63,1070,1.525,1071,1.525,1072,1.769,1073,1.769,1074,1.769,1075,1.769,1076,5.045,1077,2.743,1078,5.045,1079,1.769,1080,1.63,1081,1.769,1092,1.216,1095,2.743,1102,1.373,1114,1.216,1117,1.175,1136,2.208,1138,2.124,1139,3.217,1141,2.403,1143,1.373,1184,1.013,1186,1.07,1197,1.013,1214,1.373,1269,1.262,1287,1.373,1300,1.63,1301,1.769,1302,1.769,1306,1.314,1318,1.63,1324,1.769,1325,1.769,1338,1.525,1340,3.748,1354,2.047,1365,1.63,1366,2.743,1374,1.137,1381,1.769,1476,1.314,1485,2.124,1495,1.442,1500,2.268,1501,2.568,1502,2.743,1507,1.442,1510,1.525,1512,2.568,1513,1.63,1514,1.63,1515,1.63,1516,1.525,1517,1.63,1535,1.63,1536,2.993,1537,1.63,1538,2.743,1544,2.743,1545,2.977,1548,5.045,1551,2.743,1552,1.769,1553,2.977,1554,1.63,1555,2.568,1556,1.769,1557,1.373,1558,1.525,1559,1.262,1560,1.442,1561,1.373,1562,1.63,1563,1.373,1564,1.63,1565,1.525,1566,2.977,1567,1.769,1568,1.769,1569,1.769,1603,3.63,1657,1.63,1658,2.743,1745,1.314,1746,1.314,1801,1.525,1809,1.63,1816,2.743,1821,1.855,1841,2.568,1849,1.373,1936,1.373,1986,1.525,1996,1.769,1998,1.769,2105,1.442,2115,2.402,2122,1.63,2126,1.314,2127,2.124,2131,4.514,2141,2.743,2142,2.568,2143,2.743,2154,1.63,2155,2.211,2373,2.047,2515,1.314,2524,1.769,2543,1.442,2550,2.568,2573,1.442,2644,1.769,2729,1.442,2734,4.244,2786,2.568,2796,1.769,2800,1.63,2839,1.63,2840,1.373,2841,1.769,2842,2.977,2843,1.525,2886,2.977,2916,1.373,2954,3.687,2955,2.864,3005,1.769,3212,1.525,3296,1.314,3356,1.373,3416,1.525,3460,1.63,3467,1.63,3494,2.993,3527,2.977,3569,1.63,3664,2.977,3668,1.769,3758,1.63,3999,1.63,4008,1.63,4014,1.769,4015,2.743,4024,1.769,4025,4.522,4026,2.977,4027,3.855,4036,1.63,4037,4.166,4058,1.769,4059,2.977,4060,1.769,4061,1.769,4062,2.977,4068,1.769,4069,2.977,4076,4.166,4122,1.769,4223,1.262,4230,2.428,4232,5.815,4236,1.63,4239,2.568,4266,1.63,4301,1.769,4449,1.63,4481,1.442,4957,1.63,4970,3.551,4994,2.977,5004,1.769,5029,1.769,5031,2.977,5032,3.855,5049,1.98,5050,3.333,5051,5.063,5052,1.98,5053,1.98,5054,4.316,5055,1.98,5056,1.98,5057,5.063,5058,4.316,5059,1.98,5060,3.333,5061,1.98,5062,1.98,5063,1.98,5064,3.333,5065,1.98,5066,1.98,5067,1.98,5068,1.98,5069,1.98,5070,1.98,5071,1.98,5072,1.769,5073,1.98,5074,1.98,5075,1.769,5076,1.98,5077,1.98,5078,1.98,5079,1.98,5080,1.98,5081,2.743,5082,1.769,5083,1.769,5084,1.769,5085,1.98,5086,1.98,5087,1.98,5088,2.977,5089,1.98,5090,1.98,5091,1.98,5092,1.98,5093,1.98,5094,1.769,5095,1.98,5096,3.855,5097,1.98,5098,1.98,5099,1.98,5100,1.98,5101,1.98,5102,1.98,5103,1.98,5104,1.98,5105,1.98,5106,1.98,5107,1.98,5108,1.98,5109,1.98,5110,1.98,5111,1.98,5112,1.98,5113,1.98,5114,1.98,5115,1.98,5116,1.98,5117,1.98,5118,1.98,5119,1.98,5120,1.98,5121,1.98,5122,1.98,5123,1.98,5124,1.98,5125,3.333,5126,2.977,5127,3.333,5128,1.98,5129,1.98,5130,1.98,5131,1.98,5132,1.98]],["title/additional-documentation/nestjs-application.html",[75,1.682,374,1.723,870,1.723,1938,1.915]],["body/additional-documentation/nestjs-application.html",[7,0.741,24,0.005,25,0.31,32,0.963,64,3.008,65,3.696,68,2.247,75,4.23,80,0.002,81,0.003,82,0.002,88,3.504,89,3.133,148,0.963,170,1.563,172,1.467,181,1.853,208,2.776,226,3.133,228,1.906,239,2.247,271,4.981,276,3.032,296,1.906,338,2.445,339,2.091,340,2.247,374,4.192,375,4.8,377,1.758,378,2.702,393,2.716,441,2.716,443,2.445,470,2.165,499,1.758,506,2.936,558,3.338,562,2.507,656,3.662,762,3.157,808,4.274,821,3.598,827,2.716,870,1.715,871,2.165,872,3.662,873,2.716,927,3.133,929,1.853,930,2.247,939,2.702,945,2.165,949,2.247,968,2.339,969,2.165,981,2.165,1019,4.876,1049,2.445,1053,4.666,1060,2.716,1092,2.165,1108,3.847,1114,2.165,1117,3.133,1164,2.716,1286,2.901,1287,4.391,1294,3.504,1306,4.666,1360,1.804,1374,2.024,1472,2.716,1474,2.716,1476,2.339,1504,4.666,1522,2.901,1549,3.504,1554,2.901,1561,2.445,1745,4.997,1746,4.666,1751,2.445,1829,2.716,1938,2.855,2101,4.069,2126,2.339,2127,2.247,2155,3.504,2156,3.15,2157,4.346,2373,2.165,2491,2.247,2531,3.15,2544,3.662,2660,3.662,2663,2.445,2678,4.069,2688,2.901,2724,4.718,2747,4.346,2778,2.901,2799,2.901,2803,2.445,2810,2.901,2833,3.15,2840,4.876,2843,4.069,2854,3.847,2862,5.211,2863,4.346,2905,3.15,2908,4.8,2909,2.339,2954,6.14,2955,6.25,3053,2.901,3056,2.445,3123,3.847,3264,2.901,3265,6.329,3296,4.997,3313,4.346,3416,4.069,3432,2.445,3447,3.662,3463,2.901,3467,4.346,3494,2.445,3605,5.657,3669,3.15,3702,4.069,3738,4.718,3754,3.15,4076,2.901,4200,3.15,4210,2.901,4239,2.716,4240,2.901,4241,2.568,4243,2.716,4245,2.716,4248,3.15,4255,4.878,4266,2.901,4288,2.901,4300,5.417,4309,4.666,4317,2.901,4449,2.901,4470,4.718,4471,2.445,4480,3.15,4481,4.612,4526,3.15,4555,2.568,4624,2.568,4633,3.847,4691,2.568,4730,2.901,4774,3.15,4780,3.15,4891,4.346,4912,2.901,4937,2.716,4948,3.15,4950,2.716,4991,4.718,4995,5.657,4996,5.657,5043,3.662,5081,4.346,5082,4.718,5083,3.15,5084,3.15,5096,3.15,5133,3.526,5134,2.901,5135,3.526,5136,3.526,5137,3.526,5138,3.526,5139,3.526,5140,3.526,5141,3.526,5142,3.526,5143,5.282,5144,3.526,5145,3.526,5146,3.526,5147,5.282,5148,7.033,5149,3.526,5150,3.526,5151,3.526,5152,2.901,5153,3.526,5154,7.033,5155,3.15,5156,3.526,5157,3.526,5158,3.526,5159,7.907,5160,3.526,5161,3.526,5162,3.526,5163,3.526,5164,5.282,5165,3.526,5166,3.526,5167,3.526,5168,3.526,5169,5.282,5170,3.526,5171,3.526,5172,4.718,5173,5.282,5174,3.526,5175,3.526,5176,3.526,5177,3.526,5178,5.282,5179,3.526,5180,3.526,5181,3.526,5182,2.716,5183,3.526,5184,3.526,5185,3.526,5186,3.526,5187,3.526,5188,3.526,5189,3.15,5190,3.526,5191,3.526,5192,3.526,5193,3.526,5194,3.526,5195,6.333,5196,4.718,5197,3.526,5198,3.526,5199,3.526,5200,3.526,5201,3.526,5202,3.526,5203,5.282,5204,3.526,5205,5.282,5206,4.346,5207,3.15,5208,3.526,5209,6.333,5210,5.282,5211,3.526,5212,3.526,5213,3.526,5214,3.15,5215,3.526,5216,3.15,5217,3.526,5218,3.526,5219,3.526,5220,3.526,5221,3.526,5222,3.526,5223,3.526,5224,3.526]],["title/additional-documentation/nestjs-application/software-architecture.html",[870,1.723,1938,1.915,4247,2.351,4318,2.73]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.603,4,0.046,5,0.051,12,1.852,16,1.09,21,0.491,23,0.471,24,0.003,25,0.201,32,0.35,33,0.978,34,0.576,52,0.533,62,0.655,63,0.512,64,2.722,65,1.626,68,3.047,69,0.64,73,0.934,75,3.566,79,0.988,80,0.001,81,0.001,82,0.001,88,3.275,89,1.835,90,0.736,99,0.405,115,3.593,116,2.33,117,2.948,119,0.934,125,1.517,126,1.313,128,2.031,143,0.221,146,0.538,148,0.624,173,1.999,182,1.036,185,0.624,205,0.714,224,0.951,226,1.835,228,4.453,231,0.889,239,2.394,248,1.056,255,0.736,270,5.369,271,0.693,273,0.714,276,1.313,280,0.889,281,1.972,296,0.693,335,0.761,337,5.48,338,0.889,339,2.228,340,4.314,355,0.889,375,0.817,377,3.906,378,1.922,392,3.673,393,1.761,396,3.076,397,0.988,398,4.058,400,0.761,409,0.458,448,0.934,454,1.583,470,2.647,479,1.517,498,1.036,499,1.14,521,1.14,528,1.776,543,0.693,545,0.581,546,0.714,561,0.595,564,1.313,586,0.556,599,1.702,645,0.988,651,1.404,655,0.889,665,1.404,676,0.761,713,0.788,716,0.851,762,4.305,808,1.672,809,0.851,810,4.497,825,3.072,832,4.711,833,3.673,840,4.062,855,0.788,869,3.076,870,1.504,872,4.241,927,1.835,928,2.886,929,4.487,930,2.747,932,1.586,941,2.053,954,2.145,969,1.404,991,3.159,1021,0.934,1022,4.218,1023,0.851,1028,1.056,1051,0.934,1054,0.817,1056,2.157,1092,1.404,1102,0.889,1114,1.404,1116,4.032,1117,1.356,1129,0.889,1139,1.202,1140,2.461,1141,0.609,1143,0.889,1153,0.761,1154,0.736,1157,0.851,1165,2.053,1171,3.934,1197,1.922,1214,2.145,1228,0.736,1236,1.517,1288,0.988,1289,2.228,1291,0.889,1292,4.809,1294,0.851,1307,3.482,1315,0.934,1360,2.833,1361,1.146,1364,0.736,1374,0.736,1375,1.056,1377,3.14,1459,0.889,1471,2.145,1472,0.988,1476,1.517,1477,0.817,1479,2.736,1483,1.665,1516,0.988,1533,0.988,1549,0.851,1550,0.934,1558,0.988,1559,0.817,1560,3.14,1563,2.145,1576,0.934,1616,2.043,1617,0.817,1751,0.889,1795,4.256,1796,2.836,1821,0.714,1842,0.889,1849,0.889,1880,0.934,1938,0.693,2095,0.934,2115,1.273,2125,0.934,2126,2.053,2127,1.972,2235,0.988,2236,0.934,2240,0.988,2241,0.988,2251,2.145,2337,1.056,2363,6.343,2364,0.988,2366,1.882,2367,2.253,2373,2.936,2433,1.056,2436,2.383,2490,2.253,2491,2.747,2515,0.851,2518,4.052,2526,2.546,2527,3.777,2543,0.934,2544,0.889,2545,1.056,2573,1.665,2663,1.586,2664,1.882,2670,2.605,2671,2.253,2673,2.546,2678,0.988,2692,4.928,2695,2.736,2697,1.146,2698,0.934,2717,1.056,2727,1.056,2729,0.934,2734,0.889,2742,1.056,2745,2.763,2747,1.056,2752,1.146,2757,1.056,2759,2.763,2768,2.145,2772,0.889,2798,1.146,2802,3.482,2810,1.056,2845,2.763,2849,1.056,2874,1.056,2880,1.882,2908,0.817,2909,2.492,2915,2.736,2916,1.586,2918,1.146,2946,2.043,2949,0.934,2961,1.146,2966,3.14,2985,1.056,2986,1.882,2988,1.146,2990,1.146,3000,1.146,3003,1.146,3021,1.146,3056,0.889,3067,1.882,3081,2.394,3116,2.043,3123,3.777,3133,7.065,3139,1.882,3160,2.253,3183,2.736,3185,5.894,3204,1.146,3211,1.761,3242,2.043,3265,1.586,3275,3.547,3288,1.761,3310,1.056,3315,0.988,3317,1.056,3331,3.14,3339,2.253,3345,2.894,3354,3.356,3360,3.315,3361,0.988,3380,1.146,3381,1.882,3385,1.146,3400,1.882,3404,2.546,3420,5.463,3431,2.383,3432,0.889,3433,1.056,3447,1.586,3465,1.056,3493,1.056,3499,0.934,3506,3.851,3515,2.043,3545,2.763,3548,2.989,3553,0.934,3563,2.043,3602,1.056,3617,1.056,3642,2.894,3644,1.056,3653,1.056,3702,0.988,3736,1.146,3742,1.146,3753,2.043,3773,3.851,3790,1.761,3804,1.761,3832,1.056,3864,1.056,3867,1.056,3871,3.356,3872,0.988,3879,1.056,3892,1.146,3897,1.882,3927,1.146,3939,3.994,3952,1.146,3968,0.889,3977,1.146,3986,1.761,4007,2.043,4210,1.882,4239,2.383,4241,1.665,4242,1.586,4247,5.466,4255,0.988,4256,2.043,4260,2.736,4262,0.889,4268,1.882,4269,2.894,4276,6.721,4294,0.934,4298,0.988,4300,0.988,4304,1.761,4317,1.882,4318,0.988,4329,2.043,4331,1.056,4334,1.146,4339,1.146,4342,1.146,4345,1.146,4355,0.988,4357,1.146,4368,1.146,4380,1.882,4381,3.683,4384,3.934,4387,2.043,4388,1.761,4411,1.146,4416,1.146,4417,4.711,4435,0.889,4438,1.146,4455,1.056,4457,2.763,4461,1.146,4463,1.146,4469,1.146,4471,2.145,4478,1.146,4479,1.146,4486,5.571,4492,1.056,4494,1.056,4496,1.882,4498,1.056,4500,1.146,4520,0.934,4527,2.894,4531,1.146,4555,0.934,4556,1.146,4573,1.146,4583,1.056,4585,0.934,4600,1.146,4603,1.146,4609,1.146,4613,2.043,4624,0.934,4626,1.146,4633,2.253,4645,1.146,4658,2.043,4659,3.851,4679,1.056,4688,3.356,4689,1.146,4691,0.934,4693,1.146,4701,1.056,4720,1.146,4724,1.146,4726,1.146,4730,1.056,4769,4.271,4798,1.146,4815,1.146,4824,4.267,4846,5.064,4861,1.056,4875,1.146,4876,1.146,4877,4.241,4886,1.056,4926,1.146,4940,1.056,4950,0.988,4952,1.882,4955,1.146,4956,3.683,4998,2.043,5014,1.146,5152,1.056,5182,0.988,5225,1.283,5226,1.283,5227,5.679,5228,5.844,5229,2.287,5230,3.094,5231,4.556,5232,2.287,5233,2.763,5234,5.186,5235,1.283,5236,1.283,5237,2.894,5238,3.356,5239,1.283,5240,1.283,5241,1.283,5242,1.283,5243,1.283,5244,2.287,5245,2.287,5246,1.283,5247,1.283,5248,4.311,5249,1.283,5250,1.283,5251,3.094,5252,2.287,5253,1.283,5254,1.283,5255,1.283,5256,1.283,5257,1.283,5258,1.283,5259,1.283,5260,1.146,5261,2.287,5262,4.782,5263,1.283,5264,1.283,5265,2.287,5266,2.287,5267,3.757,5268,3.094,5269,3.757,5270,1.283,5271,3.356,5272,3.356,5273,1.283,5274,1.283,5275,1.283,5276,1.283,5277,1.283,5278,1.283,5279,2.763,5280,1.283,5281,1.283,5282,1.283,5283,7.39,5284,1.283,5285,7.295,5286,1.283,5287,2.043,5288,1.283,5289,2.287,5290,1.056,5291,5.844,5292,1.283,5293,2.763,5294,2.287,5295,1.283,5296,1.283,5297,1.283,5298,1.283,5299,1.283,5300,3.091,5301,2.287,5302,1.283,5303,1.283,5304,1.283,5305,1.283,5306,1.146,5307,1.283,5308,2.546,5309,1.283,5310,1.283,5311,1.146,5312,1.283,5313,1.283,5314,1.283,5315,1.146,5316,2.287,5317,1.283,5318,3.094,5319,1.283,5320,1.283,5321,1.283,5322,2.287,5323,1.283,5324,2.287,5325,3.094,5326,1.283,5327,1.283,5328,1.283,5329,2.043,5330,2.287,5331,3.094,5332,1.283,5333,1.283,5334,1.283,5335,1.283,5336,1.283,5337,1.283,5338,1.146,5339,1.283,5340,2.287,5341,1.283,5342,1.283,5343,5.844,5344,1.283,5345,1.146,5346,1.056,5347,1.283,5348,1.283,5349,1.283,5350,1.283,5351,1.283,5352,1.283,5353,1.283,5354,3.094,5355,1.283,5356,2.287,5357,3.094,5358,1.283,5359,1.283,5360,1.283,5361,1.283,5362,2.287,5363,1.283,5364,1.283,5365,1.283,5366,2.043,5367,1.283,5368,1.146,5369,1.283,5370,1.283,5371,2.287,5372,1.283,5373,1.146,5374,1.283,5375,2.287,5376,1.283,5377,1.283,5378,1.283,5379,1.283,5380,1.146,5381,1.283,5382,1.283,5383,2.287,5384,1.283,5385,1.283,5386,1.283,5387,1.283,5388,1.283,5389,1.146,5390,1.283,5391,1.283,5392,1.283,5393,1.146,5394,3.094,5395,1.283,5396,1.283,5397,1.283,5398,1.283,5399,1.283,5400,2.287,5401,1.283,5402,1.146,5403,1.283,5404,3.094,5405,1.283,5406,1.283,5407,2.287,5408,1.283,5409,2.287,5410,1.283,5411,1.283,5412,1.283,5413,1.283,5414,1.283,5415,1.283,5416,1.283,5417,2.287,5418,1.283,5419,1.283,5420,1.283,5421,1.283,5422,1.283,5423,1.283,5424,1.283,5425,1.283,5426,8.012,5427,1.283,5428,1.283,5429,4.311,5430,1.146,5431,1.283,5432,1.283,5433,2.287,5434,1.283,5435,1.283,5436,1.283,5437,1.283,5438,1.283,5439,1.283,5440,1.283,5441,1.146,5442,1.283,5443,1.283,5444,1.146,5445,1.283,5446,1.283,5447,1.283,5448,1.283,5449,2.287,5450,1.283,5451,1.283,5452,2.383,5453,1.283,5454,1.283,5455,1.056,5456,1.283,5457,1.283,5458,4.311,5459,1.283,5460,1.283,5461,1.283,5462,1.283,5463,1.283,5464,1.283,5465,1.283,5466,1.283,5467,1.283,5468,1.283,5469,1.283,5470,2.287,5471,1.283,5472,1.283,5473,2.287,5474,1.283,5475,1.283,5476,1.283,5477,2.287,5478,1.283,5479,1.283,5480,1.283,5481,1.283,5482,1.283,5483,1.146,5484,2.287,5485,1.283,5486,2.287,5487,1.283,5488,1.283,5489,1.283,5490,1.146,5491,2.287]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[88,1.377,870,1.511,1938,1.679,2518,2.154,4247,2.061]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.221,2,0.457,3,0.057,4,0.047,5,0.131,10,0.568,12,1.616,16,0.493,18,0.549,20,1.441,21,0.753,24,0.006,25,0.645,26,0.166,29,1.667,30,0.717,32,0.641,34,0.714,51,0.161,52,1.211,61,0.152,64,3.22,65,2.017,68,2.446,69,3.782,74,2.356,75,1.114,80,0.003,81,0.002,82,0.001,88,1.701,115,3.237,116,2.632,126,1.347,127,3.584,128,1.269,136,1.165,143,0.839,146,0.207,148,1.048,170,2.63,172,3.323,173,1.088,184,1.739,185,1.866,196,1.627,201,3.376,202,2.356,203,3.731,205,3.705,208,3.259,210,0.509,213,1.254,226,1.392,228,3.04,230,1.193,231,1.627,242,0.997,245,1.345,271,2.632,273,3.705,275,3.453,282,1.808,283,1.931,292,1.709,326,1.808,335,2.276,336,1.709,337,3.335,339,2.887,371,1.931,374,3.015,377,4.065,378,2.877,390,3.23,400,2.276,449,2.661,484,0.837,497,1.907,499,1.913,503,1.907,528,2.203,562,1.114,564,1.347,599,1.064,641,1.627,644,3.334,646,1.392,656,3.376,665,1.441,674,2.989,677,3.248,679,3.092,695,1.808,714,1.441,762,3.782,795,2.356,808,2.074,810,4.033,821,1.201,823,1.627,832,3.75,855,1.441,869,3.678,870,2.367,871,1.441,873,1.808,875,1.931,880,2.096,882,4.242,926,1.557,927,3.678,928,3.705,931,3.376,932,1.627,933,1.627,934,1.627,938,1.709,939,1.201,941,1.557,945,1.441,954,1.627,963,1.557,969,1.441,981,2.989,991,1.269,1007,2.096,1019,1.627,1022,1.557,1054,3.103,1056,3.228,1091,4.006,1093,3.158,1102,1.627,1108,1.709,1111,1.709,1114,1.441,1116,3.546,1117,2.276,1136,1.964,1196,1.627,1288,1.808,1289,2.276,1295,1.808,1307,1.709,1315,1.709,1340,1.557,1360,3.406,1364,2.203,1374,2.795,1375,1.931,1376,2.956,1459,2.661,1483,2.795,1485,1.496,1550,3.546,1559,2.446,1600,1.808,1602,1.557,1603,2.276,1610,1.557,1619,4.3,1624,1.808,1627,1.627,1637,2.096,1638,2.096,1639,2.096,1640,2.096,1641,1.931,1649,1.931,1745,1.557,1795,2.795,1796,1.392,1812,2.096,1821,2.136,1842,1.627,1872,1.557,1965,1.931,2028,2.887,2115,1.306,2131,1.627,2149,1.627,2271,5.032,2293,1.496,2360,1.808,2363,5.082,2373,1.441,2491,3.952,2515,4.416,2518,4.3,2520,1.709,2527,1.709,2624,1.557,2638,5.102,2670,1.627,2673,1.931,2692,1.627,2698,1.709,2729,1.709,2734,2.661,2742,4.006,2772,2.661,2803,1.627,2854,2.795,2880,4.628,2900,3.75,2908,2.446,2909,1.557,2915,1.709,2966,3.546,3016,2.096,3044,2.096,3053,1.931,3081,2.446,3160,2.795,3183,2.795,3185,1.709,3212,1.808,3213,2.956,3315,1.808,3345,1.808,3350,1.931,3355,1.931,3356,2.661,3360,1.627,3361,1.808,3400,4.006,3447,2.661,3459,2.096,3461,2.096,3494,4.3,3534,2.096,3540,1.931,3542,2.096,3548,1.627,3553,1.709,3556,2.096,3573,2.096,3574,2.096,3648,1.808,3759,1.808,3790,1.808,3843,2.096,3867,1.931,3968,1.627,4236,1.931,4242,5.259,4244,1.931,4247,3.23,4255,1.808,4260,1.709,4262,1.627,4272,1.931,4275,2.096,4276,3.75,4286,2.096,4294,1.709,4295,2.096,4300,4.332,4303,1.931,4304,4.332,4307,2.096,4309,1.557,4310,1.931,4341,2.096,4356,1.931,4358,2.096,4388,1.808,4417,1.808,4430,2.096,4435,1.627,4455,1.931,4464,1.931,4465,2.096,4471,1.627,4492,1.931,4498,1.931,4520,1.709,4527,1.808,4555,2.795,4566,2.096,4585,1.709,4624,1.709,4679,1.931,4691,1.709,4801,4.349,4846,2.956,4871,2.096,4877,1.627,4894,2.096,4940,1.931,4956,4.332,4957,4.006,4970,4.006,5011,4.006,5043,3.376,5072,2.096,5088,2.096,5094,2.096,5152,1.931,5155,2.096,5206,3.158,5227,2.096,5237,1.808,5272,2.096,5285,7.113,5287,2.096,5290,3.158,5306,2.096,5308,1.931,5315,2.096,5329,2.096,5338,3.428,5345,4.349,5380,3.428,5402,3.428,5441,3.428,5444,2.096,5452,1.808,5492,1.931,5493,2.096,5494,2.347,5495,4.869,5496,2.347,5497,6.275,5498,3.158,5499,2.347,5500,3.838,5501,5.624,5502,2.347,5503,2.347,5504,2.347,5505,2.347,5506,2.347,5507,2.347,5508,2.347,5509,3.838,5510,2.347,5511,2.347,5512,2.347,5513,2.096,5514,3.838,5515,4.869,5516,2.347,5517,2.347,5518,2.347,5519,2.347,5520,2.096,5521,2.347,5522,2.347,5523,2.096,5524,3.838,5525,2.347,5526,1.931,5527,2.347,5528,2.347,5529,2.347,5530,2.347,5531,2.347,5532,2.347,5533,2.347,5534,2.347,5535,3.838,5536,3.838,5537,2.347,5538,2.096,5539,3.428,5540,2.347,5541,2.347,5542,2.347,5543,2.347,5544,2.347,5545,2.347,5546,2.347,5547,2.347,5548,2.347,5549,2.347,5550,2.347,5551,2.347,5552,2.347,5553,2.347,5554,2.347,5555,2.347,5556,2.347,5557,2.347,5558,2.347,5559,2.347,5560,2.347,5561,1.808,5562,2.347,5563,2.347,5564,2.347,5565,2.347,5566,2.347,5567,2.347,5568,2.347,5569,2.347,5570,2.347,5571,2.347,5572,2.347,5573,2.347,5574,2.096,5575,2.347,5576,2.347,5577,2.347,5578,2.096,5579,2.347,5580,2.347,5581,2.347,5582,2.347,5583,2.347,5584,2.347,5585,2.347,5586,2.347,5587,2.347,5588,2.096,5589,2.347]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[870,1.511,1938,1.679,2271,2.061,5237,2.393,5590,2.775]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[12,2.326,21,0.389,24,0.006,29,1.017,34,1.355,39,0.426,52,0.959,63,1.511,64,3.23,65,3.469,69,4.044,74,2.322,75,3.85,80,0.002,81,0.003,82,0.002,88,2.466,89,3.3,114,3.112,117,1.753,127,2.41,136,1.152,143,0.959,146,0.333,182,1.714,213,1.236,220,1.619,230,1.175,245,2.718,248,4.578,255,2.171,273,3.097,276,3.194,292,2.754,326,4.285,337,4.973,338,4.576,339,2.243,340,2.41,374,2.705,377,1.885,378,2.846,390,2.509,393,4.285,396,2.243,397,2.913,398,2.509,412,2.314,421,1.573,449,3.857,484,1.349,500,2.044,503,2.585,514,3.857,521,1.885,599,2.521,645,5.084,655,2.622,665,4.469,762,3.867,788,1.839,810,2.171,833,2.509,840,2.044,855,2.322,869,5.103,928,4.888,933,2.622,934,2.622,963,2.509,1021,2.754,1022,2.509,1034,2.243,1049,2.622,1056,3.194,1108,2.754,1111,2.754,1197,1.935,1269,3.545,1287,2.622,1306,2.509,1353,2.913,1360,3.377,1374,3.194,1477,4.206,1571,2.754,1600,2.913,1751,2.622,1849,2.622,1880,2.754,1891,3.378,1924,3.378,1986,2.913,2101,2.913,2149,2.622,2236,2.754,2251,2.622,2271,6.238,2363,2.622,2435,3.378,2491,3.545,2527,2.754,2663,2.622,2666,2.754,2670,2.622,2695,4.052,2768,3.857,2772,3.857,2801,2.913,2802,2.754,2909,3.691,2915,2.754,2955,2.509,2995,5.895,3018,3.378,3081,2.41,3180,2.913,3183,4.807,3211,2.913,3213,2.913,3323,3.112,3331,2.754,3356,2.622,3359,4.285,3499,2.754,3548,2.622,3553,5.649,3642,2.913,3653,3.112,3832,3.112,3872,2.913,3968,3.857,3986,2.913,4101,3.112,4139,2.913,4230,2.754,4242,2.622,4243,2.913,4247,4.828,4260,2.754,4262,2.622,4269,2.913,4352,2.913,4356,4.578,4381,6.248,4388,2.913,4393,3.112,4435,2.622,4471,3.857,4520,4.052,4585,2.754,4624,4.052,4633,4.052,4691,2.754,4824,3.112,4846,2.913,4865,3.378,4877,2.622,4912,3.112,4925,2.913,4936,4.969,4937,2.913,4952,3.112,5002,3.112,5043,2.622,5134,3.112,5182,2.913,5206,3.112,5233,3.378,5237,4.285,5238,3.378,5285,5.974,5368,3.378,5373,3.378,5393,3.378,5430,3.378,5455,3.112,5492,3.112,5497,4.969,5513,4.969,5561,2.913,5574,3.378,5578,3.378,5590,3.378,5591,3.782,5592,3.782,5593,3.782,5594,3.782,5595,3.782,5596,3.782,5597,3.782,5598,3.782,5599,5.563,5600,3.782,5601,3.782,5602,3.782,5603,3.782,5604,3.782,5605,3.782,5606,3.782,5607,3.782,5608,3.782,5609,3.782,5610,3.782,5611,3.782,5612,3.782,5613,3.782,5614,3.378,5615,3.782,5616,3.782,5617,3.378,5618,3.782,5619,3.378,5620,3.782,5621,3.782,5622,3.782,5623,3.782,5624,3.782,5625,3.782,5626,3.782,5627,4.969,5628,3.782,5629,3.782,5630,3.782,5631,3.782,5632,3.782,5633,3.782,5634,3.782,5635,3.782,5636,3.782,5637,3.782,5638,3.782,5639,3.782,5640,3.782,5641,3.782,5642,3.782,5643,3.782,5644,3.782,5645,3.782,5646,3.782,5647,3.782,5648,3.782,5649,3.782,5650,3.782,5651,3.782,5652,3.782,5653,3.782,5654,3.782,5655,3.782,5656,5.563,5657,3.782,5658,3.112,5659,3.782,5660,3.378,5661,3.782,5662,3.782,5663,3.782,5664,3.782,5665,3.112]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[392,2.061,870,1.511,1938,1.679,4877,2.154,5231,2.557]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.177,18,1.074,24,0.006,25,0.404,26,0.345,32,2.284,39,1.036,51,0.308,61,0.105,64,2.838,75,2.18,80,0.003,81,0.004,82,0.004,88,3.26,89,2.724,90,2.637,91,1.765,96,4.434,99,2.021,114,3.78,115,3.109,116,3.976,117,3.877,125,3.048,126,2.637,128,4.52,146,0.563,170,2.474,185,3.109,210,0.996,213,1.501,226,2.724,239,4.688,268,3.78,271,2.483,273,4.095,275,2.82,335,2.724,337,4.959,338,3.185,339,3.793,340,2.927,374,3.109,377,3.188,387,4.075,390,3.048,392,4.243,396,2.724,398,5.277,404,3.538,438,4.243,548,2.927,600,1.669,651,3.926,762,2.29,821,2.35,834,5.2,840,4.973,854,4.103,855,3.926,856,2.927,857,3.345,865,3.78,869,2.724,870,3.109,871,4.517,929,2.414,931,3.185,963,3.048,991,2.483,1022,4.88,1023,6.01,1053,4.243,1057,3.78,1117,3.793,1165,4.243,1170,4.103,1171,3.78,1173,4.103,1177,4.103,1179,4.103,1180,4.103,1197,3.272,1289,2.724,1307,3.345,1360,3.272,1364,2.637,1376,3.538,1471,3.185,1473,4.103,1476,3.048,1483,4.657,1485,4.075,1648,5.262,1741,4.103,1899,4.103,2095,3.345,2115,2.557,2655,3.78,2698,3.345,2711,3.538,2908,2.927,2916,3.185,3081,2.927,3315,3.538,3559,4.103,3746,5.262,4241,3.345,4272,3.78,4309,3.048,4476,4.103,4599,4.103,4877,3.185,5196,4.103,5231,5.262,5346,3.78,5389,4.103,5498,3.78,5523,4.103,5526,3.78,5561,3.538,5588,4.103,5665,3.78,5666,4.594,5667,7.954,5668,4.594,5669,4.594,5670,7.954,5671,4.103,5672,4.594,5673,4.594,5674,7.356,5675,4.594,5676,4.594,5677,4.594,5678,4.594,5679,6.395,5680,4.594,5681,4.594,5682,4.594,5683,4.594,5684,4.103,5685,4.594,5686,6.395,5687,4.594,5688,4.594,5689,4.594,5690,4.594,5691,4.594,5692,4.594,5693,4.594,5694,4.594,5695,4.594,5696,4.594,5697,4.594,5698,4.594]],["title/additional-documentation/nestjs-application/testing.html",[870,2.005,1294,2.735,1938,2.229]],["body/additional-documentation/nestjs-application/testing.html",[0,0.082,1,0.985,2,0.334,12,1.011,13,1.412,21,0.474,23,0.261,24,0.006,25,0.342,26,0.2,32,1.258,33,1.456,34,0.549,51,0.124,52,0.296,55,0.401,64,2.955,69,1.935,74,1.811,75,2.464,80,0.003,81,0.002,82,0.002,88,2.69,107,0.315,115,0.834,117,3.569,125,2.575,126,2.98,128,0.927,136,1.562,143,0.895,170,2.122,172,1.227,173,1.799,182,0.778,184,1.759,185,1.887,202,1.811,213,2.641,214,1.532,215,1.532,221,0.834,224,0.714,226,4.123,228,0.927,229,0.795,230,1.762,231,2.046,235,1.532,245,2.869,255,2.228,271,4.994,273,1.642,275,1.053,276,2.228,280,2.046,282,1.322,301,1.811,303,2.16,336,1.25,337,2.302,339,1.75,374,0.834,377,2.297,378,3.106,387,1.093,394,1.412,396,1.75,409,0.612,412,0.714,438,1.138,443,2.046,447,1.25,495,0.985,497,2.221,534,1.138,545,0.778,548,1.093,560,0.795,561,0.795,564,2.228,586,1.28,629,1.25,644,0.814,676,1.018,677,2.042,679,0.855,714,1.053,720,2.829,762,3.576,785,1.25,808,4.994,810,2.98,812,5.065,821,0.878,824,4.272,825,2.729,826,3.356,827,3.999,832,1.322,833,3.057,837,1.322,840,1.595,855,2.383,867,1.75,868,2.635,869,3.6,871,1.053,908,1.25,912,0.927,926,1.138,928,0.955,929,2.04,941,1.957,954,1.19,961,1.88,963,4.252,969,1.811,975,1.19,991,3.877,992,1.25,996,2.273,1017,1.138,1023,1.138,1034,4.649,1051,1.25,1053,3.762,1054,2.937,1056,3.255,1071,2.273,1092,1.053,1094,1.412,1099,1.19,1111,1.25,1115,1.532,1138,1.093,1139,0.902,1153,1.018,1154,1.694,1164,1.322,1165,1.138,1197,2.358,1228,0.985,1264,1.093,1279,3.079,1286,1.412,1289,1.75,1291,2.046,1294,5.609,1353,1.322,1360,2.656,1364,0.985,1474,1.322,1475,1.532,1476,1.138,1477,1.093,1478,1.532,1479,3.356,1483,1.25,1485,2.473,1534,2.273,1536,2.046,1547,1.532,1549,1.138,1561,1.19,1563,1.19,1571,4.13,1574,2.428,1576,1.25,1577,1.532,1595,1.322,1596,2.046,1600,2.273,1602,1.138,1607,1.532,1612,1.412,1617,1.093,1619,1.19,1628,1.138,1630,1.093,1661,1.532,1735,2.575,1745,3.444,1746,2.575,1751,3.6,1796,1.018,1803,1.532,1821,0.955,1842,3.195,1849,2.691,1872,1.138,1888,1.412,1889,1.412,1953,1.25,2028,4.566,2109,2.046,2115,0.955,2148,1.532,2155,2.575,2157,1.412,2240,1.322,2241,1.322,2271,1.138,2293,1.093,2347,1.412,2363,4.646,2366,1.412,2373,1.811,2436,1.322,2490,1.25,2491,1.093,2518,3.6,2520,1.25,2526,1.412,2543,4.13,2544,1.19,2545,1.412,2638,1.412,2660,1.19,2670,1.19,2671,1.25,2692,2.046,2695,2.149,2698,4.13,2734,2.046,2768,3.6,2772,3.195,2797,2.273,2801,1.322,2802,1.25,2803,2.046,2806,1.532,2826,1.532,2840,2.046,2854,4.13,2870,1.532,2901,2.635,2902,3.194,2908,4.906,2909,3.444,2915,1.25,2916,2.046,2955,1.138,2965,1.412,2966,3.356,3013,2.635,3029,1.412,3046,4.637,3056,1.19,3066,2.428,3081,1.093,3086,5.422,3111,1.532,3133,1.322,3148,1.532,3154,1.412,3165,1.412,3180,2.99,3185,1.25,3191,1.322,3213,1.322,3251,1.532,3261,1.532,3275,1.412,3282,1.532,3331,2.149,3339,2.827,3347,1.532,3350,1.412,3355,1.412,3356,2.046,3357,1.412,3360,3.932,3389,1.532,3404,1.412,3432,2.046,3433,1.412,3475,3.194,3492,1.412,3496,2.428,3499,1.25,3501,1.532,3553,2.149,3561,1.532,3569,3.194,3644,1.412,3683,3.467,3702,1.322,3735,1.412,3746,1.412,3760,2.273,3766,1.412,3790,1.322,3797,5.422,3804,2.273,3902,1.532,3906,1.412,3932,1.532,3968,1.19,3983,1.412,4008,1.412,4101,1.412,4168,1.532,4191,1.412,4230,4.421,4242,3.195,4243,3.999,4250,1.532,4251,1.532,4259,1.532,4262,1.19,4265,1.532,4269,1.322,4276,1.322,4294,2.149,4298,5.161,4303,1.412,4318,1.322,4331,1.412,4340,1.532,4352,2.273,4355,1.322,4359,1.532,4380,1.412,4381,2.99,4384,1.412,4393,3.194,4417,1.322,4426,1.532,4434,1.532,4435,1.19,4464,1.412,4471,3.195,4472,1.532,4486,2.428,4494,1.412,4496,1.412,4515,1.532,4520,1.25,4524,1.532,4527,1.322,4555,1.25,4567,1.532,4580,1.532,4583,1.412,4585,1.25,4591,1.532,4633,2.149,4644,1.412,4650,1.532,4660,6.21,4701,1.412,4821,1.532,4886,1.412,4891,1.412,4892,1.532,4910,4.116,4925,1.322,4956,2.99,4960,1.532,4985,1.532,5002,1.412,5011,1.412,5037,1.532,5043,1.19,5075,1.532,5126,2.635,5134,1.412,5172,1.532,5182,4.937,5189,1.532,5207,1.532,5260,1.532,5271,1.532,5279,2.635,5285,5.355,5290,1.412,5293,1.532,5300,1.412,5308,1.412,5311,4.116,5346,1.412,5452,1.322,5455,3.194,5490,2.635,5492,3.792,5493,1.532,5498,1.412,5520,1.532,5526,1.412,5538,1.532,5539,1.532,5561,3.999,5614,1.532,5617,2.635,5619,1.532,5627,1.532,5660,1.532,5665,2.428,5671,1.532,5684,1.532,5699,2.95,5700,1.716,5701,1.716,5702,1.716,5703,1.716,5704,1.716,5705,1.716,5706,1.716,5707,1.716,5708,1.716,5709,1.716,5710,1.716,5711,1.716,5712,1.716,5713,2.95,5714,1.716,5715,1.716,5716,1.716,5717,1.716,5718,1.716,5719,1.716,5720,1.716,5721,1.716,5722,1.716,5723,1.716,5724,1.716,5725,1.716,5726,1.716,5727,1.716,5728,1.716,5729,1.716,5730,1.716,5731,1.716,5732,1.716,5733,1.716,5734,1.716,5735,1.716,5736,1.716,5737,1.716,5738,1.716,5739,1.716,5740,1.716,5741,1.532,5742,3.881,5743,1.716,5744,3.881,5745,2.95,5746,5.192,5747,2.95,5748,3.881,5749,4.608,5750,1.716,5751,1.716,5752,2.95,5753,1.716,5754,1.716,5755,1.716,5756,1.716,5757,1.716,5758,1.716,5759,1.716,5760,1.716,5761,5.67,5762,1.716,5763,1.716,5764,1.716,5765,1.716,5766,1.716,5767,1.716,5768,1.716,5769,1.716,5770,1.716,5771,1.716,5772,1.716,5773,1.716,5774,2.95,5775,1.716,5776,2.95,5777,1.716,5778,1.716,5779,1.716,5780,2.95,5781,1.716,5782,1.716,5783,3.881,5784,2.95,5785,2.95,5786,1.716,5787,1.716,5788,4.608,5789,1.716,5790,1.716,5791,1.716,5792,1.716,5793,1.716,5794,1.716,5795,1.716,5796,2.95,5797,1.716,5798,2.95,5799,1.716,5800,2.95,5801,1.716,5802,1.716,5803,1.716,5804,1.716,5805,1.716,5806,2.95,5807,2.95,5808,1.716,5809,1.716,5810,2.95,5811,1.716,5812,1.716,5813,2.95,5814,1.716,5815,1.716,5816,1.716,5817,1.716,5818,1.716,5819,1.716,5820,2.95,5821,4.608,5822,1.716,5823,1.716,5824,1.716,5825,1.716,5826,1.716,5827,1.716,5828,2.95,5829,1.716,5830,1.716,5831,1.716,5832,1.716,5833,1.716,5834,1.716,5835,1.716,5836,1.716,5837,1.716,5838,1.716,5839,1.716,5840,2.95,5841,1.716,5842,1.716,5843,1.716,5844,1.716,5845,1.716,5846,1.716,5847,1.716,5848,1.716,5849,1.716,5850,1.716,5851,1.716,5852,1.716,5853,1.716,5854,1.716,5855,1.716,5856,1.716,5857,1.716,5858,1.716,5859,1.716,5860,1.716,5861,1.716,5862,1.716,5863,1.716,5864,1.716,5865,1.716,5866,1.716,5867,1.716,5868,1.716,5869,1.716,5870,1.716,5871,1.716,5872,1.716,5873,1.716]],["title/additional-documentation/nestjs-application/decisions.html",[870,2.005,1938,2.229,5658,3.392]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.526,16,1.312,24,0.005,29,1.677,52,1.076,54,2.962,55,1.459,64,3.055,69,3.906,80,0.004,81,0.005,82,0.004,115,3.034,270,4.14,281,3.977,340,3.977,374,3.034,562,3.718,586,2.706,714,3.832,762,3.111,820,4.807,821,3.193,825,3.28,929,3.28,933,5.432,934,4.327,961,3.977,991,3.373,1096,3.977,1308,5.681,1360,3.193,1364,3.582,1484,5.574,1549,5.681,1557,4.327,1571,4.545,1793,6.446,1796,3.701,1842,5.432,2236,5.705,2367,5.705,2373,4.81,2518,4.327,2663,4.327,2678,6.595,2908,3.977,2985,5.135,3056,4.327,3139,5.135,3160,4.545,3238,5.574,3313,5.135,3441,5.574,3494,4.327,3548,4.327,3637,5.574,3827,5.574,4241,4.545,4247,4.14,4435,4.327,4861,5.135,4937,4.807,5300,5.135,5452,4.807,5483,5.574,5658,6.446,5741,5.574,5874,6.24,5875,6.24,5876,6.24,5877,6.24,5878,6.24,5879,6.24,5880,6.24,5881,6.24,5882,6.24,5883,7.834,5884,6.24,5885,6.24,5886,6.24,5887,6.24,5888,6.24,5889,6.24,5890,6.24,5891,6.24,5892,6.24,5893,6.24,5894,6.24,5895,6.24,5896,6.24]],["title/additional-documentation/nestjs-application/vscode.html",[870,2.005,1938,2.229,4245,3.176]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.137,24,0.005,65,4.379,74,4.235,75,3.954,80,0.004,81,0.005,82,0.004,271,4.503,355,4.782,374,4.051,392,4.576,808,3.728,939,4.263,981,5.116,1360,3.529,2373,4.235,2485,6.16,2544,4.782,2573,5.023,2801,5.312,2840,5.777,2900,5.312,2908,4.395,2943,5.675,2954,5.023,3123,5.023,3288,5.312,3356,4.782,3540,6.855,4245,6.418,4278,7.442,4309,4.576,4481,5.023,4587,6.16,4928,7.996,4954,6.16,5043,4.782,5081,5.675,5214,6.16,5216,6.16,5897,6.897,5898,6.897,5899,6.897,5900,6.897,5901,6.897,5902,6.897,5903,6.897,5904,6.897,5905,6.897]],["title/additional-documentation/nestjs-application/git.html",[870,2.005,1938,2.229,4246,3.392]],["body/additional-documentation/nestjs-application/git.html",[24,0.005,80,0.004,81,0.005,82,0.004,400,4.515,561,3.529,1197,3.895,1289,4.515,2115,4.237,2131,5.278,3907,5.864,4002,7.268,4246,7.679,4258,6.799,5366,6.799,5906,7.613,5907,7.613,5908,7.613,5909,7.613]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":788,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4157,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4192,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4203,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4120,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":4111,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4119,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4182,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":4215,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4207,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4175,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4167,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4206,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4104,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4160,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4010,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4031,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4049,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4054,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4029,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":4043,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4021,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4033,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":4056,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4013,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4009,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4034,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4028,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4032,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4030,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4057,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":5847,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":5849,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1279,"title":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4183,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4195,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4144,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4131,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4178,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4141,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4222,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4193,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4115,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4084,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4112,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":4147,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":4085,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4124,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4012,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":4052,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":4067,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4020,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4019,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4044,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4050,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":4042,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":4053,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1936,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":4011,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2963,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["110",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["1289",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3093,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["1499",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":2959,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":5145,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2949,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4142,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["187",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3077,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":4543,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":5890,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":5889,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":720,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4145,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4159,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4179,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4202,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4108,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4127,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":4110,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":4017,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":4055,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2866,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":4315,"title":{},"body":{"license.html":{}}}],["2020",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2856,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22",{"_index":2935,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22.10.0",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3113,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":3150,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["26.10.0",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["26.10.1",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["26.10.2",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["26.10.3",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["26.9.2",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["267",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["279",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2822,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["29",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":4987,"title":{},"body":{"todo.html":{}}}],["3",{"_index":3180,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4189,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4197,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":5840,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4186,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4177,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4220,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4102,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4198,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":4051,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":4041,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3107,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":5204,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5198,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":4018,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":3760,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4117,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4211,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4137,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4154,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":4087,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4121,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4079,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4086,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":4138,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":4095,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5138,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4/18",{"_index":4047,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4066,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":4039,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":4998,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":1057,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":4951,"title":{},"body":{"overview.html":{}}}],["4385",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":785,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4106,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4107,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4140,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4181,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":4161,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":4048,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4046,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4016,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":5687,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":5149,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5144,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":4038,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":5848,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":3029,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4126,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4097,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":3074,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":4199,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":4187,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":4040,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":2017,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":2739,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6469",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":4065,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":4980,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":4620,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4639,"title":{},"body":{"license.html":{}}}],["7",{"_index":2370,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["7.0.0",{"_index":4128,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":4093,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":4090,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4136,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":4089,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":4088,"title":{},"body":{"dependencies.html":{}}}],["7.6.17",{"_index":4092,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":4218,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":4099,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4149,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":5096,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":5174,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":4045,"title":{},"body":{"coverage.html":{}}}],["8300",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2683,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["9003",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["9083",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":5167,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":1941,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4285,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":660,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":1007,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":1031,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":1045,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5494,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":1032,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":1047,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5180,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":601,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":2546,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.createdat",{"_index":2178,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["a.m",{"_index":4306,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":4679,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4304,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4565,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4919,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":335,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":5417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":452,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":4756,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":4755,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":4968,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":3910,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":810,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":5480,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":523,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":3493,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":3506,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":2048,"title":{},"body":{"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4604,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4923,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4386,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4564,"title":{},"body":{"license.html":{}}}],["according",{"_index":2986,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1138,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":60,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["accumulator",{"_index":2073,"title":{},"body":{"classes/Scope.html":{}}}],["accumulator.push(queryelement",{"_index":2078,"title":{},"body":{"classes/Scope.html":{}}}],["achieve",{"_index":4926,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4506,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4803,"title":{},"body":{"license.html":{}}}],["act",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":967,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2943,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1363,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{}}}],["activities",{"_index":4428,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4842,"title":{},"body":{"license.html":{}}}],["actors",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":4824,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":4659,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4408,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5283,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2115,"title":{},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskMapper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1374,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["addid",{"_index":1409,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["addid(entity",{"_index":1432,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["adding",{"_index":448,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":870,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4272,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5160,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":603,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":608,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["address",{"_index":4876,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":4404,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3515,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2745,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addstatustotask",{"_index":2161,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["addstatustotask(task",{"_index":2165,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["addtokentowhitelist",{"_index":1384,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":1390,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":1367,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":1369,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2810,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":4541,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4685,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4911,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4686,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4313,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4784,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4503,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterduedateornone",{"_index":2384,"title":{},"body":{"classes/TaskScope.html":{}}}],["afterduedateornone(duedate",{"_index":2388,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":5855,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":3754,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":4555,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4591,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":5299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":5280,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5483,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":4944,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4859,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4898,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":4812,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4098,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":1322,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":5017,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5276,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":4791,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2801,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":2670,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2573,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4567,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":355,"title":{},"body":{"classes/BusinessError.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4369,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4616,"title":{},"body":{"license.html":{}}}],["always",{"_index":5300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":3067,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqp",{"_index":4100,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":1524,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4103,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":5196,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4214,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":4757,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4362,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":5503,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5486,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5272,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ansible",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["anti",{"_index":4529,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":4577,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4416,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":5552,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":115,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4252,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4253,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4257,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":114,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":668,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":739,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1825,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1823,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":669,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1818,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1815,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1626,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":1635,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":2258,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":2599,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":83,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":1119,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":139,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":121,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{}}}],["apivalidationerrorresponse(error",{"_index":1036,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":1054,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":5857,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":5852,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":404,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":403,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":401,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":402,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":5015,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":147,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["applicable",{"_index":4421,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5169,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":75,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4241,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":5566,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":4881,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1287,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":5861,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5262,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4268,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4560,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4918,"title":{},"body":{"license.html":{}}}],["apps",{"_index":2796,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5032,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5020,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":5052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5024,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../database.config.ts",{"_index":5060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":5056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5021,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5023,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../find",{"_index":4227,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4232,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":5061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5029,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":5053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5031,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4226,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5028,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5030,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role.entity.ts",{"_index":5025,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../scope.ts",{"_index":4233,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":5051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":5050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.uc.ts",{"_index":4228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../taskdomainservice.ts",{"_index":5027,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../testhelper.ts",{"_index":4225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../types.ts",{"_index":5019,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5034,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5155,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5208,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5213,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":984,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console",{"_index":365,"title":{},"body":{"injectables/ConsoleWriter.html":{},"coverage.html":{}}}],["apps/server/src/console/console.ts",{"_index":4014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/server",{"_index":2110,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":2090,"title":{},"body":{"classes/ServerConsole.html":{},"coverage.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":2096,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":2099,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":2093,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":389,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":122,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":861,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":863,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":2651,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":853,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":993,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":1148,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":919,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":4024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":1285,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":1163,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":1174,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":1172,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":1178,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":1169,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":1176,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":1492,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":1467,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":1089,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":2656,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts",{"_index":410,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:27",{"_index":427,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:30",{"_index":425,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:34",{"_index":429,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:38",{"_index":431,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:42",{"_index":434,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:46",{"_index":433,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:50",{"_index":420,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:65",{"_index":437,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:70",{"_index":435,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts",{"_index":618,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"coverage.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:13",{"_index":624,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:16",{"_index":622,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:26",{"_index":627,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:31",{"_index":625,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts",{"_index":698,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:16",{"_index":800,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:22",{"_index":801,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:38",{"_index":1120,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:45",{"_index":1121,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:47",{"_index":1122,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:49",{"_index":1123,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:51",{"_index":1125,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:55",{"_index":1124,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:61",{"_index":701,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:69",{"_index":703,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts",{"_index":1398,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:26",{"_index":1424,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:36",{"_index":1428,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:40",{"_index":1430,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:44",{"_index":1429,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:48",{"_index":1426,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/user.entity.ts",{"_index":1268,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/entities/user.entity.ts:16",{"_index":2581,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:19",{"_index":2582,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:22",{"_index":2583,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:26",{"_index":2579,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/main.ts",{"_index":4035,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":1300,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":4036,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":1296,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":1327,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":1365,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":1330,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":1333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":1335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":204,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":233,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":236,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":874,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":1535,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/database/types.ts",{"_index":5036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":937,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":925,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/lernroom/controller/dashboard.controller.ts",{"_index":680,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/controller/dashboard.controller.ts:15",{"_index":684,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts",{"_index":736,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:13",{"_index":745,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:18",{"_index":744,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:23",{"_index":741,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:28",{"_index":747,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:33",{"_index":748,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:41",{"_index":790,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:46",{"_index":789,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:8",{"_index":742,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/lernroom.module.ts",{"_index":1394,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts",{"_index":751,"title":{},"body":{"classes/DashboardMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts:5",{"_index":754,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts",{"_index":791,"title":{},"body":{"injectables/DashboardUc.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:6",{"_index":793,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:9",{"_index":794,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/mail/mail.interface.ts",{"_index":149,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":1495,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/mail/mail.module.ts:28",{"_index":1499,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":1521,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":1526,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:18",{"_index":1528,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":642,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1657,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1801,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":1808,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:21",{"_index":1827,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:26",{"_index":1802,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":1807,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:38",{"_index":1817,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":1819,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:50",{"_index":1826,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":1824,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":1822,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":1813,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:71",{"_index":1806,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:76",{"_index":1830,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:81",{"_index":1804,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:86",{"_index":1828,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":1810,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":2042,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":2220,"title":{},"body":{"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":2570,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":2618,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1594,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":1601,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":1611,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":1615,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":1623,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":1606,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":2475,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":491,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":496,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":1590,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":1581,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":1583,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":1584,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":1586,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":1587,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:50",{"_index":1588,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:54",{"_index":1589,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:57",{"_index":1585,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:60",{"_index":1582,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:63",{"_index":1591,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:65",{"_index":1580,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:75",{"_index":1592,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":1127,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":2034,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":2473,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":2611,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1675,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:30",{"_index":1682,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:44",{"_index":1680,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:57",{"_index":1686,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":1684,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":2035,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":2215,"title":{},"body":{"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":2613,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1736,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1833,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1752,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:13",{"_index":1775,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:21",{"_index":1758,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:34",{"_index":1765,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:41",{"_index":1760,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1855,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:110",{"_index":1885,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1862,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:134",{"_index":1866,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:145",{"_index":1877,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:165",{"_index":1883,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:183",{"_index":1876,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:193",{"_index":1879,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1864,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:55",{"_index":1868,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:86",{"_index":1874,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":2371,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":2378,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":2375,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":2377,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":2379,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":2376,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":2382,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":2381,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":2380,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":2250,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":2252,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts",{"_index":2160,"title":{},"body":{"classes/StatusDomainService.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:10",{"_index":2168,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:18",{"_index":2170,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:29",{"_index":2166,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:4",{"_index":2164,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts",{"_index":5045,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/entity/course",{"_index":475,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/file",{"_index":977,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson",{"_index":1458,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1223,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:23",{"_index":2196,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:26",{"_index":2194,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:29",{"_index":2190,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:32",{"_index":2197,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:36",{"_index":2188,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:39",{"_index":2195,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:43",{"_index":2191,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:46",{"_index":2192,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:49",{"_index":2193,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:51",{"_index":2198,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:57",{"_index":2187,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task",{"_index":1258,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1182,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:26",{"_index":1256,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:27",{"_index":1254,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:28",{"_index":1255,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:34",{"_index":2224,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:37",{"_index":2222,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:40",{"_index":2226,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:43",{"_index":2225,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:46",{"_index":2223,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:49",{"_index":2221,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/user",{"_index":1284,"title":{},"body":{"interfaces/IUserTaskInfoProperties.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":2266,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:6",{"_index":2269,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":2200,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:13",{"_index":2203,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:16",{"_index":2207,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:24",{"_index":2209,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:29",{"_index":2205,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task",{"_index":2383,"title":{},"body":{"classes/TaskScope.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":2329,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:12",{"_index":2334,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:22",{"_index":2336,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:41",{"_index":2341,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:55",{"_index":2343,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:66",{"_index":2345,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:74",{"_index":2346,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":2291,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":2228,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:11",{"_index":2231,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:17",{"_index":2234,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":2410,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:14",{"_index":2415,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:18",{"_index":2420,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:32",{"_index":2421,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:45",{"_index":2422,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:58",{"_index":2425,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:63",{"_index":2417,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:73",{"_index":2419,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts",{"_index":2296,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:10",{"_index":2300,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:12",{"_index":2298,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:19",{"_index":2303,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:24",{"_index":2301,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:32",{"_index":2302,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:48",{"_index":2408,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:54",{"_index":2407,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:64",{"_index":2403,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:74",{"_index":2405,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:81",{"_index":2409,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:87",{"_index":2406,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":1973,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":1977,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":1976,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":1974,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":1981,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":1979,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":1978,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":1980,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":1975,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":2593,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":2596,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:17",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:24",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:27",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:9",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts",{"_index":1210,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:20",{"_index":2002,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:24",{"_index":2003,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:34",{"_index":1999,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1280,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:18",{"_index":2587,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:21",{"_index":2588,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:24",{"_index":2589,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:30",{"_index":2591,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:36",{"_index":2586,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":1983,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":1985,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":2005,"title":{},"body":{"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:12",{"_index":2014,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:17",{"_index":2012,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:22",{"_index":2016,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:8",{"_index":2010,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":2627,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:10",{"_index":2629,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:7",{"_index":2628,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":2022,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":2027,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":2025,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":2632,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":2637,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":2635,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":2603,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":2606,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":2608,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":2625,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":4058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts",{"_index":573,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:23",{"_index":577,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:26",{"_index":579,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:33",{"_index":581,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:39",{"_index":583,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:9",{"_index":607,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts",{"_index":632,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:11",{"_index":636,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:8",{"_index":634,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts",{"_index":779,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:10",{"_index":781,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:5",{"_index":1147,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/server.controller.ts",{"_index":2117,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":2118,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":2122,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/$1",{"_index":5105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":84,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":334,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":346,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":349,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":348,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":347,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":344,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":350,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":351,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":2647,"title":{},"body":{"classes/ValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":2649,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":4060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":829,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":803,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":2541,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":2551,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":2549,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":2548,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":2553,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":2555,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1935,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1942,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1945,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1952,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1956,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1959,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1958,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1957,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1955,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1964,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":4061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":261,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":263,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":285,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":287,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":286,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":288,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":262,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":1151,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":1137,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/test/helper.ts",{"_index":2488,"title":{},"body":{"classes/TestHelper.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:11",{"_index":2489,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:27",{"_index":2505,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:29",{"_index":2504,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:31",{"_index":2503,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:36",{"_index":2502,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:42",{"_index":2501,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:65",{"_index":2506,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:7",{"_index":2499,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:70",{"_index":2507,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:74",{"_index":2509,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:78",{"_index":2508,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:82",{"_index":2500,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:9",{"_index":2498,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:90",{"_index":2510,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5040,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5044,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5046,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":290,"title":{},"body":{"injectables/BaseRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":313,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":309,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":311,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":315,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":322,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":318,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":320,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":304,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":302,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":307,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":4068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":2047,"title":{},"body":{"classes/Scope.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:57",{"_index":2049,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:59",{"_index":2053,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:67",{"_index":2050,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:71",{"_index":2051,"title":{},"body":{"classes/Scope.html":{}}}],["appthis",{"_index":4254,"title":{},"body":{"index.html":{}}}],["arc",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4247,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":5564,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":4939,"title":{},"body":{"license.html":{}}}],["archives",{"_index":5613,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4105,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":2098,"title":{},"body":{"classes/ServerConsole.html":{},"dependencies.html":{}}}],["argument",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":1002,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5256,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":4902,"title":{},"body":{"license.html":{}}}],["around",{"_index":4952,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":4821,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":4832,"title":{},"body":{"license.html":{}}}],["array",{"_index":1216,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["array.isarray(constraint",{"_index":142,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(input",{"_index":2066,"title":{},"body":{"classes/Scope.html":{}}}],["array.isarray(user.permissions",{"_index":901,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrayofobjects",{"_index":616,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["arrayofobjects.length",{"_index":2087,"title":{},"body":{"classes/Scope.html":{}}}],["arrayofquerys",{"_index":2081,"title":{},"body":{"classes/Scope.html":{}}}],["arrays",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":4538,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1160,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["asking",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":5390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5269,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4359,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":4774,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":5538,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":4487,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4894,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":5577,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":4922,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4724,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":3561,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5463,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":4928,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":157,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":160,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":4734,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":4708,"title":{},"body":{"license.html":{}}}],["aud",{"_index":1312,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":1320,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":5458,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":4966,"title":{},"body":{"todo.html":{}}}],["auth.guard.ts",{"_index":1297,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":209,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":875,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":883,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":891,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":893,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":887,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":885,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":889,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":1304,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":1325,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":1324,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":687,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":692,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1143,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5468,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2734,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":688,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authguard",{"_index":1298,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1299,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":171,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4707,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":2436,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":207,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1740,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1886,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":196,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":202,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":4701,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":4798,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":4836,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4713,"title":{},"body":{"license.html":{}}}],["auto",{"_index":5193,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":3011,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":3759,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["avaible",{"_index":2514,"title":{},"body":{"classes/TestHelper.html":{}}}],["availability",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":969,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":2901,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":5240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":245,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4337,"title":{},"body":{"license.html":{}}}],["aws",{"_index":3985,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3438,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1214,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/StatusDomainService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":5282,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1750,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1969,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1972,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["bar",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":336,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":4217,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":152,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":930,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":260,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseInfo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/SchoolInfo.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TestHelper.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":494,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentity:7",{"_index":493,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentitywithtimestamps",{"_index":8,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:22",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:25",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:28",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baserepo",{"_index":289,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"coverage.html":{}}}],["baserepo:14",{"_index":1770,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:19",{"_index":1768,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:27",{"_index":1769,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:36",{"_index":1771,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:40",{"_index":1774,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:44",{"_index":1772,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:48",{"_index":1773,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:53",{"_index":1766,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:9",{"_index":1767,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["basic",{"_index":4496,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":3217,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":168,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4113,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":4371,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":4382,"title":{},"body":{"license.html":{}}}],["before",{"_index":564,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5170,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4286,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4516,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":5837,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":394,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":2545,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":3492,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":4830,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5265,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":5342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4524,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4365,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5043,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":4925,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":1559,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"classes/TestHelper.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":2966,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4593,"title":{},"body":{"license.html":{}}}],["bind",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":5436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blue",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["bob",{"_index":5612,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1624,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4209,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":628,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4064,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":4237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":4015,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":5073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bosscloud",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":3551,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":2743,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":2886,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":5607,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":4948,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":4946,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["btw",{"_index":283,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5446,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":5324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1019,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["buildandaddorquery",{"_index":604,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["buildandaddorquery(arrayofobjects",{"_index":611,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["building",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":5172,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":2990,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":5352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":4958,"title":{},"body":{"todo.html":{}}}],["business",{"_index":337,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":112,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":86,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":100,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":105,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":104,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":103,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":102,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":106,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":108,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["bylessonsornone",{"_index":2385,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonsornone(lessonids",{"_index":2390,"title":{},"body":{"classes/TaskScope.html":{}}}],["byparentids",{"_index":2386,"title":{},"body":{"classes/TaskScope.html":{}}}],["byparentids(parentids",{"_index":2393,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypublic",{"_index":2387,"title":{},"body":{"classes/TaskScope.html":{}}}],["bytargets",{"_index":1835,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1837,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1836,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1839,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":2201,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":2204,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1215,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":2006,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":3637,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":5474,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":833,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":1577,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":2768,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":838,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":1052,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":3331,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":5537,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":5843,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["capabilities",{"_index":5176,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capitalization",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":5384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":3356,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4571,"title":{},"body":{"license.html":{}}}],["case",{"_index":869,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":4381,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":996,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":1000,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5448,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":2560,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":2563,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5450,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5263,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5286,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":3152,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":1480,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":167,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":4738,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1128,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":4698,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":4748,"title":{},"body":{"license.html":{}}}],["chain",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":2902,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4116,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":2671,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1472,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":2661,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2663,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":2688,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":2961,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":5478,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":4676,"title":{},"body":{"license.html":{}}}],["charge",{"_index":4349,"title":{},"body":{"license.html":{}}}],["chat",{"_index":3116,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":5333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":276,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":5392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":1094,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4296,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4301,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":3702,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":4261,"title":{},"body":{"index.html":{}}}],["children",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":3766,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":4884,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4188,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":4522,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4530,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4921,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4788,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4800,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":921,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":1290,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":3553,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":447,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":4627,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5209,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":340,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":1555,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":4302,"title":{},"body":{"index.html":{}}}],["close",{"_index":1574,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":4917,"title":{},"body":{"license.html":{}}}],["closing",{"_index":3347,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4239,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":2907,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":3981,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2128,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4165,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4152,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":4978,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":197,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":198,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":200,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":199,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":384,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":922,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":923,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":924,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":1392,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":1393,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1489,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1490,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1491,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1731,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1734,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1732,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1733,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":2106,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":2107,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_providers",{"_index":2108,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":2119,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":2120,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":2288,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":2289,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2621,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2623,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2622,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":5442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":3670,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":88,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":3683,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":1104,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":4861,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User-1.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User-1.html":{}}}],["collections",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":411,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"miscellaneous/variables.html":{}}}],["columnnames",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":4871,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":4588,"title":{},"body":{"license.html":{}}}],["come",{"_index":4376,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4578,"title":{},"body":{"license.html":{}}}],["command",{"_index":2101,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":2094,"title":{},"body":{"classes/ServerConsole.html":{}}}],["commander",{"_index":4122,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4449,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":1224,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["commentschema",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":4662,"title":{},"body":{"license.html":{}}}],["commit",{"_index":3465,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":4813,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4299,"title":{},"body":{"index.html":{}}}],["common",{"_index":4139,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":5292,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4492,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4333,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":5540,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":1016,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":5885,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4584,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4592,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4845,"title":{},"body":{"license.html":{}}}],["compile",{"_index":827,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4475,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":4295,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completed",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":5371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":1483,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":4770,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5273,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4513,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5205,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":3133,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4276,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":4123,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":2446,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":4423,"title":{},"body":{"license.html":{}}}],["computetaskstatusforstudent",{"_index":2411,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforstudent(task",{"_index":2416,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher",{"_index":2412,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher(task",{"_index":2418,"title":{},"body":{"injectables/TaskUC.html":{}}}],["concept",{"_index":2880,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5497,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":4877,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":5560,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":4125,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":5719,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":4839,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4393,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":2131,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2125,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":2146,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":2147,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":2145,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":5132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":5215,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5139,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":391,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":5496,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":3753,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4277,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1575,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":5018,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":3000,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":5419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":3021,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":4759,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4901,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":4726,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":3317,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":5582,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":375,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console.module.ts",{"_index":2111,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolemodule",{"_index":2112,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":364,"title":{"injectables/ConsoleWriter.html":{}},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{},"overview.html":{}}}],["conspicuously",{"_index":4559,"title":{},"body":{"license.html":{}}}],["const",{"_index":136,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4505,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":140,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"injectables/CourseRepo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('dashboard_repo",{"_index":798,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(@inject(request",{"_index":956,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":1523,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":129,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":2092,"title":{},"body":{"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":2230,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["constructor(dashboardrepo",{"_index":792,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":1954,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":300,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":881,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":2653,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(message",{"_index":2648,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":1861,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":19,"title":{},"body":{"classes/Account.html":{}}}],["constructor(private",{"_index":242,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":418,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["constructor(protected",{"_index":323,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["constructor(readonly",{"_index":113,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":972,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":2024,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(submissions",{"_index":2163,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["constructor(task",{"_index":1265,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":2414,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(title",{"_index":717,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["constructor(type",{"_index":862,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":342,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":1331,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(useridwithwritepermissions",{"_index":2297,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["constructor(userrepo",{"_index":2634,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":2605,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":95,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["constructor(x",{"_index":726,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["construed",{"_index":4849,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4645,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":3033,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":4846,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":5245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":4291,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":1795,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":499,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":151,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":156,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":4810,"title":{},"body":{"license.html":{}}}],["context",{"_index":840,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":5845,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":3312,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":4670,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":4723,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4855,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4340,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":4797,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4799,"title":{},"body":{"license.html":{}}}],["control",{"_index":3879,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":4802,"title":{},"body":{"license.html":{}}}],["controller",{"_index":677,"title":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('dashboard",{"_index":693,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('news",{"_index":1636,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":2259,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":2482,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":2600,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":5509,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dashboard.controller",{"_index":1395,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/dto",{"_index":756,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":2639,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":2217,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":1739,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":2292,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":1742,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":679,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":4442,"title":{},"body":{"license.html":{}}}],["convention",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":4429,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4834,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4677,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4437,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4722,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4332,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4326,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3364,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":4394,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4328,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4316,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4401,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4519,"title":{},"body":{"license.html":{}}}],["core",{"_index":390,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":2132,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1741,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":382,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2698,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":4896,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3797,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":4478,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2712,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":4614,"title":{},"body":{"license.html":{}}}],["count",{"_index":596,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":585,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1783,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":2354,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":4789,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5047,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":4427,"title":{},"body":{"license.html":{}}}],["country",{"_index":4826,"title":{},"body":{"license.html":{}}}],["counts",{"_index":5042,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":409,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course._id",{"_index":1456,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["course.entity",{"_index":1444,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["courseentities",{"_index":2141,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":617,"title":{"classes/Coursegroup.html":{}},"body":{"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":1445,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["coursegroupid",{"_index":2189,"title":{},"body":{"classes/Submission.html":{}}}],["coursegroupinfo",{"_index":474,"title":{"classes/CourseGroupInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroupinfoproperties",{"_index":480,"title":{"interfaces/CoursegroupInfoProperties.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"coverage.html":{}}}],["coursegrouprepo",{"_index":631,"title":{"injectables/CoursegroupRepo.html":{}},"body":{"injectables/CoursegroupRepo.html":{},"coverage.html":{}}}],["coursegroups",{"_index":486,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["coursegroupsofuser",{"_index":2213,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":478,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/Task.html":{}}}],["courseids",{"_index":637,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["courseids.map((id",{"_index":639,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["courseinfo",{"_index":490,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["coursename",{"_index":2374,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":495,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":565,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courserepo",{"_index":572,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"coverage.html":{},"overview.html":{}}}],["courses",{"_index":454,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursescope",{"_index":588,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["coursetyps",{"_index":1423,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["court",{"_index":4854,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4916,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4816,"title":{},"body":{"license.html":{}}}],["cover",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":3296,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4413,"title":{},"body":{"license.html":{}}}],["covers",{"_index":5835,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1056,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1637,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1599,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1863,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createandadduser",{"_index":1410,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createandadduser(user",{"_index":1434,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createcourse",{"_index":1401,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcourse(type",{"_index":1422,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcoursegroup",{"_index":1402,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcoursegroup(course",{"_index":1425,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcurrenttestuser",{"_index":4059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1477,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["createentityid",{"_index":1411,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createerrorresponse",{"_index":997,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":1004,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4022,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":1035,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4023,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":1043,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":1024,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":1059,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":1042,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":1063,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":1038,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createid",{"_index":1412,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createid(entityid",{"_index":1437,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createinstance",{"_index":507,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":538,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createlessonwithtask",{"_index":2317,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createmikroormmodule",{"_index":1551,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":1573,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":5841,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":5570,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":641,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createorqueryfromlist",{"_index":4070,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createorqueryfromlist(arrayofobjects",{"_index":2071,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["createparamdecorator((data",{"_index":5070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":1512,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":1518,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":1385,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":1389,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":1021,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createschool",{"_index":1403,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createspinner",{"_index":372,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["createstudentcourse",{"_index":1404,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createsubmission",{"_index":2398,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createsubmission(task",{"_index":2321,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createsubmissionsforeachstudent",{"_index":2399,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createsubmissionsforeachstudent(task",{"_index":2326,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createsubstitutioncourse",{"_index":1405,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createtask",{"_index":2400,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createtask(parentid",{"_index":2312,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createtaskparent",{"_index":2401,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createtaskparent(useridwithwritepermissions",{"_index":2309,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createteachercourse",{"_index":1406,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createteammembersubmission",{"_index":2402,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createteammembersubmission(task",{"_index":2324,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createtestmodule",{"_index":822,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createuser",{"_index":1407,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["creating",{"_index":645,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1100,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":500,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":514,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":5421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4454,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":392,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5457,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":5562,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":5629,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":4129,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2845,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1081,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1083,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":269,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":4751,"title":{},"body":{"license.html":{}}}],["curentuser",{"_index":2434,"title":{},"body":{"injectables/TaskUC.html":{}}}],["current",{"_index":1809,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":1561,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1603,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1639,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":2452,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":695,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentvalue",{"_index":2074,"title":{},"body":{"classes/Scope.html":{}}}],["currentvalue[selectedkey",{"_index":2076,"title":{},"body":{"classes/Scope.html":{}}}],["custom",{"_index":871,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4606,"title":{},"body":{"license.html":{}}}],["customary",{"_index":4868,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4611,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":395,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":1487,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5231,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":5270,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":441,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":4899,"title":{},"body":{"license.html":{}}}],["dash",{"_index":3497,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dashboard",{"_index":682,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{}}}],["dashboard.getgrid().map((gridelement",{"_index":760,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.id",{"_index":758,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard_repo",{"_index":1396,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":678,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardentity",{"_index":697,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["dashboardgridelementresponse",{"_index":735,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboardmapper",{"_index":690,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"coverage.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":696,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardrepo",{"_index":778,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardresponse",{"_index":689,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboards",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["dashboarduc",{"_index":685,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":762,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":771,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.id",{"_index":765,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":769,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":767,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":991,"title":{},"body":{"interfaces/GlobalConstants.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":2150,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":1538,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:48",{"_index":1540,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:58",{"_index":1542,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":1537,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":5886,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5142,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":849,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":5129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":5439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":2876,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":470,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5418,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":985,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":986,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":987,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":5039,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dbs",{"_index":5406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1164,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":1168,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":1179,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4278,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":2157,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4542,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1357,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":2988,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":5658,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":356,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":4714,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":1110,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4236,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":29,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/DelayController.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decryption",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":2798,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4532,"title":{},"body":{"license.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default...what",{"_index":444,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":422,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":424,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":426,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5141,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultgridreference",{"_index":709,"title":{"classes/DefaultGridReference.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["defaultgridreference('exampletitle",{"_index":787,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["defaultmessage",{"_index":118,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":654,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":2547,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":4893,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4366,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4851,"title":{},"body":{"license.html":{}}}],["define",{"_index":273,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":5152,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":282,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":127,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2900,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":815,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":819,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":802,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1595,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1605,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1865,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":1604,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2347,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1655,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":5438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":3204,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":5703,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":4682,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":4814,"title":{},"body":{"license.html":{}}}],["depend",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":173,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":5134,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":951,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":4822,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1161,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5455,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":5863,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5264,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":124,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":5246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":5237,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":4622,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4331,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5477,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":4875,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":135,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":2652,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":2654,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4274,"title":{},"body":{"index.html":{}}}],["details",{"_index":89,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1018,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":5101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":3380,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":4654,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":5897,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5164,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4240,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":2887,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":3432,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":4308,"title":{},"body":{"index.html":{}}}],["di",{"_index":5521,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["diagonalsize",{"_index":784,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dictionary",{"_index":2123,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":2918,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4162,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5006,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":4874,"title":{},"body":{"license.html":{}}}],["different",{"_index":1796,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":4705,"title":{},"body":{"license.html":{}}}],["digits",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1516,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4517,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4628,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4417,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":4962,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":559,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":4552,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4885,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4703,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":5602,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":267,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":544,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":569,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":4837,"title":{},"body":{"license.html":{}}}],["display",{"_index":2780,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["displayat",{"_index":501,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":706,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":653,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4439,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":3703,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":5156,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":4878,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4324,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":4932,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4840,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4395,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5289,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5266,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":2833,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":4994,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":646,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":3265,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":2665,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1762,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doesn't",{"_index":1564,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":5872,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":2271,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":4130,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":280,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4298,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":4656,"title":{},"body":{"license.html":{}}}],["down",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":4767,"title":{},"body":{"license.html":{}}}],["driven",{"_index":5590,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":5038,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":644,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5501,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1694,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":2284,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1715,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1710,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1696,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":2286,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":2273,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1987,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.gridelements",{"_index":759,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":757,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1989,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":2040,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1719,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":1995,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":1708,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":1993,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":1698,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1700,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":2277,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":1706,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1702,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1704,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1692,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1723,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1717,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1713,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":1011,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":1010,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":2598,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":1645,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":1093,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":5120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1189,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{}}}],["dummy",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":3282,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":279,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":4605,"title":{},"body":{"license.html":{}}}],["duration",{"_index":831,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":828,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2717,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":4653,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4488,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1501,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1070,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":270,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":1072,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":1073,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1745,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":3360,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4412,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":940,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":520,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":4914,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4549,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4533,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4930,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":4782,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4934,"title":{},"body":{"license.html":{}}}],["element",{"_index":740,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/TestHelper.html":{}}}],["elementdto",{"_index":761,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":770,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":764,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":768,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":766,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":774,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":776,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementreference",{"_index":786,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["elements",{"_index":749,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":303,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/ICourseProperties.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":5882,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":5856,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1269,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":5603,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":5893,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":4601,"title":{},"body":{"license.html":{}}}],["employer",{"_index":4941,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1849,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1841,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":609,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":1099,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":1095,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":1106,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":4062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4431,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":5294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5268,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":4374,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2854,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":5902,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2870,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":3404,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":2484,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4554,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":5351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4255,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":1383,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":4847,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4576,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4863,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":69,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":333,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":327,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities/learnroom/dashboard.entity",{"_index":755,"title":{},"body":{"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["entitiyids",{"_index":257,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":52,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity._id",{"_index":2536,"title":{},"body":{"classes/TestHelper.html":{}}}],["entity.id",{"_index":2535,"title":{},"body":{"classes/TestHelper.html":{}}}],["entity.ts",{"_index":5500,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/base.entity",{"_index":2512,"title":{},"body":{"classes/TestHelper.html":{}}}],["entity/task",{"_index":2426,"title":{},"body":{"injectables/TaskUC.html":{}}}],["entityid",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entityids",{"_index":2246,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["entitymanager",{"_index":301,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2152,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":250,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":254,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":277,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":2697,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1351,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":532,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":4224,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":664,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":2728,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":4971,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":3433,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":4508,"title":{},"body":{"license.html":{}}}],["err",{"_index":2564,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":5763,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":117,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":1170,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":859,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":994,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":999,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":1003,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":1005,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":1037,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":920,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":134,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":123,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":132,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":130,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":1076,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":1066,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":405,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":5403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":385,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":1065,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":109,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":1048,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":363,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":1033,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":128,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":4132,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":558,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":563,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":1067,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5197,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5279,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":4472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5258,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2237,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["etc",{"_index":3939,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":5694,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":3800,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2741,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":2995,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":4322,"title":{},"body":{"license.html":{}}}],["everything",{"_index":3350,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":1361,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4411,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":4486,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2931,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":855,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":1030,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":1025,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1027,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":1061,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":1118,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":995,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":1029,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1023,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":1508,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":5243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":1514,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":4643,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3193,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":3526,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":4807,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4511,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4856,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4466,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1746,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5454,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1751,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5159,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":2495,"title":{},"body":{"classes/TestHelper.html":{},"license.html":{}}}],["execution",{"_index":2543,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":837,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":4783,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4550,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1196,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1306,"title":{},"body":{"interfaces/JwtConstants.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":5652,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1353,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exp",{"_index":1311,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":5867,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":5866,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":4660,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":3549,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":1329,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":1323,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":952,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":4502,"title":{},"body":{"license.html":{}}}],["export",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":5515,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":3556,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":205,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":2727,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":949,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":4887,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":1069,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":4733,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1096,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":1376,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4587,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4441,"title":{},"body":{"license.html":{}}}],["external",{"_index":3185,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":1302,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":502,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":1270,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["externaluseridentifier'})@unique",{"_index":2580,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["extract",{"_index":5354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":1115,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":1337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5465,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":4720,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":659,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["f23f76",{"_index":721,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["facade",{"_index":3420,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":4869,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4512,"title":{},"body":{"license.html":{}}}],["factory",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":3154,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":119,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":5903,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":3191,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":4909,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4507,"title":{},"body":{"license.html":{}}}],["fake",{"_index":712,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fallback",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":912,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":4648,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4290,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4409,"title":{},"body":{"license.html":{}}}],["fast",{"_index":5614,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4201,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":4657,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":208,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":895,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":206,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersapp",{"_index":958,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":970,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":203,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":918,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":1013,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":965,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4078,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4080,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":4081,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":950,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4082,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4083,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":201,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":936,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":943,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":882,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":953,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":2711,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4289,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5206,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":4569,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":5218,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["ffffff",{"_index":2307,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["field",{"_index":2655,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["fields",{"_index":4960,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5261,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["fileids",{"_index":1235,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":5181,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["filenames",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":981,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["filestorage/security",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["filetaskinfo",{"_index":976,"title":{"classes/FileTaskInfo.html":{}},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filetaskinfoproperties",{"_index":978,"title":{"interfaces/FileTaskInfoProperties.html":{}},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"coverage.html":{}}}],["filter",{"_index":856,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2466,"title":{},"body":{"injectables/TaskUC.html":{}}}],["filter.query.ts",{"_index":1658,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1664,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1662,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1668,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1854,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":858,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":605,"title":{},"body":{"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":1667,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":4743,"title":{},"body":{"license.html":{}}}],["find",{"_index":939,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":942,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1596,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1608,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findall(parentids",{"_index":2335,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findall(targets",{"_index":1756,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbytaskids",{"_index":2202,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":2206,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuserid",{"_index":574,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":578,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/SubmissionRepo.html":{}}}],["findallcurrent",{"_index":2330,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallcurrent(parentids",{"_index":2340,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforstudent",{"_index":575,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforstudent(userid",{"_index":580,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":576,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":582,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteam",{"_index":2477,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":2478,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":1856,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1867,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":633,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":635,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["findbyid",{"_index":2007,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":2011,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":2008,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":2013,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findforuser",{"_index":683,"title":{},"body":{"controllers/DashboardController.html":{}}}],["finding",{"_index":1133,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1754,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1759,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1597,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1613,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1755,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1764,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1857,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1873,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2151,"title":{},"body":{"modules/ServerModule.html":{}}}],["findtasksandcount",{"_index":2331,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":2342,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["findvisiblelessons",{"_index":2332,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findvisiblelessons(parentids",{"_index":2344,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finished",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1872,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1145,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["fit",{"_index":5338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":4889,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2778,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5194,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":2672,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":3344,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1666,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":4493,"title":{},"body":{"license.html":{}}}],["flush",{"_index":291,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["fly",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":5834,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":4300,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":5495,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":3872,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":3123,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5212,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":602,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":589,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4548,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":5574,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":1112,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":3417,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcearray",{"_index":4071,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["forcearray(arrayofobjects).reduce(reducer",{"_index":2082,"title":{},"body":{"classes/Scope.html":{}}}],["forcearray(input",{"_index":2065,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["forcefullsync",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":5892,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":3897,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":438,"title":{},"body":{"classes/Course.html":{},"classes/ErrorResponse.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":3605,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4596,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1496,"title":{},"body":{"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1497,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2155,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4319,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5459,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4317,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4338,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4143,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":5584,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":5583,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["fulfilled",{"_index":5378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4536,"title":{},"body":{"license.html":{}}}],["full",{"_index":3056,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fully",{"_index":715,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["function",{"_index":1034,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":393,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5271,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":4671,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4230,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":4624,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":522,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5210,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":5195,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":2802,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":4484,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3357,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4266,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":5201,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":5329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1614,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":2479,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('me",{"_index":2595,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":946,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getdefaultmaxduedate",{"_index":2333,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getdescriptions",{"_index":416,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["getdetails",{"_index":93,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getentitypermissions",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getfirstuser",{"_index":1413,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getgrid",{"_index":700,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gethello",{"_index":805,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getinout",{"_index":2091,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":2097,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getitems",{"_index":2465,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getmetadata",{"_index":708,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getnewspermissions",{"_index":1858,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1875,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofstudents",{"_index":417,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["getotheruser",{"_index":1414,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getparentid",{"_index":619,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["getpermittedcourses",{"_index":2229,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(userid",{"_index":2232,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":235,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":876,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":884,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":877,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":886,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getposition",{"_index":722,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getquery",{"_index":2052,"title":{},"body":{"classes/Scope.html":{}}}],["getrequiredpermissions",{"_index":1859,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1878,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":94,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getschool",{"_index":1415,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getservice",{"_index":971,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":957,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1860,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1881,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getter",{"_index":442,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":2552,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":2659,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":878,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":888,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusers",{"_index":1416,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getuserschoolpermissions",{"_index":879,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":890,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":780,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":880,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":892,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":2633,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(currentuser",{"_index":2636,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":4246,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":4151,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":4172,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":4164,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":2843,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4566,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1602,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":926,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4572,"title":{},"body":{"license.html":{}}}],["global",{"_index":400,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"classes/TestHelper.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":983,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":857,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":1085,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":1286,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":988,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":1088,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":4312,"title":{},"body":{"license.html":{}}}],["go",{"_index":2364,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5002,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4388,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":5610,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":1503,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":4695,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4389,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":1225,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":1226,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["graded",{"_index":1260,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradedstudentids",{"_index":2463,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradedusers.add(submission.student.id",{"_index":2183,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["gradedusers.size",{"_index":2186,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["gradefileids",{"_index":1237,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":1227,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":4715,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4497,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4762,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4949,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":4623,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4924,"title":{},"body":{"license.html":{}}}],["grid",{"_index":699,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridarray",{"_index":783,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["gridelement",{"_index":725,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["gridelement.getmetadata",{"_index":763,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["gridelement.getposition",{"_index":773,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["gridelementreferencemetadata",{"_index":704,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":750,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["group",{"_index":476,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"coverage.html":{}}}],["grouping",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":2238,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["gt",{"_index":1852,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":2397,"title":{},"body":{"classes/TaskScope.html":{}}}],["guarantee",{"_index":1649,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5072,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":5524,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5470,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5151,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":5868,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":2572,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":3315,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":338,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":3602,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":1051,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":396,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":5559,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":5277,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":72,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["haspermission",{"_index":2451,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":252,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":2413,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":2423,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haswritepermission",{"_index":1253,"title":{},"body":{"interfaces/ITaskParent.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["haswritepermission(userid",{"_index":1193,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["having",{"_index":4510,"title":{},"body":{"license.html":{}}}],["header",{"_index":1318,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":5398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4373,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":445,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":1017,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helper.createandadduser",{"_index":2496,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getfirstuser",{"_index":2492,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getotheruser",{"_index":2494,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getusers",{"_index":2493,"title":{},"body":{"classes/TestHelper.html":{}}}],["helpers",{"_index":3459,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5179,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":275,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":4804,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5487,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":1459,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":5251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":5578,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":3261,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4163,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4166,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":4740,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4702,"title":{},"body":{"license.html":{}}}],["holding",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":3044,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1232,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":1194,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":5257,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":3354,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":3499,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":446,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":1001,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":1082,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":4630,"title":{},"body":{"license.html":{}}}],["hot",{"_index":4995,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":4649,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2126,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":511,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["htmlcontent",{"_index":162,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":164,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["http",{"_index":125,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4321,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/licenses",{"_index":4945,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":341,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":5525,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":5870,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":4977,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":2906,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":5220,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":5563,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5221,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5223,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5219,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":4964,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5224,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpstatus",{"_index":110,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":120,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":357,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["i...properties",{"_index":451,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":1310,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":621,"title":{"interfaces/ICoursegroupProperties.html":{}},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"coverage.html":{}}}],["icourseproperties",{"_index":419,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{}}}],["icreatenews",{"_index":1126,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":1136,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1965,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1967,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.tohexstring",{"_index":2315,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["id.ts",{"_index":5022,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardrepo",{"_index":782,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["identical",{"_index":1379,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":4828,"title":{},"body":{"license.html":{}}}],["identified",{"_index":5695,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":865,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":1378,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":5883,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":237,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["ierrortype",{"_index":343,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifindoptions",{"_index":1150,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["iframe",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":3668,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":1346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["igridelement",{"_index":702,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["igridelementreference",{"_index":707,"title":{"interfaces/IGridElementReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["ilogger",{"_index":1162,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":948,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":966,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":935,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4256,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":1471,"title":{},"body":{"injectables/Logger.html":{},"classes/TestHelper.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":4471,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":5526,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":1307,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":710,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":5575,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":5881,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":4850,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":954,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":4795,"title":{},"body":{"license.html":{}}}],["imports",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":4725,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4853,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1848,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":4367,"title":{},"body":{"license.html":{}}}],["improves",{"_index":5700,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5502,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":4903,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4906,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4320,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4900,"title":{},"body":{"license.html":{}}}],["include",{"_index":266,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Scope.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":4467,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4426,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":3496,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4595,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1101,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":4372,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4870,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4652,"title":{},"body":{"license.html":{}}}],["increase",{"_index":3089,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2497,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["increases",{"_index":5356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":4721,"title":{},"body":{"license.html":{}}}],["independant",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4585,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@property",{"_index":428,"title":{},"body":{"classes/Course.html":{}}}],["index()@property({fieldname",{"_index":430,"title":{},"body":{"classes/Course.html":{}}}],["index({name",{"_index":2584,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["index.ts",{"_index":4957,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":2970,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":4765,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":4731,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3165,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4406,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4663,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":66,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":1134,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":369,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["info.entity",{"_index":485,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":477,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":2612,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:13",{"_index":2631,"title":{},"body":{"classes/UserTaskInfo.html":{}}}],["info.entity.ts:14",{"_index":1461,"title":{},"body":{"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:16",{"_index":483,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:17",{"_index":980,"title":{},"body":{"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:19",{"_index":481,"title":{},"body":{"classes/CourseGroupInfo.html":{}}}],["info.entity.ts:20",{"_index":979,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:7",{"_index":492,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1688,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":2036,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":2038,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1831,"title":{},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":2043,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":2045,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":2620,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":2044,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":4636,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":872,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":5513,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":4763,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4792,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4420,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":268,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["inheritances",{"_index":1794,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{}}}],["init",{"_index":1417,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["inital",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":1478,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5464,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":4786,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":5125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":795,"title":{},"body":{"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('mail_service_options",{"_index":1530,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject(mikroorm",{"_index":1570,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":1572,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":210,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":931,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":1474,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":155,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":154,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["inner",{"_index":4259,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":1289,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":5869,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4480,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":4667,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4680,"title":{},"body":{"license.html":{}}}],["instance",{"_index":961,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":1015,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":3983,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instant",{"_index":450,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["instead",{"_index":2909,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4275,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4561,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3046,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["integrity",{"_index":471,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["intended",{"_index":4341,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4553,"title":{},"body":{"license.html":{}}}],["interact",{"_index":4936,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":4865,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4434,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5295,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4438,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5456,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":835,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":836,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":823,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":408,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":386,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4607,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4779,"title":{},"body":{"license.html":{}}}],["interface",{"_index":146,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":1342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":148,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":4672,"title":{},"body":{"license.html":{}}}],["internal",{"_index":528,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":380,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["internalservererrorexception",{"_index":1006,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":1041,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":4913,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4477,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4491,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":5608,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":932,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":3867,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":3832,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5133,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":4953,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":4582,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":5484,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5489,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":5609,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":1156,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iparentdescriptionsproperties",{"_index":1181,"title":{"interfaces/IParentDescriptionsProperties.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":1211,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2124,"title":{},"body":{"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":1142,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{}}}],["irole",{"_index":1144,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":1209,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":4499,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1669,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":1014,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":1055,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":671,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":649,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdefined",{"_index":4072,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefined(input",{"_index":2058,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefined(key",{"_index":2069,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object",{"_index":2068,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object[key",{"_index":2070,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(selectedkey",{"_index":2079,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(targetkey",{"_index":2080,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(testeddefinedvalue",{"_index":2063,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue",{"_index":4073,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedobjectvalue(currentvalue",{"_index":2075,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue(object",{"_index":2067,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery",{"_index":4074,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(input",{"_index":2059,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(query",{"_index":2064,"title":{},"body":{"classes/Scope.html":{}}}],["iserv",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":1012,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":1050,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":1238,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{}}}],["isgraded(submission",{"_index":2167,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["isin",{"_index":1670,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1674,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1946,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1943,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1937,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismember",{"_index":620,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["ismember(userid",{"_index":626,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["ismongoid",{"_index":1671,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["iso",{"_index":77,"title":{},"body":{"classes/Account.html":{}}}],["isolated",{"_index":5490,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":672,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1665,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":2576,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1659,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":2575,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1663,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1913,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":1314,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":673,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":647,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":662,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":658,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":590,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["issubstitutionteacher",{"_index":593,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issue",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":1321,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":3313,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":592,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["istechnicalerror",{"_index":1020,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":1058,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":1488,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionproperties",{"_index":1222,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["isubmissionstatus",{"_index":5026,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["iswhitelisted",{"_index":1368,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":1371,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":2915,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskparent",{"_index":1192,"title":{"interfaces/ITaskParent.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["itaskproperties",{"_index":1188,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["itaskstatus",{"_index":1257,"title":{"interfaces/ITaskStatus.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["item",{"_index":4452,"title":{},"body":{"license.html":{}}}],["items",{"_index":1213,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":4683,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1132,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":1267,"title":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{}},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["iusertaskinfoproperties",{"_index":1283,"title":{"interfaces/IUserTaskInfoProperties.html":{}},"body":{"interfaces/IUserTaskInfoProperties.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["jest",{"_index":2840,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":4076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4283,"title":{},"body":{"index.html":{}}}],["job",{"_index":5429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":3773,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":3238,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":4146,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":443,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":3416,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.stringify(e.constraints",{"_index":1074,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":4148,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":1316,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":5839,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":1340,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_whitelist_accept_all",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["jwtauthguard",{"_index":1295,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":191,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":1349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":1348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":1301,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1326,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":178,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":179,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":1381,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":2666,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5157,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4473,"title":{},"body":{"license.html":{}}}],["key",{"_index":1919,"title":{},"body":{"injectables/NewsUc.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["keyof",{"_index":5048,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":4430,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4329,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":4355,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":4818,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4825,"title":{},"body":{"license.html":{}}}],["known",{"_index":3213,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5449,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":453,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":4293,"title":{},"body":{"index.html":{}}}],["language",{"_index":2874,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4589,"title":{},"body":{"license.html":{}}}],["last",{"_index":2619,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastldapsync",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":1146,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["lasttriedfailedlogin",{"_index":11,"title":{},"body":{"classes/Account.html":{}}}],["later",{"_index":548,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":1871,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5214,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":4976,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4422,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4398,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4790,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":4956,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":2691,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":4150,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4153,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":3653,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4938,"title":{},"body":{"license.html":{}}}],["lean",{"_index":4168,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":2210,"title":{},"body":{"injectables/SubmissionRepo.html":{},"changelog.html":{}}}],["learnroommodule",{"_index":1391,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["learnroomtesthelper",{"_index":1397,"title":{"classes/LearnroomTestHelper.html":{}},"body":{"classes/LearnroomTestHelper.html":{},"coverage.html":{}}}],["leave",{"_index":5012,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":2542,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":927,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":5202,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5183,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5003,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4361,"title":{},"body":{"license.html":{}}}],["length",{"_index":472,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["lern",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":3927,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":1187,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["lessonid",{"_index":1195,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonids",{"_index":2392,"title":{},"body":{"classes/TaskScope.html":{}}}],["lessons",{"_index":1462,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessontaskinfo",{"_index":1186,"title":{"classes/LessonTaskInfo.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessontaskinfoproperties",{"_index":1460,"title":{"interfaces/LessonTaskInfoProperties.html":{}},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"coverage.html":{}}}],["letter",{"_index":5535,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4378,"title":{},"body":{"license.html":{}}}],["level",{"_index":3790,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":4704,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4419,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4465,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":4644,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4311,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4402,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4403,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4405,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4335,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4766,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4712,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":4760,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1158,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"license.html":{}}}],["limitation",{"_index":4897,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2839,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":2912,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":561,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2849,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4489,"title":{},"body":{"license.html":{}}}],["links",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":4991,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":234,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":436,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/StatusDomainService.html":{},"classes/TaskResponse.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":4787,"title":{},"body":{"license.html":{}}}],["living",{"_index":5606,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":4969,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5510,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":2435,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":3047,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5150,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5162,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":2156,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":5572,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":3461,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1008,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":1165,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":1173,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":4992,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5475,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4273,"title":{},"body":{"index.html":{}}}],["logger",{"_index":834,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":998,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":842,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":1078,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":1075,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":1062,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":1469,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":1493,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":406,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":1009,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":387,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":398,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":830,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":843,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":839,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":2363,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":3053,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":5544,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":4955,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4294,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1305,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":4904,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4907,"title":{},"body":{"license.html":{}}}],["lost",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":5253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":5536,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1853,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":5461,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":5891,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4598,"title":{},"body":{"license.html":{}}}],["made",{"_index":4368,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":165,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["mail.interface",{"_index":1529,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":1506,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":1519,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":150,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailcatcher",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":158,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["maildrop",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":1494,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":2144,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":1498,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{}}}],["mails",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":1505,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["mailserviceoptions",{"_index":1525,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["main",{"_index":2742,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":962,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":5408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":3617,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":3545,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2946,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4469,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1377,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4527,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2574,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":2366,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":3139,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":2747,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4101,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":4959,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":4805,"title":{},"body":{"license.html":{}}}],["manual",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":3381,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User-1.html":{}}}],["manytomany('role",{"_index":1217,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["manytomany({fieldname",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":508,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":513,"title":{},"body":{"classes/CourseNews.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":3160,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((submission",{"_index":2468,"title":{},"body":{"injectables/TaskUC.html":{}}}],["mapcreatenewstodomain",{"_index":1676,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1679,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":5517,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":5518,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1677,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1681,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":5402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":2638,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5516,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/dashboard.mapper",{"_index":691,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":1634,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":2257,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":5838,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":2518,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":5315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":752,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":753,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":1683,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":2037,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":2216,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":2267,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":1984,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["maptoresponse(userinfo",{"_index":2614,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1678,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1685,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":4848,"title":{},"body":{"license.html":{}}}],["marked",{"_index":4710,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4719,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4400,"title":{},"body":{"license.html":{}}}],["master",{"_index":3310,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":873,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":354,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4514,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4684,"title":{},"body":{"license.html":{}}}],["materials",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":3003,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1947,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1951,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1940,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":1261,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":1558,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":4997,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":2601,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":2594,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":4727,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4305,"title":{},"body":{"index.html":{}}}],["means",{"_index":4260,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4535,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4263,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":5488,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4558,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4570,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4453,"title":{},"body":{"license.html":{}}}],["member",{"_index":898,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1536,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4450,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4888,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4433,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4310,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":4776,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":90,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":4501,"title":{},"body":{"license.html":{}}}],["meta",{"_index":5876,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":4191,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":941,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":92,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metic",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":3398,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":5355,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":3648,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4155,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":3892,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1747,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1749,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":55,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":1543,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":4990,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":1566,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":1568,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":1569,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":1544,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":2148,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":1552,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":1567,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":1545,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":2556,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":153,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":1948,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1949,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1950,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1939,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":5542,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":5896,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4223,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":4709,"title":{},"body":{"license.html":{}}}],["missing",{"_index":960,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1847,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5281,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4156,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":3467,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2862,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":665,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1924,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4396,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4456,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3913,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":4575,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4363,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4424,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":5136,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":170,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":5851,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":5854,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":5853,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5094,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":5772,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":5550,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":5545,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":1547,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":2129,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":5556,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":5554,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":5555,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/lernroom/lernroom.module",{"_index":2137,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/mail/mail.module",{"_index":2136,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity",{"_index":2138,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":2135,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":2139,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":2133,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/entity",{"_index":2140,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":2134,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":4158,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":1557,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":1554,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongod.geturi",{"_index":1556,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodatabasemoduleoptions",{"_index":1539,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1549,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":1534,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":1548,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":2149,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":5385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4174,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3081,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":4749,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":2795,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":4251,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":4972,"title":{},"body":{"todo.html":{}}}],["move",{"_index":2360,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":816,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1026,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":3742,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5284,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":1116,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":329,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":4303,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1619,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":5011,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4176,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":4194,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4586,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":2396,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":3642,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":2527,"title":{},"body":{"classes/TestHelper.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":4479,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":3275,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":1053,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5001,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5154,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5158,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5177,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5178,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5171,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5173,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5191,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5192,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5153,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5161,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5165,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5163,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5168,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5082,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5186,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5187,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5190,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5084,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5083,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5188,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3827,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":964,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":811,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":374,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriter.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5211,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":111,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IDashboardRepo.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":814,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4091,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4094,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":670,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":813,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":1468,"title":{},"body":{"injectables/Logger.html":{}}}],["net",{"_index":4271,"title":{},"body":{"index.html":{}}}],["network",{"_index":4334,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":5601,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":497,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1695,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":1743,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":2476,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["news.controller.ts:22",{"_index":2480,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":1716,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1896,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1697,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1691,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":643,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":2578,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":667,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":648,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":2577,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":657,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":666,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":661,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1720,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1699,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1701,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1703,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":1705,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1693,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":541,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1718,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1712,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":241,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{}}}],["news:100",{"_index":509,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:106",{"_index":2474,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:30",{"_index":535,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":510,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":516,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":524,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":530,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":531,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:54",{"_index":533,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:57",{"_index":527,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:60",{"_index":515,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:63",{"_index":537,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:65",{"_index":525,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:75",{"_index":539,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:94",{"_index":2046,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":1921,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":5569,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":5573,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1748,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1894,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1889,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1816,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1832,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1888,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1593,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1905,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":1789,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":1797,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":1785,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":1609,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsid",{"_index":1607,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":1642,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":1911,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1646,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":1908,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1633,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1640,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1644,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1641,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1654,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1730,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1735,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1632,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsscope",{"_index":1780,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstargetfilter",{"_index":1757,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetinfo",{"_index":540,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetmodel",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":557,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":244,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":566,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":1630,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1915,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1901,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newuser",{"_index":2521,"title":{},"body":{"classes/TestHelper.html":{}}}],["newuser._id",{"_index":2523,"title":{},"body":{"classes/TestHelper.html":{}}}],["newuser.id",{"_index":2525,"title":{},"body":{"classes/TestHelper.html":{}}}],["nexboard",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":560,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":2561,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":850,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":3999,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4248,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":5462,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4171,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4173,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":3431,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":4618,"title":{},"body":{"license.html":{}}}],["none",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1929,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":3211,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":4647,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":4026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":265,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":5401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":894,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":2153,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":4761,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4444,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4440,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":4750,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4746,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4699,"title":{},"body":{"license.html":{}}}],["november",{"_index":4314,"title":{},"body":{"license.html":{}}}],["now",{"_index":655,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":852,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":2954,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":917,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{}}}],["number",{"_index":99,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskTestHelper.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":4880,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":5041,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2985,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5137,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":5481,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["o._id",{"_index":1450,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["o.id",{"_index":2248,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{}}}],["oauth",{"_index":3481,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":3268,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":1821,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign",{"_index":67,"title":{},"body":{"classes/Account.html":{}}}],["object.assign(this",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserTaskInfo.html":{}}}],["object.entries(params",{"_index":1920,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.keys(input).length",{"_index":2060,"title":{},"body":{"classes/Scope.html":{}}}],["object.values(constraint",{"_index":145,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":675,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":5126,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid(entityid",{"_index":2516,"title":{},"body":{"classes/TestHelper.html":{}}}],["objectid(id",{"_index":640,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["objectid(this.getschool",{"_index":1451,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["objectid(userid",{"_index":591,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["objectid.isvalid(value",{"_index":1971,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":5561,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":4860,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4632,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4537,"title":{},"body":{"license.html":{}}}],["observable",{"_index":841,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":5337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":4617,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1028,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":4758,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3323,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":1869,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4360,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4638,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4621,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5175,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4458,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["ok",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2757,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":3900,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":1511,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1364,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":5541,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":1183,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["onetomany('submission",{"_index":1198,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["oneweekago",{"_index":2368,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":2369,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":1541,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":284,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2826,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3494,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":5166,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":4910,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":4625,"title":{},"body":{"license.html":{}}}],["operates",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4474,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3969,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2235,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":4383,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":4867,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":5878,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":2811,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":5580,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":5884,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1565,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1500,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.exchange",{"_index":1515,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":1903,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":1520,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.ts",{"_index":1152,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":1517,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["ora",{"_index":379,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["orchestration",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1153,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1791,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["ordering",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":4772,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4407,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":3237,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":3916,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":1571,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":5858,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5222,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":1779,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":264,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LearnroomTestHelper.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1546,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["orquery",{"_index":2057,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["others",{"_index":1111,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otheruser",{"_index":1400,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["otherwise",{"_index":1563,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":5532,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":4974,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2095,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":4520,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2367,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":5836,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":3569,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":5842,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":5850,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":854,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":399,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5037,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":4950,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":3148,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":4801,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5274,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1812,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":5553,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5143,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":3600,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":4581,"title":{},"body":{"license.html":{}}}],["packages",{"_index":4965,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4468,"title":{},"body":{"license.html":{}}}],["page",{"_index":1938,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1944,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":911,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1154,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5506,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":5571,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1610,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1628,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1647,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["paginationresponse(taskresponses",{"_index":2265,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":4180,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":4935,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4737,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4811,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":3111,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":243,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":1651,"title":{},"body":{"controllers/NewsController.html":{}}}],["param('teamid",{"_index":2483,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5505,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":1895,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":1648,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":945,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1726,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1727,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1892,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1729,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1728,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1725,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":5504,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1190,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["parent._id",{"_index":2314,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["parent.id",{"_index":2311,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["parentdata",{"_index":2282,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentdata.color",{"_index":2287,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentdata.name",{"_index":2285,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentid",{"_index":2318,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["parentids",{"_index":2338,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["parents",{"_index":2337,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":3534,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":5568,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1627,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4114,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":5435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":2491,"title":{},"body":{"classes/TestHelper.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":20,"title":{},"body":{"classes/Account.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2571,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4462,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4432,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4494,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":4626,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":4777,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":5533,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":1108,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":5121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":1339,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"classes/Account.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":517,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1625,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1622,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":4736,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4796,"title":{},"body":{"license.html":{}}}],["path",{"_index":975,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2800,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":676,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":1336,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":1328,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":1356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":4841,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4634,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4637,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":5520,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":3090,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":4485,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4745,"title":{},"body":{"license.html":{}}}],["permission",{"_index":521,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1934,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":253,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1933,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":4563,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4594,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4377,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4323,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":2242,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedcourses.map((o",{"_index":2247,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":4675,"title":{},"body":{"license.html":{}}}],["persist",{"_index":292,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":305,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persist/make",{"_index":5586,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":293,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistall(entities",{"_index":308,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush",{"_index":294,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush(entities",{"_index":310,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush",{"_index":295,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush(entity",{"_index":312,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persisted",{"_index":326,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1533,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":5713,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":2999,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":4858,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":5600,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4602,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4615,"title":{},"body":{"license.html":{}}}],["pick",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":4353,"title":{},"body":{"license.html":{}}}],["pin",{"_index":3018,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":1091,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":2657,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":5523,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1968,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":2699,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":5576,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":163,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":161,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["platform",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":5366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4134,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":4781,"title":{},"body":{"license.html":{}}}],["point",{"_index":650,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":4931,"title":{},"body":{"license.html":{}}}],["policy",{"_index":3843,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":3377,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1793,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":547,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":5148,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":4641,"title":{},"body":{"license.html":{}}}],["pos",{"_index":772,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["pos.x",{"_index":775,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["pos.y",{"_index":777,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["position",{"_index":746,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["possesses",{"_index":4612,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4579,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4912,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":3339,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1600,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":4984,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4547,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4281,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4336,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4815,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":5871,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":4989,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4327,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4392,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4243,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":4778,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4455,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":681,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":5895,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":5894,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":1481,"title":{},"body":{"injectables/Logger.html":{}}}],["preparing",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":4267,"title":{},"body":{"index.html":{}}}],["present",{"_index":3460,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":5287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4448,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4706,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":3669,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":278,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":3490,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":4780,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4348,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4843,"title":{},"body":{"license.html":{}}}],["primary",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["primaryrolesearchoperation",{"_index":1212,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":2001,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":4747,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":5880,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":600,"title":{},"body":{"classes/CourseScope.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":1387,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":3906,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":3288,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":4668,"title":{},"body":{"license.html":{}}}],["process",{"_index":3644,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5479,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":4833,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4476,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4603,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2863,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":4844,"title":{},"body":{"license.html":{}}}],["program",{"_index":4343,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4557,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4942,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4463,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4354,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4518,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4544,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4838,"title":{},"body":{"license.html":{}}}],["project",{"_index":2664,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4184,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":3397,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":4451,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4443,"title":{},"body":{"license.html":{}}}],["promise",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":817,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1907,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/UserUC.html":{}}}],["promise.all(ids.map((id",{"_index":2029,"title":{},"body":{"injectables/RoleUC.html":{}}}],["promise.resolve(currentuser.user",{"_index":2602,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4133,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4415,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4764,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4425,"title":{},"body":{"license.html":{}}}],["proper",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":5877,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":1753,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["property",{"_index":30,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":2000,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["property({default",{"_index":423,"title":{},"body":{"classes/Course.html":{}}}],["property({fieldname",{"_index":623,"title":{},"body":{"classes/Coursegroup.html":{}}}],["property({onupdate",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["propertydecorator",{"_index":4238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":421,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.color",{"_index":468,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.comment",{"_index":1248,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":551,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.course",{"_index":1466,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["props.courseid",{"_index":488,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["props.creator",{"_index":555,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.description",{"_index":458,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":553,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":1200,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.email",{"_index":1277,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["props.firstname",{"_index":1273,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["props.grade",{"_index":1251,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":1252,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid",{"_index":734,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.hidden",{"_index":1464,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["props.lastname",{"_index":1275,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["props.lesson",{"_index":1206,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.name",{"_index":456,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{}}}],["props.parent",{"_index":1204,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.permissions",{"_index":1219,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":1202,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.roles",{"_index":1221,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/User-1.html":{}}}],["props.school",{"_index":554,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["props.schoolid",{"_index":460,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.student",{"_index":1246,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.studentids",{"_index":462,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["props.students",{"_index":489,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{}}}],["props.submissions",{"_index":1208,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.substitutionteacherids",{"_index":466,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":556,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":1250,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teacherids",{"_index":464,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":549,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":4356,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1408,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4528,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4568,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":4688,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":4892,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":825,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":239,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":1485,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":1479,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":397,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":4700,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4742,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4882,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4883,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":809,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":4711,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4385,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":2891,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":656,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":3463,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4483,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4650,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":4831,"title":{},"body":{"license.html":{}}}],["push",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3968,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":3444,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":4754,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4891,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1842,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1846,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":599,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1722,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1721,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1724,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":5567,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":2054,"title":{},"body":{"classes/Scope.html":{}}}],["queryelement",{"_index":2077,"title":{},"body":{"classes/Scope.html":{}}}],["queryobject",{"_index":2056,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["queryordermap",{"_index":1778,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":2158,"title":{},"body":{"modules/ServerModule.html":{}}}],["querystring",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1504,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5146,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5140,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":1502,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":1513,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":1510,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":5386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":4135,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1617,"title":{},"body":{"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4599,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":4820,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4691,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":87,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":439,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["reason",{"_index":4829,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4613,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":4752,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4351,"title":{},"body":{"license.html":{}}}],["received",{"_index":4583,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":4768,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4835,"title":{},"body":{"license.html":{}}}],["recent",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["recieve",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":4674,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4827,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":166,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4459,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":5901,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":5899,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":101,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/Scope.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["red",{"_index":4983,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":1380,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":1388,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":4927,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":2752,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reducer",{"_index":2072,"title":{},"body":{"classes/Scope.html":{}}}],["reduces",{"_index":3385,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":5241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2806,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":546,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":534,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":714,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":4347,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4397,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4190,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":5605,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":4862,"title":{},"body":{"license.html":{}}}],["regard",{"_index":4696,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4264,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4580,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":4495,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3527,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":4741,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":5888,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2678,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":4521,"title":{},"body":{"license.html":{}}}],["release",{"_index":3013,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4390,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4379,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4573,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4391,"title":{},"body":{"license.html":{}}}],["relies",{"_index":5579,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":4996,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["rely",{"_index":469,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["relying",{"_index":4819,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4631,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4345,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":4864,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":4866,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4697,"title":{},"body":{"license.html":{}}}],["remove",{"_index":296,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":314,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall",{"_index":297,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall(entities",{"_index":317,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush",{"_index":298,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush(entities",{"_index":319,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush",{"_index":299,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush(entity",{"_index":321,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removed",{"_index":2519,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["removeing",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":4905,"title":{},"body":{"license.html":{}}}],["repair",{"_index":3270,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":2433,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":2520,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":4986,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":169,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":2028,"title":{},"body":{"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5512,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1887,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1738,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":3738,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5298,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":2772,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4242,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":4665,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5199,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":5844,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":5846,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":929,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":5873,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":5864,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":1358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":1359,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":5380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2550,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2154,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":1292,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":2557,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":3212,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":1382,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":1303,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":989,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":5108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1114,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1914,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4574,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4633,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":968,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4410,"title":{},"body":{"license.html":{}}}],["reset",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":2641,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":2645,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":2646,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":1354,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":1982,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":2644,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyidlist",{"_index":2023,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyidlist(ids",{"_index":2026,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":2009,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":2015,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":1761,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":2604,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(currentuser",{"_index":2607,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resort",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4551,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5007,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":1612,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":126,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":5865,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":1087,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5508,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":5507,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":5323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":5565,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5267,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":4769,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":5585,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":3005,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":2531,"title":{},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5008,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":832,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5451,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1917,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":4545,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4728,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3837,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":80,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query",{"_index":2055,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":4069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":4375,"title":{},"body":{"license.html":{}}}],["results",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":4678,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1616,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5473,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":143,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":2372,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":107,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5522,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":4297,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":4915,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4872,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":5604,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":3996,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":4357,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":4196,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":4890,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":3563,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1141,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"modules/ServerModule.html":{},"classes/User-1.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1281,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}}}],["role.id",{"_index":1998,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":1997,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":2032,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":2640,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":5379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":1282,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}}}],["roleidbasedsearches'})@property",{"_index":2590,"title":{},"body":{"classes/User-1.html":{}}}],["roleids",{"_index":3664,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":2004,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":1139,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":2031,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":1996,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":2021,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":4681,"title":{},"body":{"license.html":{}}}],["room",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":274,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":5078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":5102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":807,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":2786,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":1509,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["royalty",{"_index":4785,"title":{},"body":{"license.html":{}}}],["rss",{"_index":529,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":3183,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":2955,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":5771,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":2544,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":2914,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":844,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":846,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":4929,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4270,"title":{},"body":{"index.html":{}}}],["sale",{"_index":4794,"title":{},"body":{"license.html":{}}}],["same",{"_index":3548,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":899,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":963,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":5539,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":3216,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":4963,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":249,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":238,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5189,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":4629,"title":{},"body":{"license.html":{}}}],["sc",{"_index":2725,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":5353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":449,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5511,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":3016,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":503,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":412,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":526,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schoolinfo.id",{"_index":2039,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":2041,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1687,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1709,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1811,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":570,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":568,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1129,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["schooltype",{"_index":1419,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["schoolyear",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["schoolyears",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":652,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2127,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":820,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":586,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.afterduedateornone(duedate",{"_index":2357,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bylessonsornone(visiblelessons.map((o",{"_index":2353,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byparentids(parentids",{"_index":2351,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bypublic",{"_index":2352,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bytargets(targets",{"_index":1781,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1782,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.forallgrouptypes(userid",{"_index":595,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":598,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.request",{"_index":955,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":1926,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":2486,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":2487,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":1470,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1834,"title":{},"body":{"classes/NewsScope.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["scope.ts:11",{"_index":2395,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:16",{"_index":2391,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:21",{"_index":2389,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:22",{"_index":1840,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:6",{"_index":2394,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:7",{"_index":1838,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:57",{"_index":606,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:67",{"_index":610,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:71",{"_index":615,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":1923,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1900,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":906,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":1618,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4481,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4109,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2241,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":1271,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["searchuserforschool'})@property({fieldname",{"_index":2585,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["second",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4418,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4364,"title":{},"body":{"license.html":{}}}],["secret",{"_index":73,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":1347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":4526,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4597,"title":{},"body":{"license.html":{}}}],["secure",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["secures",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":2673,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2724,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seeddata",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":4999,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":4981,"title":{},"body":{"todo.html":{}}}],["selectedkey",{"_index":613,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["selection",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":4007,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":4809,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4793,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":4399,"title":{},"body":{"license.html":{}}}],["send",{"_index":1522,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":1527,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5476,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":868,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":3340,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":4096,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":4640,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1476,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4288,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":3361,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4250,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4249,"title":{},"body":{"index.html":{}}}],["serialization",{"_index":4961,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":3441,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["serve",{"_index":4200,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5203,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":821,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":2113,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":2130,"title":{},"body":{"modules/ServerModule.html":{}}}],["server.module",{"_index":2114,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server/overview.html",{"_index":5000,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":4979,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":2089,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["serverconsolemodule",{"_index":2105,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":2116,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":4027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":2109,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":3925,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":4470,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":377,"title":{},"body":{"injectables/ConsoleWriter.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":909,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":5558,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":905,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":896,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":938,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":947,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":944,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":973,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":974,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5514,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":928,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":4895,"title":{},"body":{"license.html":{}}}],["session",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":1197,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradedstudentids)].length",{"_index":2469,"title":{},"body":{"injectables/TaskUC.html":{}}}],["set(permissions",{"_index":2033,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submittedstudentids)].length",{"_index":2462,"title":{},"body":{"injectables/TaskUC.html":{}}}],["setcontext",{"_index":1486,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":3389,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":2554,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":818,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":3540,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1092,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":5115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4531,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4339,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":2515,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":133,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1629,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":1673,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":5527,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":57,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/JwtPayload.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1776,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/pipes",{"_index":5551,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":587,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["shared/repo/base.repo",{"_index":1777,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":5528,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":5548,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":5531,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["shit",{"_index":440,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":743,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4170,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":705,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["shouldnt",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1870,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":3242,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":4943,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5460,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":4666,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4387,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":5308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5014,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":5739,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4265,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":5859,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":4857,"title":{},"body":{"license.html":{}}}],["single",{"_index":1117,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":1157,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":1113,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":5005,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":3501,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":5904,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":1044,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4204,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":3977,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":4318,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":4651,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4509,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4523,"title":{},"body":{"license.html":{}}}],["solid",{"_index":5874,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":2236,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":4940,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2538,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["solving",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["someid",{"_index":718,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["something",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":2162,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sort(submissions",{"_index":2169,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sorted",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["sortedsubmissions",{"_index":2176,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sorting",{"_index":2339,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["sorting.ts",{"_index":4975,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1159,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":2445,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":1904,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":1155,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["sound",{"_index":2365,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["sounds",{"_index":2362,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5499,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":504,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":2905,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1814,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5453,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5467,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":4610,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4346,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5081,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4689,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4330,"title":{},"body":{"license.html":{}}}],["specification",{"_index":3400,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4461,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":4879,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1562,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":368,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["spirit",{"_index":4873,"title":{},"body":{"license.html":{}}}],["split",{"_index":5288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":5887,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5424,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5088,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":352,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":353,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":847,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/entities",{"_index":584,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["src/entities/learnroom/dashboard.entity",{"_index":796,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["src/modules/database",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/repositories",{"_index":2239,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{}}}],["src/repositories/learnroom/dashboard.repo",{"_index":797,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{}}}],["sso",{"_index":78,"title":{},"body":{"classes/Account.html":{}}}],["st",{"_index":2062,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["stabilisation",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":5247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":1060,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":4457,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4460,"title":{},"body":{"license.html":{}}}],["start",{"_index":4309,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":2660,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":3758,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5147,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":1046,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":3559,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":3475,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":4500,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":4730,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":4008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":506,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardMapper.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4562,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1264,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.graded",{"_index":2280,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.maxsubmissions",{"_index":2279,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.submitted",{"_index":2278,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.vo",{"_index":2427,"title":{},"body":{"injectables/TaskUC.html":{}}}],["status.vo.ts",{"_index":1259,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["status.vo.ts:10",{"_index":2472,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["status.vo.ts:12",{"_index":2471,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["statusdomainservice",{"_index":2159,"title":{"classes/StatusDomainService.html":{}},"body":{"classes/StatusDomainService.html":{},"coverage.html":{}}}],["stay",{"_index":5275,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4358,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1576,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2746,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":2759,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5469,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":4037,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1338,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":5236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1482,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1672,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4208,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":933,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5492,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5493,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":1484,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":4973,"title":{},"body":{"todo.html":{}}}],["student",{"_index":1228,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":2431,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":1229,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":1233,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{}}}],["studentids",{"_index":413,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["students",{"_index":479,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["students[0",{"_index":2325,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["studentsubmissions",{"_index":2453,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.filter((submission",{"_index":2457,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.length",{"_index":2456,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studio",{"_index":4280,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4307,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5260,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1315,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":4775,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":159,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":4806,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4525,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1184,"title":{"classes/Submission.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":1185,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["submission.grade",{"_index":2171,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradecomment",{"_index":2172,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradecomment.length",{"_index":2173,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradefiles",{"_index":2174,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradefiles.length",{"_index":2175,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.isgraded",{"_index":2467,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.isgraded()).length",{"_index":2458,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.student.id",{"_index":2455,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.task.id",{"_index":2179,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submissionrepo",{"_index":2199,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["submissions",{"_index":1191,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["submissions].sort((a",{"_index":2177,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submitted",{"_index":1262,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["submittedstudentids",{"_index":2460,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submittedusers.add(submission.student.id",{"_index":2184,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submittedusers.has(submission.student.id",{"_index":2181,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submittedusers.size",{"_index":2185,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["subprograms",{"_index":4490,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":4619,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5185,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["subsitutionteacher",{"_index":1446,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["substantial",{"_index":4661,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4773,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":432,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteacherids",{"_index":414,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["succeed",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":3746,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":4380,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":4817,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4669,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5013,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":4954,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5184,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":137,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":4692,"title":{},"body":{"license.html":{}}}],["support",{"_index":1308,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":1317,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":716,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5135,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supportjwtservice",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["supports",{"_index":3914,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":1309,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":4344,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4852,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4729,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4908,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4947,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3264,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":2965,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1918,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2692,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["systemid",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":3871,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":306,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":2485,"title":{},"body":{"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":3130,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["tables",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4077,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":4262,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":3355,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":2842,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":4646,"title":{},"body":{"license.html":{}}}],["tap",{"_index":845,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":498,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":915,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":2218,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":2219,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":1845,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1931,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1843,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1844,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":663,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":913,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":1689,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":1707,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":1820,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["targetkey",{"_index":614,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["targetmodel",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1882,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1927,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":904,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":908,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1930,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":914,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":484,"title":{"classes/Task.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":2428,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.createdat",{"_index":2275,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":2274,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1231,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/TaskWithStatusVo.html":{}}}],["task.id",{"_index":2180,"title":{},"body":{"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{}}}],["task.name",{"_index":2272,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.parent",{"_index":2281,"title":{},"body":{"classes/TaskMapper.html":{},"injectables/TaskUC.html":{}}}],["task.parent.getdescriptions",{"_index":2283,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.parent.getnumberofstudents",{"_index":2470,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions",{"_index":2464,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().filter((submission",{"_index":2454,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().map((submission",{"_index":2461,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.updatedat",{"_index":2276,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":2430,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":2432,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":2227,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskcontroller",{"_index":2249,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskdashboardpermission",{"_index":2424,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":2438,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":2440,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskentities",{"_index":2142,"title":{},"body":{"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskids",{"_index":2208,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["taskmapper",{"_index":2256,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":2264,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":2121,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparentpermission",{"_index":2233,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":2443,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":2243,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskparenttestentity",{"_index":2295,"title":{"classes/TaskParentTestEntity.html":{}},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["taskparenttestentity(useridwithwritepermissions",{"_index":2310,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["taskrepo",{"_index":2290,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":2255,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["taskresponses",{"_index":2262,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":2251,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":2447,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskscope",{"_index":2348,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["taskswithstatus",{"_index":2260,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":2263,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasktesthelper",{"_index":2308,"title":{"classes/TaskTestHelper.html":{}},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["taskuc",{"_index":2253,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":2270,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":1263,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/ITaskStatus.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["taskwithstatusvo(task",{"_index":2459,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskwithsubmissionstatus",{"_index":2268,"title":{},"body":{"classes/TaskMapper.html":{},"miscellaneous/typealiases.html":{}}}],["teacher",{"_index":1236,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":2429,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherids",{"_index":415,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["teachers",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":543,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teamid",{"_index":2481,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teaminfo",{"_index":542,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teammembers",{"_index":1230,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["teamnews",{"_index":571,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":567,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":1737,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["teams",{"_index":1130,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":4985,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5217,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5471,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":1022,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5278,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4534,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5207,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4445,"title":{},"body":{"license.html":{}}}],["temp",{"_index":2537,"title":{},"body":{"classes/TestHelper.html":{}}}],["template",{"_index":1068,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":711,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TestHelper.html":{},"changelog.html":{}}}],["term",{"_index":4498,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":4735,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4753,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4744,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4732,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3359,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":808,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":824,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":804,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":806,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":5182,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testeddefinedvalue",{"_index":4235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["testenvironment",{"_index":5099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testhelper",{"_index":1399,"title":{"classes/TestHelper.html":{}},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"coverage.html":{}}}],["testhelper:11",{"_index":1420,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:16",{"_index":1431,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["testhelper:22",{"_index":1427,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["testhelper:31",{"_index":1438,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:36",{"_index":1436,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:38",{"_index":2404,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["testhelper:42",{"_index":1435,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:65",{"_index":1439,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:7",{"_index":1421,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:70",{"_index":1440,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:74",{"_index":1442,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:78",{"_index":1441,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:82",{"_index":1433,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:9",{"_index":1418,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:90",{"_index":1443,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelpers",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":1294,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":812,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":271,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":371,"title":{},"body":{"injectables/ConsoleWriter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":5546,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":5529,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":5547,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":272,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":4384,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":3609,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":5498,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4556,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":2084,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":2083,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":2086,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":2085,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":2567,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addid(course",{"_index":1452,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.addid(coursegroup",{"_index":1457,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.addid(lesson",{"_index":2320,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(parent",{"_index":2319,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(submission",{"_index":2323,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(task",{"_index":2316,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(user",{"_index":1447,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addquery",{"_index":594,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1850,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(orquery",{"_index":2088,"title":{},"body":{"classes/Scope.html":{}}}],["this.addquery(queries[0",{"_index":1851,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":1531,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":1313,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1916,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1893,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1932,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(userid",{"_index":2442,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1928,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.byuseridquery(userid",{"_index":2212,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":2019,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.code",{"_index":358,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":467,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.comment",{"_index":1247,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.computetaskstatusforstudent(task",{"_index":2448,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.computetaskstatusforteacher(task",{"_index":2450,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":2103,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":2104,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.content",{"_index":550,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.course",{"_index":1465,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["this.courseid",{"_index":487,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.courserepo.findallforstudent(userid",{"_index":2245,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallforteacher(userid",{"_index":2244,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.createandadduser",{"_index":2540,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createcourse(coursetyps.student",{"_index":1453,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createcourse(coursetyps.subsitutionteacher",{"_index":1455,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createcourse(coursetyps.teacher",{"_index":1454,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createentityid",{"_index":1448,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createerrorresponse(error",{"_index":1086,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.createid",{"_index":2534,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createid().tohexstring",{"_index":2517,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createid(parentid",{"_index":2313,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createschool",{"_index":2539,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createsubmission(task",{"_index":2328,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createuser",{"_index":2522,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.creator",{"_index":982,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{}}}],["this.dashboardrepo.getusersdashboard",{"_index":799,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard",{"_index":694,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":1960,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.description",{"_index":457,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":362,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":552,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.duedate",{"_index":1199,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.em.find(coursegroupinfo",{"_index":2214,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(lessontaskinfo",{"_index":2361,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(course",{"_index":597,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":638,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["this.em.findandcount(news",{"_index":1790,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":2211,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":2358,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1786,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":2018,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":2630,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":330,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(entity",{"_index":324,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(n",{"_index":328,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":325,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.populate(coursenews",{"_index":1800,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":1792,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":1787,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":1798,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":2359,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":1799,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(entity",{"_index":331,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":332,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":1276,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":258,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":259,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":246,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":247,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":916,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":903,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":907,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":5557,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findallforstudent(currentuser.userid",{"_index":2439,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(currentuser.userid",{"_index":2441,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":2020,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1784,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":2355,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.findvisiblelessons(parentids",{"_index":2350,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.firstname",{"_index":1272,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["this.getdefaultmaxduedate",{"_index":2356,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.getentitypermissions(userid",{"_index":251,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getfirstuser",{"_index":2322,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.getnewspermissions(userid",{"_index":1909,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1902,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1925,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":897,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.getusers().map((o",{"_index":1449,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.getusers().map((student",{"_index":2327,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.grade",{"_index":1240,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":1241,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment.length",{"_index":1242,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles",{"_index":1243,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles.length",{"_index":1244,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":733,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":2437,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":1463,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["this.id",{"_index":473,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.init",{"_index":2513,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.isgraded(submission",{"_index":2182,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":1352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.lastname",{"_index":1274,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["this.lesson",{"_index":1205,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.limit",{"_index":1963,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1891,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1898,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1910,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1899,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1890,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":848,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":851,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":361,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":1579,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":455,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.findall(targets",{"_index":1906,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1912,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":1897,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":1922,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1638,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1656,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1643,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1652,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1653,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.routingkey",{"_index":1532,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.orm.close",{"_index":1578,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.otheruser",{"_index":2532,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.parent",{"_index":1203,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.permissions",{"_index":1218,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.private",{"_index":1201,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.propertiestopopulate",{"_index":1788,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.reference",{"_index":729,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.reference.getmetadata",{"_index":732,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.request.app.get('feathersapp",{"_index":959,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(id",{"_index":2030,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles",{"_index":1220,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.roleuc.resolvepermissionsbyidlist(currentuser.roles",{"_index":2643,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.school",{"_index":1278,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/TestHelper.html":{},"classes/User.html":{}}}],["this.schoolid",{"_index":459,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.skip",{"_index":1962,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.spinner.info(text",{"_index":381,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["this.status",{"_index":1266,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.student",{"_index":1245,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.studentids",{"_index":461,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.studentids.includes(userid",{"_index":630,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.submissions",{"_index":1207,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/StatusDomainService.html":{},"classes/Task.html":{}}}],["this.substitutionteacherids",{"_index":465,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.task",{"_index":1249,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskrepo.findall(parentids",{"_index":2449,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallcurrent(parentids",{"_index":2444,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findall(currentuser",{"_index":2261,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacherids",{"_index":463,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":4982,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":360,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":719,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.total",{"_index":1961,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":359,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.user",{"_index":2304,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(payload",{"_index":1355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":2642,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.users",{"_index":2533,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.users.push(newuser",{"_index":2529,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.users[0",{"_index":2530,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(currentuser",{"_index":2610,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":138,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["this.xpos",{"_index":727,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.ypos",{"_index":728,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["those",{"_index":3986,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":4694,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":3735,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4435,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":255,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":2558,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":2566,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":2565,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":3902,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":248,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":4515,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4282,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":4284,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":651,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":1291,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":2569,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":2562,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":2559,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1293,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":2568,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":3251,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":3736,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1803,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4212,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":91,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":63,"title":{"todo.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TestHelper.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1661,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4244,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1953,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":1171,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5466,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5491,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":4717,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4716,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4718,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":3345,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5452,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4436,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4673,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":4771,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1102,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1966,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":1105,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4118,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":1103,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":1473,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4258,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":4635,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":5581,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5482,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":4693,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4540,"title":{},"body":{"license.html":{}}}],["tries",{"_index":3932,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5485,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":3952,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":545,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1049,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/TestHelper.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":4970,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["tt",{"_index":612,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["two",{"_index":2490,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":1319,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":1149,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":5016,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":5875,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1239,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TestHelper.html":{}}}],["typeorm",{"_index":5879,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1550,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":4025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/entity",{"_index":2511,"title":{},"body":{"classes/TestHelper.html":{}}}],["typesafety",{"_index":1650,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":562,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":4658,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":934,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":2293,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5519,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1631,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.authorization.service",{"_index":2294,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":2254,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":2609,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":4210,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["uidp",{"_index":2528,"title":{},"body":{"classes/TestHelper.html":{}}}],["un",{"_index":5447,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":864,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":240,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":256,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":5611,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2797,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":2526,"title":{},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":5759,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":5717,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":1080,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":5259,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":867,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":2908,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":4213,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":1039,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":1040,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":4664,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":5833,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4504,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4414,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2899,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":4690,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1135,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1386,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["unskip",{"_index":1744,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":713,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TestHelper.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unused",{"_index":2305,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["up",{"_index":2916,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1598,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1884,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1620,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1829,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":17,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["updatenewsparams",{"_index":1621,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":505,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":536,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":3962,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1131,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1763,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":4205,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1234,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":5534,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":866,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":1507,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":992,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":3142,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":4216,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":3573,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["usecase/dashboard.uc",{"_index":686,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["useclass",{"_index":860,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1360,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":990,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1553,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":4933,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":5063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usequeryifvalueisdefined",{"_index":4075,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["usequeryifvalueisdefined(testeddefinedvalue",{"_index":2061,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"classes/Account.html":{},"modules/AuthModule.html":{},"injectables/AuthorizationService.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user._id",{"_index":2524,"title":{},"body":{"classes/TestHelper.html":{},"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":1991,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":58,"title":{},"body":{"classes/Account.html":{}}}],["user.facade",{"_index":2626,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":1988,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.id",{"_index":1986,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/TestHelper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":1990,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.ldapdn",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":902,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":5549,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.school.tostring",{"_index":1994,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":900,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.uc.ts",{"_index":5543,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":1992,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":1362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":5635,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":2592,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentities",{"_index":2143,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade",{"_index":1332,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/JwtConstants.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":910,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["useridobject",{"_index":5127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useridobject.tohexstring",{"_index":5128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userids",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["useridwithwritepermissions",{"_index":2299,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["userinfo",{"_index":512,"title":{"classes/UserInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo.firstname",{"_index":2616,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":2615,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":2617,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1690,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1711,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1714,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1805,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":177,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":13,"title":{},"body":{"classes/Account.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":2624,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1140,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"injectables/NewsUc.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["usertaskinfo",{"_index":482,"title":{"classes/UserTaskInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useruc",{"_index":2597,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":3804,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":826,"title":{},"body":{"controllers/DelayController.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":378,"title":{},"body":{"injectables/ConsoleWriter.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":3574,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":3542,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":3949,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":5114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":5004,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5200,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5009,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1109,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":1288,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":1334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":1375,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":1373,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":116,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":1366,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":1372,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":1370,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":85,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":97,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":2658,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":1090,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":1098,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":407,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":2650,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":96,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":141,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":131,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":144,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":98,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":388,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":1097,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":674,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":5530,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1970,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueof",{"_index":5033,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":3066,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":3864,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":2729,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":2306,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["verbatim",{"_index":4325,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1166,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":1175,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":1180,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":5862,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":5860,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":3086,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":2799,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":4342,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4269,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":2373,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1880,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":519,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":4687,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4739,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4169,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":4988,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":518,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visiblelessons",{"_index":2349,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["visual",{"_index":4279,"title":{},"body":{"index.html":{}}}],["void",{"_index":316,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"classes/CourseScope.html":{},"classes/GlobalErrorFilter.html":{},"classes/LearnroomTestHelper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4590,"title":{},"body":{"license.html":{}}}],["vor",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":629,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4245,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":5900,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5010,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5216,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":5898,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":4219,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":4546,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4920,"title":{},"body":{"license.html":{}}}],["want",{"_index":4352,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":1167,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":1177,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4447,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4446,"title":{},"body":{"license.html":{}}}],["watch",{"_index":4993,"title":{},"body":{"todo.html":{}}}],["way",{"_index":1560,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":4937,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":2695,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":2100,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":1475,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":4655,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":1107,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":1350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":2803,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":4642,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4464,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4370,"title":{},"body":{"license.html":{}}}],["wil",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3589,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":4002,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":3510,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":4292,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4539,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4350,"title":{},"body":{"license.html":{}}}],["within",{"_index":339,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3447,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":4967,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["wopi",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":4287,"title":{},"body":{"index.html":{}}}],["work",{"_index":281,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4482,"title":{},"body":{"license.html":{}}}],["workers",{"_index":2841,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflows",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":3907,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1660,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":4808,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wrapped",{"_index":5075,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wraps",{"_index":5362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":2240,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":1077,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":1084,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writer",{"_index":376,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer.service",{"_index":2102,"title":{},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["writer.service.ts",{"_index":367,"title":{},"body":{"injectables/ConsoleWriter.html":{},"coverage.html":{}}}],["writer.service.ts:11",{"_index":370,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer.service.ts:9",{"_index":373,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer/console",{"_index":366,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["writes",{"_index":5472,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":1064,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":1079,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":4886,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4608,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1071,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":723,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4221,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":730,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["xposition",{"_index":737,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xss",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":5405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":724,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["year",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":4609,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":345,"title":{},"body":{"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"classes/LearnroomTestHelper.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":4823,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":5670,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":731,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["yposition",{"_index":738,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["yyyy",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/account.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lasttriedFailedLogin\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lasttriedFailedLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: User})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToMany, Property, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { User } from './user.entity';\n\n@Entity({ tableName: 'accounts' })\nexport class Account extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\t// TODO not use partial see INewsProperties, use Object.assign for related entities only.\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tusername: string;\n\t/*\n\t@Property()\n\tpassword: string; // hash and secret inside the application\n\t*/\n\n\t@ManyToMany({ fieldName: 'userIds', type: User })\n\tuser = new Collection(this);\n\n\t@Property()\n\tlasttriedFailedLogin: Date; // iso date\n\n\t// sso keys\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { UserModule } from '../user';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriter.html":{"url":"injectables/ConsoleWriter.html","title":"injectable - ConsoleWriter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/console-writer/console-writer.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/console/console-writer/console-writer.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriter {\n\tspinner = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                schoolId\n                            \n                            \n                                studentIds\n                            \n                            \n                                substitutionTeacherIds\n                            \n                            \n                                teacherIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                getNumberOfStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property({fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschoolId: ObjectId;\n\tteacherIds?: ObjectId[];\n\tsubstitutionTeacherIds?: ObjectId[];\n\tstudentIds?: ObjectId[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname: string = DEFAULT.name;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@Property()\n\tschoolId: ObjectId;\n\n\t@Index()\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property()\n\tteacherIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionTeacherIds: ObjectId[] = [];\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || DEFAULT.name;\n\t\tthis.description = props.description || DEFAULT.description;\n\t\tthis.schoolId = props.schoolId;\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionTeacherIds = props.substitutionTeacherIds || [];\n\t\tthis.color = props.color || DEFAULT.color;\n\n\t\tObject.assign(this, {});\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\treturn (this.studentIds || []).length;\n\t}\n\n\tgetDescriptions(): { color: string; id: EntityId; name: string; description: string } {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tcolor: this.color,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroupInfo.html":{"url":"classes/CourseGroupInfo.html","title":"class - CourseGroupInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroupInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-group-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: CoursegroupInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        CoursegroupInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface CoursegroupInfoProperties {\n\tstudents?: UserTaskInfo[];\n\tcourseId: ObjectId;\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroupInfo extends BaseEntityWithTimestamps {\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: CoursegroupInfoProperties) {\n\t\tsuper();\n\t\tthis.courseId = props.courseId;\n\n\t\tObject.assign(this, { students: props.students });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:100\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/course.repo.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Course } from '@src/entities';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { studentIds: new ObjectId(userId) };\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { studentIds: new ObjectId(userId) };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Course } from '@src/entities';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { studentIds: new ObjectId(userId) };\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { studentIds: new ObjectId(userId) };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coursegroup.html":{"url":"classes/Coursegroup.html","title":"class - Coursegroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coursegroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                studentIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                            \n                                isMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICoursegroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICoursegroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMember\n                        \n                    \n                \n            \n            \n                \nisMember(userId: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport interface ICoursegroupProperties {\n\tcourseId: ObjectId;\n\tstudentIds?: ObjectId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class Coursegroup extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n\n\t// TODO: isMember vs isStudent\n\tisMember(userId: ObjectId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.courseId;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoursegroupInfoProperties.html":{"url":"interfaces/CoursegroupInfoProperties.html","title":"interface - CoursegroupInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoursegroupInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-group-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         UserTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface CoursegroupInfoProperties {\n\tstudents?: UserTaskInfo[];\n\tcourseId: ObjectId;\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroupInfo extends BaseEntityWithTimestamps {\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: CoursegroupInfoProperties) {\n\t\tsuper();\n\t\tthis.courseId = props.courseId;\n\n\t\tObject.assign(this, { students: props.students });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoursegroupRepo.html":{"url":"injectables/CoursegroupRepo.html","title":"injectable - CoursegroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoursegroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId } from '@shared/domain';\nimport { Coursegroup } from '@src/entities';\n\n@Injectable()\nexport class CoursegroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [coursegroups, count] = await this.em.findAndCount(Coursegroup, {\n\t\t\tcourseId: { $in: courseIds.map((id) => new ObjectId(id)) },\n\t\t});\n\t\treturn [coursegroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/controller/dashboard.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DashboardUc } from '../usecase/dashboard.uc';\n\nimport { Authenticate } from '../../authentication/decorator/auth.decorator';\n\nimport { DashboardResponse } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(/* currentUser.userId */);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElement[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElement[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '../../../entities/learnroom/dashboard.entity';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((gridElement) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\tconst data = gridElement.getMetadata();\n\t\t\telementDTO.id = data.id;\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\n\t\t\tconst pos = gridElement.getPosition();\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsersDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { DashboardEntity, DefaultGridReference, GridElement } from '../../entities/learnroom/dashboard.entity';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tgetUsersDashboard(): Promise {\n\t\tconst gridArray: GridElement[] = [];\n\t\tconst diagonalSize = 5;\n\t\tconst elementReference = new DefaultGridReference('exampletitle');\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/usecase/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity } from '@src/entities/learnroom/dashboard.entity';\nimport { IDashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo) {}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard();\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReference.html":{"url":"classes/DefaultGridReference.html","title":"class - DefaultGridReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElementReference\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTaskInfo.html":{"url":"classes/FileTaskInfo.html","title":"class - FileTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: FileTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        FileTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface FileTaskInfoProperties {\n\tname: string;\n\tcreator: UserTaskInfo;\n}\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n\n\tconstructor(props: FileTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileTaskInfoProperties.html":{"url":"interfaces/FileTaskInfoProperties.html","title":"interface - FileTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         UserTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface FileTaskInfoProperties {\n\tname: string;\n\tcreator: UserTaskInfo;\n}\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n\n\tconstructor(props: FileTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reference\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                            \n                                getPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number, reference: IGridElementReference)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reference\n                                                  \n                                                        \n                                                                        IGridElementReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElementReference\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPosition\n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeacherIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacherIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeacherIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacherIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschoolId: ObjectId;\n\tteacherIds?: ObjectId[];\n\tsubstitutionTeacherIds?: ObjectId[];\n\tstudentIds?: ObjectId[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname: string = DEFAULT.name;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@Property()\n\tschoolId: ObjectId;\n\n\t@Index()\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property()\n\tteacherIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionTeacherIds: ObjectId[] = [];\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || DEFAULT.name;\n\t\tthis.description = props.description || DEFAULT.description;\n\t\tthis.schoolId = props.schoolId;\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionTeacherIds = props.substitutionTeacherIds || [];\n\t\tthis.color = props.color || DEFAULT.color;\n\n\t\tObject.assign(this, {});\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\treturn (this.studentIds || []).length;\n\t}\n\n\tgetDescriptions(): { color: string; id: EntityId; name: string; description: string } {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tcolor: this.color,\n\t\t};\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoursegroupProperties.html":{"url":"interfaces/ICoursegroupProperties.html","title":"interface - ICoursegroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICoursegroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport interface ICoursegroupProperties {\n\tcourseId: ObjectId;\n\tstudentIds?: ObjectId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class Coursegroup extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n\n\t// TODO: isMember vs isStudent\n\tisMember(userId: ObjectId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.courseId;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTargetInfo = SchoolInfo | TeamInfo | CourseInfo;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { DashboardEntity, DefaultGridReference, GridElement } from '../../entities/learnroom/dashboard.entity';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tgetUsersDashboard(): Promise {\n\t\tconst gridArray: GridElement[] = [];\n\t\tconst diagonalSize = 5;\n\t\tconst elementReference = new DefaultGridReference('exampletitle');\n\t\tfor (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                                \n                                        \n                                            getPosition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getPosition:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElementReference.html":{"url":"interfaces/IGridElementReference.html","title":"interface - IGridElementReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElementReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\ttitle: string;\n\n\tconstructor(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: 'someId',\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: '#f23f76',\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tconstructor(x: number, y: number, reference: IGridElementReference) {\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport class DashboardEntity extends BaseEntityWithTimestamps {\n\tgrid: IGridElement[];\n\n\tconstructor(props: { grid: IGridElement[] }) {\n\t\tsuper();\n\t\tthis.grid = props.grid || [];\n\t\tObject.assign(this, {});\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTargetInfo = SchoolInfo | TeamInfo | CourseInfo;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IParentDescriptionsProperties.html":{"url":"interfaces/IParentDescriptionsProperties.html","title":"interface - IParentDescriptionsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IParentDescriptionsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Course } from '@src/entities';\nimport type { Submission } from './submission.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: LessonTaskInfo;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = !!props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions = new Collection(this, props.submissions || []);\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroupInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroupInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:     FileTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         UserTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:     FileTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         UserTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\nimport { CourseGroupInfo } from './course-group-info.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: UserTaskInfo;\n\tcourseGroup?: CourseGroupInfo[];\n\tteamMembers?: UserTaskInfo[];\n\tcomment: string;\n\tstudentFiles?: FileTaskInfo[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: FileTaskInfo[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo; // (this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskParent.html":{"url":"interfaces/ITaskParent.html","title":"interface - ITaskParent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskParent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDescriptions\n                                    \n                                \n                                \n                                    \n                                        getNumberOfStudents\n                                    \n                                \n                                \n                                    \n                                        hasWritePermission\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IParentDescriptionsProperties\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Course } from '@src/entities';\nimport type { Submission } from './submission.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: LessonTaskInfo;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = !!props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions = new Collection(this, props.submissions || []);\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         LessonTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LessonTaskInfo\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Course } from '@src/entities';\nimport type { Submission } from './submission.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: LessonTaskInfo;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = !!props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions = new Collection(this, props.submissions || []);\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task-with-status.vo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from './task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName: string;\n\tlastName: string;\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties-1.html":{"url":"interfaces/IUserProperties-1.html","title":"interface - IUserProperties-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserTaskInfoProperties.html":{"url":"interfaces/IUserTaskInfoProperties.html","title":"interface - IUserTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\ninterface IUserTaskInfoProperties {\n\tfirstName: string;\n\tlastName: string;\n}\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: IUserTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { UserFacade } from '../../user';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(payload);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/lernroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { DashboardUc } from './usecase/dashboard.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LearnroomTestHelper.html":{"url":"classes/LearnroomTestHelper.html","title":"class - LearnroomTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LearnroomTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/testHelper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TestHelper\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCourse\n                            \n                            \n                                createCoursegroup\n                            \n                            \n                                createSchool\n                            \n                            \n                                createStudentCourse\n                            \n                            \n                                createSubstitutionCourse\n                            \n                            \n                                createTeacherCourse\n                            \n                            \n                                createUser\n                            \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createCourse\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCourse(type: CourseTyps)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                CourseTyps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCoursegroup\n                        \n                    \n                \n            \n            \n                \ncreateCoursegroup(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Coursegroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createStudentCourse\n                        \n                    \n                \n            \n            \n                \ncreateStudentCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubstitutionCourse\n                        \n                    \n                \n            \n            \n                \ncreateSubstitutionCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeacherCourse\n                        \n                    \n                \n            \n            \n                \ncreateTeacherCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntity, EntityId, TestHelper } from '@shared/domain';\n\nimport { Course } from './course.entity';\nimport { Coursegroup } from './coursegroup.entity';\n\nenum CourseTyps {\n\tteacher = 'teacherIds',\n\tstudent = 'studentIds',\n\tsubsitutionTeacher = 'substitutionTeacherIds',\n}\n\nexport class LearnroomTestHelper extends TestHelper {\n\tcreateUser(): BaseEntity {\n\t\tconst user = new BaseEntity();\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tprivate createCourse(type: CourseTyps): Course {\n\t\tconst course = new Course({\n\t\t\t[type]: this.getUsers().map((o) => o._id),\n\t\t\tschoolId: new ObjectId(this.getSchool()),\n\t\t\tname: '',\n\t\t});\n\t\tthis.addId(course);\n\t\treturn course;\n\t}\n\n\tcreateStudentCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.student);\n\t}\n\n\tcreateTeacherCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.teacher);\n\t}\n\n\tcreateSubstitutionCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.subsitutionTeacher);\n\t}\n\n\tcreateCoursegroup(course: Course): Coursegroup {\n\t\tconst studentIds = this.getUsers().map((o) => o._id);\n\t\tconst coursegroup = new Coursegroup({ studentIds, courseId: course._id });\n\t\tthis.addId(coursegroup);\n\t\treturn coursegroup;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonTaskInfo.html":{"url":"classes/LessonTaskInfo.html","title":"class - LessonTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: LessonTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        LessonTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from '@src/entities';\n\ninterface LessonTaskInfoProperties {\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: LessonTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.hidden = !!props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LessonTaskInfoProperties.html":{"url":"interfaces/LessonTaskInfoProperties.html","title":"interface - LessonTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LessonTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from '@src/entities';\n\ninterface LessonTaskInfoProperties {\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: LessonTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.hidden = !!props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\nimport { MongoDatabaseModuleOptions } from '../types';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetInfo\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:50\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:54\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery, PaginationResponse } from '@shared/controller';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetInfo, NewsTargetModel } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:21\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:41\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:34\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { CourseNews, News, SchoolNews, TeamNews } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:55\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions, SortOrder } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResolvedUser } from '../controller/dto';\nimport { User, Role } from '../entity';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { Role } from '../entity';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByIdList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByIdList\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByIdList(ids: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { IPermissionsAndRoles } from '../entity';\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByIdList(ids: EntityId[]): Promise {\n\t\tconst roles = await Promise.all(ids.map((id) => this.roleRepo.resolvePermissionsFromSubRolesById(id)));\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:94\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:71\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\ntype QueryObject = Record>;\ntype OrQuery = { $or: QueryObject[] };\n\nexport function isDefined(input: T): boolean {\n\treturn input !== null && input !== undefined;\n}\n\nexport function isDefinedQuery(input: T): boolean {\n\treturn isDefined(input) && typeof input === 'object' && Object.keys(input).length > 0;\n}\n\n// TODO: EmptyResultQuery only include _id maybe undefined is better in this case\nexport function useQueryIfValueIsDefined(testedDefinedvalue: TT, query: ST): ST | EmptyResultQueryType {\n\tlet result: ST | EmptyResultQueryType = query;\n\n\tif (!isDefined(testedDefinedvalue)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\tif (!isDefinedQuery(query)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\treturn result;\n}\n\nexport function forceArray(input: Array): Array {\n\treturn Array.isArray(input) ? input : [];\n}\n\nfunction isDefinedObjectValue(object: T, key: string): boolean {\n\treturn isDefined(object) && isDefined(key) && isDefined(object[key]);\n}\n\nexport function createOrQueryFromList(arrayOfObjects: Array, selectedKey: string, targetKey: string): OrQuery {\n\tconst reducer = (accumulator: QueryObject[], currentValue: T) => {\n\t\tif (isDefinedObjectValue(currentValue, selectedKey)) {\n\t\t\tconst value = currentValue[selectedKey] as Partial;\n\t\t\tconst queryElement = { [targetKey]: value };\n\t\t\taccumulator.push(queryElement);\n\t\t}\n\t\treturn accumulator;\n\t};\n\n\tif (isDefined(selectedKey) && isDefined(targetKey)) {\n\t\tconst arrayOfQuerys = forceArray(arrayOfObjects).reduce(reducer, []);\n\t\treturn { $or: arrayOfQuerys };\n\t}\n\treturn { $or: [] };\n}\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n\n\tbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string): void {\n\t\tif (arrayOfObjects.length > 0) {\n\t\t\tconst orQuery = createOrQueryFromList(arrayOfObjects, selectedKey, targetKey) as FilterQuery;\n\t\t\tthis.addQuery(orQuery);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriter } from './console-writer/console-writer.service';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriter) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\ncluster_ServerConsoleModule_providers\n\n\n\n\nServerModule\n\nServerModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nServerModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriter\n\nConsoleWriter\n\nServerConsoleModule -->\n\nConsoleWriter->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/server-console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ServerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ServerConsole } from './server.console';\nimport { ServerModule } from '../server.module';\nimport { ConsoleWriter } from './console-writer/console-writer.service';\n\n@Module({\n\timports: [ServerModule, ConsoleModule],\n\tproviders: [\n\t\tConsoleWriter,\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { LearnroomModule } from './modules/lernroom/lernroom.module';\n\nimport { Course, Coursegroup } from './entities';\n\nimport {\n\tCourseNews,\n\tNews,\n\tSchoolInfo,\n\tSchoolNews,\n\tTeamNews,\n\tUserInfo,\n\tCourseInfo,\n\tTeamInfo,\n} from './modules/news/entity';\n\nimport { Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo } from './modules/task/entity';\n\nimport { User, Role, Account } from './modules/user/entity';\n\nconst entities = [Course, Coursegroup];\nconst courseEntities = [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo];\nconst taskEntities = [Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo];\nconst userEntities = [User, Role, Account];\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [...entities, ...courseEntities, ...taskEntities, ...userEntities],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusDomainService.html":{"url":"classes/StatusDomainService.html","title":"class - StatusDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/domain/StatusDomainService.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                submissions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStatusToTask\n                            \n                            \n                                    Private\n                                isGraded\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submissions: Submission[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submissions\n                                                  \n                                                        \n                                                                        Submission[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Submission[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStatusToTask\n                        \n                    \n                \n            \n            \n                \naddStatusToTask(task: Task, maxSubmissions: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxSubmissions\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGraded\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGraded(submission: Submission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submission\n                                    \n                                                Submission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(submissions: Submission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submissions\n                                    \n                                                Submission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Submission, Task } from '../entity';\n\nexport class StatusDomainService {\n\tsubmissions: Submission[];\n\n\tconstructor(submissions: Submission[]) {\n\t\tthis.submissions = submissions;\n\t}\n\n\tprivate isGraded(submission: Submission): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof submission.grade === 'number' && submission.grade >= 0) ||\n\t\t\t(typeof submission.gradeComment === 'string' && submission.gradeComment.length > 0) ||\n\t\t\t(submission.gradeFiles !== undefined && submission.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tprivate sort(submissions: Submission[]): Submission[] {\n\t\tconst sortedSubmissions = [...submissions].sort((a: Submission, b: Submission) => {\n\t\t\tif (a.createdAt  {\n\t\t\tif (submission.task.id === task.id) {\n\t\t\t\tif (!submittedUsers.has(submission.student.id) && this.isGraded(submission)) {\n\t\t\t\t\tgradedUsers.add(submission.student.id);\n\t\t\t\t}\n\t\t\t\tsubmittedUsers.add(submission.student.id);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\ttask,\n\t\t\tstatus: {\n\t\t\t\tsubmitted: submittedUsers.size,\n\t\t\t\tmaxSubmissions,\n\t\t\t\tgraded: gradedUsers.size,\n\t\t\t},\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isGraded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroupInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'gradeFileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'fileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'teamMembers', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isGraded\n                        \n                    \n                \n            \n            \n                \nisGraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\nimport { CourseGroupInfo } from './course-group-info.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: UserTaskInfo;\n\tcourseGroup?: CourseGroupInfo[];\n\tteamMembers?: UserTaskInfo[];\n\tcomment: string;\n\tstudentFiles?: FileTaskInfo[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: FileTaskInfo[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo; // (this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId } from '@shared/domain';\n\n// CourseGroupInfo must use from learnroom\nimport { CourseGroupInfo, Submission } from '../entity';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroupInfo, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTargetInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTargetInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TargetInfoResponse } from '../controller/dto/target-info.response';\nimport { NewsTargetInfo } from '../entity';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTargetInfo): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parent\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Course } from '@src/entities';\nimport type { Submission } from './submission.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: LessonTaskInfo;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = !!props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions = new Collection(this, props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(userId: EntityId, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { CourseRepo } from '@src/repositories';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tasync getPermittedCourses(userId: EntityId, permission: TaskParentPermission): Promise {\n\t\t// coursegroups are missing\n\t\t// lessons are missing -> only search for hidden: false,\n\t\tconst [permittedCourses] =\n\t\t\tpermission === TaskParentPermission.write\n\t\t\t\t? await this.courseRepo.findAllForTeacher(userId)\n\t\t\t\t: await this.courseRepo.findAllForStudent(userId);\n\n\t\tconst entityIds = permittedCourses.map((o) => o.id);\n\t\treturn entityIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationResponse, PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithSubmissionStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithSubmissionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { TaskWithSubmissionStatus } from '../domain';\n\nexport class TaskMapper {\n\t// TODO: add status to task\n\tstatic mapToResponse(taskWithStatus: TaskWithSubmissionStatus): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst dto = new TaskResponse();\n\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = {\n\t\t\tsubmitted: status.submitted,\n\t\t\tmaxSubmissions: status.maxSubmissions,\n\t\t\tgraded: status.graded,\n\t\t};\n\n\t\tif (task.parent !== undefined) {\n\t\t\tconst parentData = task.parent.getDescriptions();\n\t\t\tdto.courseName = parentData.name;\n\t\t\tdto.displayColor = parentData.color;\n\t\t}\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo } from '@src/repositories';\n\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskRepo } from './repo';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskParentTestEntity.html":{"url":"classes/TaskParentTestEntity.html","title":"class - TaskParentTestEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskParentTestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/utils/TestHelper.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITaskParent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                getNumberOfStudents\n                            \n                            \n                                hasWritePermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userIdWithWritePermissions?: EntityId)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userIdWithWritePermissions\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IParentDescriptionsProperties\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId, TestHelper } from '@shared/domain';\nimport { Course } from '@src/entities';\n\nimport { Submission, Task, UserTaskInfo, LessonTaskInfo, ITaskParent, IParentDescriptionsProperties } from '../entity';\n\nexport class TaskParentTestEntity implements ITaskParent {\n\tid: EntityId;\n\n\tuser?: EntityId;\n\n\tconstructor(userIdWithWritePermissions?: EntityId) {\n\t\tthis.user = userIdWithWritePermissions;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst hasWritePermission = this.user !== undefined ? this.user === userId : false;\n\t\treturn hasWritePermission;\n\t}\n\n\tgetDescriptions(): IParentDescriptionsProperties {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tcolor: 'FFFFFF',\n\t\t\tname: 'Parent',\n\t\t};\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn 10;\n\t}\n}\n\nexport class TaskTestHelper extends TestHelper {\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tcreateUser(): UserTaskInfo {\n\t\tconst user = new UserTaskInfo({ lastName: '', firstName: '' });\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateTaskParent(userIdWithWritePermissions?: EntityId): TaskParentTestEntity {\n\t\tconst parent = new TaskParentTestEntity(userIdWithWritePermissions);\n\t\tparent.id = this.createEntityId();\n\t\treturn parent;\n\t}\n\n\tcreateTask(parentId?: EntityId, dueDate?: Date): Task {\n\t\tconst parent = new Course({ schoolId: new ObjectId() });\n\t\tconst id = this.createId(parentId);\n\t\tparent._id = id;\n\t\tparent.id = id.toHexString();\n\t\tconst task = new Task({ name: '', parent, dueDate });\n\t\tthis.addId(task);\n\t\treturn task;\n\t}\n\n\tcreateLessonWithTask(): { task: Task; lesson: LessonTaskInfo; parentId: EntityId } {\n\t\tconst parent = new Course({ schoolId: new ObjectId() });\n\t\tthis.addId(parent);\n\t\tconst lesson = new LessonTaskInfo({ course: parent });\n\t\tthis.addId(lesson);\n\t\tconst task = new Task({ name: '', parent, lesson });\n\t\tthis.addId(task);\n\t\treturn { task, lesson, parentId: parent.id };\n\t}\n\n\tcreateSubmission(task: Task, student?: UserTaskInfo): Submission {\n\t\tconst user = (student || this.getFirstUser()) as UserTaskInfo;\n\t\tconst submission = new Submission({ student: user, comment: '', task });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateTeamMemberSubmission(task: Task, students: UserTaskInfo[]): Submission {\n\t\tconst submission = new Submission({ student: students[0], comment: '', task, teamMembers: students });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateSubmissionsForEachStudent(task: Task): Submission[] {\n\t\tconst submissions = this.getUsers().map((student) => {\n\t\t\tconst submission = this.createSubmission(task, student as UserTaskInfo);\n\t\t\treturn submission;\n\t\t});\n\t\treturn submissions;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllCurrent\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                            \n                                    Private\n                                    Async\n                                findVisibleLessons\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(parentIds: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:22\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCurrent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCurrent(parentIds: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:41\n                \n            \n\n\n            \n                \n                    Find all currently active tasks by their parent ids.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findVisibleLessons\n                        \n                    \n                \n            \n            \n                \n                    \n                    findVisibleLessons(parentIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, FilterQuery, QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\n\n// TODO lessonTaskInfo must deleted\nimport { Task, LessonTaskInfo } from '../entity';\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * Find all tasks by their parents.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAll(parentIds: EntityId[], options?: IFindOptions): Promise> {\n\t\tconst visibleLessons = await this.findVisibleLessons(parentIds);\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParentIds(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(visibleLessons.map((o) => o.id));\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\t/**\n\t * Find all currently active tasks by their parent ids.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllCurrent(parentIds: EntityId[], options?: IFindOptions): Promise> {\n\t\tconst visibleLessons = await this.findVisibleLessons(parentIds);\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParentIds(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(visibleLessons.map((o) => o.id));\n\t\tscope.afterDueDateOrNone(dueDate);\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(taskEntities, ['parent', 'lesson', 'submissions']);\n\t\treturn [taskEntities, count];\n\t}\n\n\t// TODO move to lesson repo\n\tprivate async findVisibleLessons(parentIds: EntityId[]): Promise {\n\t\tconst lessons = await this.em.find(LessonTaskInfo, {\n\t\t\tcourse: { $in: parentIds },\n\t\t\thidden: false,\n\t\t});\n\t\treturn lessons;\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\t// TODO: date sounds like domain logic if this go out, after it student and teacher has only different order logic\n\t\t// that also sound like it should manage over scope helper in uc.\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byLessonsOrNone\n                            \n                            \n                                byParentIds\n                            \n                            \n                                byPublic\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonsOrNone\n                        \n                    \n                \n            \n            \n                \nbyLessonsOrNone(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byParentIds\n                        \n                    \n                \n            \n            \n                \nbyParentIds(parentIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byPublic\n                        \n                    \n                \n            \n            \n                \nbyPublic()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { Scope } from '@shared/repo';\nimport { Task } from '../entity';\n\nexport class TaskScope extends Scope {\n\tbyParentIds(parentIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ parent: { $in: parentIds } });\n\t\treturn this;\n\t}\n\n\tbyPublic(): TaskScope {\n\t\tthis.addQuery({ private: { $ne: true } });\n\t\treturn this;\n\t}\n\n\tbyLessonsOrNone(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ $or: [{ lesson: { $in: lessonIds } }, { lesson: null }] });\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskTestHelper.html":{"url":"classes/TaskTestHelper.html","title":"class - TaskTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/utils/TestHelper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TestHelper\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLessonWithTask\n                            \n                            \n                                createSchool\n                            \n                            \n                                createSubmission\n                            \n                            \n                                createSubmissionsForEachStudent\n                            \n                            \n                                createTask\n                            \n                            \n                                createTaskParent\n                            \n                            \n                                createTeamMemberSubmission\n                            \n                            \n                                createUser\n                            \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLessonWithTask\n                        \n                    \n                \n            \n            \n                \ncreateLessonWithTask()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubmission\n                        \n                    \n                \n            \n            \n                \ncreateSubmission(task: Task, student?: UserTaskInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    student\n                                    \n                                                UserTaskInfo\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubmissionsForEachStudent\n                        \n                    \n                \n            \n            \n                \ncreateSubmissionsForEachStudent(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask(parentId?: EntityId, dueDate?: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTaskParent\n                        \n                    \n                \n            \n            \n                \ncreateTaskParent(userIdWithWritePermissions?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIdWithWritePermissions\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskParentTestEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeamMemberSubmission\n                        \n                    \n                \n            \n            \n                \ncreateTeamMemberSubmission(task: Task, students: UserTaskInfo[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    students\n                                    \n                                                UserTaskInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         UserTaskInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId, TestHelper } from '@shared/domain';\nimport { Course } from '@src/entities';\n\nimport { Submission, Task, UserTaskInfo, LessonTaskInfo, ITaskParent, IParentDescriptionsProperties } from '../entity';\n\nexport class TaskParentTestEntity implements ITaskParent {\n\tid: EntityId;\n\n\tuser?: EntityId;\n\n\tconstructor(userIdWithWritePermissions?: EntityId) {\n\t\tthis.user = userIdWithWritePermissions;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst hasWritePermission = this.user !== undefined ? this.user === userId : false;\n\t\treturn hasWritePermission;\n\t}\n\n\tgetDescriptions(): IParentDescriptionsProperties {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tcolor: 'FFFFFF',\n\t\t\tname: 'Parent',\n\t\t};\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn 10;\n\t}\n}\n\nexport class TaskTestHelper extends TestHelper {\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tcreateUser(): UserTaskInfo {\n\t\tconst user = new UserTaskInfo({ lastName: '', firstName: '' });\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateTaskParent(userIdWithWritePermissions?: EntityId): TaskParentTestEntity {\n\t\tconst parent = new TaskParentTestEntity(userIdWithWritePermissions);\n\t\tparent.id = this.createEntityId();\n\t\treturn parent;\n\t}\n\n\tcreateTask(parentId?: EntityId, dueDate?: Date): Task {\n\t\tconst parent = new Course({ schoolId: new ObjectId() });\n\t\tconst id = this.createId(parentId);\n\t\tparent._id = id;\n\t\tparent.id = id.toHexString();\n\t\tconst task = new Task({ name: '', parent, dueDate });\n\t\tthis.addId(task);\n\t\treturn task;\n\t}\n\n\tcreateLessonWithTask(): { task: Task; lesson: LessonTaskInfo; parentId: EntityId } {\n\t\tconst parent = new Course({ schoolId: new ObjectId() });\n\t\tthis.addId(parent);\n\t\tconst lesson = new LessonTaskInfo({ course: parent });\n\t\tthis.addId(lesson);\n\t\tconst task = new Task({ name: '', parent, lesson });\n\t\tthis.addId(task);\n\t\treturn { task, lesson, parentId: parent.id };\n\t}\n\n\tcreateSubmission(task: Task, student?: UserTaskInfo): Submission {\n\t\tconst user = (student || this.getFirstUser()) as UserTaskInfo;\n\t\tconst submission = new Submission({ student: user, comment: '', task });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateTeamMemberSubmission(task: Task, students: UserTaskInfo[]): Submission {\n\t\tconst submission = new Submission({ student: students[0], comment: '', task, teamMembers: students });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateSubmissionsForEachStudent(task: Task): Submission[] {\n\t\tconst submissions = this.getUsers().map((student) => {\n\t\t\tconst submission = this.createSubmission(task, student as UserTaskInfo);\n\t\t\treturn submission;\n\t\t});\n\t\treturn submissions;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeTaskStatusForStudent\n                            \n                            \n                                    Private\n                                computeTaskStatusForTeacher\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, authorizationService: TaskAuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForStudent(task: Task, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForTeacher(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder } from '@shared/domain';\n\nimport { TaskRepo } from '../repo';\nimport { TaskWithStatusVo } from '../entity/task-with-status.vo';\nimport { Task } from '../entity';\nimport { TaskAuthorizationService, TaskParentPermission } from './task.authorization.service';\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n@Injectable()\nexport class TaskUC {\n\tconstructor(private readonly taskRepo: TaskRepo, private readonly authorizationService: TaskAuthorizationService) {}\n\n\t// TODO replace curentUser with userId. this requires that permissions are loaded inside the use case by authorization service\n\tasync findAll(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllForTeacher(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst parentIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllCurrent(parentIds, {\n\t\t\tpagination,\n\t\t\torder: { dueDate: SortOrder.asc },\n\t\t});\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForStudent(task, userId));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate async findAllForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst parentIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.write);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAll(parentIds, {\n\t\t\tpagination,\n\t\t\torder: { createdAt: SortOrder.desc },\n\t\t});\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForTeacher(task));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\t\treturn hasPermission;\n\t}\n\n\tprivate computeTaskStatusForStudent(task: Task, userId: EntityId): TaskWithStatusVo {\n\t\tconst studentSubmissions = task.submissions.getItems().filter((submission) => submission.student.id === userId);\n\n\t\tconst submitted = studentSubmissions.length > 0 ? 1 : 0;\n\t\tconst graded = studentSubmissions.filter((submission) => submission.isGraded()).length;\n\t\tconst maxSubmissions = 1;\n\n\t\treturn new TaskWithStatusVo(task, { submitted, maxSubmissions, graded });\n\t}\n\n\tprivate computeTaskStatusForTeacher(task: Task): TaskWithStatusVo {\n\t\tconst submittedStudentIds = task.submissions.getItems().map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst submitted = [...new Set(submittedStudentIds)].length;\n\n\t\tconst gradedStudentIds = task.submissions\n\t\t\t.getItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst graded = [...new Set(gradedStudentIds)].length;\n\n\t\tconst maxSubmissions = task.parent ? task.parent.getNumberOfStudents() : 0;\n\n\t\treturn new TaskWithStatusVo(task, { submitted, maxSubmissions, graded });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task-with-status.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task-with-status.vo.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task-with-status.vo.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task-with-status.vo.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from './task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, PaginationResponse, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestHelper.html":{"url":"classes/TestHelper.html","title":"class - TestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/test/helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                    Abstract\n                                createSchool\n                            \n                            \n                                    Abstract\n                                createUser\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/test/helper.ts:11\n                            \n                        \n\n                \n                    \n                            Create two user one that are used for create operations.\nThe other is created for all is not part of created element operations.\nIt also create a school that is used for this two user and all new added users.\nYou get the the user over helper.getFirstUser(), or helper.getUsers(); and helper.getOtherUser();\nBy executing helper.createAndAddUser() the getUsers() list is increased and all create operations will use it.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\n\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntity } from '../entity/base.entity';\n\nexport abstract class TestHelper {\n\tusers: BaseEntity[] = [];\n\n\totherUser: BaseEntity;\n\n\tschool: SchoolType;\n\n\t/**\n\t * Create two user one that are used for create operations.\n\t * The other is created for all is not part of created element operations.\n\t * It also create a school that is used for this two user and all new added users.\n\t *\n\t * You get the the user over helper.getFirstUser(), or helper.getUsers(); and helper.getOtherUser();\n\t * By executing helper.createAndAddUser() the getUsers() list is increased and all create operations will use it.\n\t */\n\tconstructor() {\n\t\tthis.init();\n\t}\n\n\t// That any helper must implement this is a temporary solution until\n\t// user and school entity is avaible in global or shared scope.\n\tabstract createUser(): BaseEntity;\n\n\tabstract createSchool(): SchoolType;\n\n\tcreateId(entityId?: EntityId): ObjectId {\n\t\tconst id = new ObjectId(entityId);\n\t\treturn id;\n\t}\n\n\tcreateEntityId(): EntityId {\n\t\tconst entityId = this.createId().toHexString();\n\t\treturn entityId;\n\t}\n\n\t// If else mapping can removed after the abstract createUser() is replaced by createUser from global user entity.\n\tcreateAndAddUser(user?: BaseEntity | EntityId): void {\n\t\tconst newUser = this.createUser();\n\t\tif (user instanceof BaseEntity) {\n\t\t\tnewUser._id = user._id;\n\t\t\tnewUser.id = user.id;\n\t\t} else if (typeof user === 'string') {\n\t\t\tnewUser.id = user;\n\t\t}\n\n\t\t// TODO try to understand why we need that (uidp)\n\t\t// if (newUser instanceof BaseEntity && user instanceof BaseEntity && user.id) {\n\t\t// \tnewUser.id = user.id;\n\t\t// } else if (newUser instanceof BaseEntity && typeof user === 'string') {\n\t\t// \tnewUser.id = user;\n\t\t// } else if (typeof newUser === 'string' && user instanceof BaseEntity && user.id) {\n\t\t// \tnewUser = user.id;\n\t\t// } else if (typeof newUser === 'string' && typeof user === 'string') {\n\t\t// \tnewUser = user;\n\t\t// }\n\n\t\tthis.users.push(newUser);\n\t}\n\n\tgetFirstUser(): BaseEntity {\n\t\treturn this.users[0];\n\t}\n\n\t// TODO: find better name for existing user that is not part of the ressources\n\tgetOtherUser(): BaseEntity {\n\t\treturn this.otherUser;\n\t}\n\n\tgetUsers(): BaseEntity[] {\n\t\treturn this.users;\n\t}\n\n\tgetSchool(): SchoolType {\n\t\treturn this.school;\n\t}\n\n\tprotected addId(entity: BaseEntity): void {\n\t\tconst id = this.createId();\n\t\tentity.id = id.toHexString();\n\t\tentity._id = id;\n\t}\n\n\t// Temp solution until abstract createUser and createSchool is solved.\n\t// It can move to constructor\n\tprivate init(): void {\n\t\tthis.school = this.createSchool();\n\t\tthis.createAndAddUser();\n\t\tthis.otherUser = this.createUser();\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/user.entity.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName: string;\n\tlastName: string;\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(currentUser: ICurrentUser): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(currentUser);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { User } from '../entity';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTaskInfo.html":{"url":"classes/UserTaskInfo.html","title":"class - UserTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\ninterface IUserTaskInfoProperties {\n\tfirstName: string;\n\tlastName: string;\n}\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: IUserTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(currentUser: ICurrentUser): Promise {\n\t\tconst [user, resolved] = await Promise.all([\n\t\t\tthis.userRepo.findById(currentUser.userId),\n\t\t\tthis.roleUC.resolvePermissionsByIdList(currentUser.roles),\n\t\t]);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\n[Unreleased]\nChanged\n\nBC-179 - refactor task and entity and relations\n\nAdded\n\nBC-164 - refactored the supportJWTservice and added roles information to its jwt data\nBC-279 - introduce console application interface to call providers via console command\nBC-9 add entity and repo for course dashboards\nBC-9 add a route to recieve dummy data for course dashboards\n\nFixed\n\nBC-232 prevent users from changing schoolyears\nBC-233 - when an LDAP system is removed from a school, the ldapschoolidentifier and lastLdapSync are removed as well\nmoved some changelog entries into their correct place\n\nRemoved\n\nBC-262 - remove S3 lifecycle configuration code\n\n[26.10.3] - 2021-09-09\nFixed\n\nBC-267 - skip whitelist-check for api requests on /wopi\n\n[26.10.2] - 2021-09-03\nAdded\n\nBC-120 - add feature flag for S3 CORS\nBS-112 - insert missing attribute during school creation\n\n[26.10.1] - 2021-09-03\nFixed\n\nBC-187 - secures the system route\n\n[26.10.0] - 2021-09-03\nFixed\n\nremove broken systemid from seed data\nSC-9083 - expose env variables for school administration\nBC-44 - remove JWT_WHITELIST_ACCEPT_ALL feature flag\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store\nBC-119 - remove malfunction S3 lifecycle migration\nBC-38 - BC-124 - Add ansible files for Bosscloud (default)\nBC-110 - fileStorage/security should only be called from within the cluster\n\nAdded\n\nBC-5 - Show completed tasks for students\n\nChanged\n\nRefactor nestjs task module and resort imports for course and coursegroup entities and repositories. Add testHelpers.\n\n[26.9.2] - 2021-08-27\nChanged\n\nBC-137 - fix bug with display of Blue Bar\n\n[26.9.1] - 2021-08-18\nchanged\n\nSC-9192 - enable cors for nestjs app routes\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n[26.9.0] - 2021-08-14\nchanged\n\nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nAdded\n\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9231 - add permissions to SuperHero to edit admin role\n\nChanged\n\nOPS-2491 - Change the hydra service url\n\n[26.8.0] - 2021-08-10\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/console-writer/console-writer.service.ts\n            \n            injectable\n            ConsoleWriter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/console/console.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/server.console.ts\n            \n            class\n            ServerConsole\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            interface\n            ICourseProperties\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            variable\n            DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/coursegroup.entity.ts\n            \n            class\n            Coursegroup\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/coursegroup.entity.ts\n            \n            interface\n            ICoursegroupProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            DashboardEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            DefaultGridReference\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            GridElement\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            interface\n            IGridElement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            interface\n            IGridElementReference\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/testHelper.ts\n            \n            class\n            LearnroomTestHelper\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                apps/server/src/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/entities/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            injectable\n            JwtValidationAdapter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardGridElementResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts\n            \n            class\n            DashboardMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/usecase/dashboard.uc.ts\n            \n            injectable\n            DashboardUc\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            AppendedAttachment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            HtmlMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            InlineAttachment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            Mail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailAttachment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            PlainTextMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            interface\n            MailModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            variable\n            createRabbitMqModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            interface\n            MailServiceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/target-info.response.ts\n            \n            class\n            TargetInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/team-news.controller.ts\n            \n            controller\n            TeamNewsController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/target-info.mapper.ts\n            \n            class\n            TargetInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/domain/StatusDomainService.ts\n            \n            class\n            StatusDomainService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-group-info.entity.ts\n            \n            class\n            CourseGroupInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-group-info.entity.ts\n            \n            interface\n            CoursegroupInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            class\n            FileTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            interface\n            FileTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            class\n            LessonTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            interface\n            LessonTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            interface\n            ISubmissionProperties\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task-with-status.vo.ts\n            \n            class\n            TaskWithStatusVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task-with-status.vo.ts\n            \n            interface\n            ITaskStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            IParentDescriptionsProperties\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            ITaskParent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            ITaskProperties\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            class\n            UserTaskInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            interface\n            IUserTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task-scope.ts\n            \n            class\n            TaskScope\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.authorization.service.ts\n            \n            injectable\n            TaskAuthorizationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/utils/TestHelper.ts\n            \n            class\n            TaskParentTestEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/utils/TestHelper.ts\n            \n            class\n            TaskTestHelper\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n            \n            class\n            ResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            class\n            CourseScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            injectable\n            CourseRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/coursegroup.repo.ts\n            \n            injectable\n            CoursegroupRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            injectable\n            DashboardRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            interface\n            IDashboardRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            courseEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            entities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            taskEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            userEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/validation.error.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IFindOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/test/helper.ts\n            \n            class\n            TestHelper\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/base.repo.ts\n            \n            injectable\n            BaseRepo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            class\n            Scope\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            createOrQueryFromList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            forceArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedObjectValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            useQueryIfValueIsDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.17\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^7.2.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.0\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^5.0.1\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CourseTyps   (apps/.../testHelper.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/entities/learnroom/testHelper.ts\n    \n        \n            \n                \n                    \n                        \n                        CourseTyps\n                    \n                \n                        \n                            \n                                 teacher\n                            \n                        \n                        \n                            \n                                Value : teacherIds\n                            \n                        \n                        \n                            \n                                 student\n                            \n                        \n                        \n                            \n                                Value : studentIds\n                            \n                        \n                        \n                            \n                                 subsitutionTeacher\n                            \n                        \n                        \n                            \n                                Value : substitutionTeacherIds\n                            \n                        \n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createOrQueryFromList   (apps/.../scope.ts)\n                        \n                        \n                            forceArray   (apps/.../scope.ts)\n                        \n                        \n                            isDefined   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedObjectValue   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedQuery   (apps/.../scope.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                        \n                            useQueryIfValueIsDefined   (apps/.../scope.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n            \n                \ncreateOrQueryFromList(arrayOfObjects, selectedKey, targetKey)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OrQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceArray\n                        \n                    \n                \n            \n            \n                \nforceArray(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefined\n                        \n                    \n                \n            \n            \n                \nisDefined(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedObjectValue\n                        \n                    \n                \n            \n            \n                \nisDefinedObjectValue(object, key)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n            \n                \nisDefinedQuery(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \nuseQueryIfValueIsDefined(testedDefinedvalue, query)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedDefinedvalue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ST | EmptyResultQueryType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\ncluster_ServerConsoleModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nServerModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriter\n\nConsoleWriter\n\nServerConsoleModule -->\n\nConsoleWriter->ServerConsoleModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    28 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    64 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    43 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with  \n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GridElementReferenceMetadata   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../role.entity.ts)\n                        \n                        \n                            ISubmissionStatus   (apps/.../TaskDomainService.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTargetInfo   (apps/.../news.types.ts)\n                        \n                        \n                            OrQuery   (apps/.../scope.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            QueryObject   (apps/.../scope.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskWithSubmissionStatus   (apps/.../TaskDomainService.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrQuery\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryObject\n                \n            \n            \n                \n                        Record>\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/entities/learnroom/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    GridElementReferenceMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/user/entity/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/task/domain/TaskDomainService.ts\n    \n    \n        \n            \n                \n                    \n                    ISubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaskWithSubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetInfo\n                \n            \n            \n                \n                        SchoolInfo | TeamInfo | CourseInfo\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseEntities   (apps/.../server.module.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            entities   (apps/.../server.module.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                            userEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Course, Coursegroup]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [User, Role, Account]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst schoolId = new ObjectId().toHexString();\n\tconst userIdObject = new ObjectId();\n\tconst userId = userIdObject.toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school: schoolId });\n\tuser._id = userIdObject;\n\tuser.id = userId;\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId, roles: roleIds, schoolId, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/entities/learnroom/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login). \n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details. \n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/ \n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\n It will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\n A request is received\n A hook initializes the request context\n A hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\n After the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
